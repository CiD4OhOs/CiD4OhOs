<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query orderByDesc(java.lang.String)>
<java.io.DataOutput: void writeShort(int)>
<ohos.data.usage.CachePolicy: boolean isCacheDeleteXattr(java.io.File)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitLong(long,java.lang.Object)>
<ohos.global.icu.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<java.util.prefs.AbstractPreferences: double getDouble(java.lang.String,double)>
<ohos.ai.cv.text.Text: void setTextRect(ohos.ai.cv.common.CvRect)>
<ohos.agp.window.service.WindowManager.PermissionException: void <init>()>
<java.lang.String: void <init>(int[],int,int)>
<java.util.Locale.Builder: java.util.Locale.Builder setRegion(java.lang.String)>
<ohos.utils.PacMap: void remove(java.lang.String)>
<ohos.security.seoperator.SEOperatorAbs: int setConfig(java.lang.String,java.util.Map)>
<ohos.miscservices.pasteboard.PasteData: boolean marshalling(ohos.utils.Parcel)>
<ohos.bluetooth.ble.BlePeripheralManagerCallback: void receiveCharacteristicReadEvent(ohos.bluetooth.ble.BlePeripheralDevice,int,int,ohos.bluetooth.ble.GattCharacteristic)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getBestRowIdentifier(java.lang.String,java.lang.String,java.lang.String,int,boolean)>
<java.nio.channels.FileChannel: long write(java.nio.ByteBuffer[])>
<java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<java.io.PipedOutputStream: void close()>
<javax.lang.model.util.SimpleElementVisitor6: void <init>(java.lang.Object)>
<java.net.SocketImpl: void listen(int)>
<ohos.ai.cv.common.CvPoint: void <init>(int,int)>
<java.io.WriteAbortedException: java.lang.String getMessage()>
<java.lang.Float: java.lang.String toString()>
<ohos.global.icu.text.RelativeDateTimeFormatter.RelativeUnit: ohos.global.icu.text.RelativeDateTimeFormatter.RelativeUnit valueOf(java.lang.String)>
<ohos.wifi.p2p.WifiP2pController: void discoverDevices(ohos.wifi.p2p.WifiP2pCallback)>
<ohos.agp.components.Text.EditorActionListener: boolean onTextEditorAction(int)>
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>
<java.nio.channels.Channels: java.io.Writer newWriter(java.nio.channels.WritableByteChannel,java.nio.charset.CharsetEncoder,int)>
<java.util.zip.DeflaterOutputStream: void finish()>
<ohos.sysappcomponents.contact.entity.Event: java.lang.String getLabelName()>
<javax.sql.RowSet: void setFloat(java.lang.String,float)>
<java.util.concurrent.ForkJoinPool: boolean isQuiescent()>
<ohos.wifi.p2p.WifiP2pLinkedInfo: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.concurrent.atomic.LongAdder: void reset()>
<ohos.agp.components.Component: void setVerticalPosition(int,int)>
<ohos.ai.cv.text.TextConfiguration: ohos.utils.PacMap getParam()>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String getDecimal()>
<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThan(java.lang.String,int)>
<java.util.concurrent.ConcurrentSkipListSet: boolean isEmpty()>
<java.io.DataInput: short readShort()>
<ohos.agp.render.render3d.math.Matrix4x4: void <init>()>
<ohos.utils.net.Uri: java.lang.String getEncodedUserInfo()>
<java.util.prefs.AbstractPreferences: void putFloat(java.lang.String,float)>
<java.security.cert.CertificateEncodingException: void <init>(java.lang.Throwable)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getMinusSignString()>
<ohos.sensor.bean.SensorBase: long getMaxInterval()>
<java.nio.channels.AsynchronousSocketChannel: void <init>(java.nio.channels.spi.AsynchronousChannelProvider)>
<ohos.agp.window.service.DisplayNotch: int getPaddingBottom()>
<java.net.HttpCookie: void setVersion(int)>
<java.net.Socket: void setTcpNoDelay(boolean)>
<ohos.sysappcomponents.contact.entity.Contact: void addImAddress(ohos.sysappcomponents.contact.entity.ImAddress)>
<java.util.stream.Stream: java.util.Optional reduce(java.util.function.BinaryOperator)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates in(java.lang.String,java.util.Calendar[])>
<java.io.StringWriter: java.lang.Appendable append(java.lang.CharSequence)>
<ohos.sysappcomponents.contact.entity.Contact: java.util.List getEmails()>
<ohos.agp.render.Paint.Style: void <clinit>()>
<ohos.sysappcomponents.calendar.entity.Accounts: java.lang.String getAccTimezone()>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.CharsetEncoder)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getPatternInstance(ohos.global.icu.util.Calendar,java.lang.String,ohos.global.icu.util.ULocale)>
<ohos.rpc.RemoteObject: void dump(java.io.FileDescriptor,java.lang.String[])>
<java.util.Random: void nextBytes(byte[])>
<ohos.ai.asr.AsrListener: void onIntermediateResults(ohos.utils.PacMap)>
<java.nio.channels.ShutdownChannelGroupException: void <init>()>
<java.util.Calendar: java.lang.String getCalendarType()>
<ohos.data.search.schema.ActionItem: void <init>()>
<ohos.event.commonevent.CommonEventPublishInfo: boolean marshalling(ohos.utils.Parcel)>
<java.util.AbstractList: void clear()>
<java.net.URI: int getPort()>
<javax.sql.RowSetInternal: java.sql.Connection getConnection()>
<ohos.aafwk.ability.FormException.FormError: ohos.aafwk.ability.FormException.FormError valueOf(java.lang.String)>
<ohos.media.image.ImageSource.UpdateMode: ohos.media.image.ImageSource.UpdateMode[] values()>
<ohos.agp.render.render3d.math.Matrix4x4: void set(int,float)>
<ohos.data.rdb.DataObserverAsyncWrapper: void <init>(ohos.data.rdb.DataObserver,ohos.eventhandler.EventHandler)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notIn(java.lang.String,java.sql.Timestamp[])>
<java.util.ResourceBundle.Control: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>
<ohos.data.search.model.IndexData: int size()>
<ohos.media.photokit.metadata.AVStorage.Images.Media: void <clinit>()>
<ohos.utils.PlainLongArray: java.util.Optional get(int)>
<java.nio.channels.ScatteringByteChannel: long read(java.nio.ByteBuffer[],int,int)>
<java.util.zip.ZipEntry: int getMethod()>
<ohos.data.distributed.common.KvManagerFactory: void unRegisterKvStoreServiceDeathRecipient(ohos.data.distributed.common.KvStoreServiceDeathRecipient)>
<javax.net.ssl.X509ExtendedKeyManager: java.lang.String chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine)>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate dateYearDay(java.time.chrono.Era,int,int)>
<javax.sql.RowSetMetaData: void setCurrency(int,boolean)>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 normalize(float,float,float)>
<ohos.aafwk.ability.Ability: void onNewIntent(ohos.aafwk.content.Intent)>
<ohos.ai.asr.AsrIntent: int getEngineType()>
<ohos.media.common.sessioncore.AVBrowserResult: void detachForRetrieveAsync()>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: java.lang.String getText()>
<ohos.sysappcomponents.contact.entity.Contact: ohos.sysappcomponents.contact.entity.Name getName()>
<ohos.global.icu.text.DecimalFormat: void setParseIntegerOnly(boolean)>
<java.util.concurrent.ConcurrentMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>
<java.sql.ResultSet: java.io.InputStream getAsciiStream(java.lang.String)>
<java.io.ObjectInput: long skip(long)>
<java.time.zone.ZoneOffsetTransition: int compareTo(java.time.zone.ZoneOffsetTransition)>
<ohos.media.player.Player: int getAudioStreamType()>
<ohos.agp.render.PixelMapDrawInfo: void <init>(int[],float[],int,int[],int)>
<ohos.global.resource.ResourceManager: ohos.global.resource.Element getElement(int)>
<ohos.global.icu.text.UFormat: void <init>()>
<java.text.NumberFormat: java.math.RoundingMode getRoundingMode()>
<java.util.Calendar: void setTime(java.util.Date)>
<ohos.accessibility.AccessibilityEventInfo: void setStartIndex(int)>
<ohos.global.icu.text.MessageFormat: void setFormatByArgumentName(java.lang.String,java.text.Format)>
<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getLocalCertificates()>
<ohos.sysappcomponents.contact.entity.Name: void setMiddleName(java.lang.String)>
<java.net.URLStreamHandler: java.net.URLConnection openConnection(java.net.URL)>
<java.net.Socket: java.io.InputStream getInputStream()>
<java.io.PrintStream: void <init>(java.io.OutputStream)>
<ohos.accessibility.ability.AccessibilityInfo: boolean isPassword()>
<java.lang.StringBuilder: void <init>(java.lang.String)>
<java.sql.CallableStatement: java.sql.Date getDate(int,java.util.Calendar)>
<java.sql.DatabaseMetaData: boolean insertsAreDetected(int)>
<ohos.storageinfomgr.StorageInfoManager: long getWholeSize(java.util.UUID)>
<java.net.Inet4Address: boolean isMCLinkLocal()>
<ohos.global.icu.text.PluralRules: boolean equals(java.lang.Object)>
<ohos.agp.render.Path: void addOval(ohos.agp.utils.RectFloat,ohos.agp.render.Path.Direction,int)>
<ohos.distributedhardware.devicemanager.DeviceManager: int unregisterDeviceStateCallback(java.lang.String,ohos.distributedhardware.devicemanager.DeviceStateCallback)>
<ohos.utils.IntervalTimer: void schedule()>
<ohos.agp.render.Path: void addCircle(float,float,float,ohos.agp.render.Path.Direction)>
<ohos.media.camera.device.CameraAbility: java.util.List getSupportedResults()>
<java.sql.PreparedStatement: int executeUpdate()>
<java.time.LocalDateTime: java.time.LocalDateTime of(int,java.time.Month,int,int,int)>
<ohos.utils.net.Uri: java.lang.String getDecodedPath()>
<ohos.data.resultset.AbsResultSet: void notifyChange()>
<ohos.agp.components.ComponentContainer: void setAutoLayout(boolean,int)>
<java.util.ListIterator: int previousIndex()>
<ohos.agp.components.Component: float getRotationSensitivity()>
<java.util.Comparator: java.util.Comparator thenComparing(java.util.function.Function)>
<java.util.zip.Inflater: boolean needsDictionary()>
<ohos.agp.render.opengl.GLES32: void glSamplerParameterIuiv(int,int,int[])>
<java.util.concurrent.ConcurrentLinkedQueue: void <init>(java.util.Collection)>
<ohos.agp.components.webengine.WebConfig: void setSecurityMode(int)>
<ohos.agp.components.Component: void setRotationSensitivity(float)>
<java.security.PermissionCollection: boolean isReadOnly()>
<java.util.LinkedHashMap: void clear()>
<java.time.OffsetTime: java.time.OffsetTime of(int,int,int,int,java.time.ZoneOffset)>
<java.util.Vector: boolean equals(java.lang.Object)>
<java.util.Arrays: long[] copyOf(long[],int)>
<java.util.Arrays: java.util.stream.IntStream stream(int[])>
<java.time.chrono.IsoChronology: java.time.LocalDate dateYearDay(int,int)>
<ohos.data.distributed.file.DistFile: java.io.File[] listFiles(java.io.FilenameFilter)>
<java.sql.SQLSyntaxErrorException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.util.Map.Entry: boolean equals(java.lang.Object)>
<ohos.media.camera.params.FaceLandmark: boolean equals(java.lang.Object)>
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery chronology()>
<java.util.Date: int getMonth()>
<ohos.utils.zson.ZSONObject: int getIntValue(java.lang.String)>
<java.sql.SQLTimeoutException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.javax.xml.stream.XMLStreamReader: boolean standaloneSet()>
<ohos.media.common.VideoProperty: int getRecorderWidth()>
<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType fromMethodDescriptorString(java.lang.String,java.lang.ClassLoader)>
<java.util.function.IntSupplier: int getAsInt()>
<java.util.concurrent.ConcurrentLinkedQueue: boolean addAll(java.util.Collection)>
<ohos.aafwk.ability.Lifecycle.Event: void <clinit>()>
<ohos.sysappcomponents.calendar.entity.Participants: void setParticipantType(int)>
<java.util.TimeZone: int getOffset(int,int,int,int,int,int)>
<ohos.global.icu.text.UnicodeSet: boolean contains(int,int)>
<ohos.agp.components.PageSliderIndicator: ohos.agp.components.element.Element[] getItemElements()>
<ohos.global.icu.text.TimeZoneFormat.GMTOffsetPatternType: void <clinit>()>
<java.lang.reflect.Field: int getInt(java.lang.Object)>
<java.util.LinkedList: boolean offer(java.lang.Object)>
<ohos.global.icu.util.CopticCalendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<ohos.agp.utils.RectFloat: void <init>(ohos.agp.utils.Rect)>
<ohos.app.Context: void compelVerifyCallerUriPermission(ohos.utils.net.Uri,int,java.lang.String)>
<ohos.utils.geo.Rect: ohos.utils.geo.Point getPreciseCenter()>
<java.io.InterruptedIOException: void <init>()>
<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)>
<java.util.Calendar: java.util.Map getDisplayNames(int,int,java.util.Locale)>
<java.io.StringWriter: java.io.Writer append(java.lang.CharSequence)>
<ohos.agp.components.TimePicker: java.lang.String[] getAmPmStrings()>
<ohos.utils.PlainIntArray: void <init>(int)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasQueuedPredecessors()>
<ohos.agp.components.SearchBar: void setSearchClickListener(ohos.agp.components.Component.ClickedListener)>
<java.util.ResourceBundle: java.util.Set keySet()>
<java.util.zip.ZipOutputStream: void setLevel(int)>
<ohos.agp.components.Component: int getId()>
<java.lang.Class: java.lang.Class[] getInterfaces()>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>
<ohos.net.ConnectionProperties: java.lang.String toString()>
<java.security.PKCS12Attribute: int hashCode()>
<java.sql.ResultSet: void updateClob(java.lang.String,java.io.Reader,long)>
<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable,boolean,boolean)>
<java.util.concurrent.atomic.DoubleAccumulator: double doubleValue()>
<ohos.agp.utils.Line: float getEndPointY()>
<ohos.account.app.AppAccountAbility: java.lang.String getAccountCredential(java.lang.String,java.lang.String)>
<ohos.global.icu.text.Collator: ohos.global.icu.text.UnicodeSet getTailoredSet()>
<java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
<java.util.AbstractCollection: void clear()>
<java.io.FilterReader: int read()>
<ohos.aafwk.ability.fraction.FractionManager: void popFromStack(java.lang.String,int)>
<ohos.global.resource.solidxml.Theme: int getPixelValue(java.lang.String,boolean)>
<javax.net.ssl.X509TrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>
<javax.security.auth.PrivateCredentialPermission: java.lang.String[][] getPrincipals()>
<ohos.media.sessioncore.AVBrowser: java.lang.String getRootMediaId()>
<ohos.agp.utils.Matrix: void preSkew(float,float,float,float)>
<java.sql.SQLWarning: void <init>(java.lang.String,java.lang.String,int)>
<ohos.event.notification.NotificationRequest: int getNotificationType()>
<java.util.concurrent.Semaphore: java.lang.String toString()>
<ohos.media.codec.CodecDescriptionList: boolean isDecodeSupportedByMime(java.lang.String)>
<ohos.nfc.oma.Session: java.util.Optional openLogicalChannel(ohos.nfc.oma.Aid)>
<javax.net.ssl.SSLEngineResult.Status: void <clinit>()>
<ohos.agp.components.DependentLayout: ohos.agp.components.ComponentContainer.LayoutConfig verifyLayoutConfig(ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.temporal.TemporalAccessor)>
<java.security.cert.CertStoreException: void <init>(java.lang.Throwable)>
<java.util.zip.Checksum: long getValue()>
<ohos.global.icu.lang.UCharacter: java.lang.String getExtendedName(int)>
<java.util.UnknownFormatFlagsException: void <init>(java.lang.String)>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat copy(ohos.utils.geo.DimensFloat)>
<ohos.telephony.LteSignalInformation: int getSignalLevel()>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo.Builder requestRepeatCycle(long)>
<java.util.concurrent.atomic.AtomicInteger: int updateAndGet(java.util.function.IntUnaryOperator)>
<java.security.spec.ECPublicKeySpec: java.security.spec.ECPoint getW()>
<java.time.LocalDate: java.time.LocalDate of(int,java.time.Month,int)>
<ohos.agp.window.service.Window: void clearFlags(int)>
<ohos.agp.utils.Rect: ohos.agp.utils.Rect obtainIntersectRect(ohos.agp.utils.Rect)>
<ohos.aafwk.ability.DataAbilityDeadException: void <init>(java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,boolean)>
<java.sql.ResultSet: byte[] getBytes(int)>
<javax.sql.RowSetMetaData: void setSigned(int,boolean)>
<ohos.miscservices.download.DownloadSession.DownloadInfo: ohos.utils.net.Uri getTargetUri()>
<ohos.agp.components.Component: void setPaddingRight(int)>
<java.util.ArrayList: void trimToSize()>
<ohos.aafwk.ability.DataAbilityOperation: void <init>(ohos.utils.Parcel)>
<ohos.media.camera.params.FaceLandmark: void <init>(int,ohos.agp.utils.Point)>
<ohos.media.image.Image.Component: int tell()>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate dateYearDay(int,int)>
<ohos.agp.components.CornerMark.CornerMarkCleaner: void <init>(long)>
<ohos.miscservices.download.DownloadSession: ohos.miscservices.download.DownloadSession.DownloadInfo query()>
<java.util.prefs.AbstractPreferences: void putSpi(java.lang.String,java.lang.String)>
<java.io.StringWriter: void write(java.lang.String,int,int)>
<ohos.global.icu.text.BidiRun: boolean isEvenRun()>
<ohos.global.icu.util.ChineseCalendar: void <init>(java.util.Date)>
<java.security.spec.ECPrivateKeySpec: java.math.BigInteger getS()>
<ohos.global.icu.text.DecimalFormat: void setPositivePrefix(java.lang.String)>
<java.time.LocalDateTime: boolean isEqual(java.time.chrono.ChronoLocalDateTime)>
<ohos.agp.utils.Circle: boolean isIntersect(ohos.agp.utils.Circle)>
<ohos.agp.render.render3d.util.MeshBuilder: void setVertexData(int,ohos.agp.render.render3d.util.MeshBuilder.VertexData)>
<ohos.agp.components.ProgressBar: ohos.agp.utils.Color getProgressHintTextColor()>
<java.security.PrivilegedAction: java.lang.Object run()>
<javax.tools.Tool: int run(java.io.InputStream,java.io.OutputStream,java.io.OutputStream,java.lang.String[])>
<ohos.dcall.CallStateObserver: void <init>(int,ohos.eventhandler.EventRunner)>
<java.text.CollationKey: byte[] toByteArray()>
<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<javax.sql.RowSet: void setBlob(java.lang.String,java.io.InputStream,long)>
<ohos.agp.components.MagicLayout: void setOrientation(int)>
<ohos.agp.render.Paint: ohos.agp.render.BlendMode getBlendMode()>
<java.io.FilterWriter: void close()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate plus(long,java.time.temporal.TemporalUnit)>
<java.util.Scanner: java.util.Scanner skip(java.util.regex.Pattern)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setElement(ohos.bundle.ElementName)>
<ohos.eventhandler.EventHandler: void sendTimingEvent(int,long,ohos.eventhandler.EventHandler.Priority)>
<java.sql.PreparedStatement: void addBatch()>
<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPublicExponent()>
<java.security.Provider.Service: java.lang.String getAttribute(java.lang.String)>
<ohos.global.icu.lang.UScript: int[] getCode(java.lang.String)>
<java.lang.invoke.MethodHandleInfo: java.lang.String referenceKindToString(int)>
<java.util.Formatter: java.io.IOException ioException()>
<java.util.Locale: java.lang.String getDisplayLanguage()>
<ohos.agp.render.opengl.GLES1X: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<ohos.agp.components.element.Element: ohos.agp.render.ColorMatrix getColorMatrix()>
<ohos.org.xml.sax.DTDHandler: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.lang.SecurityManager: void checkPackageDefinition(java.lang.String)>
<ohos.agp.components.ComponentContainer.LayoutConfig: int getMarginTop()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates on(java.lang.String[])>
<ohos.agp.render.Canvas: void drawLine(ohos.agp.utils.Point,ohos.agp.utils.Point,ohos.agp.render.Paint)>
<ohos.agp.render.Region: boolean setRect(ohos.agp.utils.Rect)>
<java.security.KeyStore.PrivateKeyEntry: java.lang.String toString()>
<ohos.agp.colors.RgbPalette: int parse(java.lang.String)>
<ohos.location.GeoConvert: java.util.List getAddressFromLocationName(java.lang.String,double,double,double,double,int)>
<java.io.DataInput: double readDouble()>
<javax.tools.ForwardingFileObject: java.io.OutputStream openOutputStream()>
<java.time.LocalTime: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.security.KeyStore: java.util.Date getCreationDate(java.lang.String)>
<java.nio.file.AccessMode: java.nio.file.AccessMode valueOf(java.lang.String)>
<ohos.global.icu.lang.UCharacter: boolean isDefined(int)>
<java.util.concurrent.locks.ReentrantLock: boolean isFair()>
<java.util.Spliterators: java.util.PrimitiveIterator.OfLong iterator(java.util.Spliterator.OfLong)>
<ohos.global.resource.solidxml.Node: java.util.List getTypedAttributes(ohos.global.resource.solidxml.Pattern,java.lang.String[])>
<java.time.ZoneOffset: void <clinit>()>
<ohos.agp.render.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<java.lang.StrictMath: int max(int,int)>
<java.time.LocalTime: java.time.OffsetTime atOffset(java.time.ZoneOffset)>
<ohos.agp.components.CornerMark: java.lang.String getText()>
<java.net.ContentHandler: java.lang.Object getContent(java.net.URLConnection)>
<ohos.aafwk.ability.AbilitySlice: void setResult(ohos.aafwk.content.Intent)>
<ohos.agp.components.ScrollHelper: boolean updateScroll()>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setFaceDetection(int,boolean)>
<java.security.SignatureSpi: void engineInitSign(java.security.PrivateKey)>
<ohos.agp.database.DataSetPublisher: void informInvalidated()>
<ohos.eventhandler.Courier: void <clinit>()>
<ohos.media.common.AVDescription: java.lang.CharSequence getTitle()>
<ohos.agp.components.Component: boolean isFadeEffected(ohos.agp.components.Component.FadeEffectEnum)>
<ohos.media.codec.Codec: boolean start()>
<java.security.spec.ECPoint: int hashCode()>
<ohos.data.dataability.DataAbilityPredicates: void <init>(java.lang.String)>
<ohos.agp.components.ScrollView: void fluentScrollXTo(int)>
<ohos.bundle.BundleInfo: java.util.List getReqPermissionDetail()>
<ohos.agp.render.Path: void swap(ohos.agp.render.Path)>
<java.time.OffsetTime: int get(java.time.temporal.TemporalField)>
<java.nio.file.attribute.DosFileAttributeView: void setReadOnly(boolean)>
<ohos.media.sessioncore.AVController: void adjustAVPlaybackVolume(int,int)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setAlphaCutoff(float)>
<ohos.agp.utils.Line: boolean isEmpty()>
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>
<ohos.agp.components.PageSliderIndicator: int getCount()>
<java.sql.DriverManager: void deregisterDriver(java.sql.Driver)>
<ohos.sensor.agent.CategoryOrientationAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int)>
<ohos.utils.net.Uri: java.lang.String getFirstQueryParamByKey(java.lang.String)>
<javax.net.ssl.HandshakeCompletedEvent: javax.security.cert.X509Certificate[] getPeerCertificateChain()>
<ohos.global.icu.text.AlphabeticIndex.ImmutableIndex: java.util.Iterator iterator()>
<ohos.agp.render.opengl.GLES32: void glEnablei(int,int)>
<ohos.agp.render.Vertices: float[] getVerts()>
<ohos.app.ProcessInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.nfc.cardemulation.HostService: ohos.rpc.IRemoteObject onConnect(ohos.aafwk.content.Intent)>
<java.io.Reader: int read(char[])>
<java.lang.Math: double copySign(double,double)>
<java.nio.file.Watchable: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind[])>
<ohos.telephony.RadioInfoManager: int getRadioTech(int)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayNameWithDialect(ohos.global.icu.util.ULocale)>
<java.util.AbstractSequentialList: java.lang.Object remove(int)>
<ohos.agp.utils.MimeData: boolean marshalling(ohos.utils.Parcel)>
<java.security.cert.PKIXParameters: boolean isPolicyMappingInhibited()>
<ohos.accessibility.ability.AccessibilityInfo: boolean deleteOperation(ohos.accessibility.ability.AccessibleOperation)>
<java.lang.BootstrapMethodError: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.account.app.AppAccountAbility: java.util.List getAllAccessibleAccounts()>
<ohos.data.DatabaseFileConfig.Builder: ohos.data.DatabaseFileConfig build()>
<java.io.File: void deleteOnExit()>
<java.time.ZonedDateTime: java.time.ZonedDateTime withSecond(int)>
<java.math.BigDecimal: java.math.BigDecimal ulp()>
<ohos.bundleactive.BundleActiveInfos: long queryInfosBeginMs()>
<ohos.agp.render.opengl.GLES30: void glGetSynciv(long,int,int,int[],int[])>
<ohos.sysappcomponents.contact.entity.Contact: void setName(ohos.sysappcomponents.contact.entity.Name)>
<java.text.DecimalFormatSymbols: void setDigit(char)>
<ohos.net.IpPrefix: java.util.Optional getAddress()>
<java.nio.file.attribute.FileTime: int compareTo(java.lang.Object)>
<ohos.global.icu.text.TimeZoneNames.NameType: ohos.global.icu.text.TimeZoneNames.NameType[] values()>
<java.lang.Character: char charValue()>
<java.util.concurrent.CyclicBarrier: int getNumberWaiting()>
<ohos.agp.render.render3d.Engine.RenderNodeGraphType: ohos.agp.render.render3d.Engine.RenderNodeGraphType valueOf(java.lang.String)>
<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>
<ohos.agp.render.opengl.GLES2Ext: void glObjectLabelKHR(int,int,int,java.lang.String)>
<ohos.media.camera.device.FrameResult: ohos.media.camera.params.AeResult getAeResult()>
<ohos.data.search.schema.MessageItem: java.lang.String getRecipientPhone()>
<ohos.global.icu.text.UnicodeSet: int compareTo(ohos.global.icu.text.UnicodeSet)>
<java.lang.String: boolean endsWith(java.lang.String)>
<java.sql.Timestamp: int compareTo(java.lang.Object)>
<ohos.agp.colors.CmykColor: float getBlack()>
<java.lang.Character.Subset: boolean equals(java.lang.Object)>
<ohos.security.asset.AssetResult: void <init>(int,java.util.List,int)>
<ohos.global.icu.text.DecimalFormatSymbols: char getPatternSeparator()>
<ohos.global.resource.Element: java.lang.String getString(java.lang.Object,java.text.Format)>
<ohos.media.audio.AudioDeviceDescriptor.DeviceType: ohos.media.audio.AudioDeviceDescriptor.DeviceType[] values()>
<ohos.miscservices.download.DownloadSession.DownloadInfo: ohos.utils.net.Uri getPath()>
<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption valueOf(java.lang.String)>
<ohos.agp.components.Text: int getSelectionLeftBubbleWidth()>
<ohos.global.icu.text.Collator: java.lang.Object cloneAsThawed()>
<ohos.agp.components.CornerMark: int getTextSize()>
<ohos.agp.components.TimePicker: int getSelectedTextSize()>
<java.time.format.TextStyle: java.time.format.TextStyle asNormal()>
<javax.lang.model.util.ElementFilter: java.util.Set packagesIn(java.util.Set)>
<ohos.multimodalinput.event.SpeechEvent: int getSourceDevice()>
<java.nio.file.Files: boolean isRegularFile(java.nio.file.Path,java.nio.file.LinkOption[])>
<java.nio.file.Path: boolean startsWith(java.nio.file.Path)>
<java.util.concurrent.LinkedTransferQueue: boolean isEmpty()>
<ohos.aafwk.ability.ProcessErrorInfo: java.lang.String getLongMsg()>
<ohos.data.DatabaseHelper: boolean deleteRdbStore(ohos.data.DatabaseFileConfig)>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 multiply(ohos.agp.render.render3d.math.Vector2,ohos.agp.render.render3d.math.Vector2)>
<java.time.ZonedDateTime: java.time.ZonedDateTime withMinute(int)>
<ohos.utils.Parcel: void readIntArray(int[])>
<ohos.utils.BasePacMap: java.lang.String getString(java.lang.String)>
<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>
<java.util.Calendar: void clear()>
<ohos.app.AbilityContext: ohos.utils.net.Uri getCaller()>
<ohos.utils.zson.ZSONWriter: void close()>
<ohos.agp.window.service.Window: void setStatusBarVisibility(int)>
<ohos.wifi.p2p.WifiP2pConfig: java.lang.String getGroupName()>
<java.time.chrono.IsoChronology: java.time.chrono.IsoEra eraOf(int)>
<ohos.agp.render.opengl.GLES30: void glBeginTransformFeedback(int)>
<ohos.data.usage.DataUsage: boolean isDiskEmulated(java.io.File)>
<java.util.ListResourceBundle: java.lang.Object[][] getContents()>
<ohos.agp.components.TickTimer: void start()>
<java.sql.CallableStatement: void setURL(java.lang.String,java.net.URL)>
<java.time.zone.ZoneRules: java.util.List getTransitionRules()>
<java.sql.DatabaseMetaData: boolean othersDeletesAreVisible(int)>
<java.io.PrintWriter: void close()>
<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>
<ohos.data.rdb.ValuesBucket: java.lang.Object getObject(java.lang.String)>
<java.math.BigInteger: java.math.BigInteger min(java.math.BigInteger)>
<ohos.global.icu.lang.UCharacter: int codePointAt(char[],int)>
<ohos.net.DataFlowStatistics: void removeDatagramSocketTag(java.net.DatagramSocket)>
<javax.sql.RowSet: void setBinaryStream(int,java.io.InputStream)>
<ohos.global.icu.text.Bidi: void orderParagraphsLTR(boolean)>
<ohos.ai.cv.common.CvRect: java.lang.String toString()>
<java.util.concurrent.locks.AbstractOwnableSynchronizer: java.lang.Thread getExclusiveOwnerThread()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates and()>
<ohos.app.Context: void setWakeUpScreen(boolean)>
<java.util.concurrent.atomic.AtomicLong: boolean compareAndSet(long,long)>
<ohos.utils.BasePacMap: int getIntValue(java.lang.String,int)>
<java.sql.CallableStatement: short getShort(int)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<java.util.ArrayList: void forEach(java.util.function.Consumer)>
<java.util.zip.InflaterInputStream: void mark(int)>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<java.util.OptionalInt: java.util.OptionalInt empty()>
<ohos.usb.USBDevice: java.lang.String getSerialNumber()>
<ohos.storageinfomgr.StorageInfo: long getDataSize()>
<java.io.BufferedInputStream: void reset()>
<ohos.global.icu.util.ULocale: java.lang.String getCharacterOrientation()>
<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
<ohos.ai.asr.AsrListener: void onRmsChanged(float)>
<java.time.format.TextStyle: java.time.format.TextStyle[] values()>
<java.util.Spliterator.OfLong: void forEachRemaining(java.util.function.LongConsumer)>
<java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock: void lock()>
<ohos.global.icu.lang.UCharacter.UnicodeBlock: ohos.global.icu.lang.UCharacter.UnicodeBlock getInstance(int)>
<ohos.agp.render.Paint: void setStrokeCap(ohos.agp.render.Paint.StrokeCap)>
<java.time.format.DateTimeFormatter: java.lang.String toString()>
<ohos.global.icu.text.SimpleDateFormat: void setTimeZoneFormat(ohos.global.icu.text.TimeZoneFormat)>
<ohos.agp.render.opengl.GLES1X: void glMultMatrixf(float[])>
<java.lang.Package: java.lang.String getSpecificationTitle()>
<javax.crypto.SecretKeyFactory: java.security.Provider getProvider()>
<java.security.cert.X509CertSelector: void setSerialNumber(java.math.BigInteger)>
<java.security.InvalidKeyException: void <init>(java.lang.String,java.lang.Throwable)>
<java.sql.DatabaseMetaData: boolean allProceduresAreCallable()>
<ohos.agp.text.RichTextLayout: void <init>(ohos.agp.text.RichText,ohos.agp.render.Paint,ohos.agp.utils.Rect,int,boolean)>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setFlashMode(int)>
<java.util.Calendar.Builder: java.util.Calendar.Builder set(int,int)>
<ohos.agp.components.element.FrameAnimationElement: boolean getDisposeMode()>
<ohos.agp.components.Component: float getScrollbarRadius()>
<ohos.bundle.IBundleManager: ohos.bundle.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>
<ohos.media.image.common.Size: void <init>()>
<ohos.global.icu.text.CollationKey: int hashCode()>
<ohos.utils.zson.ZSONWriter: void writeObject(java.lang.Object)>
<java.lang.ThreadLocal: void set(java.lang.Object)>
<ohos.accessibility.AccessibilityAbilityInfo: java.lang.String getId()>
<ohos.sysappcomponents.contact.entity.Contact: ohos.sysappcomponents.contact.entity.Organization getOrganization()>
<ohos.data.search.schema.EventItem: ohos.data.search.schema.EventItem setLongitude(java.lang.Double)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,long)>
<ohos.aafwk.ability.AbilitySlice: void continueAbility()>
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.util.function.DoublePredicate: boolean test(double)>
<ohos.utils.zson.ZSONObject: ohos.utils.zson.ZSONArray getZSONArray(java.lang.String)>
<ohos.global.icu.text.MessagePattern.Part: java.lang.String toString()>
<java.text.SimpleDateFormat: void applyLocalizedPattern(java.lang.String)>
<ohos.agp.render.opengl.EGL: boolean eglDestroySurface(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLSurface)>
<ohos.nfc.tag.MifareClassicTag: void decBlock(int,int)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setUriAndType(ohos.utils.net.Uri,java.lang.String)>
<ohos.data.async.JobParams: int getToken()>
<java.text.MessageFormat: void <init>(java.lang.String)>
<ohos.agp.render.render3d.resources.AnimationPlayback: ohos.agp.render.render3d.resources.AnimationPlayback.State getPlaybackState()>
<java.io.File: boolean setReadOnly()>
<java.util.prefs.NodeChangeEvent: void <init>(java.util.prefs.Preferences,java.util.prefs.Preferences)>
<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>
<ohos.ai.cv.sr.SisrConfiguration: void setQuality(int)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getQueueLength()>
<java.nio.file.attribute.PosixFileAttributeView: void setPermissions(java.util.Set)>
<java.util.concurrent.Semaphore: void reducePermits(int)>
<ohos.aafwk.ability.Ability: java.lang.Object getAVController()>
<ohos.agp.components.ListContainer: void moveChildToFront(ohos.agp.components.Component)>
<ohos.global.icu.text.DateIntervalInfo: java.lang.String getFallbackIntervalPattern()>
<ohos.app.AbilityContext: ohos.global.resource.ResourceManager getResourceManager(ohos.global.configuration.Configuration)>
<ohos.bundle.BundleInfo.ReqPermissionDetail.UsedScene: java.lang.String[] getAbilities()>
<java.lang.Short: java.lang.String toString(short)>
<javax.tools.FileObject: long getLastModified()>
<ohos.agp.animation.Animator: void setDurationInternal(long)>
<ohos.agp.components.ComponentProvider: java.util.Collection getActions()>
<java.sql.SQLDataException: void <init>(java.lang.String,java.lang.Throwable)>
<java.time.Duration: java.time.Duration plusSeconds(long)>
<ohos.utils.PlainBooleanArray: void clear()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThanOrEqualTo(java.lang.String,java.lang.String)>
<ohos.agp.render.Paint.StrokeCap: ohos.agp.render.Paint.StrokeCap[] values()>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinTask submit(java.util.concurrent.ForkJoinTask)>
<java.text.NumberFormat: void setMaximumFractionDigits(int)>
<java.time.YearMonth: int get(java.time.temporal.TemporalField)>
<ohos.agp.components.Component: ohos.agp.utils.Color getFadeEffectColor()>
<ohos.net.http.SslError: java.lang.String toString()>
<java.security.Certificate: java.lang.String getFormat()>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.nio.channels.DatagramChannel: java.nio.channels.NetworkChannel setOption(java.net.SocketOption,java.lang.Object)>
<java.util.concurrent.ConcurrentLinkedDeque: boolean offerFirst(java.lang.Object)>
<ohos.agp.render.opengl.GLES20: void glDepthRangef(float,float)>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: ohos.event.notification.NotificationRequest.NotificationPictureContent setBriefText(java.lang.String)>
<ohos.media.audio.SoundPlayer.SoundPlayerParameters: void setSpeed(float)>
<ohos.app.Context: java.lang.Object getLastStoredDataWhenConfigChanged()>
<java.util.stream.LongStream: java.util.stream.LongStream rangeClosed(long,long)>
<java.time.chrono.ChronoLocalDateTime: java.time.chrono.ChronoLocalDateTime plus(java.time.temporal.TemporalAmount)>
<java.nio.FloatBuffer: float get(int)>
<ohos.media.player.Player: boolean release()>
<ohos.agp.render.Paint: void reset()>
<java.time.Month: java.time.Month firstMonthOfQuarter()>
<java.lang.reflect.Modifier: int classModifiers()>
<ohos.global.icu.text.DecimalFormatSymbols: char getGroupingSeparator()>
<ohos.rpc.ReliableFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>
<ohos.data.distributed.common.ChangeNotification: java.util.List getDeleteEntries()>
<java.lang.reflect.Method: boolean isDefault()>
<java.time.ZonedDateTime: java.time.ZonedDateTime withZoneSameLocal(java.time.ZoneId)>
<java.util.function.ObjLongConsumer: void accept(java.lang.Object,long)>
<java.sql.SQLInput: float readFloat()>
<ohos.media.camera.device.CameraAbility: long getMinCaptureDuration(int,ohos.media.image.common.Size)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat multiplicationAll(int)>
<java.sql.ResultSetMetaData: java.lang.String getColumnLabel(int)>
<javax.net.ssl.SSLSocket: void setEnableSessionCreation(boolean)>
<ohos.agp.components.Rating: void setScore(float)>
<ohos.agp.components.TabList.TabSelectedListener: void onSelected(ohos.agp.components.TabList.Tab)>
<java.util.IntSummaryStatistics: long getCount()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>
<ohos.agp.components.ProgressBar: void setMaxHeight(int)>
<ohos.rpc.ReliableFileDescriptor: ohos.rpc.ReliableFileDescriptor[] createPipe2()>
<ohos.javax.xml.stream.FactoryConfigurationError: java.lang.String getMessage()>
<java.util.concurrent.atomic.AtomicBoolean: java.lang.String toString()>
<ohos.agp.components.AttrHelper: float getDensity(ohos.app.Context)>
<java.sql.DatabaseMetaData: boolean supportsDataManipulationTransactionsOnly()>
<ohos.bluetooth.ble.BleCentralManager: void stopScan()>
<javax.net.ssl.KeyManagerFactorySpi: void engineInit(javax.net.ssl.ManagerFactoryParameters)>
<java.nio.file.Files: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>
<ohos.hiviewdfx.HiChecker: void notifySlowProcess(java.lang.String)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setClearCoatFactor(float)>
<java.sql.DatabaseMetaData: boolean supportsStatementPooling()>
<java.util.TreeMap: java.util.Map.Entry higherEntry(java.lang.Object)>
<ohos.event.commonevent.CommonEventPublishInfo: void <init>(ohos.event.commonevent.CommonEventPublishInfo)>
<java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)>
<ohos.utils.Parcel: boolean writeDouble(double)>
<java.time.chrono.Chronology: int compareTo(java.time.chrono.Chronology)>
<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>
<ohos.aafwk.content.Intent: short[] getShortArrayParam(java.lang.String)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>
<java.nio.channels.FileChannel.MapMode: java.lang.String toString()>
<javax.net.ssl.SSLKeyException: void <init>(java.lang.String)>
<ohos.bluetooth.ble.BlePeripheralManagerCallback: void notificationSentEvent(ohos.bluetooth.ble.BlePeripheralDevice,int)>
<java.net.DatagramSocket: void setTrafficClass(int)>
<java.time.ZoneOffset: java.time.zone.ZoneRules getRules()>
<java.lang.Byte: int hashCode()>
<ohos.utils.zson.ZSONArray: boolean isEmpty()>
<java.util.logging.Level: java.lang.String getResourceBundleName()>
<ohos.bundle.FormInfo: java.util.Map getCustomizeDatas()>
<ohos.global.icu.util.Calendar: int resolveFields(int[][][])>
<ohos.agp.components.Rating: void setFilledElement(ohos.agp.components.element.Element)>
<java.io.ObjectInputStream.GetField: byte get(java.lang.String,byte)>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 subtract(ohos.agp.render.render3d.math.Vector3,float)>
<ohos.global.i18n.utils.TextRecognitionUtils: java.util.Date[] convertDate(java.lang.String,long)>
<java.time.Duration: java.time.Duration ofHours(long)>
<java.security.Signature: byte[] sign()>
<ohos.powermanager.DevicePowerStatusInfo: ohos.powermanager.DevicePowerStatusInfo getDevicePowerStatusInfo()>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate minus(java.time.temporal.TemporalAmount)>
<ohos.media.player.Player: boolean isSingleLooping()>
<java.util.zip.ZipEntry: java.lang.String getName()>
<ohos.agp.components.Text: int getTextInputType()>
<ohos.global.icu.util.MeasureUnit: java.util.Set getAvailable(java.lang.String)>
<ohos.global.resource.solidxml.TypedAttribute.AttrData: void setAttrValue(java.lang.String)>
<ohos.media.image.common.ImageFormat: int getBitsNumberPerPixel(int)>
<ohos.utils.BasePacMap: java.lang.Object clone()>
<java.sql.DatabaseMetaData: java.lang.String getUserName()>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setVisibility(int,int)>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.Future submit(java.util.concurrent.Callable)>
<java.io.DataInputStream: double readDouble()>
<ohos.wifi.WifiScanInfo: int[] getCenterFrequencies()>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setBackgroundPixelMap(int,ohos.media.image.PixelMap)>
<java.lang.IllegalAccessException: void <init>()>
<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>
<java.util.concurrent.ConcurrentLinkedDeque: boolean addAll(java.util.Collection)>
<ohos.agp.database.DataSetPublisher: void notifyItemChanged(int)>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 subtract(ohos.agp.render.render3d.math.Vector2,ohos.agp.render.render3d.math.Vector2)>
<java.security.acl.Acl: java.lang.String getName()>
<java.lang.invoke.MethodHandleInfo: java.lang.reflect.Member reflectAs(java.lang.Class,java.lang.invoke.MethodHandles.Lookup)>
<ohos.utils.BasePacMap: void putLongValue(java.lang.String,long)>
<ohos.net.NetHandle: void <init>()>
<ohos.hiviewdfx.Debug: int getProcessSharedDirtySum()>
<ohos.sysappcomponents.calendar.CalendarDataHelper: boolean release()>
<java.time.Year: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<java.time.OffsetTime: boolean isSupported(java.time.temporal.TemporalField)>
<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedProtocols()>
<ohos.ai.cv.common.CvPoint: int hashCode()>
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
<java.security.Identity: void <init>(java.lang.String,java.security.IdentityScope)>
<ohos.bundle.AbilityInfo: boolean marshalling(ohos.utils.Parcel)>
<java.sql.SQLSyntaxErrorException: void <init>(java.lang.String,java.lang.String)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest.NotificationContent getContent()>
<java.math.RoundingMode: java.math.RoundingMode valueOf(int)>
<java.io.PrintStream: void write(int)>
<ohos.javax.xml.stream.events.XMLEvent: boolean isAttribute()>
<java.lang.reflect.Member: java.lang.String getName()>
<java.util.Arrays: void sort(java.lang.Object[])>
<java.time.chrono.Era: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.agp.components.webengine.WebView: void load(java.lang.String)>
<ohos.global.icu.text.ConstrainedFieldPosition: int getStart()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates in(java.lang.String,long[])>
<java.util.concurrent.CopyOnWriteArraySet: java.lang.Object[] toArray()>
<java.nio.charset.MalformedInputException: int getInputLength()>
<java.nio.channels.Pipe.SinkChannel: void <init>(java.nio.channels.spi.SelectorProvider)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates between(java.lang.String,java.sql.Time,java.sql.Time)>
<ohos.utils.LightweightMap: void <init>(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<java.time.OffsetTime: java.time.OffsetTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
<javax.security.auth.SubjectDomainCombiner: javax.security.auth.Subject getSubject()>
<java.nio.channels.spi.AbstractSelector: void implCloseSelector()>
<ohos.utils.geo.DimensFloat: int getMaxToInt()>
<java.lang.StrictMath: double nextAfter(double,double)>
<java.io.RandomAccessFile: boolean readBoolean()>
<ohos.global.icu.text.RuleBasedCollator: java.lang.Object clone()>
<java.net.Socket: void <init>(java.net.Proxy)>
<java.util.IllegalFormatWidthException: void <init>(int)>
<ohos.aafwk.content.IntentParams: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.utils.PacMap: java.util.ArrayList getStringList(java.lang.String)>
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<ohos.agp.render.render3d.math.Vector3: float getY()>
<ohos.event.notification.NotificationSorting: boolean isHiddenNotification()>
<ohos.agp.transition.TransitionComponents: void <init>(ohos.agp.components.ComponentContainer,ohos.agp.components.ComponentContainer)>
<ohos.nfc.oma.Session: java.util.Optional openBasicChannel(ohos.nfc.oma.Aid)>
<java.io.PipedInputStream: void <init>(java.io.PipedOutputStream,int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>
<ohos.multimodalinput.event.MultimodalEvent: java.util.UUID getUuid()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>
<java.util.Vector: void setElementAt(java.lang.Object,int)>
<ohos.agp.render.opengl.GLES20: void glBufferData(int,int,java.nio.Buffer,int)>
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>
<ohos.bundle.BundleInfo: java.util.List getPermissions()>
<ohos.workscheduler.WorkInfo.Builder: void <init>()>
<java.util.Map: int hashCode()>
<java.sql.ResultSet: void updateString(java.lang.String,java.lang.String)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,java.lang.String)>
<ohos.event.notification.NotificationHelper: java.util.List getNotificationSlotGroups()>
<java.time.chrono.IsoEra: void <clinit>()>
<javax.crypto.spec.DESKeySpec: void <init>(byte[],int)>
<ohos.ace.ability.AceAbility: void onBackPressed()>
<ohos.agp.database.DataSetPublisher: void notifyItemInserted(int)>
<ohos.utils.PlainBooleanArray: boolean contains(int)>
<java.io.ObjectOutputStream.PutField: void put(java.lang.String,byte)>
<java.util.SimpleTimeZone: boolean hasSameRules(java.util.TimeZone)>
<ohos.global.icu.text.Collator: void setReorderCodes(int[])>
<ohos.global.icu.text.MessagePattern.Part.Type: boolean hasNumericValue()>
<java.nio.file.Path: java.io.File toFile()>
<ohos.utils.net.Uri.Builder: void <init>()>
<java.net.DatagramSocket: void setSendBufferSize(int)>
<java.util.concurrent.BlockingDeque: void addFirst(java.lang.Object)>
<ohos.aafwk.ability.continuation.IContinuationRegisterManager: void disconnect()>
<ohos.agp.components.Slider: void setIncreaseButtonClickedListener(ohos.agp.components.Component.ClickedListener)>
<ohos.agp.render.render3d.Engine.RenderBackend: ohos.agp.render.render3d.Engine.RenderBackend valueOf(java.lang.String)>
<java.util.concurrent.TransferQueue: boolean hasWaitingConsumer()>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal valueOf(double)>
<java.security.Provider: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<ohos.agp.components.Component: int getMarginBottom()>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource create(java.io.File,ohos.media.image.ImageSource.SourceOptions)>
<ohos.agp.components.element.ElementContainer: void skipAnimation()>
<ohos.media.common.sessioncore.AVToken: int hashCode()>
<ohos.global.icu.text.CaseMap.Title: ohos.global.icu.text.CaseMap.Title adjustToCased()>
<ohos.miscservices.download.IDownloadListener: void onProgress(long,long)>
<java.security.acl.AclEntry: java.lang.Object clone()>
<java.time.OffsetTime: void <clinit>()>
<ohos.ai.cv.text.TextConfiguration.Builder: ohos.ai.cv.text.TextConfiguration.Builder setLevel(int)>
<java.lang.invoke.MethodHandles: java.lang.reflect.Member reflectAs(java.lang.Class,java.lang.invoke.MethodHandle)>
<ohos.agp.render.PathMeasure: boolean isClosed()>
<javax.tools.ForwardingJavaFileManager: javax.tools.FileObject getFileForInput(javax.tools.JavaFileManager.Location,java.lang.String,java.lang.String)>
<javax.tools.ForwardingJavaFileObject: javax.lang.model.element.NestingKind getNestingKind()>
<java.lang.ThreadLocal: java.lang.Object initialValue()>
<java.time.chrono.MinguoEra: void <clinit>()>
<java.lang.Iterable: java.util.Spliterator spliterator()>
<ohos.media.sessioncore.AVSession: boolean isAVSessionActive()>
<java.sql.ResultSet: java.sql.Statement getStatement()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet cloneAsThawed()>
<ohos.bluetooth.ble.BleAdvertiseSettings: boolean marshalling(ohos.utils.Parcel)>
<java.io.StringWriter: java.io.Writer append(java.lang.CharSequence,int,int)>
<ohos.data.resultset.ResultSet.ColumnType: ohos.data.resultset.ResultSet.ColumnType valueOf(java.lang.String)>
<ohos.agp.utils.Circle: void set(ohos.agp.utils.Point,float)>
<ohos.utils.PersistablePacMap: void putPersistablePacMap(java.lang.String,ohos.utils.PersistablePacMap)>
<java.security.IdentityScope: void removeIdentity(java.security.Identity)>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo.Builder requestRepeatCycle(long,int)>
<java.security.PKCS12Attribute: byte[] getEncoded()>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.Reader)>
<ohos.agp.components.Component: void setAccessibilityDescription(java.lang.String)>
<ohos.utils.RationalNumber: boolean isInfinite()>
<ohos.agp.render.render3d.components.CameraComponent: void setZnear(float)>
<ohos.agp.components.RoundProgressBar: void <init>(ohos.app.Context)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates endWrap()>
<java.io.BufferedWriter: void write(char[],int,int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates orderByDesc(java.lang.String)>
<ohos.media.camera.device.FrameConfig: int getFlashMode()>
<java.net.URLConnection: int getContentLength()>
<ohos.bundle.BackupBundleInfo: boolean unmarshalling(ohos.utils.Parcel)>
<java.io.PrintStream: void setError()>
<java.time.format.DateTimeFormatter: java.lang.Object parse(java.lang.CharSequence,java.time.temporal.TemporalQuery)>
<ohos.agp.render.render3d.ViewHolder.SurfaceListener: void onSurfaceSizeUpdated(int,int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates limit(int)>
<ohos.data.search.model.SearchableEntity: java.lang.String getAppId()>
<java.time.chrono.ChronoPeriod: boolean equals(java.lang.Object)>
<ohos.media.audio.AudioRendererInfo.Builder: ohos.media.audio.AudioRendererInfo.Builder bufferSizeInBytes(long)>
<java.time.chrono.HijrahEra: int getValue()>
<java.util.Hashtable: java.util.Set entrySet()>
<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
<ohos.distributedhardware.devicemanager.DeviceStateCallback: void onDeviceOnline(ohos.distributedhardware.devicemanager.DeviceInfo)>
<ohos.data.usage.Volume: ohos.data.usage.MountState getState()>
<ohos.eventhandler.InnerEvent: ohos.utils.PacMap getPacMap()>
<ohos.data.rdb.ValuesBucket: void <init>(ohos.data.rdb.ValuesBucket)>
<ohos.media.audio.AudioCapturerConfig: ohos.media.audio.AudioStreamInfo getStreamInfo()>
<ohos.agp.utils.Matrix44: void setTranslate(float,float,float)>
<java.sql.ResultSet: java.sql.RowId getRowId(java.lang.String)>
<java.util.regex.Pattern: int flags()>
<java.util.logging.Logger: void severe(java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notBetween(java.lang.String,int,int)>
<java.time.OffsetTime: boolean isEqual(java.time.OffsetTime)>
<ohos.agp.render.opengl.GLES1X: void glLightModelxv(int,java.nio.IntBuffer)>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion subtract(ohos.agp.render.render3d.math.Quaternion,float)>
<ohos.media.camera.device.FrameConfig: ohos.location.Location getLocation()>
<java.net.Inet4Address: boolean isAnyLocalAddress()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notBetween(java.lang.String,java.lang.String,java.lang.String)>
<ohos.global.i18n.LocaleHelperUtils: java.lang.String getLanguageName(java.util.Locale,java.util.Locale)>
<java.security.KeyStoreSpi: java.security.Key engineGetKey(java.lang.String,char[])>
<java.util.concurrent.ArrayBlockingQueue: boolean add(java.lang.Object)>
<java.security.cert.X509Certificate: int getBasicConstraints()>
<ohos.nfc.tag.MifareClassicTag: int getTagSize()>
<ohos.agp.render.render3d.math.Quaternion: void <init>(float[],int)>
<ohos.agp.window.service.Window: void setOnApplyComponentPaddingListener(ohos.agp.window.service.IApplyComponentPaddingListener)>
<ohos.agp.animation.Animator: void setCurveTypeInternal(int)>
<java.time.LocalDate: java.time.LocalDate plusWeeks(long)>
<ohos.agp.components.ComponentProvider: boolean setApplyType(int)>
<ohos.data.async.UpdateCallback: void onUpdateDone(java.lang.Integer,java.lang.Object,java.lang.Integer)>
<ohos.miscservices.inputmethod.EditingText: void setPrompt(java.lang.String)>
<ohos.agp.components.LayoutScatter.Picker: boolean isLoadClass(java.lang.Class)>
<ohos.global.resource.Element: ohos.global.resource.solidxml.Theme getTheme()>
<ohos.agp.render.Vertices: int getIndexOffset()>
<javax.crypto.CipherOutputStream: void close()>
<java.security.Provider: java.lang.String getProperty(java.lang.String)>
<java.lang.String: byte[] getBytes()>
<ohos.data.search.schema.VideoItem: java.util.List getVideoSchema()>
<ohos.agp.utils.DimensFloat: float getMedian()>
<java.util.Vector: int lastIndexOf(java.lang.Object,int)>
<ohos.bundle.HapModuleInfo: boolean marshalling(ohos.utils.Parcel)>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate dateNow(java.time.ZoneId)>
<java.util.Arrays: void parallelSort(long[])>
<ohos.global.resource.Element: int getColor()>
<java.lang.Integer: int compare(int,int)>
<ohos.agp.components.Slider: ohos.agp.components.Slider.ValueChangedListener getValueChangedListener()>
<ohos.multimodalinput.event.MmiPoint: void <init>(float,float)>
<ohos.agp.utils.RectFloat: float getVerticalCenter()>
<java.sql.DatabaseMetaData: boolean ownDeletesAreVisible(int)>
<java.text.DateFormatSymbols: java.lang.String[] getMonths()>
<java.nio.channels.FileChannel: long position()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: ohos.event.notification.MessageUser getSender()>
<ohos.agp.utils.Matrix: void reset()>
<ohos.data.rdb.ValuesBucket: int size()>
<ohos.agp.utils.Matrix44: void setRotateAbout(float,float,float,float)>
<ohos.miscservices.inputmethod.RichContent: ohos.utils.net.Uri getDataUri()>
<java.time.temporal.ValueRange: long checkValidValue(long,java.time.temporal.TemporalField)>
<ohos.global.icu.text.DateFormat: java.util.Locale[] getAvailableLocales()>
<java.net.Proxy: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap tailMap(java.lang.Object)>
<ohos.agp.components.ComponentContainer: ohos.agp.components.ComponentHolder findComponentHolderById(int)>
<ohos.bundle.AbilityInfo: boolean getFormEnabled()>
<java.io.File: boolean canRead()>
<ohos.utils.PlainArray: int indexOfValue(java.lang.Object)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet add(int)>
<ohos.event.notification.INotificationSubscriber: void onSubscribeConnected()>
<ohos.sensor.data.CategoryEnvironmentData: void <init>(ohos.sensor.bean.CategoryEnvironment,int,long,int,float[])>
<java.util.Map: boolean containsKey(java.lang.Object)>
<ohos.data.orm.OrmConfig.Builder: ohos.data.orm.OrmConfig.Builder setEncryptKey(byte[])>
<java.io.File: boolean setReadable(boolean,boolean)>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDate dateYearDay(java.time.chrono.Era,int,int)>
<ohos.agp.render.Arc: float getStartAngle()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates orderByDesc(java.lang.String)>
<ohos.org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>
<java.lang.StringBuilder: java.lang.String toString()>
<ohos.global.icu.text.Normalizer2: boolean isInert(int)>
<java.lang.reflect.Field: java.lang.String toGenericString()>
<ohos.agp.components.Component.EstimateSpec: int getSizeWithMode(int,int)>
<java.util.Scanner: void <init>(java.nio.channels.ReadableByteChannel)>
<java.util.concurrent.locks.ReentrantLock: int getWaitQueueLength(java.util.concurrent.locks.Condition)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenApplyAsync(java.util.function.Function,java.util.concurrent.Executor)>
<java.math.BigInteger: java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)>
<java.nio.file.attribute.BasicFileAttributes: long size()>
<java.sql.ResultSet: void updateBigDecimal(int,java.math.BigDecimal)>
<ohos.org.w3c.dom.ls.LSInput: java.lang.String getBaseURI()>
<ohos.accessibility.AccessibilityEventInfo: void setEndIndex(int)>
<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>
<java.lang.reflect.AccessibleObject: boolean isAccessible()>
<java.lang.Float: void <init>(double)>
<java.io.ObjectOutput: void write(byte[])>
<java.util.concurrent.Semaphore: boolean tryAcquire(int)>
<ohos.media.audio.Timestamp: void setNanoTimestamp(long)>
<java.time.chrono.Chronology: java.util.Set getAvailableChronologies()>
<java.sql.ResultSet: java.io.InputStream getBinaryStream(int)>
<javax.lang.model.element.ElementVisitor: java.lang.Object visitExecutable(javax.lang.model.element.ExecutableElement,java.lang.Object)>
<ohos.global.icu.text.DateFormat: java.util.Date parse(java.lang.String)>
<ohos.light.bean.LightBrightness: void setBlueBrightness(int)>
<java.sql.Statement: int getFetchSize()>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndAccumulate(java.lang.Object,int,java.util.function.IntBinaryOperator)>
<java.time.LocalDate: boolean isAfter(java.time.chrono.ChronoLocalDate)>
<ohos.agp.components.Text: int getTextAlignment()>
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeP()>
<ohos.event.commonevent.CommonEventSubscriber: ohos.rpc.IRemoteObject getRemoteAbility(ohos.app.Context,ohos.aafwk.content.Intent)>
<java.util.Comparator: java.util.Comparator thenComparingInt(java.util.function.ToIntFunction)>
<ohos.aafwk.ability.IAbilityContinuation: void onRemoteTerminated()>
<ohos.os.ProcessManager: int getGidByName(java.lang.String)>
<ohos.utils.FileWatcher.EventHandler: void onEvent(java.nio.file.WatchEvent)>
<ohos.media.sessioncore.AVBrowser: void unsubscribeByParentMediaId(java.lang.String,ohos.media.common.sessioncore.AVSubscriptionCallback)>
<java.text.BreakIterator: java.text.BreakIterator getLineInstance(java.util.Locale)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.Thread getFirstQueuedThread()>
<ohos.distributedschedule.interwork.DeviceInfo: void setDeviceType(ohos.distributedschedule.interwork.DeviceInfo.DeviceType)>
<ohos.agp.components.ComponentTransition: void removeTransitionType(int)>
<java.sql.ResultSet: void refreshRow()>
<java.text.NumberFormat.Field: java.lang.Object readResolve()>
<ohos.telephony.GsmSignalInformation: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.text.RichText: int getLeadingMargin(boolean)>
<java.io.File: boolean isDirectory()>
<java.io.File: boolean mkdirs()>
<java.util.function.LongPredicate: java.util.function.LongPredicate or(java.util.function.LongPredicate)>
<ohos.agp.components.ComponentTreeObserver: void removeWindowFocusUpdatedListener(ohos.agp.components.ComponentTreeObserver.WindowFocusUpdatedListener)>
<ohos.ai.cv.text.TextLine: void setLineRect(ohos.ai.cv.common.CvRect)>
<ohos.data.search.schema.IndexSchemaType: ohos.data.search.schema.IndexSchemaType[] values()>
<ohos.global.configuration.DeviceCapability: int hashCode()>
<java.sql.SQLIntegrityConstraintViolationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<ohos.agp.render.opengl.GLES2Ext: void glCopyImageSubDataEXT(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>
<java.lang.Integer: int parseUnsignedInt(java.lang.String)>
<java.net.Socket: int getReceiveBufferSize()>
<ohos.agp.components.webengine.ScaleChangeListener: void onChange(float,float)>
<java.sql.Connection: java.sql.NClob createNClob()>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)>
<ohos.agp.components.TabList: void removeTabSelectedListener(ohos.agp.components.TabList.TabSelectedListener)>
<java.nio.FloatBuffer: boolean equals(java.lang.Object)>
<java.security.spec.ECFieldFp: int hashCode()>
<ohos.global.icu.util.ChineseCalendar: void <init>()>
<java.nio.file.attribute.AclEntry: boolean equals(java.lang.Object)>
<ohos.global.icu.util.ChineseCalendar: void handleComputeFields(int)>
<ohos.agp.utils.Point: float getPointY()>
<java.sql.CallableStatement: void setAsciiStream(java.lang.String,java.io.InputStream,long)>
<java.time.format.DateTimeParseException: java.lang.String getParsedString()>
<ohos.interwork.utils.PacMapEx: boolean marshalling(ohos.utils.Parcel)>
<java.time.OffsetTime: java.time.OffsetTime withOffsetSameLocal(java.time.ZoneOffset)>
<java.lang.Number: short shortValue()>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int)>
<ohos.agp.components.Component: void setAccessibility(int)>
<ohos.global.i18n.text.MeasureOptions.Unit: ohos.global.icu.util.LocaleData.MeasurementSystem getMeasurementSystem()>
<ohos.eventhandler.EventHandler: java.lang.String getEventName(ohos.eventhandler.InnerEvent)>
<ohos.global.icu.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
<ohos.media.camera.device.CameraAbility: long getMinCaptureDuration(java.lang.Class,ohos.media.image.common.Size)>
<ohos.utils.system.SystemCapability.MultimodalInput: void <init>()>
<ohos.global.icu.text.UCharacterIterator: void setIndex(int)>
<java.util.concurrent.atomic.AtomicBoolean: void <init>()>
<ohos.global.icu.text.DateIntervalInfo: boolean equals(java.lang.Object)>
<ohos.global.icu.util.Calendar: int getRepeatedWallTimeOption()>
<java.sql.Statement: int getResultSetConcurrency()>
<java.time.format.DecimalStyle: java.time.format.DecimalStyle withPositiveSign(char)>
<ohos.agp.render.render3d.components.LocalMatrixComponent: void setLocalMatrix(ohos.agp.render.render3d.math.Matrix4x4)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValue(java.time.temporal.TemporalField,int,int,java.time.format.SignStyle)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates endWrap()>
<ohos.media.codec.Codec: boolean setVideoScaleType(int)>
<ohos.agp.render.opengl.GLES1X: void glBindBuffer(int,int)>
<java.time.ZonedDateTime: java.time.ZonedDateTime plusNanos(long)>
<ohos.agp.render.render3d.SceneNode: ohos.agp.render.render3d.math.Quaternion getRotation()>
<javax.net.ssl.SSLParameters: java.security.AlgorithmConstraints getAlgorithmConstraints()>
<ohos.bundle.ShortcutInfo: boolean isEnabled()>
<ohos.accessibility.AccessibilityEventInfo: void setWindowChangeTypes(int)>
<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>
<ohos.media.common.sessioncore.AVControllerCallback: void onAVQueueTitleChanged(java.lang.CharSequence)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setCharSequenceArrayListParam(java.lang.String,java.util.ArrayList)>
<java.time.LocalDateTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<ohos.agp.components.element.Element: int getWidth()>
<ohos.agp.components.Slider: void setIncreaseButtonElement(ohos.agp.components.element.Element)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates orderByAsc(java.lang.String)>
<java.nio.channels.FileChannel: long transferFrom(java.nio.channels.ReadableByteChannel,long,long)>
<java.util.zip.DeflaterOutputStream: void write(int)>
<ohos.media.audio.AudioCapturer: int read(byte[],int,int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThanOrEqualTo(java.lang.String,long)>
<java.net.URISyntaxException: java.lang.String getMessage()>
<java.util.concurrent.atomic.AtomicLongArray: long incrementAndGet(int)>
<java.security.spec.ECFieldFp: java.math.BigInteger getP()>
<java.util.prefs.NodeChangeListener: void childRemoved(java.util.prefs.NodeChangeEvent)>
<java.security.spec.ECFieldF2m: void <init>(int)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object pop()>
<java.text.DecimalFormatSymbols: char getPatternSeparator()>
<java.util.Collection: java.util.stream.Stream parallelStream()>
<ohos.agp.components.ComponentProvider.Action: int mergeOperation()>
<java.security.KeyStore.TrustedCertificateEntry: java.util.Set getAttributes()>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate date(java.time.chrono.Era,int,int,int)>
<javax.lang.model.type.TypeVisitor: java.lang.Object visit(javax.lang.model.type.TypeMirror,java.lang.Object)>
<ohos.agp.components.ComponentProvider.Action: void <init>()>
<ohos.agp.components.ComponentTransition: void setAnimatorProperty(int,ohos.agp.animation.AnimatorProperty)>
<ohos.ai.cv.common.ICvBase: int release()>
<ohos.global.icu.lang.UCharacter: int getHanNumericValue(int)>
<java.security.KeyStoreSpi: java.util.Enumeration engineAliases()>
<java.util.Arrays: java.util.Spliterator.OfDouble spliterator(double[],int,int)>
<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>
<ohos.javax.xml.validation.TypeInfoProvider: void <init>()>
<java.util.NavigableMap: java.lang.Object ceilingKey(java.lang.Object)>
<ohos.agp.window.dialog.BaseDialog: void onHide()>
<java.time.ZonedDateTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<ohos.media.photokit.metadata.AVMetadataHelper: ohos.media.image.PixelMap fetchVideoPixelMapByTime()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getPatternInstance(java.lang.String)>
<ohos.agp.components.element.Element: void clearColorMatrix()>
<java.util.regex.Matcher: java.lang.String group(java.lang.String)>
<ohos.media.audio.AudioCapturerConfig: ohos.media.audio.AudioCapturerInfo.AudioInputSource getAudioInputSource()>
<java.lang.Long: long highestOneBit(long)>
<java.util.concurrent.FutureTask: void run()>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<ohos.location.GeoAddress: java.lang.String getAddressUrl()>
<ohos.agp.render.render3d.RenderLoop: void stopRendering()>
<ohos.global.icu.text.ConstrainedFieldPosition: void reset()>
<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>
<ohos.agp.colors.RgbColor: int getRed()>
<ohos.global.i18n.LocaleHelperUtils: java.util.ArrayList getBlockedLangs2String(ohos.app.Context)>
<ohos.media.photokit.metadata.AVLoggerConnection: void onServiceDisconnect()>
<ohos.media.codec.TrackInfo: int getStatus()>
<java.util.stream.DoubleStream: java.util.DoubleSummaryStatistics summaryStatistics()>
<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<java.nio.channels.AsynchronousCloseException: void <init>()>
<ohos.media.camera.CameraKit: ohos.media.camera.device.CameraInfo getCameraInfo(java.lang.String)>
<ohos.biometrics.authentication.BiometricAuthentication: javax.crypto.Mac getSecureObjectMac()>
<ohos.global.icu.lang.UCharacter: boolean isValidCodePoint(int)>
<ohos.bundleactive.BundleActiveInfos: long queryFgAbilityPrevAccessMs()>
<java.util.concurrent.locks.ReentrantLock: void <init>()>
<ohos.aafwk.content.Intent: void <clinit>()>
<java.nio.file.Files: java.nio.file.Path move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>
<ohos.data.distributed.common.KvStore: void unSubscribe(ohos.data.distributed.common.KvStoreObserver)>
<ohos.global.icu.text.DateIntervalInfo: boolean getDefaultOrder()>
<java.sql.SQLOutput: void writeNClob(java.sql.NClob)>
<ohos.global.icu.text.DecimalFormatSymbols: char getPercent()>
<ohos.sysappcomponents.contact.entity.Note: void <init>()>
<javax.tools.JavaFileManager: void close()>
<ohos.agp.render.opengl.GLES1X: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<ohos.sensor.data.SensorData: void <init>(ohos.sensor.bean.SensorBase,int,long,int,float[])>
<java.security.cert.PKIXBuilderParameters: void setMaxPathLength(int)>
<ohos.org.xml.sax.helpers.DefaultHandler: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.concurrent.BlockingQueue: boolean add(java.lang.Object)>
<ohos.miscservices.screenlock.interfaces.UnlockScreenCallback: void onUnlockSucceeded()>
<java.time.chrono.ChronoLocalDateTime: boolean isAfter(java.time.chrono.ChronoLocalDateTime)>
<java.io.ObjectStreamField: java.lang.String getName()>
<java.lang.Character: boolean isUpperCase(int)>
<java.util.stream.DoubleStream: boolean allMatch(java.util.function.DoublePredicate)>
<ohos.agp.components.ProgressBar: boolean isDividerLinesEnabled()>
<ohos.global.configuration.DeviceCapability: void <init>(ohos.global.configuration.DeviceCapability)>
<java.util.AbstractSet: void <init>()>
<ohos.agp.render.Paint: ohos.agp.render.ColorMatrix getColorMatrix()>
<ohos.javax.xml.stream.XMLStreamReader: boolean isEndElement()>
<java.time.format.DateTimeFormatter: java.time.temporal.TemporalQuery parsedExcessDays()>
<java.util.Scanner: void <init>(java.io.InputStream,java.lang.String)>
<ohos.global.icu.util.Calendar: boolean isEquivalentTo(ohos.global.icu.util.Calendar)>
<java.io.StreamTokenizer: void slashStarComments(boolean)>
<ohos.bluetooth.HandsFreeAudioGateway: java.util.List getConnectedDevices()>
<java.sql.DatabaseMetaData: boolean supportsANSI92IntermediateSQL()>
<ohos.nfc.cardemulation.CardEmulation: boolean isListenModeEnabled()>
<java.time.Year: java.time.YearMonth atMonth(java.time.Month)>
<java.time.Period: java.time.Period minusYears(long)>
<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate minus(java.time.temporal.TemporalAmount)>
<ohos.global.icu.text.Transliterator: void transliterate(ohos.global.icu.text.Replaceable,ohos.global.icu.text.Transliterator.Position)>
<ohos.system.OsHelperConstants: boolean isDir(int)>
<java.security.KeyPairGenerator: void <init>(java.lang.String)>
<ohos.global.icu.util.Calendar: int compareTo(ohos.global.icu.util.Calendar)>
<ohos.media.audio.SoundPlayer: int createSound(java.io.FileDescriptor,long,long)>
<ohos.sensor.agent.CategoryEnvironmentAgent: java.util.List getAllSensors(int)>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream,java.lang.String)>
<java.time.temporal.ChronoField: long getFrom(java.time.temporal.TemporalAccessor)>
<ohos.media.sessioncore.AVController.PlayControls: void skipToAVQueueItem(long)>
<ohos.media.audio.AudioWaver.WaveDataObserver: void onWaveData(byte[],int)>
<ohos.agp.components.Component: int getMinHeight()>
<java.time.LocalDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
<java.time.chrono.MinguoDate: java.time.chrono.ChronoPeriod until(java.time.chrono.ChronoLocalDate)>
<ohos.security.permission.PermissionGrantMode: ohos.security.permission.PermissionGrantMode valueOf(java.lang.String)>
<java.util.concurrent.LinkedBlockingDeque: void addLast(java.lang.Object)>
<ohos.media.audio.SoundPlayer.SoundType: ohos.media.audio.SoundPlayer.SoundType valueOf(java.lang.String)>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder clear()>
<java.time.chrono.JapaneseChronology: java.time.chrono.Era eraOf(int)>
<java.time.zone.ZoneOffsetTransition: java.time.LocalDateTime getDateTimeBefore()>
<java.time.temporal.Temporal: boolean isSupported(java.time.temporal.TemporalUnit)>
<ohos.agp.render.ColorMatrix: void setSaturation(float)>
<ohos.agp.render.render3d.Engine.RenderBackend: void <clinit>()>
<java.util.Collections: int lastIndexOfSubList(java.util.List,java.util.List)>
<ohos.data.rdb.Statement: void setStrings(java.lang.String[])>
<ohos.usb.USBDevicePipe: void close()>
<ohos.utils.geo.RectFloat.RotationEnum: int getValue()>
<ohos.agp.components.surfaceprovider.SurfaceProvider: void <init>(ohos.app.Context)>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<java.util.stream.IntStream: java.util.PrimitiveIterator.OfInt iterator()>
<ohos.javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>
<ohos.utils.PacMap: char getChar(java.lang.String)>
<ohos.data.rdb.RdbStore: long insert(java.lang.String,ohos.data.rdb.ValuesBucket)>
<ohos.data.resultset.ResultSet: double getDouble(int)>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate minus(long,java.time.temporal.TemporalUnit)>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getTitleInstance(java.util.Locale)>
<ohos.global.i18n.phonenumbers.InputFormatter: void clean()>
<ohos.rpc.RemoteException: void <init>(java.lang.String)>
<ohos.utils.BasePacMap: double getDoubleValue(java.lang.String,double)>
<java.net.Socket: java.net.InetAddress getLocalAddress()>
<java.security.cert.PKIXRevocationChecker.Option: void <clinit>()>
<ohos.media.audio.SoundEffect.SoundEffectInfo: java.lang.String getName()>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object getLast()>
<java.util.ListIterator: boolean hasPrevious()>
<ohos.global.icu.util.ULocale: java.lang.String[] getISOCountries()>
<java.time.LocalDateTime: java.time.LocalDateTime ofInstant(java.time.Instant,java.time.ZoneId)>
<java.lang.invoke.MethodHandle: boolean isVarargsCollector()>
<java.io.RandomAccessFile: long length()>
<ohos.global.icu.math.BigDecimal: double doubleValue()>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal max(ohos.global.icu.math.BigDecimal,ohos.global.icu.math.MathContext)>
<ohos.global.icu.text.UnicodeSet: int span(java.lang.CharSequence,ohos.global.icu.text.UnicodeSet.SpanCondition)>
<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>
<ohos.agp.components.PageSlider.ReboundEffectParams: void setOverscrollPercent(int)>
<ohos.bundle.IBundleManager: int startBackupSession(ohos.bundle.IBackupSessionCallback)>
<ohos.media.image.ImageReceiver.IImageArrivalListener: void onImageArrival(ohos.media.image.ImageReceiver)>
<ohos.javax.xml.parsers.SAXParser: boolean isNamespaceAware()>
<ohos.media.common.sessioncore.AVElement: int getFlags()>
<ohos.multimodalinput.standard.SystemEventHandle: boolean onClosePage(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.agp.render.Canvas: void drawTexture(float,float,ohos.agp.render.Texture)>
<ohos.ai.cv.docrefine.DocCoordinates: ohos.ai.cv.common.CvPoint getTopRight()>
<ohos.sensor.agent.CategoryMotionAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryMotionDataCallback,ohos.sensor.bean.CategoryMotion,int,long)>
<ohos.aafwk.ability.Ability: void setIntent(ohos.aafwk.content.Intent)>
<ohos.aafwk.content.Intent.OperationBuilder: ohos.aafwk.content.Intent.OperationBuilder withAbilityName(java.lang.String)>
<java.text.SimpleDateFormat: java.lang.String toPattern()>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 lerp(ohos.agp.render.render3d.math.Vector2,ohos.agp.render.render3d.math.Vector2,float)>
<ohos.agp.utils.Circle: void setEmpty()>
<ohos.agp.components.ComponentContainer.LayoutConfig: void setMarginRight(int)>
<java.util.stream.DoubleStream: void forEachOrdered(java.util.function.DoubleConsumer)>
<java.io.FileWriter: void <init>(java.lang.String,boolean)>
<java.lang.Character: boolean isLowerCase(int)>
<ohos.agp.render.opengl.EGL: boolean eglTerminate(ohos.agp.render.opengl.EGLDisplay)>
<ohos.data.search.schema.IndexSchemaType: int getSchemaCode()>
<java.lang.ClassLoader: java.net.URL findResource(java.lang.String)>
<ohos.javax.xml.stream.events.StartDocument: java.lang.String getSystemId()>
<ohos.account.AccountAbility: boolean isOsAccountConstraintEnable(int,java.lang.String)>
<java.util.concurrent.LinkedTransferQueue: boolean tryTransfer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<ohos.aafwk.ability.Ability: int insert(ohos.utils.net.Uri,ohos.data.rdb.ValuesBucket)>
<java.nio.Buffer: boolean isDirect()>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType insertParameterTypes(int,java.lang.Class[])>
<java.util.zip.Deflater: void <init>()>
<ohos.ai.tts.TtsClient: void speakText(java.lang.String,java.lang.String)>
<ohos.global.icu.text.Bidi: boolean isOrderParagraphsLTR()>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: java.lang.String getText()>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryEnvironmentDataCallback,ohos.sensor.bean.CategoryEnvironment,int,long)>
<ohos.agp.utils.Color: void <clinit>()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates and()>
<java.lang.Long: java.lang.String toUnsignedString(long)>
<ohos.event.notification.NotificationUserInput.Builder: ohos.event.notification.NotificationUserInput.Builder setTag(java.lang.String)>
<ohos.ace.ability.AceAbility: void onStop()>
<ohos.agp.utils.RectFloat: void fuse(float,float,float,float)>
<ohos.agp.render.render3d.components.SceneComponent: void <init>()>
<ohos.ai.cv.common.ParamKey: void <init>()>
<java.lang.Enum: void <init>(java.lang.String,int)>
<ohos.dcall.DistributedCallManager: void displayCallScreen(boolean)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void print(java.lang.String)>
<ohos.agp.utils.Rect: int getCenterX()>
<java.util.zip.Inflater: int getRemaining()>
<java.sql.ResultSet: void updateRowId(java.lang.String,java.sql.RowId)>
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
<java.time.LocalTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<java.lang.VerifyError: void <init>()>
<java.security.cert.LDAPCertStoreParameters: java.lang.String getServerName()>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object pollLast(long,java.util.concurrent.TimeUnit)>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getSyncId()>
<javax.net.ssl.SSLServerSocketFactory: javax.net.ServerSocketFactory getDefault()>
<ohos.aafwk.ability.Ability: void onCommand(ohos.aafwk.content.Intent,boolean,int)>
<java.util.ArrayList: void clear()>
<ohos.utils.zson.ZSONArray: java.lang.Object remove(int)>
<java.util.TreeMap: boolean containsKey(java.lang.Object)>
<ohos.accessibility.ability.AccessibilityInfo: void setPopupSupported(boolean)>
<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>
<ohos.aafwk.ability.AbilityForm: void setFullPageIntent(ohos.aafwk.content.Intent)>
<ohos.global.icu.text.MessageFormat: java.util.Set getArgumentNames()>
<ohos.agp.components.ScrollView: boolean getReboundEffect()>
<ohos.agp.render.render3d.resources.ResourceManager: ohos.agp.render.render3d.resources.GpuResourceHandle createTextureViewOes(java.lang.String,int,int,int)>
<ohos.data.rdb.RdbStore: boolean isReadOnly()>
<ohos.miscservices.timeutility.Timer.OneShotTimer: void start(int,long)>
<ohos.utils.zson.ZSONObject: ohos.utils.zson.ZSONArray toZSONArray(java.lang.String[])>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenComposeAsync(java.util.function.Function,java.util.concurrent.Executor)>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate dateEpochDay(long)>
<ohos.bluetooth.ble.BleScanResult: long getTime()>
<java.util.concurrent.CopyOnWriteArraySet: boolean isEmpty()>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate dateNow(java.time.Clock)>
<ohos.utils.CommonPattern: java.util.regex.Pattern getIpAddress()>
<java.util.Spliterator: boolean hasCharacteristics(int)>
<ohos.global.icu.text.CollationElementIterator: int hashCode()>
<ohos.event.notification.NotificationRequest: ohos.event.intentagent.IntentAgent getIntentAgent()>
<java.lang.Short: boolean equals(java.lang.Object)>
<ohos.hiviewdfx.HiChecker: boolean contains(ohos.hiviewdfx.HiChecker.Rule)>
<java.util.LinkedList: java.lang.Object get(int)>
<ohos.media.common.Format: void putStringValue(java.lang.String,java.lang.String)>
<ohos.location.GeoConvert: java.util.List getAddressFromLocation(double,double,int)>
<ohos.aafwk.ability.IAbilityStartCallback: void onStartResult(int)>
<ohos.data.resultset.SharedBlock: boolean putLong(long,int,int)>
<java.security.spec.X509EncodedKeySpec: byte[] getEncoded()>
<javax.security.auth.PrivateCredentialPermission: java.lang.String getActions()>
<ohos.agp.components.element.ShapeElement: void setOrientation(ohos.agp.components.element.ShapeElement.Orientation)>
<java.lang.TypeNotPresentException: java.lang.String typeName()>
<java.util.Formatter: void <init>()>
<ohos.media.common.Format: java.lang.String toString()>
<ohos.multimodalinput.event.BuiltinKeyEvent: void <init>()>
<ohos.utils.geo.RectFloat: void <init>(ohos.utils.geo.Rect)>
<ohos.agp.components.DependentLayout: int getIgnoreGravity()>
<ohos.agp.components.Button: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.util.zip.Deflater: void reset()>
<java.sql.ResultSet: float getFloat(int)>
<ohos.accessibility.ability.AccessibleAbility: ohos.accessibility.ability.DisplayResizeController getDisplayResizeController(int)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>
<java.security.Security: java.security.Provider[] getProviders(java.util.Map)>
<ohos.agp.components.Text: void setAutoFontSizeRule(int[])>
<ohos.sysappcomponents.contact.entity.Website: void <init>()>
<ohos.wifi.p2p.WifiP2pGroup: boolean marshalling(ohos.utils.Parcel)>
<ohos.aafwk.ability.Lifecycle: void <init>()>
<ohos.media.audio.AudioDeviceDescriptor.DeviceFlag: void <clinit>()>
<ohos.aafwk.ability.AbilityForm: boolean registerViewListener(int,ohos.aafwk.ability.ViewListener)>
<ohos.nfc.NfcController: boolean isNfcAvailable()>
<ohos.sysappcomponents.contact.entity.Organization: void <init>()>
<java.security.AlgorithmParameterGenerator: void init(java.security.spec.AlgorithmParameterSpec)>
<ohos.net.NetSpecifier.Builder: ohos.net.NetSpecifier.Builder addCapability(int)>
<ohos.net.NetSpecifier: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.Year: java.lang.String toString()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThanOrEqualTo(java.lang.String,int)>
<java.nio.charset.UnmappableCharacterException: void <init>(int)>
<java.net.HttpCookie: void setValue(java.lang.String)>
<java.security.cert.CertificateFactory: java.security.cert.CRL generateCRL(java.io.InputStream)>
<java.time.chrono.ThaiBuddhistChronology: void <clinit>()>
<ohos.global.icu.util.IllformedLocaleException: void <init>(java.lang.String,int)>
<ohos.global.icu.text.CaseMap.Title: java.lang.String apply(java.util.Locale,ohos.global.icu.text.BreakIterator,java.lang.CharSequence)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,int)>
<java.security.cert.Certificate: void verify(java.security.PublicKey,java.security.Provider)>
<java.util.Locale.LanguageRange: java.lang.String getRange()>
<java.security.CodeSigner: int hashCode()>
<java.security.cert.CertPathBuilder: void <init>(java.security.cert.CertPathBuilderSpi,java.security.Provider,java.lang.String)>
<ohos.eventhandler.InnerEvent: ohos.utils.PacMap peekPacMap()>
<java.nio.channels.FileLock: void close()>
<java.security.cert.CertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.global.icu.text.StringPrepParseException: java.lang.String toString()>
<ohos.global.icu.util.CopticCalendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate dateNow()>
<ohos.agp.components.element.ShapeElement: int getShaderType()>
<java.lang.CharSequence: java.lang.String toString()>
<ohos.agp.components.webengine.WebView: void setVisibility(int)>
<ohos.agp.render.Vertices: int[] getColors()>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle bind(java.lang.Object,java.lang.String,java.lang.invoke.MethodType)>
<java.security.cert.CertStore: java.security.Provider getProvider()>
<java.sql.Clob: java.io.OutputStream setAsciiStream(long)>
<ohos.global.icu.text.CaseMap.Fold: ohos.global.icu.text.CaseMap omitUnchangedText()>
<javax.crypto.interfaces.DHKey: javax.crypto.spec.DHParameterSpec getParams()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenCombineAsync(java.util.concurrent.CompletionStage,java.util.function.BiFunction,java.util.concurrent.Executor)>
<java.nio.charset.CharsetEncoder: boolean canEncode(char)>
<ohos.agp.components.ComponentContainer: void informConfigurationChanged(ohos.global.configuration.Configuration)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat copy(int)>
<java.nio.channels.DatagramChannel: int send(java.nio.ByteBuffer,java.net.SocketAddress)>
<java.util.concurrent.LinkedBlockingDeque: void clear()>
<ohos.aafwk.ability.DataAbilityResult: void <init>(ohos.utils.net.Uri,java.lang.Integer)>
<ohos.global.icu.util.Calendar: ohos.global.icu.util.Calendar setWeekData(ohos.global.icu.util.Calendar.WeekData)>
<ohos.bundle.BundleInfo: java.util.List getHapModuleNames()>
<ohos.hiviewdfx.FaultLogger: java.util.Optional querySelfFaultLog(int,int)>
<java.util.List: java.util.Iterator iterator()>
<java.util.concurrent.LinkedBlockingQueue: void put(java.lang.Object)>
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>
<java.util.Scanner: java.lang.String findWithinHorizon(java.util.regex.Pattern,int)>
<ohos.utils.zson.ZSONArray: boolean retainAll(java.util.Collection)>
<ohos.agp.components.ProgressBar: void setProgressValue(int)>
<ohos.agp.components.TickTimer: boolean isCountDown()>
<ohos.media.photokit.support.AlbumList: java.lang.String getCoverId()>
<ohos.global.icu.text.DecimalFormat: void setMultiplier(int)>
<ohos.rpc.IRemoteObject: java.lang.String getInterfaceDescriptor()>
<java.net.ProxySelector: java.net.ProxySelector getDefault()>
<java.util.concurrent.ConcurrentMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>
<ohos.global.icu.text.TimeZoneNames: java.lang.String getExemplarLocationName(java.lang.String)>
<ohos.sensor.agent.CategoryOtherAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryOtherDataCallback,ohos.sensor.bean.CategoryOther)>
<java.util.OptionalDouble: java.lang.String toString()>
<java.util.concurrent.atomic.AtomicMarkableReference: java.lang.Object get(boolean[])>
<javax.tools.SimpleJavaFileObject: boolean delete()>
<ohos.aafwk.ability.MemoryInfo: int getOtherSharedDirty()>
<java.net.URL: java.lang.String getUserInfo()>
<java.util.prefs.AbstractPreferences: void removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener)>
<ohos.media.common.sessioncore.AVSessionCallback: void onSetAVPlaybackCustomAction(java.lang.String,ohos.utils.PacMap)>
<ohos.global.icu.text.MessageFormat: java.lang.String autoQuoteApostrophe(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glDepthMask(boolean)>
<java.util.stream.DoubleStream: boolean anyMatch(java.util.function.DoublePredicate)>
<javax.crypto.KeyGeneratorSpi: void <init>()>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class)>
<ohos.agp.utils.Rect: boolean isIntersect(int,int,int,int)>
<java.security.KeyStoreSpi: void engineStore(java.io.OutputStream,char[])>
<ohos.ai.tts.TtsClient: void stopSpeak()>
<java.math.MathContext: void <init>(int,java.math.RoundingMode)>
<ohos.agp.render.opengl.GLES20: boolean glIsTexture(int)>
<ohos.data.orm.OrmConfig: byte[] getEncryptKey()>
<ohos.javax.xml.stream.XMLEventWriter: void close()>
<ohos.data.rdb.Statement: void setString(int,java.lang.String)>
<java.io.SequenceInputStream: int read(byte[],int,int)>
<ohos.data.resultset.SharedBlock: boolean unmarshalling(ohos.utils.Parcel)>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitLong(long,java.lang.Object)>
<ohos.net.NetHandle: javax.net.SocketFactory getSocketFactory()>
<ohos.agp.components.Clock: void <init>(ohos.app.Context)>
<ohos.agp.components.Text: void setText(java.lang.String)>
<java.time.LocalTime: java.time.LocalTime of(int,int)>
<java.util.stream.Stream: boolean noneMatch(java.util.function.Predicate)>
<java.text.DateFormat: void setNumberFormat(java.text.NumberFormat)>
<ohos.bundleactive.BundleActiveInfosMgr: boolean isIdleState(java.lang.String)>
<ohos.agp.components.webengine.ScaleController: void setGestureScalable(boolean)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform4fv(int,int,int,float[])>
<java.sql.Array: java.lang.Object getArray(long,int,java.util.Map)>
<ohos.aafwk.ability.Ability: void postTask(java.lang.Runnable,long)>
<ohos.telephony.TelephoneNumberUtils: java.lang.String convertCalledPartyBCDToStringWithTOA(byte[],int,int,int)>
<java.util.Date: long getTime()>
<ohos.global.resource.Element: int getInteger()>
<ohos.agp.graphics.TextureHolder: void setOnNewFrameCallback(ohos.agp.graphics.TextureHolder.OnNewFrameCallback)>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 getNormalized()>
<ohos.global.resource.ResourceManager: void updateConfiguration(ohos.global.configuration.Configuration,ohos.global.configuration.DeviceCapability)>
<ohos.agp.components.TimePicker: ohos.agp.components.TimePicker.AmPmOrder getAmPmOrder()>
<java.io.ObjectOutputStream: void defaultWriteObject()>
<java.lang.Long: long divideUnsigned(long,long)>
<ohos.global.icu.text.DateFormatSymbols: java.util.Locale[] getAvailableLocales()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)>
<java.util.Collection: boolean remove(java.lang.Object)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setLong(int,java.lang.String,long)>
<ohos.bundleactive.BundleActiveInfos: long queryAbilityPrevAccessMs()>
<ohos.multimodalinput.event.MouseEvent: int getAction()>
<java.nio.file.attribute.PosixFileAttributes: java.nio.file.attribute.GroupPrincipal group()>
<java.security.PKCS12Attribute: java.lang.String getName()>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.resources.GpuResourceHandle getBaseColor()>
<ohos.aafwk.ability.LifecycleObserver: void onStop()>
<ohos.data.DatabaseFileConfig: boolean isEncrypted()>
<ohos.event.notification.NotificationHelper: void publishNotificationAsBundle(java.lang.String,ohos.event.notification.NotificationRequest)>
<ohos.agp.utils.Circle: float getCenterY()>
<ohos.telephony.CdmaSignalInformation: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.TimePicker: void enableMinute(boolean)>
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)>
<ohos.accessibility.ability.GesturePathDefine: int getMaxStrokes()>
<ohos.rpc.RemoteProxy: boolean removeDeathRecipient(ohos.rpc.IRemoteObject.DeathRecipient,int)>
<ohos.javax.xml.stream.XMLEventReader: java.lang.String getElementText()>
<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>
<java.time.LocalDate: java.time.LocalDateTime atTime(int,int)>
<ohos.app.Context: int getColorMode()>
<java.beans.IndexedPropertyChangeEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object,int)>
<ohos.agp.components.PageFlipper: void removeComponent(ohos.agp.components.Component)>
<java.util.jar.JarInputStream: java.util.zip.ZipEntry getNextEntry()>
<ohos.global.icu.text.Bidi: int getVisualIndex(int)>
<java.net.DatagramSocket: int getReceiveBufferSize()>
<java.time.OffsetDateTime: java.time.DayOfWeek getDayOfWeek()>
<ohos.javax.xml.stream.XMLStreamReader: int getAttributeCount()>
<ohos.agp.render.render3d.resources.MeshDesc.PrimitiveDesc: ohos.agp.render.render3d.resources.ResourceHandle getMaterial()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates in(java.lang.String,java.util.Date[])>
<ohos.media.photokit.metadata.AVStorage.Files: ohos.utils.net.Uri fetchResource(java.lang.String)>
<java.net.SocketTimeoutException: void <init>(java.lang.String)>
<javax.tools.ForwardingFileObject: java.io.InputStream openInputStream()>
<ohos.agp.components.DatePicker: int getDayOfMonth()>
<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
<java.security.spec.ECFieldF2m: int getFieldSize()>
<ohos.global.icu.text.DecimalFormat: void setDecimalPatternMatchRequired(boolean)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate dateNow(java.time.Clock)>
<java.util.EnumSet: java.util.EnumSet complementOf(java.util.EnumSet)>
<java.security.KeyStoreSpi: void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate)>
<java.lang.reflect.GenericSignatureFormatError: void <init>()>
<ohos.agp.components.DragEvent: int getAction()>
<ohos.global.i18n.text.MeasureOptions.FormatStyle: void <clinit>()>
<java.lang.Class: java.lang.String getTypeName()>
<java.net.DatagramSocketImpl: void send(java.net.DatagramPacket)>
<ohos.agp.render.Paint: void setFilterBitmap(boolean)>
<ohos.global.icu.util.Calendar.WeekData: void <init>(int,int,int,int,int,int)>
<ohos.agp.utils.Matrix44: boolean invert(ohos.agp.utils.Matrix44)>
<java.security.KeyStoreException: void <init>()>
<java.util.ArrayDeque: java.util.Spliterator spliterator()>
<ohos.data.search.model.IndexForm: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean)>
<ohos.global.icu.util.JapaneseCalendar: void <init>()>
<java.lang.Character: int offsetByCodePoints(java.lang.CharSequence,int,int)>
<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilderResult build(java.security.cert.CertPathParameters)>
<java.util.logging.FileHandler: void <init>(java.lang.String,int,int,boolean)>
<java.util.zip.InflaterInputStream: int read()>
<javax.net.ssl.SSLSocket: boolean getWantClientAuth()>
<ohos.global.icu.util.CopticCalendar: void <init>(ohos.global.icu.util.ULocale)>
<ohos.global.icu.util.Measure: boolean equals(java.lang.Object)>
<java.security.cert.CertificateFactorySpi: java.security.cert.CRL engineGenerateCRL(java.io.InputStream)>
<java.net.ServerSocket: void setReceiveBufferSize(int)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>
<ohos.data.search.schema.DocumentItem: ohos.data.search.schema.DocumentItem setSize(java.lang.Integer)>
<ohos.aafwk.content.Intent.OperationBuilder: ohos.aafwk.content.Intent.OperationBuilder withAbilityName(java.lang.Class)>
<ohos.agp.text.RichTextBuilder: ohos.agp.text.RichText build()>
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>
<java.util.Collection: boolean contains(java.lang.Object)>
<ohos.global.icu.text.CollationElementIterator: void reset()>
<ohos.net.LinkAddress: boolean equals(java.lang.Object)>
<java.util.Calendar: int getMaximum(int)>
<ohos.media.audio.AudioDeviceDescriptor.DeviceType: void <clinit>()>
<java.security.Permissions: java.util.Enumeration elements()>
<ohos.agp.text.Layout: float getLineEnd(int)>
<ohos.media.audio.SoundEffect: ohos.media.audio.SoundEffect.SoundEffectInfo getEffectInfo()>
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object peek()>
<java.time.OffsetDateTime: java.time.OffsetDateTime minusMonths(long)>
<ohos.agp.render.PathEffect.Style: void <clinit>()>
<ohos.sysappcomponents.contact.entity.PostalAddress: java.lang.String getLabelName()>
<java.util.Calendar.Builder: java.util.Calendar.Builder setFields(int[])>
<ohos.ai.cv.docrefine.DocCoordinates: void setBottomRight(ohos.ai.cv.common.CvPoint)>
<ohos.hiviewdfx.xcollie.XCollie: ohos.hiviewdfx.xcollie.XCollie getInstance()>
<ohos.workscheduler.WorkScheduler: boolean stopAndCancelWork(ohos.workscheduler.WorkInfo)>
<ohos.global.icu.text.Bidi: int countParagraphs()>
<java.net.InetSocketAddress: int getPort()>
<ohos.agp.colors.RgbColor: int asArgbInt()>
<javax.sql.RowSet: void setClob(java.lang.String,java.io.Reader)>
<ohos.global.icu.util.IndianCalendar: void <init>(ohos.global.icu.util.ULocale)>
<ohos.nfc.tag.MifareClassicTag: int getBlocksNum()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notIn(java.lang.String,java.util.Date[])>
<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()>
<javax.crypto.Cipher: void <init>(javax.crypto.CipherSpi,java.security.Provider,java.lang.String)>
<javax.lang.model.util.AbstractAnnotationValueVisitor7: void <init>()>
<ohos.agp.render.render3d.resources.MaterialDesc: void setAmbientOcclusionFactor(float)>
<ohos.agp.animation.AnimatorValue.ValueUpdateListener: void onUpdate(ohos.agp.animation.AnimatorValue,float)>
<java.time.Year: boolean isLeap()>
<ohos.javax.xml.stream.XMLStreamReader: int next()>
<java.sql.Statement: boolean execute(java.lang.String,java.lang.String[])>
<ohos.location.Location: double getDirection()>
<ohos.aafwk.ability.MemoryInfo: int getArkSharedDirty()>
<java.lang.invoke.MethodHandleInfo: int getReferenceKind()>
<ohos.agp.components.Component.VoiceEvent: java.util.List getSynonyms()>
<ohos.agp.render.Path: void addPath(ohos.agp.render.Path,float,float,ohos.agp.render.Path.AddPathMode)>
<ohos.bluetooth.ble.GattCharacteristic: java.util.Optional getDescriptor(java.util.UUID)>
<ohos.media.common.sessioncore.AVSubscriptionCallback: void onError(java.lang.String,ohos.utils.PacMap)>
<ohos.agp.components.ListContainer: void setBoundaryThickness(int)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenAcceptBothAsync(java.util.concurrent.CompletionStage,java.util.function.BiConsumer,java.util.concurrent.Executor)>
<ohos.utils.LongPlainArray: boolean isEmpty()>
<ohos.agp.window.dialog.CommonDialog: void siteRemovable(boolean)>
<ohos.agp.components.RadioButton: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.media.camera.device.CameraAbility: java.util.List getSupportedFormats()>
<ohos.agp.components.element.ShapeElement: int getShape()>
<ohos.media.photokit.support.AlbumListInfo: java.lang.String getData()>
<ohos.utils.PacMap: double[] getDoubleValueArray(java.lang.String)>
<java.nio.channels.SocketChannel: java.nio.channels.NetworkChannel setOption(java.net.SocketOption,java.lang.Object)>
<java.nio.channels.AsynchronousChannelGroup: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>
<ohos.data.search.schema.Schema: java.lang.Object setTitle(java.lang.String)>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle findSetter(java.lang.Class,java.lang.String,java.lang.Class)>
<java.util.TreeMap: java.util.Set keySet()>
<ohos.agp.utils.Matrix: void scale(float,float)>
<ohos.aafwk.ability.Ability: ohos.aafwk.ability.continuation.IContinuationRegisterManager getContinuationRegisterManager()>
<java.util.BitSet: void clear(int,int)>
<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>
<java.nio.ShortBuffer: int arrayOffset()>
<ohos.usb.USBConfig: void setInterfaces(ohos.usb.USBInterface[])>
<java.sql.SQLOutput: void writeTime(java.sql.Time)>
<java.util.concurrent.ForkJoinTask: java.lang.Object get()>
<java.io.File: int compareTo(java.io.File)>
<ohos.agp.render.opengl.GLES30: void glBindImageTexture(int,int,int,boolean,int,int,int)>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate dateYearDay(int,int)>
<ohos.agp.render.render3d.util.BoundingBox: void setAabbMinMax(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<ohos.javax.xml.validation.Validator: java.lang.Object getProperty(java.lang.String)>
<ohos.media.camera.device.Camera: void flushCaptures()>
<java.nio.file.Path: java.nio.file.Path toRealPath(java.nio.file.LinkOption[])>
<java.util.Calendar: void roll(int,int)>
<ohos.agp.render.render3d.RenderLoop: void setFrameListener(ohos.agp.render.render3d.RenderLoop.FrameListener)>
<javax.tools.StandardJavaFileManager: boolean isSameFile(javax.tools.FileObject,javax.tools.FileObject)>
<ohos.aafwk.ability.continuation.DeviceConnectState: ohos.aafwk.ability.continuation.DeviceConnectState valueOf(java.lang.String)>
<ohos.agp.components.DatePicker: long getMinDate()>
<ohos.agp.components.Text: void setBubbleHeight(int)>
<java.util.Spliterators.AbstractSpliterator: long estimateSize()>
<java.time.ZonedDateTime: int getMonthValue()>
<ohos.global.icu.util.UniversalTimeScale: long getTimeScaleValue(int,int)>
<java.lang.Class: boolean isEnum()>
<java.util.function.Function: java.lang.Object apply(java.lang.Object)>
<ohos.global.icu.text.Transliterator: void transliterate(ohos.global.icu.text.Replaceable)>
<java.time.LocalDateTime: java.time.LocalDateTime now()>
<ohos.data.search.schema.MessageItem: ohos.data.search.schema.MessageItem setAttachment(java.lang.String)>
<java.util.concurrent.SynchronousQueue: void <init>(boolean)>
<ohos.agp.components.PageFlipper: int getCurrentIndex()>
<ohos.aafwk.ability.fraction.Fraction: void onComponentDetach()>
<ohos.agp.components.TabList: void addTab(ohos.agp.components.TabList.Tab,int)>
<java.time.OffsetDateTime: java.time.OffsetDateTime withNano(int)>
<java.util.concurrent.LinkedTransferQueue: boolean hasWaitingConsumer()>
<java.net.SocketImpl: java.io.OutputStream getOutputStream()>
<ohos.utils.zson.ZSONObject: java.lang.Boolean getBoolean(java.lang.String)>
<ohos.data.search.model.IndexForm: boolean isPrimaryKey()>
<ohos.agp.components.SlideDrawer.SlideListener: void onClose(ohos.agp.components.SlideDrawer,ohos.agp.components.SlideDrawer.SlideDirection)>
<ohos.global.icu.text.Collator: ohos.global.icu.text.Collator getInstance(ohos.global.icu.util.ULocale)>
<ohos.bundle.AbilityInfo.DisplayOrientation: ohos.bundle.AbilityInfo.DisplayOrientation[] values()>
<ohos.data.search.model.IndexData: void put(java.lang.String,java.lang.Integer)>
<ohos.data.search.schema.PhotoItem: java.lang.String getShootingDate()>
<ohos.agp.animation.AnimatorValue: void setLoopedCount(int)>
<ohos.aafwk.ability.Ability: void startAbility(ohos.aafwk.content.Intent)>
<java.time.LocalTime: java.time.LocalTime plus(java.time.temporal.TemporalAmount)>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer)>
<ohos.utils.net.Uri: void <clinit>()>
<java.security.cert.CertPathBuilderException: void <init>(java.lang.Throwable)>
<ohos.sysappcomponents.contact.ContactAttributes.Attribute: void <clinit>()>
<ohos.agp.components.ComponentContainer.LayoutConfig: int getHorizontalStartMargin()>
<ohos.data.orm.Blob: void truncate(long)>
<java.io.ByteArrayInputStream: void reset()>
<java.lang.StrictMath: long multiplyExact(long,long)>
<ohos.agp.components.ProgressBar: void setDividerLinesNumber(int)>
<ohos.global.icu.text.Transliterator.Position: int hashCode()>
<java.util.AbstractQueue: void <init>()>
<java.util.jar.Manifest: void <init>(java.util.jar.Manifest)>
<java.nio.file.Path: java.nio.file.Path resolveSibling(java.lang.String)>
<ohos.data.distributed.common.Schema: void setSchemaMode(ohos.data.distributed.common.SchemaMode)>
<ohos.agp.components.DependentLayout.LayoutConfig: void <init>(int,int)>
<ohos.sensor.bean.CategoryOther: void <init>(int,java.lang.String,java.lang.String,int,float,float,int,int,long,long)>
<java.util.concurrent.locks.StampedLock: long writeLock()>
<ohos.agp.components.Component.MeasureSpec: int getMode(int)>
<java.sql.SQLNonTransientException: void <init>(java.lang.String,java.lang.String)>
<java.sql.ParameterMetaData: int isNullable(int)>
<ohos.media.photokit.metadata.AVMetadataHelper: boolean setSource(java.io.FileDescriptor)>
<ohos.agp.components.TableLayout: ohos.agp.components.ComponentContainer.LayoutConfig verifyLayoutConfig(ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.lang.InheritableThreadLocal: void <init>()>
<java.security.cert.X509Certificate: byte[] getSignature()>
<java.sql.SQLWarning: java.sql.SQLWarning getNextWarning()>
<ohos.bundle.ShortcutInfo: java.lang.String getDisableMessage()>
<ohos.agp.components.CornerMark.CornerMarkCleaner: void run()>
<ohos.agp.render.render3d.RenderLoop: void setRenderNodeGraph(ohos.agp.render.render3d.Engine.RenderNodeGraphType)>
<java.time.DayOfWeek: int getValue()>
<javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.PSource getPSource()>
<ohos.aafwk.ability.continuation.ContinuationDeviceInfo: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDate dateYearDay(int,int)>
<ohos.app.AbilityContext: boolean canRequestPermission(java.lang.String)>
<java.time.LocalDate: java.time.LocalDate plusMonths(long)>
<ohos.hiviewdfx.Debug: int getProcessPrivateCleanSum()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates in(java.lang.String,java.sql.Time[])>
<java.lang.reflect.Parameter: int getModifiers()>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate dateYearDay(int,int)>
<ohos.data.orm.OrmContext: java.lang.Double avg(ohos.data.orm.OrmPredicates,java.lang.String)>
<ohos.net.NetCapabilities: int getLinkDownstreamBandwidthKbps()>
<ohos.nfc.cardemulation.CardEmulation: java.lang.String getNfcInfo(java.lang.String)>
<java.time.OffsetDateTime: java.lang.String toString()>
<java.io.RandomAccessFile: void readFully(byte[],int,int)>
<ohos.global.icu.text.RuleBasedCollator: boolean isFrenchCollation()>
<java.net.DatagramSocket: int getTrafficClass()>
<ohos.location.LocatorCallback: void onStatusChanged(int)>
<java.sql.Time: void <init>(long)>
<java.util.Optional: java.util.Optional map(java.util.function.Function)>
<ohos.agp.components.ComponentTransition: void addTransitionType(int)>
<ohos.utils.zson.ZSONObject: boolean containsValue(java.lang.Object)>
<java.io.LineNumberReader: void reset()>
<java.net.Inet4Address: boolean isMulticastAddress()>
<java.lang.Character: boolean isJavaLetter(char)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,boolean)>
<ohos.agp.utils.Matrix44: void preConcat(ohos.agp.utils.Matrix44)>
<java.time.temporal.ChronoField: boolean isSupportedBy(java.time.temporal.TemporalAccessor)>
<ohos.agp.components.Component: float getScaleY()>
<ohos.global.icu.text.UnicodeSet: boolean containsAll(ohos.global.icu.text.UnicodeSet)>
<java.nio.FloatBuffer: int compareTo(java.nio.FloatBuffer)>
<ohos.global.icu.text.DecimalFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<java.io.PrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object[])>
<java.lang.invoke.MethodType: java.util.List parameterList()>
<java.time.OffsetDateTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat divisionAll(int)>
<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getModulus()>
<java.sql.Blob: int setBytes(long,byte[],int,int)>
<java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock: java.lang.String toString()>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.resources.GpuResourceHandle getMaterial()>
<ohos.account.app.AppAccountAbility: boolean disableAppAccess(java.lang.String,java.lang.String)>
<ohos.data.rdb.ValuesBucket: java.util.Set getColumnSet()>
<java.util.concurrent.ThreadPoolExecutor: void setMaximumPoolSize(int)>
<ohos.utils.CommonPattern: java.util.regex.Pattern getWebUrl()>
<ohos.utils.Parcel: long[] readLongArray()>
<java.nio.channels.NetworkChannel: java.nio.channels.NetworkChannel setOption(java.net.SocketOption,java.lang.Object)>
<java.sql.Clob: java.io.InputStream getAsciiStream()>
<ohos.event.notification.NotificationSlot: void <clinit>()>
<java.util.Collections: void shuffle(java.util.List,java.util.Random)>
<ohos.utils.IntArray: boolean equals(java.lang.Object)>
<ohos.global.icu.text.Bidi: boolean isRightToLeft()>
<ohos.data.usage.DataUsage: boolean isDiskEmulated()>
<ohos.accessibility.AccessibilityEventInfo: void <init>(int)>
<java.lang.String: int lastIndexOf(java.lang.String,int)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream limit(long)>
<ohos.nfc.tag.MessageRecord: ohos.nfc.tag.MessageRecord buildExternal(java.lang.String,java.lang.String,byte[])>
<java.util.SimpleTimeZone: int getOffset(long)>
<java.sql.Connection: void releaseSavepoint(java.sql.Savepoint)>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource create(byte[],int,int,ohos.media.image.ImageSource.SourceOptions)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getGroupingSeparatorString()>
<java.sql.DatabaseMetaData: boolean supportsAlterTableWithAddColumn()>
<ohos.app.AbilityContext: void compelVerifyUriPermission(ohos.utils.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<ohos.usb.USBInterface: int getAlternateSetting()>
<ohos.agp.components.MagicLayout: void setAlignment(int)>
<ohos.agp.render.render3d.components.LightComponent: float getRange()>
<java.security.cert.CertPath: java.lang.String getType()>
<ohos.aafwk.ability.Ability.LayoutParamsHelper: ohos.aafwk.ability.Ability.LayoutParamsHelper setAlpha(float)>
<ohos.global.icu.text.IDNA.Info: boolean isTransitionalDifferent()>
<ohos.agp.components.Component.VoiceEvent: void sendDataToComponent(ohos.agp.components.Component)>
<java.nio.channels.spi.AbstractSelector: boolean isOpen()>
<javax.crypto.ExemptionMechanism: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<java.net.Socket: boolean getOOBInline()>
<ohos.miscservices.inputmethodability.TextInputClient: int getAutoCapitalizeMode(int)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object lastKey()>
<java.net.Inet4Address: boolean isSiteLocalAddress()>
<java.net.DatagramSocket: void <init>(int,java.net.InetAddress)>
<ohos.bluetooth.ble.BlePeripheralManagerCallback: void receiveDescriptorWriteRequestEvent(ohos.bluetooth.ble.BlePeripheralDevice,int,ohos.bluetooth.ble.GattDescriptor,boolean,boolean,int,byte[])>
<java.net.InetAddress: boolean isMCOrgLocal()>
<ohos.telephony.SignalInformation: boolean marshalling(ohos.utils.Parcel)>
<ohos.media.common.AVDescription.Builder: ohos.media.common.AVDescription.Builder setIMediaUri(ohos.utils.net.Uri)>
<java.util.concurrent.ForkJoinTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setNotificationUserInputHistory(java.util.List)>
<ohos.miscservices.inputmethod.EditingCapability: boolean unmarshalling(ohos.utils.Parcel)>
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.lang.String)>
<java.util.zip.CRC32: void update(int)>
<java.lang.Math: long decrementExact(long)>
<ohos.agp.components.Text: java.lang.String getHint()>
<ohos.data.search.schema.MusicItem: ohos.data.search.schema.MusicItem setGenre(java.lang.String)>
<java.time.Duration: boolean equals(java.lang.Object)>
<ohos.media.extractor.Extractor: boolean next()>
<ohos.global.icu.number.LocalizedNumberFormatter: ohos.global.icu.number.FormattedNumber format(java.lang.Number)>
<java.util.jar.JarFile: void <init>(java.io.File,boolean)>
<java.util.LinkedList: java.util.ListIterator listIterator(int)>
<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)>
<ohos.org.xml.sax.helpers.DefaultHandler: void endPrefixMapping(java.lang.String)>
<java.util.Date: void setTime(long)>
<java.util.stream.DoubleStream: java.util.stream.LongStream mapToLong(java.util.function.DoubleToLongFunction)>
<java.security.cert.Certificate: byte[] getEncoded()>
<java.io.InputStream: void reset()>
<java.sql.SQLTimeoutException: void <init>(java.lang.String,java.lang.String)>
<ohos.sysappcomponents.calendar.entity.Instances: long getInstanceStartDay()>
<ohos.eventhandler.EventHandler: void sendEvent(int,ohos.eventhandler.EventHandler.Priority)>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult.HandshakeStatus getHandshakeStatus()>
<ohos.global.icu.text.CurrencyPluralInfo: void setCurrencyPluralPattern(java.lang.String,java.lang.String)>
<java.lang.InstantiationException: void <init>()>
<java.util.concurrent.CountedCompleter: java.util.concurrent.CountedCompleter firstComplete()>
<ohos.security.asset.AssetOperatorAbs: ohos.security.asset.AssetResult assetUpdate(ohos.aafwk.content.IntentParams)>
<ohos.multimodalinput.event.ManipulationEvent: void setScreenOffset(float,float)>
<ohos.global.icu.text.CaseMap.Title: ohos.global.icu.text.CaseMap.Title sentences()>
<ohos.hiviewdfx.HiTraceId: long getParentSpanId()>
<java.util.Scanner: byte nextByte(int)>
<java.util.AbstractMap.SimpleImmutableEntry: boolean equals(java.lang.Object)>
<java.util.function.DoubleFunction: java.lang.Object apply(double)>
<ohos.aafwk.ability.DataAbilityHelper: java.io.FileDescriptor openFile(ohos.utils.net.Uri,java.lang.String)>
<ohos.data.resultset.AbsResultSet: int getInt(int)>
<ohos.data.resultset.ResultSet: void close()>
<ohos.media.photokit.support.AlbumList: java.lang.String getAlbumTag()>
<ohos.media.image.common.Position: int hashCode()>
<java.util.Map.Entry: java.util.Comparator comparingByKey(java.util.Comparator)>
<ohos.javax.xml.stream.FactoryConfigurationError: java.lang.Exception getException()>
<java.lang.reflect.Array: void setDouble(java.lang.Object,int,double)>
<java.lang.Double: double doubleValue()>
<ohos.agp.window.service.Window: void setLayoutInDisplaySideMode(int)>
<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>
<java.lang.Character: byte getDirectionality(int)>
<ohos.ai.asr.AsrClient: void destroy()>
<ohos.agp.components.element.ShapeElement: int getStrokeWidth()>
<ohos.media.codec.CodecDescription: java.lang.String getName()>
<java.time.LocalTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<ohos.data.rdb.DataObservable: void add(ohos.data.rdb.DataObserver)>
<java.util.Base64.Encoder: byte[] encode(byte[])>
<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>
<java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])>
<java.security.cert.X509CertSelector: void setExtendedKeyUsage(java.util.Set)>
<ohos.location.RequestParam: int getDistanceInterval()>
<java.io.Writer: void write(java.lang.String)>
<ohos.bluetooth.ble.BleScanFilter: byte[] getPeripheralServiceData()>
<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>
<java.util.Base64.Decoder: java.io.InputStream wrap(java.io.InputStream)>
<javax.crypto.CipherSpi: void engineSetMode(java.lang.String)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet freeze()>
<ohos.javax.xml.stream.events.XMLEvent: ohos.javax.xml.stream.events.EndElement asEndElement()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenApply(java.util.function.Function)>
<ohos.agp.components.Switch: void setThumbHeight(int)>
<java.time.ZonedDateTime: java.time.ZonedDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
<javax.security.auth.Subject: void <init>()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: java.util.Optional startAbilitySync(ohos.aafwk.content.Intent)>
<ohos.agp.render.render3d.math.Vector4: float getX()>
<ohos.global.icu.util.Calendar: ohos.global.icu.util.Calendar getInstance(java.util.Locale)>
<java.nio.channels.AsynchronousChannelGroup: java.nio.channels.AsynchronousChannelGroup withCachedThreadPool(java.util.concurrent.ExecutorService,int)>
<ohos.agp.components.ProgressBar: void removeBarObserver(ohos.agp.components.ProgressBar.BarObserver)>
<java.security.spec.InvalidKeySpecException: void <init>(java.lang.Throwable)>
<ohos.agp.utils.Line: float getStartPointY()>
<java.nio.file.attribute.PosixFileAttributeView: java.nio.file.attribute.BasicFileAttributes readAttributes()>
<java.nio.LongBuffer: java.nio.LongBuffer duplicate()>
<ohos.data.dataability.DataAbilityUtils: ohos.data.rdb.RdbPredicates createRdbPredicates(ohos.data.dataability.DataAbilityPredicates,java.lang.String)>
<java.sql.CallableStatement: void setBlob(java.lang.String,java.io.InputStream)>
<ohos.ai.tts.TtsParams: int getVolume()>
<ohos.agp.render.render3d.components.CameraComponent: float getZnear()>
<java.security.KeyStore.SecretKeyEntry: void <init>(javax.crypto.SecretKey)>
<javax.net.ssl.SSLServerSocket: java.lang.String[] getEnabledCipherSuites()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: ohos.app.Context getAppContext()>
<java.text.DateFormatSymbols: java.lang.String[] getEras()>
<java.io.Reader: void <init>()>
<java.time.format.DecimalStyle: java.time.format.DecimalStyle withDecimalSeparator(char)>
<java.util.Random: void setSeed(long)>
<java.util.concurrent.ForkJoinPool: int getCommonPoolParallelism()>
<ohos.utils.Dimension: ohos.utils.Dimension parseDimension(java.lang.String)>
<ohos.agp.render.render3d.resources.ImageFormat: void <clinit>()>
<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>
<java.util.Locale: java.lang.String getDisplayScript()>
<java.time.LocalDate: java.time.LocalDate minus(java.time.temporal.TemporalAmount)>
<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>
<ohos.bundle.IBundleManager: java.util.List getBundlesForUid(int)>
<ohos.utils.geo.DimensFloat: float getProduct()>
<ohos.utils.net.Uri: boolean getBooleanQueryParam(java.lang.String,boolean)>
<java.util.concurrent.RejectedExecutionException: void <init>(java.lang.String)>
<ohos.bundle.IBundleManager: java.util.List getApplicationInfos(int,int)>
<java.nio.ByteBuffer: java.nio.DoubleBuffer asDoubleBuffer()>
<ohos.rpc.MessageOption: void setFlags(int)>
<java.time.chrono.JapaneseDate: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<ohos.telephony.RadioInfoManager: java.lang.String getRadioTechName(int)>
<ohos.javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()>
<ohos.global.icu.util.BuddhistCalendar: int handleGetExtendedYear()>
<ohos.data.rdb.RdbPredicates: void clear()>
<ohos.utils.Parcel: void writeMap(java.util.Map,boolean)>
<ohos.data.search.model.IndexData: void <init>()>
<ohos.media.image.PixelMap: ohos.media.image.PixelMap createFromAlpha()>
<ohos.rpc.RemoteObjectCallbackList: boolean register(ohos.rpc.IRemoteBroker,java.lang.Object)>
<ohos.utils.BasePacMap: byte getByteValue(java.lang.String,byte)>
<ohos.agp.graphics.Surface.PixelFormat: void <clinit>()>
<javax.crypto.Cipher: void updateAAD(byte[])>
<ohos.aafwk.ability.Ability: void onRequestPermissionsFromUserResult(int,java.lang.String[],int[])>
<java.util.Arrays: void parallelSort(float[],int,int)>
<ohos.global.icu.lang.UCharacter: int codePointBefore(java.lang.CharSequence,int)>
<java.util.GregorianCalendar: int hashCode()>
<javax.crypto.CipherInputStream: int read(byte[],int,int)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setCountdownTimer(boolean)>
<ohos.org.xml.sax.XMLReader: void setDTDHandler(ohos.org.xml.sax.DTDHandler)>
<ohos.agp.components.RoundProgressBar: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.utils.Line: void set(ohos.agp.utils.Line)>
<ohos.data.distributed.common.Entry: boolean equals(java.lang.Object)>
<java.time.temporal.TemporalUnit: boolean isDurationEstimated()>
<ohos.javax.xml.stream.XMLStreamWriter: void writeComment(java.lang.String)>
<ohos.telephony.ShortMessage.ShortMessageClass: ohos.telephony.ShortMessage.ShortMessageClass[] values()>
<java.util.concurrent.DelayQueue: boolean add(java.lang.Object)>
<ohos.media.camera.device.CameraAbility: int[] getSupportedRunningModes()>
<ohos.global.icu.text.DecimalFormat: void setMinimumFractionDigits(int)>
<ohos.bundle.ShortcutIntent: java.lang.String getTargetClass()>
<ohos.media.photokit.support.FetchResult: boolean isContain()>
<java.time.zone.ZoneOffsetTransition: java.time.Instant getInstant()>
<javax.sql.RowSet: void removeRowSetListener(javax.sql.RowSetListener)>
<java.lang.String: int codePointBefore(int)>
<ohos.aafwk.ability.Ability: void setUIContent(ohos.agp.components.ComponentContainer)>
<java.time.YearMonth: boolean isAfter(java.time.YearMonth)>
<java.util.Base64: java.util.Base64.Encoder getUrlEncoder()>
<ohos.agp.render.render3d.resources.MeshDesc.PrimitiveDesc: void <init>()>
<java.util.SplittableRandom: long nextLong(long,long)>
<java.io.ObjectOutputStream: void writeFields()>
<java.lang.Class: java.lang.Class getDeclaringClass()>
<ohos.utils.geo.Rect.RotationEnum: ohos.utils.geo.Rect.RotationEnum getByInt(int)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenCombineAsync(java.util.concurrent.CompletionStage,java.util.function.BiFunction)>
<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>
<java.util.jar.JarFile: void <init>(java.lang.String,boolean)>
<ohos.agp.render.opengl.GLES30: void glBindFramebuffer(int,int)>
<java.io.StringReader: void reset()>
<ohos.agp.components.MagicLayout: int getAlignment()>
<java.io.DataOutputStream: void writeBoolean(boolean)>
<ohos.global.icu.text.DecimalFormat: int hashCode()>
<java.util.concurrent.SynchronousQueue: void put(java.lang.Object)>
<ohos.agp.components.Component: void setScrollbarFadingDelay(int)>
<ohos.agp.render.opengl.GLES20: void glGenFramebuffers(int,java.nio.IntBuffer)>
<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>
<java.util.concurrent.RecursiveAction: void compute()>
<java.sql.SQLInput: java.sql.SQLXML readSQLXML()>
<ohos.agp.colors.HslColor: void <init>(ohos.agp.colors.HslColor)>
<java.time.chrono.ChronoLocalDate: boolean equals(java.lang.Object)>
<ohos.data.search.schema.MusicItem: java.lang.String getAlbum()>
<java.net.URLConnection: void setFileNameMap(java.net.FileNameMap)>
<java.nio.channels.spi.AsynchronousChannelProvider: java.nio.channels.spi.AsynchronousChannelProvider provider()>
<java.net.BindException: void <init>()>
<ohos.agp.components.StackLayout: ohos.agp.components.ComponentContainer.LayoutConfig createLayoutConfig(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.lang.Byte: int compare(byte,byte)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: boolean removeAll(java.util.Collection)>
<ohos.telephony.SignalInformation: int getNetworkType()>
<ohos.utils.net.UrlQueryFilter: void setFirstPriority(boolean)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate now()>
<ohos.eventhandler.EventHandler: boolean hasInnerEvent(java.lang.Object)>
<ohos.eventhandler.InnerEvent: ohos.eventhandler.InnerEvent get(int,java.lang.Object)>
<java.security.AuthProvider: void setCallbackHandler(javax.security.auth.callback.CallbackHandler)>
<ohos.sensor.bean.SensorBase: float getResolution()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates between(java.lang.String,java.sql.Timestamp,java.sql.Timestamp)>
<ohos.nfc.cardemulation.CardEmulation: boolean isDefaultForAid(ohos.bundle.ElementName,java.lang.String)>
<java.util.stream.DoubleStream.Builder: java.util.stream.DoubleStream.Builder add(double)>
<java.sql.Driver: boolean jdbcCompliant()>
<ohos.data.search.model.IndexForm: boolean isSearch()>
<ohos.batterymanager.BatteryInfo.BatteryHealthState: ohos.batterymanager.BatteryInfo.BatteryHealthState valueOf(java.lang.String)>
<ohos.bundle.BackupBundleInfo: boolean marshalling(ohos.utils.Parcel)>
<java.io.LineNumberReader: void setLineNumber(int)>
<java.util.Arrays: void sort(long[])>
<java.lang.StringBuffer: java.lang.StringBuffer append(long)>
<java.security.KeyStore.TrustedCertificateEntry: void <init>(java.security.cert.Certificate,java.util.Set)>
<ohos.accessibility.ability.DisplayResizeController: boolean reset(boolean)>
<ohos.media.photokit.metadata.AVMetadataHelper: ohos.media.image.PixelMap fetchImagePixelMapByIndex(int,ohos.media.photokit.common.PixelMapConfigs)>
<java.time.zone.ZoneOffsetTransitionRule: java.time.ZoneOffset getOffsetAfter()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notIn(java.lang.String,java.util.Calendar[])>
<ohos.agp.render.Picture: void endRecording()>
<ohos.agp.render.render3d.components.LightComponent: void setShadowEnabled(boolean)>
<ohos.app.GeneralReceiver: void <init>()>
<java.nio.channels.ClosedSelectorException: void <init>()>
<ohos.utils.CommonPattern: java.util.regex.Pattern getDomainName()>
<java.nio.file.attribute.AclEntry: java.nio.file.attribute.UserPrincipal principal()>
<java.util.Arrays: java.util.stream.LongStream stream(long[],int,int)>
<ohos.nfc.tag.MifareClassicTag: int getBlocksNumForSector(int)>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onPrevious(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThan(java.lang.String,java.sql.Timestamp)>
<ohos.sensor.agent.CategoryOrientationAgent: void <init>()>
<ohos.global.icu.text.ConstrainedFieldPosition: long getInt64IterationContext()>
<java.util.concurrent.atomic.AtomicBoolean: boolean get()>
<ohos.agp.components.Text: ohos.agp.components.element.Element getLeftElement()>
<java.util.TreeMap: void <init>()>
<javax.crypto.spec.RC5ParameterSpec: boolean equals(java.lang.Object)>
<ohos.global.icu.util.Currency: java.lang.String[] getAvailableCurrencyCodes(java.util.Locale,java.util.Date)>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter getInstance(ohos.global.icu.util.ULocale)>
<java.time.LocalDateTime: java.time.LocalDateTime plusSeconds(long)>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>
<java.nio.file.LinkPermission: void <init>(java.lang.String)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLServerSocketFactory getServerSocketFactory()>
<java.lang.String: void <init>()>
<ohos.wifi.WifiScanInfo: java.util.Map getInformationElements()>
<ohos.global.icu.util.Currency: java.lang.String getDisplayName(java.util.Locale)>
<java.time.chrono.JapaneseDate: java.lang.String toString()>
<ohos.agp.render.opengl.GLES1X: void glOrthox(int,int,int,int,int,int)>
<javax.sql.RowSet: void setDate(java.lang.String,java.sql.Date)>
<java.time.OffsetDateTime: java.time.OffsetDateTime minusHours(long)>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.temporal.TemporalAccessor)>
<ohos.agp.render.opengl.Utils: boolean nearZero(float)>
<ohos.aafwk.ability.continuation.ExtraParams: void setTargetBundleName(java.lang.String)>
<ohos.agp.utils.MimeData: boolean unmarshalling(ohos.utils.Parcel)>
<java.io.CharArrayReader: void close()>
<ohos.global.icu.text.StringSearch: int handlePrevious(int)>
<ohos.global.icu.util.EthiopicCalendar: void <init>(java.util.Locale)>
<ohos.ai.cv.common.BoundingBox: void <init>()>
<java.util.Random: float nextFloat()>
<ohos.agp.render.render3d.components.LightComponent.LightType: void <clinit>()>
<ohos.net.DataFlowStatistics: void setDatagramSocketTag(java.net.DatagramSocket)>
<java.lang.Double: long longValue()>
<ohos.global.icu.util.JapaneseCalendar: void <init>(int,int,int)>
<ohos.bluetooth.ble.GattService: java.util.List getCharacteristics()>
<ohos.rpc.RemoteObject: boolean sendRequest(int,ohos.rpc.MessageParcel,ohos.rpc.MessageParcel,ohos.rpc.MessageOption)>
<ohos.global.icu.util.JapaneseCalendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<java.util.concurrent.ForkJoinTask: java.lang.Throwable getException()>
<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>
<java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: void <init>(java.util.concurrent.locks.AbstractQueuedLongSynchronizer)>
<java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[],java.lang.ClassLoader)>
<ohos.global.icu.text.BidiClassifier: java.lang.Object getContext()>
<ohos.agp.components.PageSliderIndicator: void setPadding(int,int,int,int)>
<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>
<ohos.global.resource.Resource: void close()>
<ohos.utils.LightweightSet: void <init>()>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String getFieldDisplayName(int,ohos.global.icu.text.DateTimePatternGenerator.DisplayWidth)>
<ohos.media.image.common.PropertyKey.Exif: void <init>()>
<java.security.AlgorithmParameterGeneratorSpi: void engineInit(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<ohos.bundle.ShortcutIntent: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.utils.PersistablePacMap: float[] getFloatValueArray(java.lang.String)>
<javax.crypto.Cipher: int getOutputSize(int)>
<java.io.ObjectOutput: void write(int)>
<ohos.aafwk.ability.Ability: void executeOperation(ohos.aafwk.ability.DataAbilityOperation,ohos.aafwk.ability.DataAbilityResult[],int)>
<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates distinct()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseDefaulting(java.time.temporal.TemporalField,long)>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 lerp(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3,float)>
<java.security.KeyStore.PrivateKeyEntry: java.util.Set getAttributes()>
<java.time.temporal.TemporalField: java.time.temporal.TemporalUnit getRangeUnit()>
<javax.net.ssl.SNIServerName: int hashCode()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayKeyword(java.lang.String)>
<java.util.Random: int nextInt()>
<javax.crypto.spec.RC5ParameterSpec: int getVersion()>
<ohos.media.audio.AudioRendererInfo: ohos.media.audio.AudioStreamInfo getAudioStreamInfo()>
<java.io.ObjectOutputStream.PutField: void put(java.lang.String,int)>
<ohos.agp.components.webengine.ResourceRequest: java.util.Map getHeaders()>
<java.text.DecimalFormatSymbols: void setGroupingSeparator(char)>
<ohos.global.icu.text.StringSearch: void setTarget(java.text.CharacterIterator)>
<ohos.utils.geo.RectFloat: void translate(float,float)>
<java.util.PrimitiveIterator.OfLong: long nextLong()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates distinct()>
<ohos.data.distributed.file.DistFiles: ohos.data.distributed.file.DistAgentFile createAgentFile(java.lang.String,java.lang.String,java.lang.String)>
<java.util.concurrent.LinkedBlockingDeque: void addFirst(java.lang.Object)>
<ohos.global.icu.util.BuddhistCalendar: void <init>(int,int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<ohos.miscservices.pasteboard.PasteData.Record: ohos.aafwk.content.Intent getIntent()>
<ohos.media.extractor.Extractor: long getFrameSize()>
<ohos.global.icu.text.Collator: int[] getEquivalentReorderCodes(int)>
<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>
<ohos.ai.cv.common.CvPoint: java.lang.String toString()>
<java.lang.reflect.Parameter: java.lang.Class getType()>
<ohos.global.icu.text.MessagePattern: ohos.global.icu.text.MessagePattern.Part.Type getPartType(int)>
<java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>
<java.util.concurrent.atomic.AtomicLongArray: int length()>
<java.nio.file.AccessDeniedException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.EGLContext: boolean equals(java.lang.Object)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThanOrEqualTo(java.lang.String,long)>
<ohos.global.icu.util.Calendar: void setTimeZone(ohos.global.icu.util.TimeZone)>
<ohos.agp.components.Component.GestureType: void <clinit>()>
<ohos.utils.BasePacMap: float[] getFloatValueArray(java.lang.String)>
<ohos.ai.cv.text.TextConfiguration: ohos.ai.cv.text.TextConfiguration fromPacMap(ohos.utils.PacMap)>
<ohos.media.image.common.DecodeEvent: ohos.media.image.common.DecodeEvent getDecodeEvent(int)>
<java.security.cert.CertificateFactorySpi: java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream,java.lang.String)>
<java.lang.Runnable: void run()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query reset()>
<java.sql.PreparedStatement: void clearParameters()>
<ohos.agp.components.Text: void setLayoutRefreshedListener(ohos.agp.components.Component.LayoutRefreshedListener)>
<ohos.rpc.ReliableFileDescriptor.AutoCloseFileInputStream: int read()>
<java.lang.Number: void <init>()>
<javax.lang.model.util.Types: java.util.List directSupertypes(javax.lang.model.type.TypeMirror)>
<ohos.agp.components.DatePicker: ohos.agp.text.Font getSelectedTextFont()>
<ohos.bundle.BundleInfo: boolean isDifferentName()>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object)>
<java.util.stream.DoubleStream: double sum()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage handle(java.util.function.BiFunction)>
<ohos.javax.xml.stream.XMLStreamReader: char[] getTextCharacters()>
<java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getPercentString()>
<ohos.aafwk.ability.Ability: ohos.agp.window.service.WindowManager.LayoutConfig getLayoutParams()>
<java.util.stream.Collectors: java.util.stream.Collector toSet()>
<ohos.agp.colors.CmykColor: void <init>()>
<ohos.global.icu.text.DecimalFormat: void setParseCaseSensitive(boolean)>
<java.util.concurrent.LinkedTransferQueue: java.lang.Object poll()>
<ohos.aafwk.ability.Ability: boolean onKeyDown(int,ohos.multimodalinput.event.KeyEvent)>
<ohos.agp.text.TextForm: float getScaleX()>
<ohos.data.search.model.SearchableEntity: java.lang.String getIntentAction()>
<javax.lang.model.element.ElementKind: boolean isInterface()>
<ohos.bluetooth.A2dpSource: java.util.List getDevicesByStates(int[])>
<java.util.TreeMap: void replaceAll(java.util.function.BiFunction)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getInternationalCurrencySymbol()>
<java.io.StreamTokenizer: void eolIsSignificant(boolean)>
<java.lang.ReflectiveOperationException: void <init>(java.lang.String)>
<ohos.media.sessioncore.AVBrowser: boolean isConnected()>
<ohos.utils.Parcel: boolean writeDoubleArray(double[])>
<java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>
<java.sql.SQLNonTransientConnectionException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<java.sql.ResultSet: boolean getBoolean(int)>
<java.util.concurrent.DelayQueue: boolean offer(java.util.concurrent.Delayed)>
<ohos.data.search.schema.NoticeItem: ohos.data.search.schema.NoticeItem setLongitude(java.lang.Double)>
<ohos.data.resultset.ResultSet: boolean isAtFirstRow()>
<java.time.YearMonth: boolean isSupported(java.time.temporal.TemporalUnit)>
<java.util.zip.ZipEntry: long getSize()>
<ohos.sysappcomponents.contact.entity.Holder: long getHolderId()>
<java.sql.SQLOutput: void writeDouble(double)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitChar(char,java.lang.Object)>
<ohos.location.GeoAddress: java.lang.String getLocality()>
<ohos.aafwk.ability.DataAbilityOperation: ohos.aafwk.ability.DataAbilityOperation createFromParcel(ohos.utils.Parcel)>
<ohos.aafwk.content.Intent: void setOperation(ohos.aafwk.content.Operation)>
<java.math.BigDecimal: int precision()>
<ohos.nfc.cardemulation.CardEmulation: boolean isSupported(int)>
<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.spi.AsynchronousChannelProvider provider()>
<java.security.cert.CertificateException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.utils.Matrix: float getPerspY()>
<java.util.concurrent.atomic.LongAdder: float floatValue()>
<ohos.global.icu.text.PluralFormat: java.lang.String toString()>
<ohos.global.i18n.phonenumbers.InputFormatter: java.lang.String inputNumberAndRememberPosition(char)>
<ohos.media.codec.CodecDescription: boolean isFormatSupported(ohos.media.common.Format)>
<ohos.agp.utils.Rect: void fuse(int,int,int,int)>
<ohos.data.search.schema.EventItem: java.lang.Double getLatitude()>
<javax.crypto.spec.DESedeKeySpec: void <init>(byte[])>
<java.util.concurrent.ConcurrentSkipListSet: java.lang.Object pollLast()>
<ohos.miscservices.inputmethodability.KeyboardController: int getDisplayMode()>
<ohos.javax.xml.parsers.SAXParserFactory: boolean getFeature(java.lang.String)>
<javax.net.ssl.SSLParameters: java.lang.String getEndpointIdentificationAlgorithm()>
<ohos.media.photokit.metadata.AVStorage.Downloads: ohos.utils.net.Uri fetchResource(java.lang.String)>
<java.util.concurrent.LinkedTransferQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<ohos.agp.render.opengl.GLES20: void glDetachShader(int,int)>
<ohos.media.audio.AudioCapturer: void setFramePositionObserver(ohos.media.audio.FramePositionObserver,int,ohos.eventhandler.EventHandler)>
<java.net.ProxySelector: java.util.List select(java.net.URI)>
<java.security.cert.X509CertSelector: java.lang.String getIssuerAsString()>
<java.util.zip.DeflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Deflater,int)>
<ohos.agp.components.Component: float getScrollbarStartAngle()>
<ohos.agp.render.opengl.EGL: boolean eglGetConfigs(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLConfig[],int,int[])>
<ohos.data.distributed.common.KvStore: void deleteBatch(java.util.List)>
<java.io.PipedWriter: void <init>(java.io.PipedReader)>
<java.util.ResourceBundle: java.util.Enumeration getKeys()>
<java.security.Signature: boolean verify(byte[],int,int)>
<java.sql.PreparedStatement: void setNull(int,int)>
<ohos.media.audio.AudioStreamInfo: ohos.media.audio.AudioStreamInfo.AudioStreamFlag getAudioStreamFlag()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates in(java.lang.String,java.sql.Time[])>
<java.lang.String: java.lang.String[] split(java.lang.String,int)>
<java.io.ObjectStreamClass: void <clinit>()>
<ohos.aafwk.ability.SystemMemoryInfo: long getAvailSysMem()>
<javax.crypto.CipherSpi: void engineInit(int,java.security.Key,java.security.SecureRandom)>
<java.security.acl.AclEntry: boolean setPrincipal(java.security.Principal)>
<ohos.agp.utils.DimensFloat: int getSizeYToInt()>
<ohos.agp.colors.Color: ohos.agp.colors.ColorSpec getSpec()>
<java.security.spec.RSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>
<java.util.Locale.Builder: java.util.Locale.Builder setLocale(java.util.Locale)>
<ohos.telephony.TelephonyConstants: void <init>()>
<ohos.data.search.SearchAbility: java.util.List insert(java.lang.String,java.lang.String,java.util.List)>
<java.security.cert.CertificateFactorySpi: java.util.Iterator engineGetCertPathEncodings()>
<ohos.agp.render.PdfGenerator.PageInfo.Builder: ohos.agp.render.PdfGenerator.PageInfo.Builder setRect(ohos.agp.utils.Rect)>
<ohos.agp.components.ComponentContainer: void setAutoLayout(boolean)>
<ohos.agp.render.Path.FillType: ohos.agp.render.Path.FillType valueOf(java.lang.String)>
<ohos.data.distributed.common.KvStoreObserver: void onChange(ohos.data.distributed.common.ChangeNotification)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateInstance(int)>
<java.util.NavigableMap: java.util.Map.Entry floorEntry(java.lang.Object)>
<ohos.net.HttpProxy: int getPort()>
<java.sql.SQLException: void <init>()>
<ohos.agp.animation.styledsolutions.GravitationalClick: void <init>()>
<java.net.PortUnreachableException: void <init>(java.lang.String)>
<java.security.Provider: java.security.Provider.Service getService(java.lang.String,java.lang.String)>
<ohos.agp.utils.Point: boolean equals(java.lang.Object)>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>
<java.text.DecimalFormat: void applyPattern(java.lang.String)>
<java.sql.PreparedStatement: void setURL(int,java.net.URL)>
<ohos.agp.render.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>
<javax.crypto.KeyGeneratorSpi: void engineInit(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<ohos.net.ConnectionProperties: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.Bidi: int getRunCount()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates between(java.lang.String,java.sql.Timestamp,java.sql.Timestamp)>
<ohos.media.audio.AudioManager: boolean mute(ohos.media.audio.AudioManager.AudioVolumeType)>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo.Builder requestStorageStatus(int)>
<ohos.media.sessioncore.AVBrowserService: void <init>()>
<java.util.EnumSet: java.lang.Object clone()>
<java.security.IdentityScope: void setSystemScope(java.security.IdentityScope)>
<ohos.utils.LongPlainArray: java.lang.Object get(long,java.lang.Object)>
<javax.security.auth.callback.PasswordCallback: java.lang.String getPrompt()>
<java.util.Arrays: void setAll(int[],java.util.function.IntUnaryOperator)>
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>
<ohos.ai.tts.TtsClient: void release()>
<ohos.utils.IntArray: int back()>
<ohos.global.icu.text.UnicodeSet: java.util.Collection strings()>
<ohos.agp.render.opengl.GLES32: void glPushDebugGroup(int,int,int,java.lang.String)>
<ohos.data.resultset.AbsSharedResultSet: float getFloat(int)>
<java.net.DatagramSocket: java.net.SocketAddress getRemoteSocketAddress()>
<ohos.accessibility.AccessibilityEventInfo: void setPresentIndex(int)>
<java.security.spec.ECPoint: boolean equals(java.lang.Object)>
<ohos.agp.render.render3d.RenderLoop: void submitTask(ohos.agp.render.render3d.Task)>
<java.security.SignatureSpi: java.lang.Object clone()>
<ohos.ai.cv.text.Text: ohos.ai.cv.common.CvRect getTextRect()>
<ohos.agp.render.opengl.GLES30: void glFlushMappedBufferRange(int,int,int)>
<java.net.Authenticator: int getRequestingPort()>
<java.util.concurrent.ThreadLocalRandom: float nextFloat()>
<ohos.agp.components.element.Element: void setColorMatrix(ohos.agp.render.ColorMatrix)>
<java.net.DatagramSocketImpl: void leaveGroup(java.net.SocketAddress,java.net.NetworkInterface)>
<java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer.Form)>
<ohos.global.icu.text.NumberingSystem: java.lang.String[] getAvailableNames()>
<ohos.utils.zson.ZSONArray: java.lang.Double getDouble(int)>
<java.text.SimpleDateFormat: java.lang.Object clone()>
<ohos.aafwk.ability.DataAbilityOperation: ohos.utils.net.Uri getUri()>
<ohos.agp.render.SweepShader: void <init>(float,float,ohos.agp.utils.Color[],float[])>
<java.security.AccessController: java.lang.Object doPrivilegedWithCombiner(java.security.PrivilegedAction)>
<java.util.Deque: void addLast(java.lang.Object)>
<javax.tools.DocumentationTool.Location: javax.tools.DocumentationTool.Location valueOf(java.lang.String)>
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)>
<java.util.concurrent.atomic.AtomicBoolean: void lazySet(boolean)>
<ohos.global.icu.util.Currency: java.util.Set getAvailableCurrencies()>
<ohos.utils.geo.Rect: void <init>(int,int,int,int)>
<ohos.data.rdb.StoreConfig.SyncMode: java.lang.String getValue()>
<ohos.media.audio.AudioManager: boolean isStreamActive(ohos.media.audio.AudioManager.AudioVolumeType)>
<java.net.NetworkInterface: boolean supportsMulticast()>
<javax.sql.RowSet: void setRowId(java.lang.String,java.sql.RowId)>
<ohos.agp.render.opengl.GLES20: void glTexParameteri(int,int,int)>
<ohos.agp.utils.Matrix: boolean preScale(float,float,float,float)>
<java.util.NavigableMap: java.util.Map.Entry firstEntry()>
<ohos.agp.components.ScrollHelper: int getScrollDistanceX()>
<ohos.nfc.tag.TagInfo: byte[] getTagId()>
<ohos.utils.PacMap: void clear()>
<java.util.concurrent.ConcurrentHashMap: void clear()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: java.util.List getAllConversationalMessages()>
<ohos.media.audio.AudioCapturer: int read(java.nio.ByteBuffer,int)>
<ohos.event.notification.NotificationSlot: void enableBypassDnd(boolean)>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: ohos.media.common.sessioncore.AVToken getAVToken()>
<java.time.Clock: long millis()>
<ohos.global.icu.text.PluralFormat: void setNumberFormat(ohos.global.icu.text.NumberFormat)>
<ohos.aafwk.ability.fraction.FractionScheduler: ohos.aafwk.ability.fraction.FractionScheduler remove(ohos.aafwk.ability.fraction.Fraction)>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.lang.String toString()>
<ohos.bluetooth.ble.GattDescriptor: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>
<javax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket()>
<java.util.Date: int getTimezoneOffset()>
<java.util.zip.DeflaterInputStream: void mark(int)>
<ohos.event.notification.NotificationSorting: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.event.notification.NotificationRequest.NotificationNormalContent: java.lang.String getTitle()>
<ohos.global.icu.text.DecimalFormatSymbols: void setPatternSeparator(char)>
<ohos.utils.Ashmem: ohos.utils.Ashmem createAshmemFromExisting(long)>
<javax.lang.model.util.SimpleElementVisitor6: void <init>()>
<java.lang.StringBuilder: int capacity()>
<ohos.agp.render.Canvas: void <init>()>
<java.time.chrono.JapaneseDate: int lengthOfMonth()>
<ohos.agp.render.opengl.GLES1X: void glFrustumf(float,float,float,float,float,float)>
<ohos.global.icu.text.UnicodeSetIterator: void reset(ohos.global.icu.text.UnicodeSet)>
<ohos.media.camera.params.ParameterKey.Key: void <init>(java.lang.String,java.lang.Class)>
<ohos.sensor.agent.CategoryMotionAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryMotionDataCallback,ohos.sensor.bean.CategoryMotion,long)>
<java.util.concurrent.BlockingDeque: void putLast(java.lang.Object)>
<ohos.agp.render.opengl.GLES1X: boolean glIsBuffer(int)>
<java.time.Period: java.time.Period ofMonths(int)>
<ohos.aafwk.content.Intent: java.lang.String formatMimeType(java.lang.String)>
<ohos.utils.net.UrlQueryFilter: void setUnregisteredParamFilter(ohos.utils.net.UrlQueryFilter.ValueFilter)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform2fv(int,int,int,float[])>
<ohos.media.camera.device.CameraStateCallback: void onCreated(ohos.media.camera.device.Camera)>
<ohos.agp.components.Text: void delete(int,boolean,int)>
<ohos.hiviewdfx.Debug: boolean getDebuggerConnectStatus()>
<java.math.BigDecimal: void <init>(int,java.math.MathContext)>
<ohos.agp.utils.Point: boolean equals(float,float)>
<ohos.agp.render.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,int[])>
<java.security.cert.CertificateParsingException: void <init>()>
<java.util.HashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<javax.sql.RowSet: void setPassword(java.lang.String)>
<ohos.agp.components.webengine.WebConfig: java.lang.String getUserAgent()>
<ohos.agp.components.Text: int getAroundElementsPadding()>
<ohos.media.photokit.support.AlbumList: java.lang.String getAlbumName()>
<java.nio.IntBuffer: boolean isDirect()>
<java.util.Arrays: void parallelSort(char[],int,int)>
<ohos.agp.render.render3d.components.SceneComponent.BackgroundType: void <clinit>()>
<java.lang.Class: boolean isInstance(java.lang.Object)>
<ohos.utils.zson.ZSONArray: java.lang.Long getLong(int)>
<ohos.agp.components.Text: void setRightBubbleHeight(int)>
<java.util.concurrent.ConcurrentHashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<ohos.light.bean.LightBrightness: int getRedBrightness()>
<ohos.media.image.common.Rect: void setEmpty()>
<ohos.aafwk.ability.LocalRemoteObject: void <init>()>
<java.nio.channels.Pipe.SinkChannel: int validOps()>
<java.text.CollationElementIterator: void reset()>
<ohos.rpc.MessageParcel: void reclaim()>
<java.lang.Float: double doubleValue()>
<java.util.concurrent.LinkedTransferQueue: void <init>()>
<ohos.org.xml.sax.helpers.DefaultHandler: void warning(ohos.org.xml.sax.SAXParseException)>
<ohos.media.audio.AudioStreamInfo.ContentType: ohos.media.audio.AudioStreamInfo.ContentType getEnum(int)>
<java.lang.reflect.Executable: boolean isVarArgs()>
<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.lang.reflect.Field: java.lang.String toString()>
<ohos.interwork.bundle.ElementNameEx: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.components.DatePicker: int getSelectedTextSize()>
<ohos.global.icu.text.BreakIterator: java.lang.Object clone()>
<java.util.stream.LongStream: java.util.stream.DoubleStream mapToDouble(java.util.function.LongToDoubleFunction)>
<ohos.global.icu.text.CaseMap.Title: ohos.global.icu.text.CaseMap.Title omitUnchangedText()>
<java.util.stream.Stream: java.util.stream.Stream skip(long)>
<ohos.global.icu.util.UniversalTimeScale: ohos.global.icu.math.BigDecimal bigDecimalFrom(long,int)>
<java.time.LocalDateTime: java.time.LocalDateTime now(java.time.ZoneId)>
<ohos.global.icu.text.Bidi: void <init>(int,int)>
<ohos.javax.xml.transform.Result: java.lang.String getSystemId()>
<ohos.agp.colors.UserDefinedColor: ohos.agp.colors.RgbColor toRgb()>
<java.time.DayOfWeek: int get(java.time.temporal.TemporalField)>
<ohos.hiviewdfx.Debug.MemType: ohos.hiviewdfx.Debug.MemType valueOf(java.lang.String)>
<ohos.accessibility.ability.AccessibilityInfo: void <init>()>
<ohos.agp.window.service.Window: void setStatusBarColor(int)>
<ohos.bundle.BackupBundleInfo: int getVersionCode()>
<java.lang.NegativeArraySizeException: void <init>(java.lang.String)>
<java.util.stream.DoubleStream: java.util.stream.IntStream mapToInt(java.util.function.DoubleToIntFunction)>
<ohos.bundle.ElementName: void setDeviceId(java.lang.String)>
<ohos.data.search.schema.PlaceItem: java.lang.String getDistrict()>
<ohos.agp.components.ProgressBar: int getProgressHintTextAlignment()>
<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.Throwable,java.util.function.Supplier)>
<java.util.zip.ZipEntry: java.lang.Object clone()>
<ohos.javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>
<java.util.zip.InflaterInputStream: boolean markSupported()>
<javax.lang.model.util.AbstractAnnotationValueVisitor6: java.lang.Object visit(javax.lang.model.element.AnnotationValue,java.lang.Object)>
<ohos.org.xml.sax.DocumentHandler: void endElement(java.lang.String)>
<ohos.agp.components.DragEvent: ohos.agp.components.DragEvent obtain(int,float,float,ohos.agp.utils.MimeData)>
<java.nio.InvalidMarkException: void <init>()>
<java.security.cert.CertPath: java.util.List getCertificates()>
<java.security.cert.PKIXParameters: java.lang.String toString()>
<ohos.app.AbilityContext: java.io.File getCacheDir()>
<java.sql.SQLNonTransientException: void <init>()>
<java.time.temporal.ChronoField: void <clinit>()>
<ohos.aafwk.content.Intent: ohos.utils.Sequenceable[] getSequenceableArrayParam(java.lang.String)>
<java.util.zip.Deflater: long getBytesWritten()>
<java.net.NetworkInterface: java.net.NetworkInterface getParent()>
<ohos.agp.components.ComponentContainer.LayoutConfig: void setMarginBottom(int)>
<ohos.agp.components.ScrollHelper: int getFlingVelocityY()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates using(java.lang.String[])>
<ohos.data.search.schema.PhotoItem: java.lang.String getFeature()>
<java.util.Spliterator.OfInt: boolean tryAdvance(java.lang.Object)>
<ohos.wifi.p2p.WifiP2pDevice: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.UnicodeSet: java.lang.StringBuffer _generatePattern(java.lang.StringBuffer,boolean)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void acquire(int)>
<ohos.global.icu.util.Calendar: java.util.Date getTime()>
<java.util.Base64.Encoder: java.lang.String encodeToString(byte[])>
<java.util.Locale.Builder: java.util.Locale.Builder removeUnicodeLocaleAttribute(java.lang.String)>
<ohos.aafwk.ability.DataAbilityOperation: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.components.Text: java.lang.String getFontVariations()>
<ohos.eventhandler.EventHandler: void removeAllEvent()>
<java.util.Spliterator.OfInt: boolean tryAdvance(java.util.function.IntConsumer)>
<ohos.data.distributed.common.UserInfo: java.lang.String getUserId()>
<ohos.media.audio.AudioStreamInfo.Builder: ohos.media.audio.AudioStreamInfo.Builder sampleRate(int)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>
<java.sql.Connection: int getHoldability()>
<java.time.chrono.ChronoLocalDateTime: java.time.chrono.ChronoLocalDateTime plus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.components.TabList: void addTabSelectedListener(ohos.agp.components.TabList.TabSelectedListener)>
<ohos.agp.components.TextField: void setCursorChangedListener()>
<ohos.data.rdb.ValuesBucket: java.lang.Boolean getBoolean(java.lang.String)>
<ohos.data.rdb.StoreConfig.Builder: ohos.data.rdb.StoreConfig.Builder setDatabaseFileType(ohos.data.DatabaseFileType)>
<ohos.nfc.tag.MifareClassicTag: void incBlock(int,int)>
<java.util.Arrays: void sort(byte[])>
<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel open()>
<javax.sql.RowSet: void setInt(int,int)>
<ohos.agp.render.Path: void quadTo(float,float,float,float)>
<java.nio.DoubleBuffer: java.nio.ByteOrder order()>
<ohos.agp.render.Paint: int getMaxLines()>
<ohos.agp.window.dialog.PopupDialog: ohos.agp.window.dialog.PopupDialog setMode(int)>
<java.io.Closeable: void close()>
<java.time.ZonedDateTime: java.time.chrono.ChronoZonedDateTime plus(java.time.temporal.TemporalAmount)>
<java.lang.Character: boolean isDigit(char)>
<ohos.data.orm.EntityHelper: java.lang.String getDeleteStatement()>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object ceilingKey(java.lang.Object)>
<ohos.media.audio.SoundPlayer.SoundType: ohos.media.audio.SoundPlayer.SoundType[] values()>
<java.lang.AutoCloseable: void close()>
<javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind[] values()>
<java.nio.CharBuffer: char get()>
<ohos.data.search.schema.PhotoItem: java.lang.Double getLatitude()>
<java.util.GregorianCalendar: java.util.Date getGregorianChange()>
<ohos.media.player.Player.AudioHandler: ohos.media.player.Player.AudioHandler[] values()>
<ohos.miscservices.inputmethod.EditingText: void setChangedStart(int)>
<ohos.agp.render.render3d.components.NodeComponent: void setParent(ohos.agp.render.render3d.Entity)>
<ohos.miscservices.inputmethodability.KeyboardController: void setDisplayMode(int)>
<ohos.utils.system.SystemCapability.Developtools: void <init>()>
<ohos.agp.window.dialog.BaseDialog.RemoveCallback: void onRemove(ohos.agp.window.dialog.IDialog)>
<ohos.agp.render.render3d.gltf.GltfImportData: boolean isValid()>
<ohos.org.xml.sax.Attributes: java.lang.String getQName(int)>
<ohos.bluetooth.ble.BleScanFilter: void setPeripheralServiceData(java.util.UUID,byte[],byte[])>
<ohos.agp.window.dialog.PopupDialog: ohos.agp.window.dialog.PopupDialog setHasArrow(boolean)>
<ohos.global.icu.util.ChineseCalendar: int handleComputeMonthStart(int,int,boolean)>
<java.security.SecureRandom: void <init>(byte[])>
<java.lang.SecurityManager: void checkMulticast(java.net.InetAddress,byte)>
<ohos.usb.USBRequest: boolean queue(java.nio.ByteBuffer,int)>
<ohos.agp.transition.TransitionMove: void setDuration(float)>
<ohos.javax.xml.validation.Schema: void <init>()>
<ohos.global.icu.text.DateIntervalInfo: void setIntervalPattern(java.lang.String,int,java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glEndTransformFeedback()>
<ohos.data.rdb.ValuesBucket: void <init>()>
<ohos.agp.components.Picker: void setSelectedTextColor(ohos.agp.utils.Color)>
<ohos.app.IAbilityManager: ohos.aafwk.ability.DeviceConfigInfo getDeviceConfigInfo()>
<ohos.bundle.LauncherAbilityInfo: java.lang.String getLabel()>
<java.time.ZonedDateTime: boolean isSupported(java.time.temporal.TemporalField)>
<ohos.media.audio.AudioManager.AudioVolumeType: ohos.media.audio.AudioManager.AudioVolumeType[] values()>
<ohos.agp.components.CornerMark: void setTextSize(int)>
<ohos.agp.components.Text: long getAutoScrollingDuration()>
<java.util.DoubleSummaryStatistics: double getMin()>
<java.text.DateFormatSymbols: void setZoneStrings(java.lang.String[][])>
<ohos.data.rdb.RdbStore.ConflictResolution: ohos.data.rdb.RdbStore.ConflictResolution valueOf(java.lang.String)>
<java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenComposeAsync(java.util.function.Function)>
<ohos.bluetooth.BluetoothDeviceClass: boolean marshalling(ohos.utils.Parcel)>
<ohos.multimodalinput.event.KeyEvent: int getKeyCode()>
<ohos.wifi.p2p.WifiP2pNetworkInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.bundle.IBundleInstaller: boolean install(java.util.List,ohos.bundle.InstallParam,ohos.bundle.InstallerCallback)>
<ohos.media.photokit.metadata.AVStorage: java.util.Set fetchExternalVolumeNames(ohos.app.Context)>
<java.util.NoSuchElementException: void <init>(java.lang.String)>
<ohos.utils.BasePacMap: void putByteValue(java.lang.String,byte)>
<java.security.cert.CertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.sysappcomponents.calendar.support.TableSupport: ohos.data.dataability.DataAbilityPredicates getPredicate(ohos.sysappcomponents.calendar.entity.CalendarEntity)>
<ohos.data.search.schema.EmailItem: ohos.data.search.schema.EmailItem setToName(java.lang.String)>
<ohos.utils.Parcel: void writePacMapEx(ohos.interwork.utils.PacMapEx)>
<java.util.zip.ZipEntry: java.nio.file.attribute.FileTime getLastAccessTime()>
<ohos.data.search.schema.EmailItem: ohos.data.search.schema.EmailItem setContent(java.lang.String)>
<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>
<java.security.KeyStoreSpi: boolean engineIsKeyEntry(java.lang.String)>
<ohos.app.IAbilityManager: int getMissionLockModeState()>
<java.util.prefs.AbstractPreferences: void put(java.lang.String,java.lang.String)>
<ohos.global.icu.text.DateFormat.BooleanAttribute: void <clinit>()>
<ohos.media.audio.AudioCapturer: void <init>(ohos.media.audio.AudioCapturerInfo,ohos.media.audio.AudioDeviceDescriptor)>
<java.util.logging.Handler: void close()>
<java.lang.Float: boolean isNaN(float)>
<java.util.concurrent.CopyOnWriteArraySet: void <init>(java.util.Collection)>
<ohos.global.icu.text.Bidi: byte getLevelAt(int)>
<ohos.sysappcomponents.contact.ContactsHelper: ohos.sysappcomponents.contact.entity.Contact queryMyCard(ohos.sysappcomponents.contact.ContactAttributes)>
<java.util.AbstractMap.SimpleEntry: boolean equals(java.lang.Object)>
<ohos.agp.components.SearchBar: void setSearchIcon(int)>
<ohos.account.app.AppAccount: java.lang.String toString()>
<ohos.account.AccountAbility: int getOsAccountLocalIdFromUid(int)>
<ohos.agp.components.Component.FocusChangedListener: void onFocusChange(ohos.agp.components.Component,boolean)>
<ohos.utils.RationalNumber: int compareTo(ohos.utils.RationalNumber)>
<java.util.concurrent.ThreadLocalRandom: int nextInt()>
<ohos.media.audio.AudioRenderer: void <init>(ohos.media.audio.AudioRendererInfo,ohos.media.audio.AudioRenderer.PlayMode)>
<ohos.global.icu.util.JapaneseCalendar: void <init>(java.util.Date)>
<ohos.utils.PlainArray: java.util.Optional remove(int)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType genericMethodType(int,boolean)>
<java.time.temporal.TemporalAmount: java.time.temporal.Temporal addTo(java.time.temporal.Temporal)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,java.sql.Time)>
<ohos.agp.window.dialog.BaseDialog: void setDialogListener(ohos.agp.window.dialog.BaseDialog.DialogListener)>
<javax.crypto.KeyAgreement: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<ohos.agp.render.opengl.GLES20: void glDeleteTextures(int,int[])>
<ohos.app.AbilityContext: java.io.File getDir(java.lang.String,int)>
<ohos.agp.render.opengl.EGL: ohos.agp.render.opengl.EGLSurface eglCreatePbufferSurface(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLConfig,int[])>
<ohos.distributedschedule.interwork.DeviceManager: void unInitDistributedEnvironment(java.lang.String,ohos.distributedschedule.interwork.IInitCallback)>
<ohos.app.AbilityContext: ohos.bundle.ElementName getCallingAbility()>
<ohos.agp.render.opengl.GLES1X: void glMultMatrixx(int[])>
<java.security.cert.Certificate: boolean equals(java.lang.Object)>
<javax.tools.ToolProvider: javax.tools.JavaCompiler getSystemJavaCompiler()>
<ohos.agp.components.element.Element: void setInheritDirection(boolean)>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setShootingMode(java.lang.String)>
<java.util.Arrays: boolean[] copyOf(boolean[],int)>
<ohos.agp.render.render3d.math.Vector3: void <init>(float[],int)>
<java.util.LinkedList: void push(java.lang.Object)>
<ohos.global.icu.text.RuleBasedCollator: void setDecomposition(int)>
<ohos.nfc.tag.NfcVTag: byte getResponseFlags()>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator)>
<ohos.media.muxer.Muxer: void <init>(java.io.FileDescriptor,int)>
<ohos.global.icu.text.DecimalFormatSymbols: char getMonetaryDecimalSeparator()>
<java.sql.CallableStatement: byte getByte(int)>
<ohos.global.icu.util.ULocale: java.util.Iterator getKeywords()>
<ohos.agp.components.Component: void setWidth(int)>
<ohos.utils.zson.ZSONReader: java.lang.String readString()>
<ohos.ai.cv.docrefine.IDocRefine: int docRefine(ohos.ai.cv.common.VisionImage,ohos.ai.cv.docrefine.DocCoordinates,ohos.ai.cv.common.ImageResult,ohos.ai.cv.common.VisionCallback)>
<java.sql.ResultSet: java.io.Reader getNCharacterStream(int)>
<java.net.NetworkInterface: boolean equals(java.lang.Object)>
<java.lang.Float: boolean isFinite(float)>
<ohos.wifi.p2p.WifiP2pNetworkInfo: boolean marshalling(ohos.utils.Parcel)>
<java.util.Vector: int size()>
<java.io.StringWriter: void write(char[],int,int)>
<ohos.global.icu.text.Transliterator: ohos.global.icu.text.Transliterator getInstance(java.lang.String)>
<ohos.ai.cv.text.TextConfiguration.Builder: ohos.ai.cv.text.TextConfiguration.Builder setDetectMode(int)>
<java.security.acl.AclEntry: java.security.Principal getPrincipal()>
<ohos.nfc.oma.Reader: java.util.Optional openSession()>
<java.time.ZonedDateTime: java.time.LocalTime toLocalTime()>
<javax.crypto.Cipher: void init(int,java.security.Key)>
<ohos.media.photokit.metadata.AVStorage.Audio.Genres.Members: ohos.utils.net.Uri fetchResource(java.lang.String,long)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates between(java.lang.String,int,int)>
<ohos.agp.render.render3d.math.Quaternion: float lengthSquared(float,float,float,float)>
<ohos.agp.render.ColorMatrix: void <init>()>
<java.nio.channels.spi.AbstractSelector: void end()>
<java.util.WeakHashMap: void forEach(java.util.function.BiConsumer)>
<java.text.DecimalFormat: void setParseBigDecimal(boolean)>
<java.time.temporal.WeekFields: java.time.temporal.WeekFields of(java.time.DayOfWeek,int)>
<ohos.multimodalinput.event.MultimodalEvent: int getSourceDevice()>
<ohos.accessibility.ability.AccessibilityInfo: java.util.Optional gainFocus(int)>
<java.sql.DatabaseMetaData: boolean supportsSavepoints()>
<ohos.agp.render.opengl.GLES30: boolean glIsQuery(int)>
<ohos.global.icu.util.TimeZone: int getRawOffset()>
<java.security.interfaces.DSAParams: java.math.BigInteger getG()>
<ohos.utils.HalfFloat: ohos.utils.HalfFloat valueOf(float)>
<ohos.telephony.CellularDataInfoManager: int getCellularDataFlowType()>
<ohos.agp.colors.CmykColor: void setBlack(float)>
<ohos.utils.Parcel: boolean writeFloat(float)>
<java.util.Scanner: java.math.BigInteger nextBigInteger()>
<java.lang.Integer: int divideUnsigned(int,int)>
<ohos.event.commonevent.CommonEventSubscribeInfo: ohos.event.commonevent.MatchingSkills getMatchingSkills()>
<java.security.SignedObject: byte[] getSignature()>
<java.util.stream.StreamSupport: java.util.stream.DoubleStream doubleStream(java.util.function.Supplier,int,boolean)>
<javax.crypto.MacSpi: void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<java.beans.PropertyChangeEvent: java.lang.String toString()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage whenComplete(java.util.function.BiConsumer)>
<ohos.ace.ability.AceAbility: boolean onStartContinuation()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notIn(java.lang.String,java.sql.Timestamp[])>
<java.lang.String: java.lang.String valueOf(int)>
<java.lang.Short: java.lang.Short valueOf(short)>
<ohos.global.icu.text.NumberFormat: java.lang.Number parse(java.lang.String)>
<java.security.cert.X509CRL: void verify(java.security.PublicKey,java.lang.String)>
<ohos.aafwk.content.Intent: void setBordersRect(ohos.utils.geo.Rect)>
<java.util.AbstractQueue: void clear()>
<ohos.global.resource.BaseFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<ohos.agp.render.LinearShader: void <init>()>
<java.util.EnumMap: java.lang.Object remove(java.lang.Object)>
<java.time.LocalDateTime: java.time.LocalDateTime minus(java.time.temporal.TemporalAmount)>
<java.nio.charset.CharsetDecoder: java.nio.charset.Charset charset()>
<ohos.media.recorder.Recorder: void finalize()>
<java.lang.ExceptionInInitializerError: java.lang.Throwable getException()>
<java.util.concurrent.SynchronousQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster nextOrSame(java.time.DayOfWeek)>
<ohos.utils.PacMap: void putIntValueArray(java.lang.String,int[])>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenApplyAsync(java.util.function.Function,java.util.concurrent.Executor)>
<java.util.AbstractList: boolean addAll(int,java.util.Collection)>
<java.time.ZoneOffset: boolean isSupported(java.time.temporal.TemporalField)>
<java.util.Spliterator: java.util.Comparator getComparator()>
<ohos.data.distributed.common.Entry: void setKey(java.lang.String)>
<ohos.global.i18n.utils.CalendarUtils: java.lang.String getCalendarName(ohos.global.icu.util.Calendar,ohos.global.icu.util.ULocale)>
<ohos.agp.render.render3d.math.Vector4: float dot(ohos.agp.render.render3d.math.Vector4,ohos.agp.render.render3d.math.Vector4)>
<ohos.event.notification.INotificationSubscriber: void onDisturbModeChange(int)>
<ohos.media.audio.Timestamp.Timebase: ohos.media.audio.Timestamp.Timebase valueOf(java.lang.String)>
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenAcceptAsync(java.util.function.Consumer,java.util.concurrent.Executor)>
<ohos.utils.LightweightMap: void clear()>
<ohos.utils.geo.Rect: int getCenterY()>
<ohos.utils.Stopwatch: void split(java.lang.String)>
<ohos.media.sessioncore.AVBrowser: void subscribeByParentMediaId(java.lang.String,ohos.media.common.sessioncore.AVSubscriptionCallback)>
<ohos.global.icu.util.Calendar: ohos.global.icu.util.Calendar getInstance(ohos.global.icu.util.TimeZone,java.util.Locale)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates between(java.lang.String,java.sql.Time,java.sql.Time)>
<java.nio.IntBuffer: java.nio.IntBuffer put(int[])>
<java.util.concurrent.ThreadPoolExecutor: void terminated()>
<ohos.data.usage.DataUsage: java.util.Optional getVolumes()>
<java.util.OptionalInt: int orElse(int)>
<ohos.global.icu.util.ULocale: void <init>(java.lang.String)>
<ohos.agp.components.Text: ohos.agp.components.element.Element getSelectionRightBubbleElement()>
<ohos.agp.render.render3d.math.Vector2: boolean equals(java.lang.Object)>
<java.security.cert.PKIXParameters: java.util.List getCertStores()>
<ohos.agp.utils.Matrix: boolean cheapEqualTo(ohos.agp.utils.Matrix)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>
<ohos.telephony.NetworkState: int getNsaState()>
<java.util.function.LongUnaryOperator: java.util.function.LongUnaryOperator compose(java.util.function.LongUnaryOperator)>
<ohos.agp.render.Canvas: void resetMatrix()>
<ohos.event.notification.NotificationRequest: ohos.agp.components.ComponentProvider getCustomBigView()>
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getContextualShaper(int)>
<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>
<java.util.concurrent.ThreadPoolExecutor: boolean isShutdown()>
<ohos.agp.render.opengl.GLES1X: void glTexParameterx(int,int,int)>
<java.net.ResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>
<java.time.LocalDate: boolean isBefore(java.time.chrono.ChronoLocalDate)>
<ohos.agp.components.ComponentProvider: void mergeActions(java.util.Collection)>
<ohos.event.notification.NotificationSorting: int getVisiblenessOverride()>
<ohos.media.photokit.common.PixelMapConfigs: ohos.media.image.common.PixelFormat getPreferredConfig()>
<java.security.interfaces.DSAKeyPairGenerator: void initialize(java.security.interfaces.DSAParams,java.security.SecureRandom)>
<ohos.media.camera.params.ResultKey.Key: java.lang.String toString()>
<java.util.SimpleTimeZone: void setEndRule(int,int,int,int)>
<ohos.agp.components.StackLayout.LayoutConfig: void <init>(ohos.agp.components.StackLayout.LayoutConfig)>
<ohos.event.notification.IAdvancedNotificationManager: java.lang.String getNotificationAgent(java.lang.String)>
<ohos.global.icu.text.PluralFormat: void <init>(ohos.global.icu.util.ULocale,ohos.global.icu.text.PluralRules,java.lang.String)>
<java.util.ArrayDeque: void <init>(int)>
<ohos.net.HttpProxy: void <init>(ohos.net.HttpProxy)>
<java.security.acl.Group: java.util.Enumeration members()>
<ohos.global.icu.util.VersionInfo: int hashCode()>
<java.lang.SecurityManager: void checkPrintJobAccess()>
<ohos.security.keystore.KeyGenAlgorithmParaSpec: int getSecKeySizeInBits()>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate date(int,int,int)>
<ohos.agp.components.ComponentProvider: boolean isValidComponentId(int)>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setProvince(java.lang.String)>
<java.util.Formatter: void <init>(java.io.File)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,java.lang.CharSequence)>
<java.util.Arrays: void setAll(double[],java.util.function.IntToDoubleFunction)>
<java.io.PrintWriter: void write(java.lang.String)>
<java.util.Calendar: int getWeeksInWeekYear()>
<ohos.agp.render.opengl.GLES20: void glPolygonOffset(float,float)>
<ohos.data.search.schema.NoticeItem: void <init>()>
<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>
<ohos.media.common.VideoProperty.Builder: ohos.media.common.VideoProperty.Builder setRecorderRate(int)>
<ohos.nfc.tag.MessageRecord: int hashCode()>
<java.lang.Package: java.lang.String getImplementationTitle()>
<ohos.sysappcomponents.contact.ContactsHelper: boolean updateContact(ohos.sysappcomponents.contact.entity.Contact,ohos.sysappcomponents.contact.ContactAttributes)>
<java.nio.channels.spi.AbstractSelectionKey: void cancel()>
<java.sql.Connection: boolean isReadOnly()>
<ohos.agp.render.opengl.GLES30: int glClientWaitSync(long,int,long)>
<ohos.global.icu.util.TimeZone: ohos.global.icu.util.TimeZone cloneAsThawed()>
<java.lang.Math: double atan(double)>
<java.security.DigestInputStream: int read()>
<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>
<ohos.media.audio.AudioManager.CallState: int getValue()>
<java.net.URLConnection: java.lang.Object getContent()>
<java.net.URLConnection: long getExpiration()>
<ohos.agp.components.Component: void setScrollbarColor(ohos.agp.utils.Color)>
<java.net.ServerSocket: java.lang.String toString()>
<ohos.utils.RationalNumber: double doubleValue()>
<ohos.media.extractor.Extractor: boolean release()>
<java.util.concurrent.atomic.AtomicLong: long getAndAdd(long)>
<java.util.regex.Matcher: java.util.regex.Matcher useTransparentBounds(boolean)>
<ohos.agp.utils.Matrix: void setElements(float[])>
<ohos.sysappcomponents.calendar.support.TableSupport: ohos.utils.net.Uri getUri()>
<java.sql.DatabaseMetaData: boolean supportsNonNullableColumns()>
<java.sql.CallableStatement: void setObject(java.lang.String,java.lang.Object)>
<ohos.system.OsHelper: java.io.FileDescriptor copyFileDescriptor(java.io.FileDescriptor,int)>
<javax.crypto.KeyGenerator: void <init>(javax.crypto.KeyGeneratorSpi,java.security.Provider,java.lang.String)>
<ohos.event.notification.NotificationRequest: int getCreatorPid()>
<ohos.utils.PersistablePacMap: double getDoubleValue(java.lang.String)>
<ohos.agp.render.render3d.SceneNode: void setPosition(ohos.agp.render.render3d.math.Vector3)>
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>
<java.sql.DatabaseMetaData: boolean supportsExpressionsInOrderBy()>
<ohos.agp.render.Region: boolean op(ohos.agp.utils.Rect,ohos.agp.render.Region.Op)>
<javax.tools.SimpleJavaFileObject: long getLastModified()>
<java.security.cert.CertPathValidatorSpi: void <init>()>
<java.time.ZonedDateTime: java.time.Month getMonth()>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean requestBleMtuSize(int)>
<ohos.data.preferences.Preferences: ohos.data.preferences.Preferences delete(java.lang.String)>
<ohos.data.distributed.file.DistLinkFile: void <init>(java.lang.String)>
<ohos.agp.components.element.ShapeElement: float getCornerRadius()>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getDescription()>
<java.sql.Timestamp: boolean equals(java.sql.Timestamp)>
<ohos.media.common.Format.FormatArrays: void <init>()>
<ohos.data.rdb.RdbStore: boolean restore(java.lang.String,byte[],byte[])>
<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asType(java.lang.invoke.MethodType)>
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery localTime()>
<ohos.nfc.NfcController: int getNfcState()>
<ohos.agp.components.Image: int getClipGravity()>
<java.sql.DatabaseMetaData: boolean supportsMultipleResultSets()>
<ohos.bluetooth.ble.BleScanResult: boolean isConnectable()>
<java.net.HttpCookie: java.lang.String getDomain()>
<java.net.NetworkInterface: java.lang.String getName()>
<java.util.concurrent.ArrayBlockingQueue: int remainingCapacity()>
<ohos.global.icu.text.DateFormatSymbols: java.lang.Object clone()>
<ohos.global.icu.text.SearchIterator: void setBreakIterator(ohos.global.icu.text.BreakIterator)>
<ohos.rpc.RemoteProxy: boolean addDeathRecipient(ohos.rpc.IRemoteObject.DeathRecipient,int)>
<ohos.location.Location: void setLongitude(double)>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLInputFactory newInstance(java.lang.String,java.lang.ClassLoader)>
<java.sql.SQLRecoverableException: void <init>(java.lang.String,java.lang.String)>
<javax.security.auth.Subject: java.util.Set getPublicCredentials()>
<java.util.EnumMap: java.lang.Object clone()>
<javax.net.ssl.SSLServerSocket: void <init>()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitInt(int,java.lang.Object)>
<ohos.vibrator.agent.VibratorAgent: boolean stop()>
<ohos.media.common.sessioncore.AVSessionCallback: void onStop()>
<java.util.UUID: int version()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent replaceParams(ohos.aafwk.content.IntentParams)>
<java.lang.Boolean: boolean parseBoolean(java.lang.String)>
<javax.tools.StandardJavaFileManager: java.lang.Iterable getJavaFileObjectsFromStrings(java.lang.Iterable)>
<java.sql.Statement: int getResultSetType()>
<ohos.global.icu.text.RelativeDateTimeFormatter: java.lang.String format(double,ohos.global.icu.text.RelativeDateTimeFormatter.Direction,ohos.global.icu.text.RelativeDateTimeFormatter.RelativeUnit)>
<java.util.zip.Adler32: void reset()>
<java.math.BigDecimal: java.math.BigDecimal plus()>
<ohos.global.icu.text.AlphabeticIndex: void <init>(java.util.Locale)>
<java.nio.Buffer: int position()>
<java.nio.channels.FileChannel: java.nio.channels.FileChannel open(java.nio.file.Path,java.nio.file.OpenOption[])>
<ohos.agp.components.Text: ohos.agp.utils.Color getHintColor()>
<ohos.utils.system.SystemCapability.Usb: void <init>()>
<ohos.bundle.AbilityInfo: int getFormEntity()>
<ohos.global.icu.util.VersionInfo: int getMinor()>
<java.security.KeyException: void <init>(java.lang.Throwable)>
<java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>
<java.sql.Statement: int[] executeBatch()>
<java.time.LocalTime: int compareTo(java.time.LocalTime)>
<java.security.InvalidKeyException: void <init>(java.lang.Throwable)>
<javax.net.ssl.SSLSession: java.security.Principal getPeerPrincipal()>
<ohos.media.photokit.metadata.AVStorage: java.lang.String fetchVersion(ohos.app.Context)>
<java.nio.file.DirectoryStream.Filter: boolean accept(java.lang.Object)>
<java.sql.Statement: boolean execute(java.lang.String,int)>
<javax.tools.DocumentationTool: javax.tools.DocumentationTool.DocumentationTask getTask(java.io.Writer,javax.tools.JavaFileManager,javax.tools.DiagnosticListener,java.lang.Class,java.lang.Iterable,java.lang.Iterable)>
<ohos.aafwk.ability.AbilitySlice: java.lang.String getOriginalDeviceId()>
<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<ohos.ai.cv.text.TextConfiguration: int getDetectMode()>
<ohos.media.camera.CameraKit: void unregisterCameraDeviceCallback(ohos.media.camera.device.CameraDeviceCallback)>
<java.time.LocalDate: boolean isSupported(java.time.temporal.TemporalUnit)>
<java.util.concurrent.CountedCompleter: void propagateCompletion()>
<ohos.global.icu.util.Calendar: int getStamp(int)>
<java.util.concurrent.Future: boolean isDone()>
<java.net.DatagramSocketImpl: void close()>
<java.time.zone.ZoneOffsetTransition: int compareTo(java.lang.Object)>
<java.sql.CallableStatement: void setFloat(java.lang.String,float)>
<javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(java.io.InputStream)>
<ohos.data.file.FileAbility: ohos.utils.net.Uri getUriViaFile(ohos.app.Context,java.lang.String,java.io.File)>
<ohos.media.image.PixelMap: void <clinit>()>
<java.sql.DatabaseMetaData: java.lang.String getDriverName()>
<java.time.ZonedDateTime: java.time.ZonedDateTime truncatedTo(java.time.temporal.TemporalUnit)>
<ohos.bundle.IBundleManager: void setApplicationEnabled(java.lang.String,boolean)>
<java.lang.Character: boolean isWhitespace(int)>
<ohos.eventhandler.EventQueue: java.lang.String toString()>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>
<java.io.StreamTokenizer: void ordinaryChars(int,int)>
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getQ()>
<java.lang.Process: void <init>()>
<ohos.media.audio.AudioManager: boolean deactivateAudioInterrupt(ohos.media.audio.AudioInterrupt)>
<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>
<java.util.ListIterator: void add(java.lang.Object)>
<ohos.event.notification.IAdvancedNotificationManager: java.util.List getNotificationSlotGroups(java.lang.String)>
<ohos.media.image.ImageReceiver: int getImageFormat()>
<java.sql.ResultSet: void updateBlob(int,java.io.InputStream,long)>
<ohos.aafwk.ability.PathMatcher: boolean addPath(java.lang.String,int)>
<java.time.chrono.ChronoLocalDate: boolean isEqual(java.time.chrono.ChronoLocalDate)>
<ohos.agp.render.render3d.components.CameraComponent: float getOrthoHeight()>
<javax.security.cert.Certificate: void verify(java.security.PublicKey,java.lang.String)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform1fv(int,int,int,float[])>
<ohos.agp.components.DirectionalLayoutManager: void <init>()>
<ohos.agp.render.render3d.gltf.GltfImportData: java.util.List getSkins()>
<ohos.data.resultset.CombinedResultSet: void registerObserver(ohos.data.rdb.DataObserver)>
<ohos.nfc.tag.NfcBTag: ohos.nfc.tag.NfcBTag getInstance(ohos.nfc.tag.TagInfo)>
<java.util.stream.IntStream: java.util.stream.IntStream generate(java.util.function.IntSupplier)>
<ohos.agp.render.Canvas: void drawCircle(float,float,float,ohos.agp.render.Paint)>
<java.time.Duration: java.time.Duration ofMinutes(long)>
<java.security.KeyStoreSpi: java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)>
<java.math.BigDecimal: java.math.BigDecimal pow(int)>
<ohos.event.commonevent.CommonEventData: void setData(java.lang.String)>
<java.sql.DatabaseMetaData: boolean supportsIntegrityEnhancementFacility()>
<ohos.data.DatabaseHelper: ohos.data.rdb.RdbStore getRdbStore(ohos.data.rdb.StoreConfig,int,ohos.data.rdb.RdbOpenCallback,ohos.data.resultset.ResultSetHook)>
<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()>
<java.util.concurrent.DelayQueue: void <init>()>
<ohos.agp.components.element.StateElement: void <init>()>
<ohos.sysappcomponents.contact.ContactsHelper: boolean deleteContact(java.lang.String)>
<ohos.ai.cv.common.CvRect: int hashCode()>
<java.io.Writer: void <init>()>
<java.math.BigInteger: void <init>(java.lang.String)>
<ohos.aafwk.ability.AbilitySlice: int checkAndDeleteInvalidForms(java.util.List)>
<java.net.PasswordAuthentication: java.lang.String getUserName()>
<ohos.agp.components.TableLayout: void <init>(ohos.app.Context)>
<javax.crypto.NoSuchPaddingException: void <init>()>
<java.security.KeyStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)>
<ohos.agp.components.DatePicker: void setSelectedTextFont(ohos.agp.text.Font)>
<ohos.interwork.bundle.ElementNameEx: void <init>(ohos.bundle.ElementName)>
<java.lang.Byte: void <init>(byte)>
<ohos.global.resource.ResourceType: ohos.global.resource.ResourceType[] values()>
<ohos.telephony.TdscdmaSignalInformation: int hashCode()>
<ohos.telephony.TdscdmaSignalInformation: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.components.element.Element.OnChangeListener: void onChange(ohos.agp.components.element.Element)>
<ohos.aafwk.ability.ProcessErrorInfo: int getPid()>
<ohos.aafwk.ability.DeviceConfigInfo: int getExternalInputDevices()>
<ohos.media.recorder.Recorder: ohos.agp.graphics.Surface getVideoSurface()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>
<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>
<ohos.javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.Exception,java.lang.String)>
<ohos.agp.components.MagicLayout: int getFoldDirection()>
<ohos.utils.ObjectAttribute: boolean isReadOnly()>
<ohos.wifi.WifiScanInfo: int getRssi()>
<ohos.global.resource.solidxml.TypedAttribute: void <init>()>
<java.text.NumberFormat: void setGroupingUsed(boolean)>
<ohos.global.resource.solidxml.TypedAttribute.AttrData: void <init>()>
<java.sql.DataTruncation: int getDataSize()>
<ohos.rpc.RemoteProxy: void sendObituary(ohos.rpc.IRemoteObject.DeathRecipient)>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate dateNow()>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.text.MeasureFormat getCurrencyFormat(java.util.Locale)>
<java.io.CharArrayReader: void <init>(char[],int,int)>
<java.util.Arrays: java.lang.String toString(float[])>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLEventReader createXMLEventReader(ohos.javax.xml.transform.Source)>
<java.util.logging.LogManager: void readConfiguration(java.io.InputStream)>
<java.net.Authenticator: void setDefault(java.net.Authenticator)>
<java.time.OffsetDateTime: java.time.OffsetDateTime minusWeeks(long)>
<ohos.bundle.AbilityInfo.LaunchMode: ohos.bundle.AbilityInfo.LaunchMode valueOf(java.lang.String)>
<java.math.BigInteger: java.math.BigInteger or(java.math.BigInteger)>
<java.util.concurrent.ConcurrentNavigableMap: java.util.SortedMap headMap(java.lang.Object)>
<java.time.Period: java.time.chrono.ChronoPeriod minus(java.time.temporal.TemporalAmount)>
<java.net.Socket: void <init>(java.lang.String,int)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent cloneOperation()>
<ohos.event.notification.IAdvancedNotificationManager: void removeNotificationSlot(java.lang.String,java.lang.String)>
<java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<java.net.InterfaceAddress: java.net.InetAddress getBroadcast()>
<java.sql.SQLException: java.sql.SQLException getNextException()>
<ohos.agp.render.opengl.GLES30: void glInvalidateFramebuffer(int,int,int[])>
<java.util.concurrent.PriorityBlockingQueue: void <init>(int,java.util.Comparator)>
<java.text.DecimalFormat: java.lang.String toPattern()>
<ohos.agp.window.dialog.ListDialog: ohos.agp.window.dialog.ListDialog setItems(java.lang.String[])>
<java.util.PriorityQueue: void <init>(java.util.PriorityQueue)>
<java.util.concurrent.locks.ReentrantReadWriteLock: int getWriteHoldCount()>
<ohos.agp.components.Component: void setScrollbarThickness(int)>
<java.sql.DatabaseMetaData: boolean supportsOpenCursorsAcrossCommit()>
<ohos.app.AbilityContext: int verifyCallingOrSelfPermission(java.lang.String)>
<ohos.agp.utils.Matrix: float getSkewX()>
<ohos.global.icu.lang.UCharacter: boolean hasBinaryProperty(int,int)>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo.Builder requestNetworkType(int)>
<ohos.event.intentagent.IntentAgentHelper: int getHashCode(ohos.event.intentagent.IntentAgent)>
<java.io.FilterInputStream: long skip(long)>
<ohos.global.icu.text.TimeZoneFormat: boolean isFrozen()>
<ohos.agp.render.Canvas: void drawDeformedPixelMap(ohos.agp.render.PixelMapHolder,ohos.agp.render.PixelMapDrawInfo,ohos.agp.render.Paint)>
<javax.crypto.AEADBadTagException: void <init>()>
<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>
<javax.lang.model.element.Parameterizable: java.util.List getTypeParameters()>
<java.time.LocalDateTime: int getYear()>
<javax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket(int)>
<java.util.concurrent.BlockingDeque: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<ohos.telephony.ShortMessageManager: void sendMessage(int,java.lang.String,java.lang.String,byte[],short,ohos.telephony.ISendShortMessageCallback,ohos.telephony.IDeliveryShortMessageCallback)>
<java.util.prefs.NodeChangeEvent: java.util.prefs.Preferences getParent()>
<java.util.concurrent.ConcurrentSkipListMap: boolean containsKey(java.lang.Object)>
<ohos.global.icu.text.CompactDecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
<ohos.agp.render.MaskFilter: void <init>(byte[])>
<ohos.hiviewdfx.Debug: void functionTraceBegin()>
<ohos.bundle.LauncherAbilityInfo: ohos.agp.components.element.Element getIcon()>
<java.time.Duration: java.time.Duration ofSeconds(long)>
<java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime: java.lang.CharSequence subSequence(int,int)>
<java.net.SecureCacheResponse: java.security.Principal getPeerPrincipal()>
<java.util.zip.Inflater: void <init>()>
<java.math.BigInteger: void <init>(java.lang.String,int)>
<java.sql.CallableStatement: void setAsciiStream(java.lang.String,java.io.InputStream,int)>
<ohos.media.sessioncore.AVController.PlayControls: void prepareToPlayByUri(ohos.utils.net.Uri,ohos.utils.PacMap)>
<java.security.KeyStore.PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>
<java.nio.file.FileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>
<java.lang.Thread: java.lang.String toString()>
<ohos.batterymanager.BatteryInfo: ohos.batterymanager.BatteryInfo.BatteryHealthState getHealthStatus()>
<java.sql.DatabaseMetaData: boolean supportsMixedCaseQuotedIdentifiers()>
<java.text.NumberFormat: int getMinimumFractionDigits()>
<ohos.agp.render.Paint: float getLineHeightOffset()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThanOrEqualTo(java.lang.String,int)>
<ohos.agp.components.ScrollHelper: void doFlingX(int,int,int,int)>
<ohos.media.sessioncore.AVBrowserService: void notifyAVElementListUpdated(java.lang.String,ohos.utils.PacMap)>
<ohos.data.search.schema.PhotoItem: java.lang.Integer getSize()>
<java.util.Arrays: int[] copyOf(int[],int)>
<ohos.agp.render.render3d.Scene: java.util.Optional getNode(ohos.agp.render.render3d.Entity)>
<ohos.wifi.p2p.WifiP2pLinkedInfo: boolean isGroupOwner()>
<java.util.Locale: void <init>(java.lang.String)>
<java.sql.SQLTimeoutException: void <init>(java.lang.String,java.lang.String,int)>
<javax.sql.DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>
<ohos.data.distributed.common.FieldValueType: ohos.data.distributed.common.FieldValueType[] values()>
<ohos.global.icu.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>
<ohos.media.player.Player: boolean setNextPlayer(ohos.media.player.Player)>
<ohos.agp.colors.HslColor: boolean equals(java.lang.Object)>
<java.security.cert.Extension: boolean isCritical()>
<ohos.agp.render.opengl.GLES1X: void glEnable(int)>
<ohos.storageinfomgr.StorageInfoManager: ohos.storageinfomgr.StorageInfoManager newInstance(ohos.app.Context)>
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<ohos.sensor.bean.CategoryOrientation: void <init>(int,java.lang.String,java.lang.String,int,float,float,int,int,long,long)>
<java.time.DayOfWeek: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>
<java.nio.channels.AsynchronousSocketChannel: void read(java.nio.ByteBuffer,java.lang.Object,java.nio.channels.CompletionHandler)>
<java.util.Spliterator.OfPrimitive: java.util.Spliterator trySplit()>
<java.security.CryptoPrimitive: java.security.CryptoPrimitive valueOf(java.lang.String)>
<java.text.DateFormatSymbols: java.lang.String getLocalPatternChars()>
<javax.lang.model.util.Types: boolean contains(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>
<ohos.global.icu.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.agp.animation.Animator: void <init>()>
<ohos.javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<ohos.utils.Parcel: java.util.List readList()>
<ohos.utils.geo.DimensFloat: boolean equals(java.lang.Object)>
<ohos.media.common.sessioncore.AVControllerCallback: void onAVSessionEvent(java.lang.String,ohos.utils.PacMap)>
<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<javax.tools.JavaFileObject: javax.lang.model.element.Modifier getAccessLevel()>
<ohos.os.ProcessManager: void setThreadPriority(int)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform3uiv(int,int,int,int[])>
<ohos.agp.render.opengl.GLES20: void glGetFloatv(int,float[])>
<ohos.agp.render.opengl.GLES31: void glProgramUniform1f(int,int,float)>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setLatitude(java.lang.Double)>
<ohos.org.xml.sax.XMLReader: boolean getFeature(java.lang.String)>
<java.lang.Boolean: void <init>(boolean)>
<ohos.data.search.model.IndexForm: java.lang.String getIndexType()>
<java.time.format.DecimalStyle: char getPositiveSign()>
<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate dateEpochDay(long)>
<java.io.DataInputStream: java.lang.String readLine()>
<ohos.global.icu.text.UnicodeSetSpanner: java.lang.CharSequence trim(java.lang.CharSequence,ohos.global.icu.text.UnicodeSetSpanner.TrimOption)>
<ohos.agp.render.Picture: void draw(ohos.agp.render.Canvas)>
<ohos.agp.components.TabList.TabSelectedListener: void onUnselected(ohos.agp.components.TabList.Tab)>
<ohos.agp.utils.Rect: boolean equals(java.lang.Object)>
<java.nio.channels.spi.SelectorProvider: java.nio.channels.ServerSocketChannel openServerSocketChannel()>
<ohos.global.resource.ResourceManager: java.lang.String getIdentifier(int)>
<java.util.Arrays: void parallelSort(java.lang.Object[],int,int,java.util.Comparator)>
<ohos.org.w3c.dom.ls.LSInput: void setSystemId(java.lang.String)>
<java.util.concurrent.atomic.AtomicLongArray: long decrementAndGet(int)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query lessThanOrEqualTo(java.lang.String,java.lang.String)>
<java.net.URI: java.lang.String getAuthority()>
<java.security.cert.CRL: boolean isRevoked(java.security.cert.Certificate)>
<ohos.agp.render.render3d.systems.MorphingSystem: java.lang.String[] getTargetNames(long)>
<ohos.agp.components.Component: int getPaddingTop()>
<ohos.agp.utils.RectFloat: void modify(ohos.agp.utils.RectFloat)>
<ohos.security.permission.Permission.OnRequestPermissionsResult: void onResult(java.lang.String,java.lang.String[],int[])>
<ohos.agp.components.PageSlider: void setCurrentPage(int,boolean)>
<java.net.MulticastSocket: byte getTTL()>
<javax.crypto.KeyAgreement: void <init>(javax.crypto.KeyAgreementSpi,java.security.Provider,java.lang.String)>
<ohos.global.icu.text.Bidi: int getResultLength()>
<ohos.media.tubecore.AVTube.DeviceType: ohos.media.tubecore.AVTube.DeviceType valueOf(java.lang.String)>
<javax.crypto.spec.RC2ParameterSpec: void <init>(int)>
<java.net.Authenticator: java.net.URL getRequestingURL()>
<java.util.PriorityQueue: java.lang.Object[] toArray(java.lang.Object[])>
<ohos.net.http.SslError: void <init>(int,java.security.cert.X509Certificate,java.lang.String)>
<java.lang.StringBuilder: void setCharAt(int,char)>
<java.io.FilePermission: java.lang.String getActions()>
<java.util.Vector: void replaceAll(java.util.function.UnaryOperator)>
<ohos.agp.components.PageSliderProvider: void addDataSubscriber(ohos.agp.database.DataSetSubscriber)>
<java.lang.Float: int compare(float,float)>
<ohos.aafwk.ability.IntentAbility: void onCommand(ohos.aafwk.content.Intent,boolean)>
<ohos.data.resultset.ResultSetWrapper: void setExtensions(ohos.utils.PacMap)>
<ohos.global.icu.text.RelativeDateTimeFormatter: java.lang.String formatNumeric(double,ohos.global.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit)>
<ohos.agp.render.opengl.GLES20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<ohos.global.icu.util.TimeZone: ohos.global.icu.util.TimeZone getTimeZone(java.lang.String)>
<java.io.FileOutputStream: void write(int)>
<ohos.agp.render.render3d.math.Vector2: int hashCode()>
<java.lang.ExceptionInInitializerError: void <init>()>
<java.util.PrimitiveIterator.OfLong: void forEachRemaining(java.util.function.LongConsumer)>
<ohos.media.common.sessioncore.AVElement: void <init>(ohos.media.common.AVDescription,int)>
<java.security.KeyStore: java.lang.String getType()>
<ohos.global.icu.lang.UCharacter: char[] toChars(int)>
<ohos.media.audio.AudioManager: boolean setVolume(ohos.media.audio.AudioManager.AudioVolumeType,int)>
<ohos.agp.window.service.Display: void getRealSize(ohos.agp.utils.Point)>
<ohos.aafwk.ability.DataAbilityHelper: boolean reload(ohos.utils.net.Uri,ohos.utils.PacMap)>
<java.util.EmptyStackException: void <init>()>
<java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock: boolean tryLock(long,java.util.concurrent.TimeUnit)>
<ohos.account.OsAccount: void <init>()>
<java.nio.channels.UnresolvedAddressException: void <init>()>
<ohos.bluetooth.ble.BleCentralManager: void startScan(java.util.List,int,int,long)>
<ohos.global.icu.util.TimeZone.SystemTimeZoneType: ohos.global.icu.util.TimeZone.SystemTimeZoneType valueOf(java.lang.String)>
<ohos.agp.components.element.Element: int getAlpha()>
<ohos.global.icu.text.NumberFormat: void <init>()>
<javax.tools.Diagnostic: long getLineNumber()>
<ohos.global.icu.util.Currency: int getDefaultFractionDigits(ohos.global.icu.util.Currency.CurrencyUsage)>
<ohos.agp.window.service.Window: void setBackgroundColor(ohos.agp.colors.RgbColor)>
<ohos.os.ProcessManager: void <init>()>
<java.io.BufferedReader: java.util.stream.Stream lines()>
<ohos.wifi.p2p.WifiP2pConfig: void setPassphrase(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationContent: java.lang.String toString()>
<ohos.app.IAbilityManager: ohos.aafwk.ability.MemoryInfo[] getProcessMemoryInfo(int[])>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.util.ULocale getLocale()>
<java.lang.IllegalThreadStateException: void <init>()>
<ohos.telephony.TelephoneNumberUtils: java.lang.String convertPhoneNumber(java.lang.String)>
<java.sql.DriverManager: int getLoginTimeout()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates distinct()>
<ohos.miscservices.inputmethodability.TextInputClient: boolean insertText(java.lang.String)>
<java.sql.Wrapper: boolean isWrapperFor(java.lang.Class)>
<ohos.ai.cv.text.TextBlock: void setBoundingBox(ohos.ai.cv.common.BoundingBox)>
<java.sql.SQLTransientException: void <init>(java.lang.Throwable)>
<ohos.agp.components.PageFlipper: boolean isFlipping()>
<ohos.workscheduler.WorkScheduler: ohos.workscheduler.WorkInfo getWorkStatus(int)>
<java.util.prefs.Preferences: java.util.prefs.Preferences userNodeForPackage(java.lang.Class)>
<ohos.agp.components.PageSliderIndicator: void setItemOffset(int)>
<ohos.media.image.PixelMap: void setAlphaType(ohos.media.image.common.AlphaType)>
<java.time.YearMonth: int getMonthValue()>
<java.util.TreeMap: java.lang.Object ceilingKey(java.lang.Object)>
<ohos.global.icu.util.HebrewCalendar: void <init>()>
<ohos.security.keystore.KeyStoreKeySpec: int getSecKeySource()>
<ohos.media.image.common.Position: boolean equals(java.lang.Object)>
<ohos.agp.components.element.ElementContainer: void <init>()>
<ohos.media.common.Format: java.lang.String getStringValue(java.lang.String)>
<ohos.global.icu.text.UnicodeSetSpanner: int countIn(java.lang.CharSequence)>
<ohos.agp.components.DatePicker: int getMonth()>
<java.time.chrono.ChronoLocalDateTime: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<java.math.BigDecimal: java.math.BigDecimal movePointRight(int)>
<ohos.agp.components.Component: void setUserNextFocus(int,int)>
<ohos.global.icu.text.SimpleDateFormat: java.util.Date get2DigitYearStart()>
<java.util.jar.Attributes.Name: java.lang.String toString()>
<java.security.cert.PKIXCertPathValidatorResult: java.lang.Object clone()>
<java.sql.Time: void setYear(int)>
<java.util.logging.Logger: void info(java.util.function.Supplier)>
<ohos.rpc.MessageParcel: boolean writeAshmem(ohos.utils.Ashmem)>
<java.io.File: boolean renameTo(java.io.File)>
<ohos.utils.Ashmem: boolean writeToAShmem(byte[],int,int)>
<java.net.Inet6Address: int getScopeId()>
<ohos.agp.components.webengine.WebConfig: void setLocationPermit(boolean)>
<ohos.usb.USBRequest: void dequeue(boolean)>
<java.text.SimpleDateFormat: void setDateFormatSymbols(java.text.DateFormatSymbols)>
<java.sql.DatabaseMetaData: int getMaxColumnsInGroupBy()>
<ohos.event.commonevent.CommonEventSubscriber: boolean isOrderedCommonEvent()>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneFormat setGMTPattern(java.lang.String)>
<ohos.global.icu.text.Transliterator: ohos.global.icu.text.Transliterator getInstance(java.lang.String,int)>
<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator.Attribute,java.lang.Object,int,int)>
<java.io.ObjectStreamClass: long getSerialVersionUID()>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate dateNow(java.time.Clock)>
<ohos.data.search.schema.EventItem: ohos.data.search.schema.EventItem setLatitude(java.lang.Double)>
<ohos.event.notification.NotificationRequest.NotificationContent: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.render.Region: void <init>(ohos.agp.utils.Rect)>
<ohos.agp.render.opengl.GLES20: void glActiveTexture(int)>
<ohos.agp.transition.TransitionScheduler.ITransitionEndListener: void onTransitionEnd()>
<java.util.Hashtable: boolean isEmpty()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean tryRelease(long)>
<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>
<ohos.agp.components.Clock: java.lang.CharSequence getFormatIn12HourMode()>
<ohos.media.recorder.Recorder: boolean pause()>
<ohos.data.resultset.SharedBlock: boolean marshalling(ohos.utils.Parcel)>
<java.io.RandomAccessFile: void writeShort(int)>
<ohos.utils.PlainArray: java.lang.Object get(int,java.lang.Object)>
<ohos.data.resultset.ResultSetWrapper: void <init>(ohos.data.resultset.ResultSet)>
<java.lang.Byte: java.lang.String toString(byte)>
<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>
<javax.crypto.KeyGeneratorSpi: void engineInit(int,java.security.SecureRandom)>
<java.time.chrono.Chronology: boolean isLeapYear(long)>
<java.util.concurrent.SynchronousQueue: boolean offer(java.lang.Object)>
<java.security.KeyStoreSpi: void <init>()>
<java.time.OffsetTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: java.lang.String getExpandedTitle()>
<ohos.global.icu.util.Calendar: int compareTo(java.lang.Object)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThan(java.lang.String,float)>
<java.io.PipedInputStream: void close()>
<ohos.data.resultset.AbsResultSet: void setExtensions(ohos.utils.PacMap)>
<ohos.multimodalinput.event.SpeechEvent: java.lang.String getDeviceId()>
<java.util.logging.Logger: void exiting(java.lang.String,java.lang.String)>
<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<java.util.function.Consumer: java.util.function.Consumer andThen(java.util.function.Consumer)>
<ohos.miscservices.pasteboard.PasteData: void addTextRecord(java.lang.CharSequence)>
<ohos.eventhandler.EventRunner: ohos.eventhandler.EventQueue getEventQueue()>
<ohos.sensor.data.CategoryOrientationData: void getDeviceRotationMatrix(float[],float[])>
<ohos.agp.components.webengine.WebConfig: void setWebStoragePermit(boolean)>
<ohos.org.xml.sax.helpers.DefaultHandler: void processingInstruction(java.lang.String,java.lang.String)>
<java.util.Dictionary: java.lang.Object get(java.lang.Object)>
<ohos.agp.render.opengl.GLES20: void glGetIntegerv(int,int[])>
<java.util.stream.IntStream: java.util.stream.IntStream empty()>
<ohos.agp.render.opengl.GLES30: long glFenceSync(int,int)>
<java.util.LinkedList: java.util.Spliterator spliterator()>
<java.sql.SQLTransientConnectionException: void <init>(java.lang.String,java.lang.String)>
<ohos.accessibility.AccessibilityAbilityInfo: void <init>()>
<ohos.global.resource.ResourceManager: ohos.global.configuration.Configuration getConfiguration()>
<ohos.global.icu.util.TaiwanCalendar: void <init>(int,int,int)>
<java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>
<java.io.Console: java.io.Reader reader()>
<ohos.data.search.schema.NoticeItem: java.lang.Long getNoticeDate()>
<java.util.concurrent.ConcurrentSkipListSet: java.util.NavigableSet tailSet(java.lang.Object)>
<javax.sql.ConnectionPoolDataSource: javax.sql.PooledConnection getPooledConnection()>
<java.security.cert.PKIXParameters: void <init>(java.util.Set)>
<ohos.aafwk.ability.DataAbilityResult: void <init>(int)>
<ohos.nfc.NfcController.ReaderModeCallbackStub: ohos.rpc.IRemoteObject asObject()>
<ohos.agp.utils.Circle: void setCenterX(float)>
<ohos.aafwk.ability.fraction.Fraction: void onBackground()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates in(java.lang.String,java.util.Date[])>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object peekLast()>
<java.util.concurrent.ConcurrentSkipListSet: int size()>
<ohos.agp.render.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,float[])>
<ohos.global.icu.text.DateTimePatternGenerator: ohos.global.icu.text.DateTimePatternGenerator cloneAsThawed()>
<java.nio.ByteBuffer: char getChar()>
<java.lang.reflect.AccessibleObject: void <init>()>
<ohos.agp.components.Component: java.lang.Object getTag()>
<ohos.global.icu.text.DateIntervalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<javax.security.cert.CertificateParsingException: void <init>(java.lang.String)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenCombine(java.util.concurrent.CompletionStage,java.util.function.BiFunction)>
<ohos.aafwk.content.Intent: int cloneByIntent(ohos.aafwk.content.Intent,int)>
<ohos.agp.components.SlideDrawer: boolean closeSmoothly(ohos.agp.components.SlideDrawer.SlideDirection,int)>
<java.util.logging.ConsoleHandler: void close()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query greaterThan(java.lang.String,java.lang.String)>
<ohos.agp.render.SweepShader: float getShaderXCoordinate()>
<ohos.data.preferences.Preferences: ohos.data.preferences.Preferences clear()>
<ohos.javax.xml.namespace.QName: java.lang.String toString()>
<ohos.agp.components.ListContainer: void removeComponent(ohos.agp.components.Component)>
<java.util.TreeMap: java.util.Map.Entry pollLastEntry()>
<java.text.FieldPosition: void <init>(java.text.Format.Field,int)>
<ohos.aafwk.abilityjet.activedata.DataObserver: void onChanged(java.lang.Object)>
<ohos.bundle.IBundleManager: ohos.aafwk.content.Intent getLaunchIntentForBundle(java.lang.String)>
<ohos.agp.render.Canvas: int getDeviceDensity(ohos.app.Context)>
<java.util.Deque: boolean removeLastOccurrence(java.lang.Object)>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getShortMonths()>
<ohos.global.icu.util.DateInterval: java.lang.String toString()>
<ohos.javax.xml.stream.XMLStreamWriter: void writeDTD(java.lang.String)>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.media.image.PixelMap: ohos.media.image.PixelMap create(ohos.media.image.PixelMap.InitializationOptions)>
<ohos.ai.cv.text.ITextDetector: int detect(ohos.ai.cv.common.VisionImage,ohos.ai.cv.text.Text,ohos.ai.cv.common.VisionCallback)>
<java.time.YearMonth: java.time.YearMonth minus(java.time.temporal.TemporalAmount)>
<java.time.Duration: int compareTo(java.lang.Object)>
<java.util.concurrent.atomic.AtomicLong: void <init>()>
<java.net.URI: java.lang.String getRawQuery()>
<ohos.wifi.WifiScanInfo: int getBand()>
<java.math.BigInteger: float floatValue()>
<ohos.bluetooth.ble.BlePeripheralManager: java.util.List getServices()>
<ohos.utils.PersistablePacMap: long[] getLongValueArray(java.lang.String)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void invokeAbilityOnPostStart(ohos.aafwk.ability.Ability)>
<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.event.notification.NotificationRequest: boolean isOnlyLocal()>
<ohos.agp.render.opengl.GLES31: java.lang.String glGetProgramPipelineInfoLog(int)>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean requestBleConnectionPriority(int)>
<ohos.data.resultset.ResultSetWrapper: void close()>
<ohos.event.commonevent.MatchingSkills: void addEntity(java.lang.String)>
<java.security.cert.PKIXCertPathChecker: boolean isForwardCheckingSupported()>
<ohos.global.icu.number.LocalizedNumberFormatter: int hashCode()>
<java.sql.CallableStatement: float getFloat(int)>
<ohos.bundle.FormInfo: java.lang.String getBundleName()>
<ohos.bundle.CommonEventInfo: java.util.List getEvents()>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder setVariant(java.lang.String)>
<ohos.javax.xml.parsers.FactoryConfigurationError: java.lang.Throwable getCause()>
<ohos.data.search.schema.EmailItem: java.lang.String getAttachment()>
<java.security.KeyStore: void deleteEntry(java.lang.String)>
<ohos.ai.cv.text.TextConfiguration: int getLevel()>
<java.util.concurrent.ConcurrentSkipListSet: boolean contains(java.lang.Object)>
<java.nio.file.Files: void delete(java.nio.file.Path)>
<javax.net.ssl.SNIServerName: boolean equals(java.lang.Object)>
<ohos.global.icu.text.DateFormat: java.lang.String format(java.util.Date)>
<ohos.event.commonevent.CommonEventSubscriber: java.lang.String getData()>
<ohos.agp.utils.Rect: boolean marshalling(ohos.utils.Parcel)>
<java.lang.Character: boolean isJavaIdentifierStart(char)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet addAll(ohos.global.icu.text.UnicodeSet)>
<java.beans.PropertyChangeEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>
<ohos.agp.render.opengl.GLES1X: void glClientActiveTexture(int)>
<java.nio.LongBuffer: long get()>
<ohos.account.app.AppAccountAbility: java.lang.String getAccountExtraInfo(java.lang.String)>
<ohos.global.icu.text.Bidi: int[] getLogicalMap()>
<java.util.OptionalInt: void ifPresent(java.util.function.IntConsumer)>
<ohos.data.DatabaseFileConfig.Builder: ohos.data.DatabaseFileConfig.Builder setName(java.lang.String)>
<javax.lang.model.util.ElementFilter: java.util.List typesIn(java.lang.Iterable)>
<java.net.SocketImpl: void <init>()>
<java.util.TimeZone: boolean hasSameRules(java.util.TimeZone)>
<ohos.data.async.RdbStoreAsyncHandler: void <init>(ohos.data.rdb.RdbStore)>
<java.util.ArrayDeque: void <init>(java.util.Collection)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal multiply(ohos.global.icu.math.BigDecimal)>
<ohos.agp.render.opengl.GLES32: void glTexParameterIuiv(int,int,int[])>
<ohos.rpc.RemoteObject: ohos.rpc.IRemoteBroker queryLocalInterface(java.lang.String)>
<java.lang.String: void getBytes(int,int,byte[],int)>
<java.util.concurrent.LinkedTransferQueue: boolean remove(java.lang.Object)>
<java.util.Arrays: void fill(short[],int,int,short)>
<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>
<java.util.Objects: boolean nonNull(java.lang.Object)>
<ohos.nfc.tag.TagManager: void checkConnected()>
<java.text.NumberFormat: java.util.Currency getCurrency()>
<ohos.telephony.IDeliveryShortMessageCallback: void deliveryShortMessageResult(byte[])>
<java.text.StringCharacterIterator: char previous()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setAdditionalData(ohos.aafwk.content.IntentParams)>
<javax.crypto.EncryptedPrivateKeyInfo: java.security.AlgorithmParameters getAlgParameters()>
<ohos.bluetooth.ble.BleAdvertiseData.Builder: ohos.bluetooth.ble.BleAdvertiseData build()>
<ohos.javax.xml.parsers.SAXParser: void <init>()>
<java.util.Scanner: java.util.Scanner useLocale(java.util.Locale)>
<java.sql.Statement: java.sql.SQLWarning getWarnings()>
<java.nio.channels.SocketChannel: int write(java.nio.ByteBuffer)>
<java.util.stream.StreamSupport: java.util.stream.IntStream intStream(java.util.function.Supplier,int,boolean)>
<ohos.aafwk.ability.Lifecycle: ohos.aafwk.ability.Lifecycle.Event getLifecycleState()>
<java.time.Year: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.render.opengl.GLES31: void <init>()>
<ohos.hiviewdfx.FaultLogger.FaultLogInfo: java.util.Optional getLogFileStream()>
<java.text.StringCharacterIterator: char first()>
<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory)>
<java.time.LocalDate: java.time.LocalDate withYear(int)>
<ohos.agp.utils.Matrix: void setSkew(float,float,float,float)>
<java.lang.invoke.MutableCallSite: void <init>(java.lang.invoke.MethodHandle)>
<ohos.agp.components.NestedScrollCoordinator: void <init>(ohos.app.Context)>
<java.sql.PreparedStatement: void setObject(int,java.lang.Object)>
<ohos.agp.components.TableLayout.LayoutConfig: void <init>(ohos.agp.components.TableLayout.LayoutConfig)>
<ohos.agp.components.Component.VoiceEvent: java.lang.String getSpeech()>
<ohos.agp.render.Path: void cubicTo(ohos.agp.utils.Point,ohos.agp.utils.Point,ohos.agp.utils.Point)>
<java.util.Arrays: int binarySearch(long[],long)>
<ohos.agp.render.Path: void rMoveTo(float,float)>
<ohos.agp.components.Component: void setPivot(ohos.agp.utils.Point)>
<ohos.wifi.WifiDeviceConfig: java.lang.String getSsid()>
<java.sql.DatabaseMetaData: boolean supportsExtendedSQLGrammar()>
<ohos.miscservices.timeutility.Timer.RepeatTimer: void stop()>
<javax.lang.model.util.SimpleElementVisitor6: java.lang.Object visitPackage(javax.lang.model.element.PackageElement,java.lang.Object)>
<ohos.account.AccountAbility: boolean isOsAccountKingKong()>
<java.util.logging.Logger: void warning(java.lang.String)>
<ohos.global.icu.math.BigDecimal: java.math.BigInteger toBigIntegerExact()>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getNumberInstance(java.util.Locale)>
<ohos.agp.colors.Color: void setAlpha(int)>
<javax.crypto.CipherSpi: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<javax.tools.ForwardingJavaFileManager: void flush()>
<java.security.Provider: void forEach(java.util.function.BiConsumer)>
<ohos.agp.colors.RgbColor: void setGreen(int)>
<ohos.aafwk.content.Intent: boolean marshalling(ohos.utils.Parcel)>
<java.util.Iterator: boolean hasNext()>
<java.util.regex.Matcher: boolean find()>
<java.security.MessageDigestSpi: void engineReset()>
<ohos.agp.components.Component: void setForeground(ohos.agp.components.element.Element)>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale forLocale(java.util.Locale)>
<ohos.agp.components.AbsButton: void setCheckedStateChangedListener(ohos.agp.components.AbsButton.CheckedStateChangedListener)>
<java.security.Provider: java.util.Set keySet()>
<ohos.data.rdb.ValuesBucket: void putDouble(java.lang.String,java.lang.Double)>
<java.sql.CallableStatement: java.sql.RowId getRowId(int)>
<ohos.agp.render.render3d.math.Vector3: void <clinit>()>
<javax.tools.JavaFileManager: boolean hasLocation(javax.tools.JavaFileManager.Location)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setDeliveryTime(long)>
<ohos.media.audio.AudioManager.AudioRingMode: int getValue()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object reduceValues(long,java.util.function.Function,java.util.function.BiFunction)>
<ohos.hiviewdfx.Caution: java.lang.String getCustomMessage()>
<java.time.OffsetDateTime: java.time.OffsetDateTime minus(java.time.temporal.TemporalAmount)>
<java.util.logging.MemoryHandler: void <init>()>
<ohos.utils.system.SystemCapability.Aafwk: void <init>()>
<ohos.global.icu.lang.UCharacter: boolean isULowercase(int)>
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoLocalDate plus(java.time.temporal.TemporalAmount)>
<ohos.event.notification.ReminderRequestCalendar: void <init>(java.time.LocalDateTime,int[],int[])>
<java.io.InputStreamReader: void close()>
<ohos.global.icu.text.DateFormatSymbols: void <init>(ohos.global.icu.util.Calendar,ohos.global.icu.util.ULocale)>
<ohos.global.icu.text.MessageFormat.Field: void <init>(java.lang.String)>
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>
<ohos.agp.render.opengl.GLES1X: void glMaterialxv(int,int,java.nio.IntBuffer)>
<ohos.agp.components.ComponentParent: void removeComponentAt(int)>
<ohos.agp.render.MaskFilter.Blur: ohos.agp.render.MaskFilter.Blur valueOf(java.lang.String)>
<ohos.media.camera.device.FrameConfig.Builder: ohos.location.Location getLocation()>
<java.util.HashMap: void forEach(java.util.function.BiConsumer)>
<ohos.media.tubecore.AVTube.PlayMode: void <clinit>()>
<ohos.media.audio.AudioCapturer: int getMinBufferSize(int,int,int)>
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>
<ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime: java.lang.Appendable appendTo(java.lang.Appendable)>
<ohos.global.icu.text.StringSearch: int getIndex()>
<ohos.media.camera.device.CameraInfo: int getDeviceLinkType(java.lang.String)>
<java.util.BitSet: java.lang.String toString()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Map.Entry firstEntry()>
<javax.crypto.spec.PBEKeySpec: byte[] getSalt()>
<ohos.agp.animation.Animator.TimelineCurve: float getCurvedTime(float)>
<ohos.agp.render.opengl.GLES1X: void glBindFramebufferOES(int,int)>
<ohos.interwork.eventhandler.CourierEx: void send(ohos.eventhandler.InnerEvent)>
<java.nio.file.attribute.AclEntry.Builder: java.nio.file.attribute.AclEntry.Builder setFlags(java.util.Set)>
<java.security.SecureRandom: void <init>()>
<java.sql.DatabaseMetaData: java.sql.RowIdLifetime getRowIdLifetime()>
<ohos.global.icu.text.UCharacterIterator: int currentCodePoint()>
<ohos.global.icu.text.DecimalFormatSymbols: void setCurrency(ohos.global.icu.util.Currency)>
<ohos.aafwk.ability.ContinuationState: void <clinit>()>
<ohos.agp.window.service.Display: int getRotation()>
<ohos.ai.cv.text.TextBlock: void <init>()>
<javax.net.ssl.ExtendedSSLSession: java.lang.String[] getLocalSupportedSignatureAlgorithms()>
<ohos.app.Context: ohos.global.resource.ResourceManager getResourceManager()>
<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setIntentAgent(java.lang.String,java.lang.String)>
<ohos.bundle.ShortcutInfo: java.lang.String getBundleName()>
<javax.security.cert.Certificate: int hashCode()>
<java.lang.invoke.WrongMethodTypeException: void <init>()>
<ohos.agp.components.Text: int getAutoScrollingCount()>
<ohos.global.icu.util.IslamicCalendar: void <init>(java.util.Locale)>
<ohos.media.audio.AudioManager.RingtoneType: ohos.media.audio.AudioManager.RingtoneType[] values()>
<javax.lang.model.util.TypeKindVisitor6: void <init>(java.lang.Object)>
<java.time.chrono.HijrahDate: int lengthOfMonth()>
<java.util.WeakHashMap: int size()>
<ohos.agp.components.Component: int getEstimatedHeight()>
<ohos.data.orm.OrmContext: ohos.data.orm.OrmPredicates where(java.lang.Class)>
<ohos.global.icu.text.UnicodeSetSpanner.CountMethod: ohos.global.icu.text.UnicodeSetSpanner.CountMethod[] values()>
<java.util.concurrent.CompletionException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.utils.Matrix: void mapPoints(float[],float[])>
<java.security.cert.CertPathBuilder: java.security.Provider getProvider()>
<java.util.Objects: boolean isNull(java.lang.Object)>
<ohos.agp.components.surfaceprovider.SurfaceProvider: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.util.Scanner: double nextDouble()>
<java.util.regex.Matcher: java.lang.String group(int)>
<ohos.ai.cv.common.CvRect: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.media.audio.SoundPlayer.OnCreateCompleteListener: void onCreateComplete(ohos.media.audio.SoundPlayer,int,int)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,int,java.lang.Object[])>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThan(java.lang.String,long)>
<ohos.media.audio.AudioDeviceDescriptor: void setChannelIndexMasks(int[])>
<ohos.miscservices.download.DownloadConfig.Builder: ohos.miscservices.download.DownloadConfig build()>
<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners()>
<ohos.agp.components.StackLayout.LayoutConfig: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.utils.Parcel: float readFloat()>
<java.util.AbstractMap.SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>
<ohos.hiviewdfx.FaultLogger.FaultLogInfo: java.lang.String getSummary()>
<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>
<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>
<java.sql.SQLClientInfoException: void <init>(java.lang.String,java.util.Map,java.lang.Throwable)>
<ohos.global.icu.text.DecimalFormat: void setScientificNotation(boolean)>
<java.util.logging.LogRecord: void setThrown(java.lang.Throwable)>
<java.util.Calendar: int getActualMinimum(int)>
<ohos.bluetooth.ble.GattDescriptor: java.util.UUID getUuid()>
<ohos.media.audio.AudioManager: boolean unmute(ohos.media.audio.AudioManager.AudioVolumeType)>
<java.lang.ref.Reference: boolean isEnqueued()>
<ohos.agp.components.Text.TextSizeType: ohos.agp.components.Text.TextSizeType[] values()>
<ohos.agp.components.SearchBar: ohos.agp.components.Component.ClickedListener getSearchClickListener()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage runAfterEither(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.location.GeoAddress: java.lang.String getPlaceName()>
<ohos.agp.utils.Rect: void rotateBy(ohos.agp.utils.Rect.RotationEnum)>
<ohos.bluetooth.A2dpSource: ohos.bluetooth.A2dpSource getProfile(ohos.app.Context)>
<ohos.bundle.ShortcutIntent: void <init>(ohos.bundle.ShortcutIntent)>
<ohos.utils.BasePacMap: void <init>(int)>
<java.util.concurrent.atomic.DoubleAdder: int intValue()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet applyIntPropertyValue(int,int)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder appendDecodedPath(java.lang.String)>
<ohos.org.xml.sax.SAXParseException: int getColumnNumber()>
<java.util.function.LongBinaryOperator: long applyAsLong(long,long)>
<java.lang.Thread: void join(long,int)>
<java.net.URI: java.net.URL toURL()>
<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission valueOf(java.lang.String)>
<ohos.aafwk.ability.AbilityLifecycleExecutor.LifecycleState: void <clinit>()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates groupBy(java.lang.String[])>
<ohos.agp.window.service.WindowManager: ohos.media.image.PixelMap captureScreen(ohos.agp.utils.Rect,int,int,int)>
<java.io.RandomAccessFile: void writeLong(long)>
<java.util.List: int indexOf(java.lang.Object)>
<java.util.Arrays: void parallelSort(byte[])>
<java.util.concurrent.locks.ReentrantLock: int getHoldCount()>
<ohos.global.resource.solidxml.TypedAttribute: java.lang.String getName()>
<java.util.logging.Handler: java.util.logging.Filter getFilter()>
<ohos.aafwk.content.Intent.OperationBuilder: ohos.aafwk.content.Intent.OperationBuilder withFlags(int)>
<ohos.rpc.MessageOption: int getWaitTime()>
<ohos.data.search.SearchAbility: int clearIndexForm(java.lang.String)>
<ohos.agp.render.render3d.resources.ResourceManager: java.util.Optional getRenderDataStorePod(java.lang.String)>
<ohos.global.icu.text.MessagePattern: boolean isFrozen()>
<ohos.media.player.Player: boolean prepare()>
<ohos.agp.components.ScrollView: void fluentScrollByY(int)>
<java.io.DataInput: long readLong()>
<ohos.data.search.model.SearchableEntity: boolean isAllowGlobalSearch()>
<java.util.Collection: java.util.Spliterator spliterator()>
<javax.crypto.spec.SecretKeySpec: boolean equals(java.lang.Object)>
<ohos.aafwk.ability.Ability: ohos.aafwk.ability.ContinuationState getContinuationState()>
<ohos.media.codec.CodecDescription: java.lang.String[] getMimeTypes()>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: ohos.media.common.sessioncore.AVPlaybackState build()>
<java.lang.ThreadGroup: void stop()>
<ohos.miscservices.inputmethodability.InputMethodAbility: void onCommand(ohos.aafwk.content.Intent,boolean,int)>
<java.text.DateFormat: boolean equals(java.lang.Object)>
<java.time.ZonedDateTime: java.time.ZonedDateTime minusWeeks(long)>
<ohos.interwork.utils.PacMapEx: int size()>
<java.time.YearMonth: java.time.YearMonth plus(java.time.temporal.TemporalAmount)>
<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>
<javax.net.ssl.SSLSessionBindingEvent: java.lang.String getName()>
<java.util.concurrent.BlockingDeque: java.lang.Object pollLast(long,java.util.concurrent.TimeUnit)>
<ohos.event.notification.NotificationUserInput: java.lang.String toString()>
<java.io.File: java.io.File[] listRoots()>
<java.security.spec.RSAPrivateCrtKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>
<ohos.agp.components.MagicLayout: ohos.agp.components.ComponentContainer.LayoutConfig createLayoutConfig(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.time.LocalDate: int get(java.time.temporal.TemporalField)>
<ohos.bundle.ShortcutIntent: boolean marshalling(ohos.utils.Parcel)>
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>
<ohos.global.icu.text.DecimalFormat: void setPositiveSuffix(java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glUniform2ui(int,int,int)>
<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>
<ohos.agp.graphics.TextureHolder: void refreshTextureImage()>
<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<ohos.data.async.DataAbilityAsyncHandler: void addQueryJob(ohos.data.async.JobParams,ohos.utils.net.Uri,java.lang.String[],ohos.data.dataability.DataAbilityPredicates,ohos.data.async.QueryCallback)>
<ohos.utils.RationalNumber: java.lang.String toString()>
<java.io.BufferedOutputStream: void write(byte[],int,int)>
<ohos.bundle.AbilityInfo: void <init>()>
<ohos.agp.render.opengl.GLES20: void glBindBuffer(int,int)>
<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>
<ohos.agp.transition.TransitionZoomingMove: void <init>()>
<ohos.utils.PacMap: byte[] getByteValueArray(java.lang.String)>
<java.sql.SQLInput: java.sql.RowId readRowId()>
<java.util.jar.Pack200.Unpacker: void unpack(java.io.File,java.util.jar.JarOutputStream)>
<java.sql.SQLFeatureNotSupportedException: void <init>()>
<ohos.miscservices.timeutility.Time: long getCurrentTimeNs()>
<ohos.global.icu.util.Calendar: int handleGetMonthLength(int,int)>
<java.nio.channels.MembershipKey: void <init>()>
<ohos.agp.render.render3d.math.Quaternion: java.lang.String toString()>
<java.util.Arrays: int hashCode(byte[])>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter getInstance(java.util.Locale)>
<ohos.event.notification.NotificationSlot: boolean isEnableBypassDnd()>
<ohos.media.audio.AudioManager: int getVolume(ohos.media.audio.AudioManager.AudioVolumeType)>
<ohos.event.notification.NotificationRequest: ohos.agp.components.ComponentProvider getCustomView()>
<ohos.vibrator.agent.VibratorAgent: boolean isEffectSupport(int,java.lang.String)>
<javax.net.ssl.SSLServerSocket: boolean getUseClientMode()>
<ohos.agp.components.PageFlipper: void showNext()>
<ohos.utils.zson.ZSONArray: void <init>()>
<ohos.event.commonevent.AsyncCommonEventResult: void setCode(int)>
<java.security.MessageDigestSpi: byte[] engineDigest()>
<ohos.media.photokit.metadata.AVThumbnailUtils: void <init>()>
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<ohos.media.common.VideoProperty.Builder: void <init>()>
<ohos.wifi.WifiLinkedInfo.ConnState: ohos.wifi.WifiLinkedInfo.ConnState[] values()>
<ohos.global.icu.text.DateFormat: void setTimeZone(ohos.global.icu.util.TimeZone)>
<ohos.agp.components.TickTimer: void setCountDown(boolean)>
<java.io.Console: java.lang.String readLine(java.lang.String,java.lang.Object[])>
<javax.crypto.Mac: void doFinal(byte[],int)>
<ohos.agp.render.Region: boolean op(ohos.agp.utils.Rect,ohos.agp.render.Region,ohos.agp.render.Region.Op)>
<ohos.app.Context: void compelVerifyCallerPermission(java.lang.String,java.lang.String)>
<java.time.OffsetDateTime: java.time.OffsetDateTime minusSeconds(long)>
<ohos.global.icu.text.UnicodeSetSpanner: java.lang.String deleteFrom(java.lang.CharSequence,ohos.global.icu.text.UnicodeSet.SpanCondition)>
<java.util.Map: void putAll(java.util.Map)>
<ohos.bundleactive.BundleActiveInfos: long queryAbilityInFgWholeMs()>
<java.util.Properties: void list(java.io.PrintStream)>
<ohos.hiviewdfx.Debug: int getProcessPrivateDirty(ohos.hiviewdfx.Debug.MemType)>
<ohos.agp.render.opengl.GLES30: void glDeleteVertexArrays(int,int[])>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>
<java.text.Annotation: java.lang.Object getValue()>
<ohos.aafwk.ability.FormBindingData: java.lang.String getDataString()>
<ohos.wifi.p2p.WifiP2pNetworkInfo: void <init>()>
<ohos.global.icu.lang.UCharacter: ohos.global.icu.util.ValueIterator getExtendedNameIterator()>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal divide(ohos.global.icu.math.BigDecimal,int)>
<java.nio.channels.NonWritableChannelException: void <init>()>
<ohos.agp.render.Canvas: void drawPicture(ohos.agp.render.Picture,ohos.agp.utils.RectFloat)>
<ohos.aafwk.ability.Form: ohos.agp.components.Component getComponent()>
<ohos.bundle.AbilityInfo: java.lang.String getModuleName()>
<java.util.jar.JarFile: void <init>(java.io.File,boolean,int)>
<java.io.StringWriter: void flush()>
<java.io.ObjectInputStream: int readInt()>
<ohos.event.intentagent.IntentAgent.OnCompleted: void onSendCompleted(ohos.event.intentagent.IntentAgent,ohos.aafwk.content.Intent,int,java.lang.String,ohos.aafwk.content.IntentParams)>
<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>
<ohos.global.icu.text.MessageFormat: java.lang.String toPattern()>
<java.util.concurrent.LinkedTransferQueue: int drainTo(java.util.Collection)>
<ohos.sensor.data.SensorData: ohos.sensor.bean.SensorBase getSensor()>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.security.spec.ECFieldFp: int getFieldSize()>
<java.lang.reflect.Modifier: boolean isPrivate(int)>
<ohos.bundle.AbilityInfo: java.util.List getDeviceTypes()>
<java.util.stream.IntStream: java.util.stream.DoubleStream asDoubleStream()>
<ohos.rpc.MessageParcel: void writeException(java.lang.Exception)>
<java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>
<java.util.ArrayDeque: boolean offerFirst(java.lang.Object)>
<java.lang.Character.UnicodeBlock: java.lang.Character.UnicodeBlock forName(java.lang.String)>
<ohos.utils.geo.Point: void translate(float,float)>
<ohos.javax.xml.validation.Validator: boolean getFeature(java.lang.String)>
<java.net.HttpCookie: long getMaxAge()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates in(java.lang.String,java.lang.String[])>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int accumulateAndGet(java.lang.Object,int,java.util.function.IntBinaryOperator)>
<java.net.ServerSocket: void <init>()>
<ohos.global.icu.text.NumberingSystem: ohos.global.icu.text.NumberingSystem getInstance(int,boolean,java.lang.String)>
<ohos.event.commonevent.CommonEventSubscriber: void setData(java.lang.String)>
<ohos.rpc.IPCSkeleton: java.lang.String getCallingDeviceID()>
<ohos.media.common.sessioncore.AVPlaybackState: java.lang.CharSequence getAVPlaybackErrorMessage()>
<java.util.zip.InflaterOutputStream: void write(int)>
<ohos.media.player.Player: boolean play()>
<java.util.concurrent.ConcurrentMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query inInt(java.lang.String,java.util.List)>
<java.math.BigDecimal: int compareTo(java.lang.Object)>
<java.sql.DatabaseMetaData: boolean supportsStoredProcedures()>
<ohos.data.distributed.user.SingleKvStore: void removeDeviceData(java.lang.String)>
<java.lang.Math: float scalb(float,int)>
<java.util.prefs.AbstractPreferences: void removeNode()>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.text.DateIntervalInfo getDateIntervalInfo()>
<ohos.sensor.agent.CategoryOtherAgent: ohos.sensor.bean.SensorBase getSingleSensor(int)>
<java.util.stream.LongStream: long count()>
<ohos.sysappcomponents.contact.entity.PostalAddress: void <init>(java.lang.String,java.lang.String)>
<ohos.utils.net.Uri: int compareTo(java.lang.Object)>
<ohos.bundle.InstallParam: boolean marshalling(ohos.utils.Parcel)>
<ohos.accessibility.AccessibilityEventInfo: java.util.ArrayList getRecords()>
<ohos.aafwk.content.Intent: java.lang.String toUri()>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate dateEpochDay(long)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate of(int,int,int)>
<ohos.agp.render.opengl.GLES30: void glClearBufferfv(int,int,float[])>
<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>
<ohos.data.distributed.common.FieldNode: ohos.data.distributed.common.FieldValueType getType()>
<ohos.global.icu.text.Edits: ohos.global.icu.text.Edits.Iterator getCoarseIterator()>
<java.lang.String: boolean equals(java.lang.Object)>
<ohos.media.camera.device.FrameStateCallback: void <init>()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates innerJoin(java.lang.String)>
<java.time.Duration: long toHours()>
<java.sql.Timestamp: int getNanos()>
<ohos.global.configuration.Configuration: void <init>(ohos.global.configuration.Configuration)>
<ohos.media.common.sessioncore.AVElement: boolean isPlayable()>
<ohos.agp.components.Image: float getCornerRadius()>
<java.time.ZoneOffset: int compareTo(java.lang.Object)>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setMark(java.lang.Object)>
<java.time.chrono.ChronoZonedDateTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.LongStream longs(long,long,long)>
<ohos.media.photokit.metadata.AVLoggerConnection: void onServiceConnect()>
<ohos.sysappcomponents.contact.entity.PostalAddress: void setLabelId(ohos.app.Context,int)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeStartDocument()>
<javax.crypto.Mac: java.security.Provider getProvider()>
<ohos.event.intentagent.TriggerInfo.Builder: ohos.event.intentagent.TriggerInfo build()>
<ohos.agp.animation.AnimatorGroup: ohos.agp.animation.AnimatorGroup.Builder build()>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<java.util.OptionalInt: boolean isPresent()>
<java.util.concurrent.ThreadPoolExecutor: int getMaximumPoolSize()>
<ohos.agp.utils.Matrix: float getMaxScale()>
<ohos.sensor.agent.SensorAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback)>
<ohos.utils.geo.RectFloat.RotationEnum: ohos.utils.geo.RectFloat.RotationEnum valueOf(java.lang.String)>
<java.security.cert.X509CertSelector: void setIssuer(byte[])>
<java.lang.StrictMath: float max(float,float)>
<ohos.javax.xml.stream.XMLEventReader: java.lang.Object getProperty(java.lang.String)>
<java.util.function.Predicate: boolean test(java.lang.Object)>
<ohos.net.LocalSocket: java.io.InputStream getInputStream()>
<java.security.KeyStoreSpi: void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>
<ohos.sensor.agent.CategoryOtherAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryOtherDataCallback,ohos.sensor.bean.CategoryOther,long,long)>
<java.nio.channels.MembershipKey: java.nio.channels.MulticastChannel channel()>
<java.util.Formatter: void <init>(java.io.OutputStream)>
<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getPrime()>
<ohos.agp.utils.Matrix: boolean isFinite()>
<javax.lang.model.SourceVersion: javax.lang.model.SourceVersion valueOf(java.lang.String)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>
<javax.net.ssl.KeyManagerFactory: java.security.Provider getProvider()>
<ohos.media.image.common.Size: boolean equals(java.lang.Object)>
<ohos.agp.components.TimePicker: void <init>(ohos.app.Context)>
<ohos.security.keystore.KeyStoreProtectionParameter: boolean isKeyAccessible(int)>
<ohos.agp.render.opengl.GLES1X: void glLoadMatrixf(java.nio.FloatBuffer)>
<ohos.bluetooth.ble.BleScanResult: void <init>(ohos.bluetooth.ble.BlePeripheralDevice,java.util.Map,java.util.Map,java.util.List,int,long)>
<ohos.data.rdb.StoreConfig.Builder: void <init>()>
<ohos.agp.render.Picture: ohos.agp.render.Canvas beginRecording(int,int)>
<java.net.URL: java.lang.String getQuery()>
<java.util.stream.DoubleStream: java.util.Spliterator spliterator()>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty setLoopedListener(ohos.agp.animation.Animator.LoopedListener)>
<java.time.chrono.ThaiBuddhistDate: java.lang.String toString()>
<java.io.PrintWriter: java.lang.Appendable append(java.lang.CharSequence)>
<java.lang.Character: boolean isIdentifierIgnorable(int)>
<java.lang.StrictMath: double ceil(double)>
<ohos.event.notification.NotificationHelper: void cancelNotification(int)>
<ohos.utils.PlainIntArray: boolean contains(int)>
<ohos.telephony.PhoneNumberFormattingTextObserver: void <init>(java.lang.String)>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.text.DateIntervalFormat.FormattedDateInterval formatToValue(ohos.global.icu.util.DateInterval)>
<ohos.bundle.IBundleManager: boolean setClearUserDataFlag(java.lang.String,boolean)>
<ohos.nfc.tag.MessageRecord: ohos.nfc.tag.MessageRecord buildMime(java.lang.String,byte[])>
<ohos.global.icu.lang.UCharacter: byte getDirectionality(int)>
<ohos.aafwk.ability.ViewsStatus: ohos.aafwk.content.Intent getFullPageIntent()>
<ohos.sysappcomponents.calendar.entity.Events: boolean hasAttendeeInfo()>
<ohos.agp.text.TextForm: float getLineHeight()>
<java.nio.channels.FileLock: java.nio.channels.FileChannel channel()>
<javax.lang.model.util.TypeKindVisitor8: void <init>(java.lang.Object)>
<ohos.interwork.bundle.ElementNameEx: void setAbilityName(java.lang.String)>
<java.time.Month: boolean isSupported(java.time.temporal.TemporalField)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate date(int,int,int)>
<ohos.global.icu.text.UnicodeSet: java.lang.String toString()>
<java.time.Instant: long getLong(java.time.temporal.TemporalField)>
<javax.crypto.ExemptionMechanismSpi: int engineGetOutputSize(int)>
<java.security.SignatureSpi: java.security.AlgorithmParameters engineGetParameters()>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.RunnableScheduledFuture decorateTask(java.util.concurrent.Callable,java.util.concurrent.RunnableScheduledFuture)>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<ohos.workscheduler.WorkInfo: long getRepeatCycleTime()>
<ohos.data.preferences.Preferences: void registerObserver(ohos.data.preferences.Preferences.PreferencesObserver)>
<ohos.agp.components.SlideDrawer: boolean hasSlideListeners()>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.resources.GpuResourceHandle getEmissive()>
<ohos.media.recorder.RecorderProfile: void <init>(int,int,int,int,int,int,int,int,int,int,int,int)>
<ohos.utils.zson.ZSONObject: java.lang.Object get(java.lang.Object)>
<java.util.SplittableRandom: java.util.stream.IntStream ints(long)>
<java.security.KeyFactorySpi: java.security.Key engineTranslateKey(java.security.Key)>
<ohos.agp.render.render3d.Scene: ohos.agp.render.render3d.Entity createEntity()>
<ohos.global.icu.util.Calendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<ohos.data.rdb.DataObserverAsyncWrapper: void onChange()>
<ohos.agp.components.element.ElementContainer: void setElementState(ohos.agp.components.element.ElementContainer.ElementState)>
<ohos.bundle.IBundleManager: int isShortcutExist(java.lang.String,int)>
<ohos.agp.render.Canvas: void drawArc(ohos.agp.utils.RectFloat,ohos.agp.render.Arc,ohos.agp.render.Paint)>
<java.sql.SQLWarning: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.util.Locale: int hashCode()>
<ohos.workscheduler.WorkScheduler: boolean isLastWorkTimeOut(int)>
<ohos.global.icu.text.UnicodeSetIterator: void reset()>
<ohos.data.search.SearchAbility: void endSearch(java.lang.String,java.lang.String,ohos.data.search.SearchSession)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate plus(long,java.time.temporal.TemporalUnit)>
<ohos.ai.asr.AsrListener: void onError(int)>
<ohos.media.audio.AudioStreamInfo.ContentType: ohos.media.audio.AudioStreamInfo.ContentType[] values()>
<ohos.sysappcomponents.calendar.entity.Reminders: int getRemindType()>
<java.sql.Date: void setSeconds(int)>
<java.util.concurrent.Future: java.lang.Object get()>
<ohos.global.icu.text.DecimalFormat: void setMathContext(java.math.MathContext)>
<ohos.global.icu.util.GregorianCalendar: boolean isLeapYear(int)>
<java.lang.ClassCastException: void <init>()>
<java.nio.file.FileSystemException: java.lang.String getOtherFile()>
<java.lang.System: java.util.Properties getProperties()>
<ohos.utils.PacMap: void putLongValue(java.lang.String,long)>
<ohos.agp.components.element.ElementContainer: ohos.agp.components.element.ElementContainer.ElementState getElementState()>
<java.io.Writer: java.lang.Appendable append(java.lang.CharSequence)>
<java.util.OptionalInt: java.lang.String toString()>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate minus(java.time.temporal.TemporalAmount)>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,float[])>
<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>
<ohos.agp.animation.Animator.StateChangedListener: void onPause(ohos.agp.animation.Animator)>
<java.time.LocalTime: java.time.LocalTime plusMinutes(long)>
<java.security.cert.CertPathBuilderSpi: void <init>()>
<ohos.ai.cv.text.TextConfiguration.Builder: ohos.ai.cv.text.TextConfiguration.Builder setDetectType(int)>
<ohos.global.icu.util.Calendar: void add(int,int)>
<ohos.org.xml.sax.SAXNotRecognizedException: void <init>()>
<ohos.app.IAbilityManager: boolean canAbilityStartOnDisplay(ohos.app.Context,int,ohos.aafwk.content.Intent)>
<javax.crypto.SecretKeyFactorySpi: void <init>()>
<java.lang.reflect.Field: void setDouble(java.lang.Object,double)>
<ohos.telephony.SimInfoManager: java.lang.String getIsoCountryCodeForSim(int)>
<javax.net.ssl.SSLParameters: void <init>(java.lang.String[],java.lang.String[])>
<ohos.event.commonevent.MatchingSkills: void addScheme(java.lang.String)>
<ohos.os.ProcessManager: long getPastCpuTime()>
<java.sql.ResultSet: boolean isAfterLast()>
<ohos.data.search.schema.PlaceItem: ohos.data.search.schema.PlaceItem setProvince(java.lang.String)>
<ohos.bluetooth.ble.BleScanFilter: java.lang.String getPeripheralAddress()>
<java.util.prefs.AbstractPreferences: java.lang.String name()>
<ohos.bundle.ShortcutIntent: void setTargetClass(java.lang.String)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>
<ohos.data.resultset.AbsResultSet: boolean goToRow(int)>
<java.sql.DatabaseMetaData: boolean supportsUnionAll()>
<java.util.concurrent.SynchronousQueue: void clear()>
<ohos.javax.xml.stream.XMLInputFactory: void setXMLResolver(ohos.javax.xml.stream.XMLResolver)>
<java.security.spec.ECFieldF2m: void <init>(int,int[])>
<ohos.data.resultset.ResultSet: boolean goToLastRow()>
<ohos.accessibility.ability.GesturePathPositionDefine: float getPositionX()>
<ohos.javax.xml.stream.XMLStreamException: void <init>(java.lang.String,ohos.javax.xml.stream.Location)>
<java.text.FieldPosition: int getEndIndex()>
<ohos.telephony.CellularDataStateObserver: void onCellularDataFlow(int)>
<javax.security.auth.Subject: java.lang.Object doAs(javax.security.auth.Subject,java.security.PrivilegedAction)>
<java.util.SortedMap: java.lang.Object lastKey()>
<java.time.OffsetDateTime: int compareTo(java.lang.Object)>
<java.lang.ThreadLocal: void remove()>
<ohos.sysappcomponents.contact.entity.Name: java.lang.String getGivenName()>
<ohos.agp.render.render3d.components.CameraComponent: void setZfar(float)>
<ohos.data.search.schema.IndexSchemaType: ohos.data.search.schema.IndexSchemaType getSchemaType(int)>
<ohos.media.camera.params.FocusResult: int getState()>
<ohos.media.image.common.Rect: void <init>()>
<java.util.LongSummaryStatistics: void accept(long)>
<ohos.event.intentagent.TriggerInfo.Builder: ohos.event.intentagent.TriggerInfo.Builder setCode(int)>
<ohos.global.icu.text.DateIntervalInfo: boolean isFrozen()>
<ohos.eventhandler.EventHandler: void postSyncTask(java.lang.Runnable)>
<java.util.List: boolean retainAll(java.util.Collection)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)>
<java.net.URLConnection: boolean getDoOutput()>
<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>
<ohos.data.resultset.TableResultSet: boolean isColumnNull(int)>
<ohos.agp.components.PageSlider: void setPageMargin(int)>
<ohos.agp.render.Canvas: ohos.agp.utils.Rect getDeviceClipBounds()>
<ohos.bundle.AbilityInfo: ohos.bundle.AbilityInfo.AbilityType getType()>
<ohos.media.tubecore.AVTubeManager: void removeTubeObserver(ohos.media.tubecore.AVTubeManager.TubeObserver)>
<ohos.media.common.sessioncore.AVPlaybackState: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.render.render3d.resources.ResourceManager: ohos.agp.render.render3d.resources.ResourceHandle getEmptyResourceHandle()>
<java.util.concurrent.ThreadPoolExecutor: void setThreadFactory(java.util.concurrent.ThreadFactory)>
<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>
<ohos.media.sessioncore.AVSession: void setAVQueue(java.util.List)>
<java.io.FilenameFilter: boolean accept(java.io.File,java.lang.String)>
<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>
<java.security.KeyPairGenerator: void initialize(int,java.security.SecureRandom)>
<java.util.Locale: void <clinit>()>
<java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>
<ohos.interwork.ui.RemoteViewEx: int getRemoteResourceId(int)>
<ohos.ai.asr.AsrIntent: void setTimeoutThresholdMs(int)>
<java.text.ChoiceFormat: void applyPattern(java.lang.String)>
<ohos.nfc.tag.NdefMessage: void <init>(ohos.nfc.tag.MessageRecord[])>
<java.time.Period: java.time.chrono.ChronoPeriod plus(java.time.temporal.TemporalAmount)>
<ohos.agp.components.webengine.JsMessageResult: void confirm()>
<ohos.agp.render.render3d.resources.ResourceManager: java.util.List getMeshes()>
<java.time.OffsetDateTime: java.time.OffsetDateTime plusMonths(long)>
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>
<ohos.media.common.AVDescription.Builder: ohos.media.common.AVDescription.Builder setIcon(ohos.media.image.PixelMap)>
<java.math.BigInteger: int signum()>
<java.util.prefs.AbstractPreferences: void addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI()>
<ohos.agp.components.PageSliderIndicator: void setPageSlider(ohos.agp.components.PageSlider)>
<ohos.agp.render.render3d.resources.ResourceManager: ohos.agp.render.render3d.resources.GpuResourceHandle createUniformRingBuffer(java.lang.String,int)>
<ohos.distributedhardware.devicemanager.DeviceInfo: java.lang.String getNetworkId()>
<ohos.data.distributed.file.DistFile: java.io.File getParentFile()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates between(java.lang.String,int,int)>
<java.util.AbstractMap: boolean isEmpty()>
<ohos.telephony.CellularDataInfoManager: void addObserver(ohos.telephony.CellularDataStateObserver,int)>
<java.util.MissingFormatArgumentException: void <init>(java.lang.String)>
<ohos.data.resultset.AbsSharedResultSet: short getShort(int)>
<java.util.Scanner: java.lang.String next()>
<java.lang.Float: boolean isInfinite()>
<java.lang.Runtime: java.io.InputStream getLocalizedInputStream(java.io.InputStream)>
<java.util.Locale.Category: java.util.Locale.Category valueOf(java.lang.String)>
<ohos.data.orm.Clob: long position(java.lang.String,long)>
<ohos.agp.render.opengl.GLES20: void glDisable(int)>
<java.text.NumberFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>
<ohos.agp.render.Path: void addRect(float,float,float,float,ohos.agp.render.Path.Direction)>
<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>
<java.util.concurrent.ConcurrentHashMap: long reduceValuesToLong(long,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator)>
<java.security.KeyStore: int size()>
<ohos.javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.multimodalinput.event.KeyBoardEvent: boolean isNoncharacterKeyPressed(int,int)>
<ohos.agp.render.opengl.GLES30: void glResumeTransformFeedback()>
<java.util.concurrent.LinkedBlockingDeque: void <init>(int)>
<ohos.eventhandler.EventHandler.Priority: void <clinit>()>
<java.security.KeyPair: java.security.PublicKey getPublic()>
<ohos.agp.render.opengl.GLES30: void glVertexAttribI4iv(int,int[])>
<java.net.HttpCookie: boolean getDiscard()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenRunAsync(java.lang.Runnable)>
<java.util.concurrent.atomic.AtomicInteger: void lazySet(int)>
<javax.lang.model.type.ExecutableType: java.util.List getThrownTypes()>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onBack(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates isNotNull(java.lang.String)>
<ohos.utils.geo.RectFloat: void <init>(ohos.utils.geo.RectFloat)>
<java.util.concurrent.CopyOnWriteArrayList: boolean addIfAbsent(java.lang.Object)>
<ohos.global.configuration.Configuration: boolean equals(java.lang.Object)>
<ohos.agp.render.render3d.ViewHolder: ohos.agp.render.render3d.TargetBuffer getTargetBuffer()>
<ohos.bundle.FormInfo.CustomizeData: void <init>(ohos.bundle.FormInfo)>
<java.lang.Double: java.lang.Double valueOf(java.lang.String)>
<ohos.agp.render.Region: boolean getBounds(ohos.agp.utils.Rect)>
<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>
<java.security.KeyStore.SecretKeyEntry: javax.crypto.SecretKey getSecretKey()>
<java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)>
<ohos.agp.render.Canvas: int save()>
<java.nio.channels.InterruptedByTimeoutException: void <init>()>
<ohos.bundle.AbilityInfo: java.util.List getDeviceCapabilities()>
<ohos.ai.cv.common.VisionManager: ohos.ai.cv.qrcode.IBarcodeDetector getBarcodeDetector(ohos.app.Context)>
<javax.lang.model.util.ElementKindVisitor8: void <init>(java.lang.Object)>
<java.io.DataOutputStream: void writeByte(int)>
<ohos.agp.components.Switch: void <init>(ohos.app.Context)>
<ohos.nfc.tag.NdefMessage: int getAllRecordsLength()>
<ohos.utils.PacMap: void putPacMap(java.lang.String,ohos.utils.PacMap)>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.Lock readLock()>
<ohos.telephony.RadioInfoManager: ohos.telephony.NetworkState getNetworkState(int)>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate dateNow(java.time.Clock)>
<java.util.ArrayList: java.lang.Object get(int)>
<ohos.telephony.NetworkState: java.lang.String toString()>
<ohos.utils.geo.DimensFloat: float getMin()>
<ohos.miscservices.download.DownloadSession: boolean resume()>
<ohos.media.sessioncore.AVController.PlayControls: void playFastForward()>
<java.util.prefs.Preferences: void removeNodeChangeListener(java.util.prefs.NodeChangeListener)>
<ohos.utils.zson.ZSONObject: float getFloatValue(java.lang.String)>
<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel disconnect()>
<ohos.global.icu.text.DateFormat: boolean isLenient()>
<java.io.PipedReader: void connect(java.io.PipedWriter)>
<ohos.utils.zson.ZSONObject: int size()>
<ohos.data.resultset.SharedBlock: void <init>(ohos.utils.Parcel)>
<java.sql.BatchUpdateException: void <init>(java.lang.String,int[])>
<ohos.global.icu.util.VersionInfo: int compareTo(java.lang.Object)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService unconfigurableExecutorService(java.util.concurrent.ExecutorService)>
<java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>
<ohos.agp.colors.RgbColor: void <init>(int,int,int)>
<ohos.bluetooth.A2dpSink: boolean disconnect(ohos.bluetooth.BluetoothRemoteDevice)>
<ohos.net.HttpResponseCache: ohos.net.HttpResponseCache install(java.io.File,long)>
<java.nio.file.Files: boolean isSymbolicLink(java.nio.file.Path)>
<java.security.MessageDigestSpi: int engineDigest(byte[],int,int)>
<java.nio.file.Files: java.nio.file.Path createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])>
<ohos.ai.tts.TtsListener: void onEvent(int,ohos.utils.PacMap)>
<ohos.wifi.WifiDeviceConfig: void setHiddenSsid(boolean)>
<ohos.eventhandler.EventHandler: java.lang.String toString()>
<ohos.global.icu.util.GregorianCalendar: void <init>(int,int,int)>
<ohos.aafwk.ability.AbilitySliceAnimator: void <init>()>
<ohos.data.rdb.RdbIoErrException: void <init>()>
<java.util.AbstractMap: java.util.Set entrySet()>
<ohos.agp.components.webengine.WebView: ohos.agp.components.webengine.ScaleController getScaleController()>
<ohos.sysappcomponents.contact.entity.Email: void setEmail(java.lang.String)>
<ohos.global.icu.lang.UCharacter: boolean isUWhiteSpace(int)>
<java.time.temporal.WeekFields: int getMinimalDaysInFirstWeek()>
<ohos.global.icu.text.DateIntervalInfo: java.lang.Object cloneAsThawed()>
<ohos.data.distributed.common.FieldNode: boolean setDefault(java.lang.String)>
<ohos.data.search.schema.NotepadItem: ohos.data.search.schema.NotepadItem setAttachment(java.lang.String)>
<ohos.utils.PacMap: java.lang.String[] getStringArray(java.lang.String)>
<java.math.BigDecimal: java.lang.String toString()>
<java.math.BigInteger: java.math.BigInteger xor(java.math.BigInteger)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,short)>
<ohos.sysappcomponents.calendar.entity.Events: void setAccId(int)>
<java.util.Scanner: int nextInt()>
<java.security.cert.Certificate: java.lang.String toString()>
<java.lang.Runtime: void traceInstructions(boolean)>
<ohos.utils.PlainIntArray: java.util.Optional remove(int)>
<java.sql.DatabaseMetaData: boolean supportsCatalogsInDataManipulation()>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.window.dialog.CommonDialog setButton(int,java.lang.String,ohos.agp.window.dialog.IDialog.ClickedListener)>
<ohos.agp.components.ToggleButton: void setStateOnText(java.lang.String)>
<ohos.agp.utils.Circle: void translate(ohos.agp.utils.Point)>
<ohos.media.audio.SoundPlayer: boolean pauseAll()>
<ohos.data.rdb.ValuesBucket: java.util.Set getAll()>
<ohos.media.audio.SoundPlayer: boolean setPlaySpeedRate(int,float)>
<ohos.utils.IntArray: void <init>(int[])>
<java.util.concurrent.CountedCompleter: void tryComplete()>
<ohos.bundleactive.BundleActiveInfos: void merge(ohos.bundleactive.BundleActiveInfos)>
<ohos.sysappcomponents.contact.entity.Contact: java.util.List getSipAddresses()>
<java.util.TimeZone: boolean useDaylightTime()>
<ohos.bundle.ShortcutInfo: java.lang.String getHostAbilityName()>
<ohos.sysappcomponents.calendar.support.Rule: java.util.Optional getEntity(ohos.data.resultset.ResultSet,java.lang.String[])>
<ohos.media.photokit.metadata.AVLoggerConnection: boolean isConnected()>
<ohos.agp.render.render3d.resources.MaterialDesc.MaterialType: void <clinit>()>
<java.sql.Array: java.lang.Object getArray(long,int)>
<java.util.OptionalLong: long orElseThrow(java.util.function.Supplier)>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<java.sql.ResultSet: void clearWarnings()>
<ohos.miscservices.inputmethodability.TextInputClient: boolean deleteForward(int)>
<ohos.multimodalinput.event.ManipulationEvent: float getRadius(int)>
<ohos.rpc.IRemoteObject: boolean sendRequest(int,ohos.rpc.MessageParcel,ohos.rpc.MessageParcel,ohos.rpc.MessageOption)>
<java.security.cert.X509CertSelector: void <init>()>
<java.security.Provider: java.lang.Object remove(java.lang.Object)>
<ohos.agp.components.ToggleButton: java.lang.String getStateOffText()>
<java.nio.file.Files: java.nio.file.attribute.UserPrincipal getOwner(java.nio.file.Path,java.nio.file.LinkOption[])>
<ohos.media.sessioncore.AVController: java.lang.String getSessionOwnerPackageName()>
<ohos.agp.window.dialog.BaseDialog: void registerRemoveCallback(ohos.agp.window.dialog.BaseDialog.RemoveCallback)>
<java.time.zone.ZoneRules: java.time.zone.ZoneRules of(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>
<ohos.utils.net.Uri.Builder: java.lang.String toString()>
<java.util.zip.CheckedInputStream: java.util.zip.Checksum getChecksum()>
<ohos.media.audio.NoiseSuppressorEffect: boolean isAvailable()>
<ohos.wifi.WifiDeviceConfig: java.lang.String getPreSharedKey()>
<java.util.concurrent.TransferQueue: int getWaitingConsumerCount()>
<java.net.Inet4Address: java.lang.String getHostAddress()>
<java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)>
<java.lang.Thread: void start()>
<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>
<ohos.eventhandler.EventHandler: void postTask(java.lang.Runnable,ohos.eventhandler.EventHandler.Priority)>
<ohos.utils.geo.Rect: ohos.utils.geo.Point getPivot()>
<java.lang.Long: int bitCount(long)>
<java.util.Spliterators.AbstractDoubleSpliterator: long estimateSize()>
<ohos.agp.render.render3d.gltf.GltfData: int getThumbnailCount()>
<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>
<java.util.concurrent.Phaser: boolean onAdvance(int,int)>
<java.io.RandomAccessFile: float readFloat()>
<java.time.Year: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.util.concurrent.atomic.AtomicLongArray: long getAndAdd(int,long)>
<java.util.logging.SimpleFormatter: java.lang.String format(java.util.logging.LogRecord)>
<ohos.agp.components.ListContainer: ohos.agp.components.Component getComponentAt(int)>
<java.time.chrono.ChronoZonedDateTime: java.time.ZoneOffset getOffset()>
<ohos.media.audio.AudioManager.RingtoneType: int getValue()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage applyToEither(java.util.concurrent.CompletionStage,java.util.function.Function)>
<java.text.Format: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<ohos.media.common.AVDescription: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String replaceFieldTypes(java.lang.String,java.lang.String,int)>
<ohos.media.common.sessioncore.AVPlaybackState: long getCurrentPosition()>
<ohos.utils.geo.RectFloat: boolean getIntersectRect(ohos.utils.geo.RectFloat)>
<java.util.zip.ZipEntry: void setMethod(int)>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoZonedDateTime minus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.components.Component: void setEstimateSizeListener(ohos.agp.components.Component.EstimateSizeListener)>
<ohos.agp.utils.Matrix44: void setFloat(int,int,float)>
<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>
<ohos.media.audio.AudioDeviceDescriptor: int[] getChannelCounts()>
<javax.crypto.KeyGeneratorSpi: javax.crypto.SecretKey engineGenerateKey()>
<ohos.agp.render.Paint: float descent()>
<ohos.wifi.p2p.WifiP2pController: void requestP2pInfo(int,ohos.wifi.p2p.WifiP2pCallback)>
<java.util.AbstractMap.SimpleEntry: int hashCode()>
<ohos.bundle.AbilityInfo.LaunchMode: ohos.bundle.AbilityInfo.LaunchMode[] values()>
<ohos.event.notification.ReminderHelper: int publishReminder(ohos.event.notification.ReminderRequest)>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat setSizeX(int)>
<ohos.agp.components.Component: float getBoundaryFadeEffectTopRate()>
<ohos.bundle.AbilityInfo.AbilityType: ohos.bundle.AbilityInfo.AbilityType valueOf(java.lang.String)>
<java.security.cert.X509Certificate: void verify(java.security.PublicKey,java.security.Provider)>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat subtractionAll(float)>
<ohos.agp.render.opengl.GLES20: void glUniform4fv(int,int,float[])>
<ohos.net.DataFlowStatistics: long getUidTxBytes(int)>
<ohos.media.common.sessioncore.AVPlaybackState: long getLastPositionChangedTime()>
<ohos.data.orm.EntityHelper: void setPrimaryKeyValue(java.lang.Object,long)>
<ohos.global.icu.util.EthiopicCalendar: void setAmeteAlemEra(boolean)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayVariant(java.lang.String,java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll()>
<ohos.sensor.agent.CategoryBodyAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryBodyDataCallback)>
<java.io.ObjectOutputStream: void writeFloat(float)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getDecimalSeparatorString()>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.RuleBasedCollator getCollator()>
<ohos.utils.system.SystemCapability.ResourceSchedule: void <init>()>
<java.util.Formatter.BigDecimalLayoutForm: java.util.Formatter.BigDecimalLayoutForm[] values()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayLanguage(java.lang.String,java.lang.String)>
<ohos.bundle.AbilityInfo: java.lang.String getDescription()>
<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>
<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>
<ohos.telephony.CellularDataInfoManager: boolean isCellularDataRoamingEnabled(int)>
<ohos.agp.components.DatePicker: void setNormalTextColor(ohos.agp.utils.Color)>
<ohos.data.rdb.ValuesBucket: java.lang.String getString(java.lang.String)>
<java.util.DuplicateFormatFlagsException: java.lang.String getFlags()>
<ohos.security.seckeychain.SecKeyChain: void selectSecPrivateKey(ohos.app.AbilityContext,java.lang.String[],java.security.Principal[],ohos.utils.net.Uri,ohos.security.seckeychain.SecKeyAliasCallback,java.lang.String)>
<java.security.MessageDigest: byte[] digest()>
<ohos.agp.render.Canvas: void setMatrix(ohos.agp.utils.Matrix)>
<java.util.concurrent.ArrayBlockingQueue: java.lang.Object[] toArray()>
<ohos.data.distributed.common.Schema: ohos.data.distributed.common.SchemaMode getSchemaMode()>
<ohos.data.file.FileAbility: java.io.File getFileViaUri(ohos.utils.net.Uri)>
<java.lang.StrictMath: double atan(double)>
<ohos.data.rdb.Statement: void clearValues()>
<ohos.aafwk.ability.IAbilityConnection: void onAbilityDisconnectDone(ohos.bundle.ElementName,int)>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer allocate(int)>
<java.util.Properties: void list(java.io.PrintWriter)>
<ohos.aafwk.ability.continuation.RequestCallback: void onResult(int)>
<ohos.app.Context: void disconnectAbility(ohos.aafwk.ability.IAbilityConnection)>
<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>
<ohos.global.icu.text.DecimalFormat: boolean isDecimalSeparatorAlwaysShown()>
<ohos.agp.database.DataSetSubscriber: void onItemInserted(int)>
<ohos.thermallistener.ThermalConnection.ThermalSeverityLevel: void <clinit>()>
<ohos.agp.render.opengl.GLES1X: void glCullFace(int)>
<ohos.global.icu.math.BigDecimal: java.math.BigInteger unscaledValue()>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<ohos.global.icu.text.Normalizer2: ohos.global.icu.text.Normalizer2 getNFKCInstance()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendInstant(int)>
<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>
<ohos.accessibility.ability.AccessibilityInfo: java.util.List getAccessibleInfoViaContent(java.lang.String)>
<java.util.concurrent.CompletableFuture: java.lang.Object join()>
<ohos.agp.render.Insets: boolean marshalling(ohos.utils.Parcel)>
<ohos.data.rdb.RawRdbPredicates: void setWhereArgs(java.util.List)>
<ohos.global.resource.RawFileEntry: ohos.global.resource.RawFileDescriptor openRawFileDescriptor()>
<ohos.global.i18n.text.MeasureOptions.Unit: ohos.global.i18n.text.MeasureOptions.Unit[] values()>
<ohos.global.icu.util.TimeZone: int countEquivalentIDs(java.lang.String)>
<ohos.media.camera.device.FrameStateCallback: void onFrameFinished(ohos.media.camera.device.Camera,ohos.media.camera.device.FrameConfig,ohos.media.camera.device.FrameResult)>
<ohos.agp.components.DirectionalLayout.LayoutConfig: void <init>(ohos.agp.components.DirectionalLayout.LayoutConfig)>
<java.util.stream.IntStream: java.util.IntSummaryStatistics summaryStatistics()>
<ohos.agp.render.Path.Direction: ohos.agp.render.Path.Direction[] values()>
<ohos.media.camera.params.SceneDetectionResult: int getState()>
<ohos.agp.components.AbsButton.CheckedStateChangedListener: void onCheckedChanged(ohos.agp.components.AbsButton,boolean)>
<ohos.wifi.WifiSecurity.Phase2Method: ohos.wifi.WifiSecurity.Phase2Method[] values()>
<ohos.global.icu.text.UnicodeSetSpanner.TrimOption: void <clinit>()>
<java.util.stream.BaseStream: java.util.Iterator iterator()>
<ohos.accessibility.AccessibilityEventInfo: int getTriggerAction()>
<java.net.URI: java.lang.String getSchemeSpecificPart()>
<ohos.agp.render.opengl.GLES20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)>
<java.time.ZoneOffset: int hashCode()>
<ohos.agp.components.Component: void setCanAcceptScrollListener(ohos.agp.components.Component.CanAcceptScrollListener)>
<java.security.InvalidAlgorithmParameterException: void <init>()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notIn(java.lang.String,java.sql.Time[])>
<ohos.data.file.FileAbility: java.io.FileDescriptor openFile(ohos.utils.net.Uri,java.lang.String)>
<ohos.agp.render.render3d.Engine.Time: long getDeltaTimeMicros()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent formatUriAndType(ohos.utils.net.Uri,java.lang.String)>
<ohos.data.search.schema.PhotoItem: java.lang.Integer getHeight()>
<ohos.global.icu.util.ULocale: void <init>(java.lang.String,java.lang.String)>
<ohos.utils.FileWatcher: void <init>()>
<ohos.data.search.schema.PlaceItem: void <init>()>
<ohos.utils.PacMap: short getShortValue(java.lang.String,short)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectInput(java.lang.ProcessBuilder.Redirect)>
<java.nio.file.Files: java.nio.file.Path createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
<java.util.Locale.Builder: java.util.Locale.Builder setExtension(char,java.lang.String)>
<javax.security.auth.callback.PasswordCallback: void <init>(java.lang.String,boolean)>
<ohos.global.icu.text.DisplayContext: ohos.global.icu.text.DisplayContext[] values()>
<ohos.utils.net.UrlQueryFilter: java.lang.String unescapeString(java.lang.String)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: ohos.aafwk.ability.Ability getCurrentTopAbility()>
<java.lang.Character: boolean isDigit(int)>
<ohos.global.icu.text.CollationKey: java.lang.String getSourceString()>
<java.nio.channels.MembershipKey: void drop()>
<ohos.agp.colors.CmykPalette: void <clinit>()>
<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadLockCount()>
<javax.net.ssl.SSLParameters: void <init>()>
<ohos.media.image.Image.Component: int read(byte[],int,int)>
<java.net.SocketPermission: java.lang.String getActions()>
<java.util.AbstractList: java.lang.Object remove(int)>
<java.util.function.IntPredicate: boolean test(int)>
<java.util.IllegalFormatFlagsException: void <init>(java.lang.String)>
<ohos.utils.net.Uri: java.lang.String getLastPath()>
<ohos.agp.animation.timelinecurves.SpringCurve: void <init>()>
<java.lang.AssertionError: void <init>(boolean)>
<ohos.agp.render.ThreeDimView: void applyToCanvas(ohos.agp.render.Canvas)>
<ohos.global.icu.text.Bidi: int[] getVisualMap()>
<ohos.global.i18n.text.MeasureFormatter: java.lang.String format(ohos.global.i18n.text.MeasureOptions.Unit,double,ohos.global.i18n.text.MeasureOptions.Usage,ohos.global.i18n.text.MeasureOptions.FormatStyle,ohos.global.i18n.text.MeasureOptions.Style)>
<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>
<ohos.agp.render.layoutboost.LayoutMaker: ohos.agp.components.Component createComponent(ohos.app.Context)>
<ohos.global.icu.text.MessagePattern.Part.Type: ohos.global.icu.text.MessagePattern.Part.Type valueOf(java.lang.String)>
<java.time.chrono.IsoChronology: void <clinit>()>
<ohos.rpc.ReliableFileDescriptor: ohos.rpc.ReliableFileDescriptor dupFromSocket(java.net.Socket)>
<javax.lang.model.element.Element: java.util.List getAnnotationMirrors()>
<java.lang.ClassNotFoundException: void <init>()>
<java.lang.Short: int compare(short,short)>
<ohos.media.image.common.ImageFormat.ComponentType: void <clinit>()>
<ohos.global.icu.text.SearchIterator: int getIndex()>
<java.util.SimpleTimeZone: int getRawOffset()>
<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<ohos.agp.render.opengl.GLES20: int glCreateShader(int)>
<ohos.aafwk.ability.continuation.ContinuationDeviceInfo: void setDeviceType(java.lang.String)>
<java.util.HashMap: java.util.Set keySet()>
<ohos.accessibility.ability.GesturePathDefine: ohos.accessibility.ability.GesturePathPositionDefine getStartPosition()>
<ohos.location.Location: float getAccuracy()>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setLongitude(java.lang.Double)>
<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<ohos.agp.components.webengine.ResourceResponse: java.io.InputStream getData()>
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDate plus(java.time.temporal.TemporalAmount)>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoLocalDate toLocalDate()>
<java.util.zip.InflaterInputStream: void reset()>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.RejectedExecutionHandler)>
<ohos.event.commonevent.CommonEventSubscribeInfo.ThreadMode: ohos.event.commonevent.CommonEventSubscribeInfo.ThreadMode valueOf(java.lang.String)>
<ohos.global.icu.text.CurrencyPluralInfo: ohos.global.icu.text.CurrencyPluralInfo getInstance(java.util.Locale)>
<ohos.nfc.oma.Aid: boolean isAidValid()>
<java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<ohos.agp.window.service.Window: ohos.agp.components.LayoutScatter getLayoutScatter()>
<ohos.agp.components.TimePicker: void setSelectedTextBackground(ohos.agp.components.element.Element)>
<java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.NavigableSet: java.lang.Object higher(java.lang.Object)>
<ohos.media.audio.AudioRendererInfo: int getSessionID()>
<ohos.utils.LightweightMap: java.lang.Object removeAt(int)>
<java.io.ObjectStreamConstants: void <clinit>()>
<java.security.DigestOutputStream: void write(int)>
<java.util.Locale: java.util.Locale stripExtensions()>
<ohos.aafwk.abilityjet.databinding.DataBinding: void <init>()>
<ohos.data.orm.OrmConfig.Builder: void <init>()>
<ohos.global.icu.text.LocaleDisplayNames: ohos.global.icu.text.LocaleDisplayNames getInstance(ohos.global.icu.util.ULocale,ohos.global.icu.text.LocaleDisplayNames.DialectHandling)>
<ohos.media.audio.AudioRenderer: boolean write(float[],int,int)>
<ohos.sysappcomponents.contact.HoldersCollection: void release()>
<java.sql.SQLTimeoutException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<ohos.global.icu.text.CurrencyPluralInfo: ohos.global.icu.text.PluralRules getPluralRules()>
<javax.net.ssl.SSLEngineResult: void <init>(javax.net.ssl.SSLEngineResult.Status,javax.net.ssl.SSLEngineResult.HandshakeStatus,int,int)>
<ohos.global.icu.text.StringPrepParseException: int getError()>
<java.util.zip.Inflater: boolean finished()>
<ohos.rpc.RemoteObject: void attachLocalInterface(ohos.rpc.IRemoteBroker,java.lang.String)>
<java.math.BigDecimal: java.math.BigDecimal remainder(java.math.BigDecimal)>
<java.util.jar.JarOutputStream: void putNextEntry(java.util.zip.ZipEntry)>
<ohos.data.search.schema.PhotoItem: java.lang.String getShootingMode()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,double)>
<ohos.media.audio.AudioCapturer: int getSampleRate()>
<ohos.data.resultset.AbsResultSet: int getColumnIndexForName(java.lang.String)>
<ohos.agp.components.DatePicker: float getSelectedNormalTextMarginRatio()>
<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.security.Provider)>
<ohos.agp.components.Component: int[] getMargins()>
<ohos.global.icu.text.TimeZoneFormat.GMTOffsetPatternType: ohos.global.icu.text.TimeZoneFormat.GMTOffsetPatternType[] values()>
<java.time.Instant: boolean isSupported(java.time.temporal.TemporalUnit)>
<ohos.agp.components.element.ShapeElement.Orientation: ohos.agp.components.element.ShapeElement.Orientation valueOf(java.lang.String)>
<java.util.zip.ZipFile: void <init>(java.io.File,int)>
<ohos.agp.render.Canvas.VertexMode: void <clinit>()>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setTextSize(int,int)>
<ohos.eventhandler.EventHandler: boolean isIdle()>
<java.text.Annotation: java.lang.String toString()>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.window.dialog.CommonDialog setTitleText(java.lang.String)>
<ohos.hiviewdfx.FaultLogger: void <init>()>
<java.sql.Connection: java.sql.Savepoint setSavepoint()>
<javax.lang.model.util.SimpleTypeVisitor6: java.lang.Object visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Object)>
<java.text.DecimalFormat: void setMinimumIntegerDigits(int)>
<ohos.agp.render.Canvas: int saveLayerAlpha(ohos.agp.utils.RectFloat,int)>
<ohos.agp.render.opengl.GLES1X: void glNormalPointer(int,int,java.nio.Buffer)>
<java.util.function.LongConsumer: java.util.function.LongConsumer andThen(java.util.function.LongConsumer)>
<ohos.agp.components.ListContainer: void removeComponents(int,int)>
<java.nio.file.FileSystem: void <init>()>
<ohos.utils.geo.Point: void modify(float,float)>
<java.io.FilterInputStream: void close()>
<java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy: void <init>()>
<ohos.global.icu.math.BigDecimal: int compareTo(ohos.global.icu.math.BigDecimal)>
<ohos.event.notification.NotificationRequest: boolean isTapDismissed()>
<java.util.ArrayDeque: java.lang.Object getFirst()>
<ohos.rpc.MessageParcel: int getFd(java.io.FileDescriptor)>
<java.util.AbstractList: java.lang.Object get(int)>
<java.io.ObjectOutputStream: void writeInt(int)>
<ohos.account.AccountAbility: boolean isOsAccountVerified(int)>
<java.net.HttpCookie: void setPortlist(java.lang.String)>
<ohos.data.rdb.RdbStore: void changeEncryptKey(byte[])>
<ohos.bundle.ElementName: int hashCode()>
<ohos.agp.components.DependentLayout: ohos.agp.components.ComponentContainer.LayoutConfig createLayoutConfig(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.global.icu.text.DecimalFormat: java.lang.String toPattern()>
<ohos.media.audio.SoundPlayer.AudioVolumes: void setCentralVolume(float)>
<javax.tools.ForwardingJavaFileManager: int isSupportedOption(java.lang.String)>
<ohos.global.icu.text.CollationKey: ohos.global.icu.text.CollationKey getBound(int,int)>
<ohos.global.icu.text.DecimalFormatSymbols: char getPerMill()>
<java.sql.DatabaseMetaData: int getJDBCMinorVersion()>
<java.time.OffsetDateTime: boolean isBefore(java.time.OffsetDateTime)>
<ohos.global.icu.text.DecimalFormatSymbols: ohos.global.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<javax.net.ssl.SSLPermission: void <init>(java.lang.String,java.lang.String)>
<java.lang.ProcessBuilder: void <init>(java.util.List)>
<ohos.agp.components.Image.ScaleMode: int getValue()>
<java.util.jar.Attributes: java.util.Collection values()>
<ohos.ai.tts.TtsParams: void setDeviceType(int)>
<ohos.agp.components.IndexBar.OnSelectedListener: void onSelected(int)>
<java.security.SecureRandom: java.security.Provider getProvider()>
<ohos.utils.geo.RectFloat: boolean isIntersect(ohos.utils.geo.RectFloat,ohos.utils.geo.RectFloat)>
<java.util.OptionalLong: long orElseGet(java.util.function.LongSupplier)>
<ohos.agp.components.Text: void setLeftBubbleWidth(int)>
<ohos.agp.components.ComponentContainer.LayoutConfig: void <init>()>
<java.util.Date: int compareTo(java.util.Date)>
<ohos.bundle.IBundleManager: ohos.media.image.PixelMap getAbilityIcon(java.lang.String,java.lang.String)>
<ohos.global.icu.text.RuleBasedCollator: void setStrengthDefault()>
<ohos.org.xml.sax.InputSource: java.lang.String getSystemId()>
<java.lang.UnsatisfiedLinkError: void <init>(java.lang.String)>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String getDateTimeFormat()>
<java.nio.charset.Charset: boolean isSupported(java.lang.String)>
<ohos.nfc.tag.NfcFTag: java.util.Optional getInstance(ohos.nfc.tag.TagInfo)>
<java.util.concurrent.DelayQueue: void <init>(java.util.Collection)>
<ohos.system.OsHelperErrnoException: int getErrnoValue()>
<java.util.ArrayDeque: java.lang.Object peekFirst()>
<java.lang.reflect.Parameter: boolean isVarArgs()>
<ohos.utils.net.Uri: java.lang.String getDecodedSchemeSpecificPart()>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getCurrencyInstance(java.util.Locale)>
<java.util.stream.LongStream: void forEach(java.util.function.LongConsumer)>
<ohos.data.search.SearchResult: java.lang.String getRetMsg()>
<ohos.distributedhardware.devicemanager.DeviceInfo: ohos.distributedhardware.devicemanager.DeviceInfo.DeviceType getDeviceType()>
<ohos.wifi.WifiLinkedInfo: int getLinkSpeed()>
<ohos.aafwk.ability.continuation.ExtraParams: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.DecimalFormatSymbols: void <init>(java.util.Locale)>
<ohos.data.distributed.common.KvManager: void closeKvStore(ohos.data.distributed.common.KvStore)>
<java.lang.Runtime: java.io.OutputStream getLocalizedOutputStream(java.io.OutputStream)>
<ohos.aafwk.content.Intent: void removeFlags(int)>
<ohos.agp.graphics.Surface: void <init>()>
<java.time.LocalDateTime: java.time.LocalDateTime truncatedTo(java.time.temporal.TemporalUnit)>
<java.net.Inet4Address: byte[] getAddress()>
<ohos.nfc.tag.TagManager: ohos.nfc.tag.TagInfo getTagInfo()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap tailMap(java.lang.Object,boolean)>
<java.sql.ResultSet: boolean absolute(int)>
<java.util.concurrent.ThreadLocalRandom: double nextDouble()>
<java.lang.Long: long min(long,long)>
<ohos.ai.cv.common.VisionCallback: void onResult(java.lang.Object)>
<ohos.agp.components.SearchBar: java.lang.String getQueryHint()>
<ohos.media.audio.AudioCapturerConfig: void <init>()>
<java.lang.Character.Subset: int hashCode()>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder addSurface(ohos.agp.graphics.Surface)>
<ohos.org.xml.sax.AttributeList: java.lang.String getType(int)>
<ohos.media.photokit.support.AlbumList: java.lang.String getCategoryName()>
<ohos.media.photokit.MediaLibrary: ohos.media.photokit.support.FetchResult getClassifyAlbums()>
<ohos.global.icu.util.IslamicCalendar: void <init>(int,int,int)>
<java.lang.Process: int exitValue()>
<java.nio.file.Path: java.nio.file.Path getName(int)>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.Object clone()>
<ohos.media.codec.CodecDescriptionList: java.util.List getSupportedCodecs()>
<ohos.agp.components.Clock: void setTime(long)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getInstance(ohos.global.icu.util.Calendar)>
<ohos.global.i18n.text.MeasureOptions.Style: ohos.global.i18n.text.MeasureOptions.Style[] values()>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getZodiacNames(int,int)>
<javax.net.ssl.SNIServerName: int getType()>
<java.util.stream.LongStream: java.util.stream.LongStream of(long[])>
<ohos.agp.render.render3d.components.TransformComponent: void setPosition(ohos.agp.render.render3d.math.Vector3)>
<java.time.OffsetDateTime: java.time.OffsetDateTime plusWeeks(long)>
<ohos.data.resultset.AbsResultSet: java.util.List getAffectedByUris()>
<ohos.media.common.sessioncore.AVQueueElement: void <clinit>()>
<java.util.logging.LogManager: void addPropertyChangeListener(java.beans.PropertyChangeListener)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayCountry(ohos.global.icu.util.ULocale)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getIntegerInstance()>
<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>
<ohos.agp.utils.Matrix: boolean postTranslate(float,float)>
<ohos.app.dispatcher.TaskDispatcher: void applyDispatch(java.util.function.Consumer,long)>
<ohos.accessibility.ability.SoftKeyBoardController: void addListener(ohos.accessibility.ability.SoftKeyBoardListener)>
<java.net.Socket: int getSendBufferSize()>
<ohos.data.distributed.device.DeviceKvStore: void registerSyncCallback(ohos.data.distributed.common.SyncCallback)>
<java.util.stream.Collectors: java.util.stream.Collector groupingBy(java.util.function.Function,java.util.function.Supplier,java.util.stream.Collector)>
<java.io.File: boolean setLastModified(long)>
<java.time.temporal.UnsupportedTemporalTypeException: void <init>(java.lang.String)>
<ohos.media.image.ImageSource: ohos.media.image.PixelMap createPixelmap(int,ohos.media.image.ImageSource.DecodingOptions)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<ohos.agp.components.Component: void setPaddingLeft(int)>
<ohos.bluetooth.ble.GattCharacteristic: ohos.bluetooth.ble.GattService getService()>
<java.io.File: void <init>(java.lang.String)>
<ohos.utils.geo.RectFloat: boolean equals(java.lang.Object)>
<ohos.media.audio.AudioRendererInfo: long getBufferSizeInBytes()>
<ohos.aafwk.ability.AbilitySlice: void startAbility(ohos.aafwk.content.Intent,ohos.aafwk.ability.startsetting.AbilityStartSetting)>
<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>
<java.util.concurrent.ThreadLocalRandom: int next(int)>
<java.util.IdentityHashMap: void <init>()>
<java.net.DatagramSocketImplFactory: java.net.DatagramSocketImpl createDatagramSocketImpl()>
<javax.net.ssl.SSLSocketFactory: java.lang.String[] getSupportedCipherSuites()>
<ohos.data.DatabaseFileType: ohos.data.DatabaseFileType valueOf(java.lang.String)>
<java.security.KeyStore: void store(java.io.OutputStream,char[])>
<java.util.ArrayDeque: java.lang.Object poll()>
<java.net.DatagramSocketImpl: void connect(java.net.InetAddress,int)>
<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>
<ohos.event.notification.NotificationRequest.NotificationNormalContent: java.lang.String toString()>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime formatNumericToValue(double,ohos.global.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit)>
<ohos.agp.components.TimePicker: ohos.agp.utils.Color getSelectedTextColor()>
<ohos.telephony.SimInfoManager: boolean hasSimCard(int)>
<ohos.utils.Parcel: double readDouble()>
<ohos.agp.components.ProgressBar: int getProgressWidth()>
<ohos.utils.geo.RectFloat: void modify(ohos.utils.geo.Rect)>
<ohos.bundle.BackupBundleInfo: java.lang.String getBundleName()>
<java.net.URLConnection: void setContentHandlerFactory(java.net.ContentHandlerFactory)>
<java.net.UnknownServiceException: void <init>(java.lang.String)>
<javax.crypto.Cipher: byte[] doFinal()>
<ohos.batterymanager.BatteryInfo: boolean getPresent()>
<java.lang.Character.Subset: java.lang.String toString()>
<ohos.telephony.SimInfoManager: java.lang.String getSimTeleNumberIdentifier(int)>
<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>
<ohos.media.audio.AudioManager.CallState: ohos.media.audio.AudioManager.CallState valueOf(java.lang.String)>
<ohos.bluetooth.ble.GattService: void <init>(java.util.UUID,boolean)>
<java.io.PrintWriter: void print(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: ohos.event.notification.NotificationRequest.NotificationMultiLineContent setAdditionalText(java.lang.String)>
<java.time.temporal.TemporalAccessor: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.net.URI: java.net.URI relativize(java.net.URI)>
<ohos.net.HttpResponseCache: void flush()>
<ohos.data.rdb.RdbStore: boolean checkIntegrity()>
<java.nio.CharBuffer: java.nio.CharBuffer subSequence(int,int)>
<ohos.aafwk.ability.Ability.LayoutParamsHelper: ohos.aafwk.ability.Ability.LayoutParamsHelper setWidth(int)>
<ohos.hiviewdfx.HiLog: int error(ohos.hiviewdfx.HiLogLabel,java.lang.String,java.lang.Object[])>
<java.lang.StrictMath: double scalb(double,int)>
<ohos.aafwk.content.Intent: java.lang.String[] getStringArrayParam(java.lang.String)>
<java.io.PipedOutputStream: void write(int)>
<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>
<java.text.BreakIterator: int following(int)>
<java.sql.SQLOutput: void writeStruct(java.sql.Struct)>
<java.util.NavigableMap: java.util.Map.Entry lastEntry()>
<ohos.ai.cv.text.Text: java.lang.String getValue()>
<ohos.global.icu.util.ChineseCalendar: void roll(int,int)>
<ohos.agp.components.Rating: void setUnfilledElement(ohos.agp.components.element.Element)>
<ohos.accessibility.ability.AccessibleAbility: java.util.Optional getRootAccessibilityInfo()>
<java.net.DatagramSocket: void connect(java.net.InetAddress,int)>
<java.time.LocalDateTime: java.time.LocalDateTime minusMonths(long)>
<ohos.aafwk.ability.Ability.WindowAttributeHelper: void <init>(ohos.aafwk.content.Intent)>
<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getSimpleName()>
<java.sql.Clob: java.io.Writer setCharacterStream(long)>
<java.time.temporal.TemporalAccessor: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.media.audio.SoundPlayer: boolean resumeAll()>
<ohos.media.recorder.Recorder: boolean setRecorderLocation(float,float)>
<ohos.net.LocalSocket: void <init>(java.lang.String,boolean)>
<java.net.SecureCacheResponse: java.util.List getServerCertificateChain()>
<java.nio.channels.SelectableChannel: int validOps()>
<java.util.LinkedHashSet: java.util.Spliterator spliterator()>
<ohos.interwork.bundle.ElementNameEx: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.javax.xml.stream.XMLStreamWriter: ohos.javax.xml.namespace.NamespaceContext getNamespaceContext()>
<java.net.Socket: void setReuseAddress(boolean)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void removeAbilityMonitor(ohos.aafwk.ability.delegation.IAbilityMonitor)>
<java.util.concurrent.ThreadPoolExecutor: boolean prestartCoreThread()>
<java.io.PrintWriter: void println(float)>
<java.nio.ByteBuffer: int getInt(int)>
<java.time.OffsetDateTime: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<ohos.sysappcomponents.contact.entity.Contact: void setOrganization(ohos.sysappcomponents.contact.entity.Organization)>
<java.nio.file.FileVisitor: java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)>
<java.util.concurrent.FutureTask: boolean cancel(boolean)>
<ohos.data.search.schema.MusicItem: java.lang.String getArtist()>
<ohos.data.search.schema.ContactItem: java.lang.Long getBirthDate()>
<ohos.global.icu.text.AlphabeticIndex: int getBucketIndex(java.lang.CharSequence)>
<ohos.agp.render.Canvas.PorterDuffMode: void <clinit>()>
<java.lang.reflect.Array: char getChar(java.lang.Object,int)>
<java.util.ArrayList: java.util.Iterator iterator()>
<ohos.global.icu.text.MessagePattern: void <init>()>
<ohos.media.camera.device.CameraAbility: float[] getSupportedZoom()>
<java.util.Random: int nextInt(int)>
<java.sql.ResultSet: java.sql.Date getDate(java.lang.String)>
<ohos.wifi.WifiDevice: int getSignalLevel(int,int)>
<ohos.utils.Pair: ohos.utils.Pair create(java.lang.Object,java.lang.Object)>
<ohos.aafwk.ability.Form: boolean getTempFormFlag()>
<java.sql.DatabaseMetaData: boolean ownUpdatesAreVisible(int)>
<java.util.LinkedHashMap: boolean removeEldestEntry(java.util.Map.Entry)>
<ohos.global.icu.text.DateFormatSymbols: void setWeekdays(java.lang.String[])>
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeQ()>
<ohos.ai.cv.text.Text: void setCornerPoints(ohos.ai.cv.common.CvPoint[])>
<java.nio.channels.SocketChannel: boolean finishConnect()>
<ohos.org.xml.sax.InputSource: void setCharacterStream(java.io.Reader)>
<java.io.ObjectOutput: void close()>
<ohos.data.distributed.common.KvStoreResultSet: boolean goToFirstRow()>
<ohos.global.resource.BaseFileDescriptor: long getStartPosition()>
<java.nio.ByteBuffer: byte get(int)>
<ohos.data.orm.AllChangeToTarget: java.util.List getDeletedList()>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.Lock writeLock()>
<java.lang.StringBuilder: int length()>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate dateYearDay(java.time.chrono.Era,int,int)>
<ohos.agp.components.element.Element: ohos.agp.utils.Rect getBounds()>
<javax.security.cert.X509Certificate: void checkValidity()>
<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>
<javax.crypto.ShortBufferException: void <init>()>
<ohos.agp.components.PageSlider: void setReboundEffect(boolean)>
<ohos.agp.components.element.ElementScatterException: void <init>(java.lang.String,java.lang.Throwable)>
<java.time.OffsetTime: java.time.OffsetTime plusHours(long)>
<java.time.OffsetDateTime: java.time.OffsetDateTime withHour(int)>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster lastDayOfMonth()>
<ohos.global.icu.text.StringPrepParseException: void <init>(java.lang.String,int,java.lang.String,int,int)>
<ohos.wifi.IpInfo: int getGateway()>
<ohos.data.rdb.RdbException: void <init>(java.lang.String)>
<java.util.Spliterator.OfInt: boolean tryAdvance(java.util.function.Consumer)>
<javax.tools.ForwardingJavaFileObject: javax.lang.model.element.Modifier getAccessLevel()>
<ohos.agp.render.opengl.GLES30: void glGetBufferPointerv(int,int,java.nio.Buffer)>
<java.lang.String: int indexOf(int,int)>
<ohos.agp.animation.Animator: void end()>
<ohos.agp.components.TableLayout: ohos.agp.components.TableLayout.Specification specification(int,float)>
<ohos.agp.window.dialog.DisplayDialog: void <init>(ohos.app.Context)>
<ohos.agp.window.dialog.CommonDialog: boolean isMovable()>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitError(javax.lang.model.type.ErrorType,java.lang.Object)>
<ohos.data.resultset.AbsSharedResultSet: double getDouble(int)>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.text.Collator cloneAsThawed()>
<java.util.TimeZone: int getRawOffset()>
<ohos.agp.database.DataSetSubscriber: void onItemRangeInserted(int,int)>
<java.util.EventObject: void <init>(java.lang.Object)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,java.util.Calendar)>
<ohos.global.icu.text.DateIntervalInfo: int hashCode()>
<ohos.agp.components.Component.DefSpeechEventListener: void <init>()>
<ohos.agp.components.AdaptiveBoxLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.bundle.ShortcutInfo: void setIcon(java.lang.String)>
<javax.net.ssl.SSLSocket: javax.net.ssl.SSLParameters getSSLParameters()>
<java.util.concurrent.CopyOnWriteArraySet: boolean addAll(java.util.Collection)>
<ohos.data.search.schema.VideoItem: ohos.data.search.schema.VideoItem setActor(java.lang.String)>
<java.security.cert.PolicyQualifierInfo: java.lang.String getPolicyQualifierId()>
<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>
<java.time.temporal.TemporalUnit: java.lang.String toString()>
<java.util.concurrent.RecursiveAction: void <init>()>
<java.text.DecimalFormat: int getGroupingSize()>
<ohos.global.icu.util.JapaneseCalendar: void <init>(int,int,int,int,int,int)>
<ohos.global.icu.util.CurrencyAmount: void <init>(double,java.util.Currency)>
<java.io.PrintStream: boolean checkError()>
<ohos.agp.components.AttrHelper: ohos.agp.components.element.Element convertValueToElement(java.lang.String)>
<java.nio.file.AccessMode: void <clinit>()>
<java.nio.FloatBuffer: java.nio.FloatBuffer slice()>
<ohos.agp.render.render3d.SceneNode: void setEnabled(boolean)>
<ohos.agp.components.Switch: void setThumbHorizontalPadding(int)>
<java.sql.DriverManager: void setLoginTimeout(int)>
<ohos.ai.cv.text.TextLine: ohos.ai.cv.common.CvPoint[] getCornerPoints()>
<ohos.media.audio.AudioDeviceDescriptor.DeviceRole: ohos.media.audio.AudioDeviceDescriptor.DeviceRole valueOf(int)>
<ohos.aafwk.ability.FormState: ohos.aafwk.ability.FormState intToEnum(int)>
<java.util.concurrent.ForkJoinPool: int getActiveThreadCount()>
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>
<java.nio.file.WatchKey: boolean reset()>
<ohos.media.image.common.ImageFormat.ComponentType: ohos.media.image.common.ImageFormat.ComponentType valueOf(int)>
<java.sql.CallableStatement: java.sql.Blob getBlob(java.lang.String)>
<java.util.SplittableRandom: void <init>()>
<ohos.agp.render.Paint.Join: int value()>
<ohos.data.rdb.Statement: void setDouble(int,double)>
<ohos.global.icu.util.BuddhistCalendar: void <init>()>
<java.io.CharArrayReader: int read()>
<java.time.MonthDay: java.time.MonthDay parse(java.lang.CharSequence)>
<java.security.SignatureSpi: boolean engineVerify(byte[],int,int)>
<ohos.agp.components.element.StateElement: int[] getStateSet(int)>
<java.util.TreeSet: void <init>(java.util.Collection)>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.Writer)>
<java.nio.file.SecureDirectoryStream: void deleteDirectory(java.lang.Object)>
<ohos.agp.components.Picker: boolean isWheelModeEnabled()>
<java.security.cert.CertPathValidator: java.security.Provider getProvider()>
<java.security.cert.CertificateRevokedException: void <init>(java.util.Date,java.security.cert.CRLReason,javax.security.auth.x500.X500Principal,java.util.Map)>
<ohos.javax.xml.stream.events.XMLEvent: boolean isEndDocument()>
<java.net.InetAddress: java.lang.String getCanonicalHostName()>
<java.security.KeyStore.PasswordProtection: java.lang.String getProtectionAlgorithm()>
<java.net.Socket: void connect(java.net.SocketAddress,int)>
<java.util.Hashtable: void <init>(java.util.Map)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void clearAllMonitors()>
<ohos.media.audio.AudioRenderer: boolean flush()>
<ohos.global.icu.text.DateFormatSymbols: void setQuarters(java.lang.String[],int,int)>
<ohos.media.image.ImageSource: int getImagePropertyInt(int,java.lang.String,int)>
<ohos.agp.database.DataSetSubscriber: void onItemChanged(int)>
<ohos.agp.components.LayoutScatter: void setPicker(ohos.agp.components.LayoutScatter.Picker)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getState()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage acceptEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Consumer)>
<ohos.agp.components.AttrHelper: int vp2px(float,ohos.app.Context)>
<java.util.zip.DeflaterInputStream: int read()>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>
<ohos.utils.zson.ZSONObject: void <init>(java.util.Map)>
<ohos.utils.zson.ZSONObject: java.lang.Byte getByte(java.lang.String)>
<java.io.Console: java.io.PrintWriter writer()>
<ohos.agp.render.Canvas: void restore()>
<ohos.utils.Parcel: ohos.utils.Parcel create()>
<ohos.agp.render.render3d.components.CameraComponent: void setName(java.lang.String)>
<ohos.ai.cv.common.BoundingBox: void setWidth(int)>
<ohos.global.icu.text.NumberingSystem: ohos.global.icu.text.NumberingSystem getInstance(java.util.Locale)>
<java.util.ListResourceBundle: void <init>()>
<ohos.event.intentagent.IntentAgentHelper: java.lang.String getBundleName(ohos.event.intentagent.IntentAgent)>
<ohos.net.RouteInfo: void <init>()>
<ohos.accessibility.ability.AccessibilityInfo: boolean executeOperation(int)>
<ohos.accessibility.ability.GesturePathDefine: void setEndPosition(ohos.accessibility.ability.GesturePathPositionDefine)>
<javax.lang.model.util.ElementScanner6: java.lang.Object visitType(javax.lang.model.element.TypeElement,java.lang.Object)>
<ohos.agp.components.Component: int getPaddingEnd()>
<ohos.data.orm.OrmContext: void registerStoreObserver(java.lang.String,ohos.data.orm.OrmObjectObserver)>
<java.text.DecimalFormatSymbols: java.lang.Object clone()>
<ohos.sysappcomponents.contact.entity.PostalAddress: void setRegion(java.lang.String)>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer asReadOnlyBuffer()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void setState(int)>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.ToastDialog setText(java.lang.String)>
<ohos.data.distributed.device.DeviceKvStore: int getResultSize(ohos.data.distributed.common.Query)>
<ohos.sysappcomponents.calendar.CalendarDataHelper.InstancesDataHelper: ohos.sysappcomponents.calendar.CalendarCollection query(ohos.data.dataability.DataAbilityPredicates,java.lang.String[],long,long)>
<ohos.agp.render.layoutboost.LayoutBoostUtils: ohos.agp.components.element.Element getElement(ohos.app.Context,java.lang.String,int,java.lang.String)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndSet(java.lang.Object,int)>
<java.nio.file.FileSystemLoopException: void <init>(java.lang.String)>
<ohos.agp.components.RoundProgressBar: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.security.KeyException: void <init>(java.lang.String)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setInProgress(boolean)>
<ohos.global.resource.WrongTypeException: void <init>()>
<java.nio.file.Path: java.nio.file.Path getParent()>
<ohos.data.distributed.common.Options: ohos.data.distributed.common.Schema getSchema()>
<ohos.data.resultset.ResultSetWrapper: boolean isStarted()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,long[])>
<ohos.agp.animation.Animator: void stop()>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object peekFirst()>
<ohos.agp.render.Canvas: void clipRect(int,int,int,float)>
<ohos.data.rdb.RdbStore.ConflictResolution: ohos.data.rdb.RdbStore.ConflictResolution[] values()>
<ohos.multimodalinput.event.KeyBoardEvent: void disableIme()>
<ohos.utils.PlainArray: void clear()>
<ohos.agp.render.opengl.GLES1X: void glBlendFunc(int,int)>
<ohos.global.icu.text.BidiRun: int getLength()>
<ohos.media.audio.AudioRenderer: int getSampleRate()>
<ohos.agp.render.opengl.GLES20: void glDrawArrays(int,int,int)>
<javax.net.ssl.SSLEngine: void setEnabledCipherSuites(java.lang.String[])>
<java.util.Locale: java.lang.String getVariant()>
<java.nio.channels.Pipe.SourceChannel: void <init>(java.nio.channels.spi.SelectorProvider)>
<java.time.YearMonth: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>
<java.text.NumberFormat: java.lang.Number parse(java.lang.String)>
<java.lang.StackTraceElement: int hashCode()>
<java.nio.ShortBuffer: short[] array()>
<java.time.chrono.IsoChronology: int prolepticYear(java.time.chrono.Era,int)>
<ohos.ai.nlu.NluClient: void destroy(ohos.app.Context)>
<ohos.data.search.schema.EmailItem: java.lang.String getBccName()>
<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
<javax.net.ssl.SSLEngine: void setEnableSessionCreation(boolean)>
<javax.tools.ForwardingFileObject: long getLastModified()>
<ohos.bundle.BundleInfo: int getMinCompatibleVersionCode()>
<java.util.NavigableSet: java.util.NavigableSet descendingSet()>
<java.net.Socket: java.nio.channels.SocketChannel getChannel()>
<ohos.account.app.AppAccountAbility: boolean getAppAccountSync(java.lang.String)>
<ohos.agp.utils.Rect: int getHeight()>
<ohos.sysappcomponents.calendar.CalendarDataHelper: boolean delete(ohos.sysappcomponents.calendar.entity.CalendarEntity)>
<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>
<ohos.agp.render.Path: void rewind()>
<javax.crypto.ExemptionMechanismSpi: int engineGenExemptionBlob(byte[],int)>
<ohos.javax.xml.stream.events.Attribute: boolean isSpecified()>
<javax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket(int,int)>
<ohos.sysappcomponents.contact.entity.Email: boolean equals(java.lang.Object)>
<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>
<java.nio.file.FileStore: boolean supportsFileAttributeView(java.lang.Class)>
<java.util.Arrays: boolean equals(boolean[],boolean[])>
<java.lang.SecurityManager: void checkCreateClassLoader()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage acceptEither(java.util.concurrent.CompletionStage,java.util.function.Consumer)>
<ohos.interwork.event.intentagent.IntentAgentEx: boolean unmarshalling(ohos.utils.Parcel)>
<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getExponent()>
<java.io.ObjectInputStream: int skipBytes(int)>
<java.lang.StringBuilder: java.lang.Appendable append(java.lang.CharSequence)>
<ohos.ai.cv.common.VisionConfiguration.Builder: ohos.ai.cv.common.VisionConfiguration.Builder setAppType(int)>
<java.lang.Math: double ulp(double)>
<java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock: void <init>(java.util.concurrent.locks.ReentrantReadWriteLock)>
<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)>
<ohos.data.resultset.ResultSetWrapper: float getFloat(int)>
<ohos.security.asset.AssetOperatorAbs: ohos.security.asset.AssetResult assetSelect(ohos.aafwk.content.IntentParams)>
<ohos.net.HttpProxy: ohos.utils.net.Uri getConfigUrl()>
<java.sql.Blob: java.io.OutputStream setBinaryStream(long)>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster firstDayOfMonth()>
<ohos.data.rdb.RdbRangeException: void <init>()>
<ohos.global.icu.util.IndianCalendar: int handleGetYearLength(int)>
<java.io.PrintStream: void <init>(java.io.File,java.lang.String)>
<ohos.agp.components.DatePicker: int getNormalTextSize()>
<ohos.bundle.FormInfo.FormType: ohos.bundle.FormInfo.FormType[] values()>
<java.security.cert.PKIXParameters: boolean getPolicyQualifiersRejected()>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: ohos.event.notification.NotificationRequest.NotificationMultiLineContent setTitle(java.lang.String)>
<java.lang.Thread: java.lang.String getName()>
<ohos.global.icu.text.DecimalFormatSymbols: char getPadEscape()>
<java.util.stream.LongStream: void forEachOrdered(java.util.function.LongConsumer)>
<java.sql.ParameterMetaData: boolean isSigned(int)>
<ohos.data.distributed.common.KvManagerFactory: ohos.data.distributed.common.KvManager createKvManager(ohos.data.distributed.common.KvManagerConfig)>
<ohos.agp.animation.AnimatorValue: void setStateChangedListener(ohos.agp.animation.Animator.StateChangedListener)>
<ohos.global.icu.text.UnicodeSetSpanner.CountMethod: ohos.global.icu.text.UnicodeSetSpanner.CountMethod valueOf(java.lang.String)>
<java.net.Socket: boolean isClosed()>
<java.sql.SQLXML: java.io.Writer setCharacterStream()>
<ohos.agp.components.ComponentContainer: void addComponent(ohos.agp.components.Component,int)>
<java.util.concurrent.ForkJoinPool: boolean isTerminated()>
<ohos.utils.PlainBooleanArray: java.lang.String toString()>
<java.util.jar.JarEntry: java.util.jar.Attributes getAttributes()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notBetween(java.lang.String,float,float)>
<ohos.agp.components.Component: int getScrollValue(int)>
<java.util.zip.ZipFile: void finalize()>
<java.util.concurrent.Semaphore: boolean tryAcquire()>
<ohos.sensor.agent.CategoryOtherAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,long,long)>
<java.time.OffsetTime: int compareTo(java.time.OffsetTime)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object searchEntries(long,java.util.function.Function)>
<ohos.agp.colors.HslColor: void <init>()>
<ohos.utils.zson.ZSONObject: java.lang.Object getObject(java.lang.String,java.lang.Class)>
<java.lang.ThreadGroup: java.lang.String toString()>
<java.util.List: boolean contains(java.lang.Object)>
<ohos.media.photokit.metadata.AVStorage: ohos.utils.net.Uri fetchMediaResource(ohos.app.Context,ohos.utils.net.Uri)>
<ohos.media.image.common.Rect: void <init>(int,int,int,int)>
<java.time.LocalDateTime: java.lang.String toString()>
<java.time.temporal.TemporalField: java.lang.String getDisplayName(java.util.Locale)>
<javax.sql.StatementEventListener: void statementClosed(javax.sql.StatementEvent)>
<java.util.logging.Handler: java.lang.String getEncoding()>
<ohos.nfc.tag.IsoDepTag: void <init>(ohos.nfc.tag.TagInfo)>
<ohos.sensor.bean.SensorBase: long getMinInterval()>
<java.nio.channels.ClosedByInterruptException: void <init>()>
<ohos.accessibility.AccessibilitySystemAbilityClient: boolean unsubscribeStateObserver(ohos.accessibility.AccessibilityStateObserver)>
<ohos.agp.render.render3d.Engine: ohos.agp.render.render3d.ViewHolder createViewHolder(ohos.agp.components.surfaceprovider.SurfaceProvider)>
<java.security.NoSuchAlgorithmException: void <init>(java.lang.String,java.lang.Throwable)>
<java.sql.ResultSet: byte[] getBytes(java.lang.String)>
<ohos.event.notification.NotificationRequest: boolean marshalling(ohos.utils.Parcel)>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitPrimitiveAsBoolean(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<ohos.javax.xml.stream.util.XMLEventConsumer: void add(ohos.javax.xml.stream.events.XMLEvent)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneFormat getInstance(ohos.global.icu.util.ULocale)>
<ohos.usb.USBEndpoint: void <init>(int,int,int,int,int,int,int)>
<java.security.Policy: java.security.Policy getPolicy()>
<ohos.ai.nlu.ResponseResult: java.lang.String getResponseResult()>
<ohos.sensor.agent.CategoryMotionAgent: java.util.List getAllSensors()>
<ohos.media.sessioncore.AVController.PlayControls: void stop()>
<ohos.data.orm.OrmConfig: java.lang.String getName()>
<java.lang.Integer: int reverse(int)>
<java.security.KeyStore.SecretKeyEntry: java.lang.String toString()>
<java.lang.String: java.lang.String copyValueOf(char[],int,int)>
<javax.tools.Diagnostic: java.lang.String getCode()>
<ohos.utils.LightweightSet: void clear()>
<ohos.global.icu.text.NumberFormat: int getRoundingMode()>
<java.sql.SQLOutput: void writeBlob(java.sql.Blob)>
<ohos.rpc.RemoteProxy: java.lang.String getInterfaceDescriptor()>
<java.util.LinkedList: void add(int,java.lang.Object)>
<ohos.global.icu.util.Calendar: int floorDivide(long,int,int[])>
<ohos.system.OsHelper: void closeFile(java.io.FileDescriptor)>
<ohos.event.notification.NotificationConstant.DisturbMode: ohos.event.notification.NotificationConstant.DisturbMode valueOf(java.lang.String)>
<java.util.ConcurrentModificationException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,int[])>
<ohos.net.DataFlowStatistics: long getIfaceTxBytes(java.lang.String)>
<ohos.agp.components.Component.ClickedListener: void onClick(ohos.agp.components.Component)>
<ohos.data.distributed.common.Value: ohos.data.distributed.common.Value get(byte[])>
<java.util.Scanner: boolean hasNextBoolean()>
<ohos.ace.ability.AceAbility: void setPageParams(java.lang.String,ohos.aafwk.content.IntentParams)>
<ohos.agp.components.Button: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.components.PageSliderIndicator: void removePageChangedListener(ohos.agp.components.PageSlider.PageChangedListener)>
<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>
<ohos.media.sessioncore.AVBrowser: void <init>(ohos.app.Context,ohos.bundle.ElementName,ohos.media.common.sessioncore.AVConnectionCallback,ohos.utils.PacMap)>
<java.util.TreeMap: java.util.Map.Entry firstEntry()>
<ohos.agp.render.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,float[])>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayName(java.lang.String,java.lang.String)>
<ohos.data.search.schema.MusicItem: java.lang.Integer getDuration()>
<ohos.global.icu.text.NumberFormat.Field: void <init>(java.lang.String)>
<java.lang.BootstrapMethodError: void <init>()>
<java.lang.String: char[] toCharArray()>
<ohos.agp.components.element.Element: void <init>(java.lang.Object)>
<java.io.DataOutputStream: void writeLong(long)>
<ohos.agp.components.AttrSet: java.util.Optional getAttr(java.lang.String)>
<ohos.data.resultset.ResultSetIndexOutOfRangeException: void <init>()>
<ohos.agp.render.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<java.util.concurrent.ConcurrentHashMap: long reduceKeysToLong(long,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator)>
<java.nio.file.Files: java.io.BufferedWriter newBufferedWriter(java.nio.file.Path,java.nio.file.OpenOption[])>
<ohos.sysappcomponents.contact.entity.Event: void setLabelId(ohos.app.Context,int)>
<java.util.Spliterator.OfLong: void forEachRemaining(java.lang.Object)>
<ohos.bluetooth.A2dpSink: int getPlayingState(ohos.bluetooth.BluetoothRemoteDevice)>
<javax.lang.model.util.AbstractTypeVisitor6: java.lang.Object visitUnion(javax.lang.model.type.UnionType,java.lang.Object)>
<java.security.cert.CertificateEncodingException: void <init>()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent getPicker()>
<ohos.os.ProcessManager: long getStartRealtime()>
<ohos.agp.render.opengl.GLES31: void glProgramUniform1iv(int,int,int,int[])>
<ohos.data.distributed.common.SyncMode: void <clinit>()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean isHeldExclusively()>
<java.security.Signature: java.lang.Object clone()>
<java.util.concurrent.atomic.AtomicIntegerArray: void <init>(int[])>
<ohos.aafwk.ability.Ability: ohos.aafwk.ability.AbilityLifecycleExecutor.LifecycleState getState()>
<ohos.agp.components.DragEvent: float getX()>
<javax.tools.DiagnosticCollector: java.util.List getDiagnostics()>
<java.util.concurrent.atomic.AtomicLong: long get()>
<java.sql.ResultSet: byte getByte(int)>
<ohos.agp.render.opengl.GLES31: void glBindProgramPipeline(int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThan(java.lang.String,java.lang.String)>
<ohos.app.AbilityContext: void setShowOnLockScreen(boolean)>
<ohos.event.intentagent.IntentAgentHelper: void triggerIntentAgent(ohos.app.Context,ohos.event.intentagent.IntentAgent,ohos.event.intentagent.IntentAgent.OnCompleted,ohos.eventhandler.EventHandler,ohos.event.intentagent.TriggerInfo)>
<java.util.HashSet: boolean isEmpty()>
<java.util.List: int lastIndexOf(java.lang.Object)>
<java.util.Scanner: java.io.IOException ioException()>
<java.security.Provider: java.lang.String getName()>
<java.util.concurrent.BlockingDeque: java.lang.Object take()>
<java.nio.file.FileStore: java.nio.file.attribute.FileStoreAttributeView getFileStoreAttributeView(java.lang.Class)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object[] toArray(java.lang.Object[])>
<ohos.event.notification.NotificationSubscribeInfo: ohos.event.notification.NotificationSubscribeInfo addAppNames(java.lang.String[])>
<java.time.chrono.Chronology: java.util.List eras()>
<javax.net.ssl.TrustManagerFactory: void <init>(javax.net.ssl.TrustManagerFactorySpi,java.security.Provider,java.lang.String)>
<ohos.data.file.FileAbility: int delete(ohos.utils.net.Uri,ohos.data.dataability.DataAbilityPredicates)>
<java.time.ZoneId: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>
<java.util.concurrent.FutureTask: void <init>(java.lang.Runnable,java.lang.Object)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query notInLong(java.lang.String,java.util.List)>
<ohos.agp.graphics.Surface.PixelFormat: int value()>
<java.lang.Integer: void <clinit>()>
<java.time.ZonedDateTime: java.time.ZonedDateTime now(java.time.ZoneId)>
<ohos.utils.FloatDimension: float getHeightSize()>
<javax.crypto.CipherSpi: int engineDoFinal(byte[],int,int,byte[],int)>
<java.nio.channels.SelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>
<ohos.media.camera.device.FrameConfig: java.util.List getSurfaces()>
<java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.nio.CharBuffer: java.lang.Appendable append(java.lang.CharSequence)>
<java.sql.ResultSet: long getLong(java.lang.String)>
<java.io.File: boolean mkdir()>
<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>
<ohos.accessibility.ability.AccessibilityInfo: void setDeletable(boolean)>
<ohos.data.search.SearchAbility: java.util.List deleteByTerm(java.lang.String,java.lang.String,java.lang.String,java.util.List)>
<java.time.ZonedDateTime: java.time.ZonedDateTime plusDays(long)>
<ohos.agp.render.opengl.GLES20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>
<ohos.app.AbilityContext: void compelVerifyUriPermission(ohos.utils.net.Uri,int,java.lang.String)>
<java.lang.Long: int compareTo(java.lang.Long)>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<ohos.utils.BasePacMap: boolean[] getBooleanValueArray(java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: void setOrder(java.lang.String)>
<ohos.agp.components.AbsSlider: void <init>(ohos.app.Context)>
<ohos.media.audio.EchoCancelerEffect: boolean isAvailable()>
<ohos.agp.render.opengl.GLES1X: void glTexEnvfv(int,int,float[])>
<ohos.location.RequestParam: void setPriorityLevel(int)>
<ohos.account.app.AppAccount: void <init>()>
<ohos.agp.components.SlideDrawer.SlideListener: void onOpen(ohos.agp.components.SlideDrawer,ohos.agp.components.SlideDrawer.SlideDirection)>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
<java.util.stream.Stream: java.util.stream.IntStream flatMapToInt(java.util.function.Function)>
<java.text.MessageFormat: void setFormat(int,java.text.Format)>
<ohos.org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>
<java.security.cert.PKIXRevocationChecker: java.util.Set getOptions()>
<ohos.agp.components.Component: int[] getPadding()>
<java.io.File: long getFreeSpace()>
<java.sql.SQLInput: java.io.InputStream readAsciiStream()>
<ohos.media.image.ImageSource: void release()>
<java.sql.RowId: java.lang.String toString()>
<ohos.global.icu.lang.UCharacter.UnicodeBlock: int getID()>
<ohos.media.extractor.Extractor: boolean specifyStream(int)>
<ohos.sensor.agent.CategoryMotionAgent: void <init>()>
<ohos.media.audio.AudioCapturerInfo.AudioInputSource: ohos.media.audio.AudioCapturerInfo.AudioInputSource valueOf(java.lang.String)>
<ohos.org.xml.sax.helpers.DefaultHandler: void characters(char[],int,int)>
<ohos.utils.PlainLongArray: long get(int,long)>
<javax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress)>
<ohos.utils.PacMap: int[] getIntValueArray(java.lang.String)>
<java.lang.reflect.Method: java.lang.String toString()>
<java.sql.ResultSet: java.sql.Array getArray(java.lang.String)>
<java.lang.Thread: int getPriority()>
<ohos.hiviewdfx.Debug: void getNativeHeapInfo(ohos.hiviewdfx.Debug.HeapInfo)>
<ohos.bluetooth.BluetoothHost: ohos.bluetooth.BluetoothRemoteDevice getRemoteDev(java.lang.String)>
<ohos.agp.colors.RgbColor: int hashCode()>
<java.lang.Short: java.lang.String toString()>
<java.io.LineNumberReader: long skip(long)>
<ohos.aafwk.ability.Ability: void onCommand(ohos.aafwk.content.Intent,boolean)>
<ohos.sensor.agent.CategoryOtherAgent: void <init>()>
<ohos.agp.components.Text: void setHint(java.lang.String)>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.BaseDialog setSize(int,int)>
<java.net.DatagramSocketImpl: byte getTTL()>
<ohos.media.audio.SoundPlayer: boolean setVolume(int,ohos.media.audio.SoundPlayer.AudioVolumes)>
<ohos.global.resource.NotExistException: void <init>(java.lang.String)>
<ohos.global.icu.text.StringPrepParseException: void <init>(java.lang.String,int)>
<ohos.event.notification.NotificationSubscriber: void onDisturbModeChanged(int)>
<ohos.data.IllegalPredicateException: void <init>(java.lang.String)>
<java.util.BitSet: boolean isEmpty()>
<ohos.agp.components.webengine.WebAgent: void onLoadingPage(ohos.agp.components.webengine.WebView,java.lang.String,ohos.media.image.PixelMap)>
<ohos.agp.components.Slider: ohos.agp.components.element.Element getDecreaseButton()>
<ohos.aafwk.ability.AbilitySlice: boolean onKeyDown(int,ohos.multimodalinput.event.KeyEvent)>
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.render.Shader.TileMode: void <clinit>()>
<java.security.MessageDigest: java.security.Provider getProvider()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet addAll(int,int)>
<java.nio.ShortBuffer: int compareTo(java.nio.ShortBuffer)>
<ohos.interwork.bundle.ElementNameEx: void <init>(java.lang.String,java.lang.String)>
<ohos.global.icu.text.PluralFormat: void <init>(ohos.global.icu.util.ULocale,java.lang.String)>
<ohos.agp.graphics.Surface: boolean bindToTextureHolder(ohos.agp.graphics.TextureHolder)>
<java.lang.Character: boolean isTitleCase(int)>
<ohos.utils.zson.ZSONObject: java.lang.String toZSONString(java.lang.Object)>
<ohos.data.async.DeleteCallback: void onDeleteDone(java.lang.Integer,java.lang.Object,java.lang.Integer)>
<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>
<ohos.security.seoperator.SEOperatorAbs: boolean isEnable(java.lang.String,java.lang.String)>
<ohos.utils.zson.ZSONWriter: void endObject()>
<java.util.stream.Stream: java.util.stream.DoubleStream mapToDouble(java.util.function.ToDoubleFunction)>
<ohos.agp.render.render3d.math.Vector3: float getX()>
<java.time.Instant: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<java.lang.Throwable: java.lang.Throwable[] getSuppressed()>
<ohos.global.icu.text.UnicodeSet: boolean containsNone(java.lang.Iterable)>
<ohos.agp.utils.Matrix44: void transpose()>
<ohos.bluetooth.BluetoothRemoteDevice: boolean setDevicePin(byte[])>
<java.lang.Character: int toUpperCase(int)>
<java.security.cert.PKIXCertPathChecker: java.util.Set getSupportedExtensions()>
<java.util.zip.Inflater: void <init>(boolean)>
<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate date(java.time.temporal.TemporalAccessor)>
<java.io.StringReader: void mark(int)>
<ohos.nfc.tag.TagManager: int getSendDataTimeout()>
<java.time.Duration: java.time.Duration ofMillis(long)>
<java.time.YearMonth: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.miscservices.pasteboard.PasteData: boolean hasMimeType(java.lang.String)>
<java.time.OffsetTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoZonedDateTime withLaterOffsetAtOverlap()>
<java.text.ChoiceFormat: double nextDouble(double)>
<java.lang.Character.UnicodeBlock: java.lang.Character.UnicodeBlock of(int)>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: int getVertexCount()>
<ohos.ai.asr.AsrIntent.AsrAudioSrcType: int getValue()>
<ohos.event.notification.IAdvancedNotificationManager: void cancelNotification(java.lang.String,java.lang.String)>
<java.io.Writer: void close()>
<java.lang.Character: boolean isLetter(char)>
<java.lang.StringBuilder: int offsetByCodePoints(int,int)>
<ohos.agp.components.Text: void setMaxTextWidth(int)>
<java.io.SyncFailedException: void <init>(java.lang.String)>
<java.util.NavigableSet: java.lang.Object floor(java.lang.Object)>
<java.nio.file.WatchEvent.Kind: java.lang.String name()>
<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>
<ohos.agp.render.render3d.math.Vector4: float getLengthSquared()>
<javax.lang.model.element.TypeParameterElement: javax.lang.model.element.Element getEnclosingElement()>
<ohos.global.icu.lang.UCharacter: int getCodePoint(char,char)>
<ohos.event.notification.NotificationHelper: void addNotificationSlot(ohos.event.notification.NotificationSlot)>
<ohos.agp.components.Image: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.components.Picker: void setMinValue(int)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>
<ohos.agp.components.ListContainer: java.lang.String getTextFilter()>
<java.util.Calendar.Builder: java.util.Calendar build()>
<java.nio.file.SimpleFileVisitor: java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException)>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<ohos.global.icu.util.IllformedLocaleException: void <init>()>
<ohos.agp.components.TimePicker: boolean is24Hour()>
<ohos.agp.render.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>
<ohos.data.DatabaseFileConfig.Builder: ohos.data.DatabaseFileConfig.Builder setEncrypted(boolean)>
<java.time.LocalDate: java.time.LocalDate of(int,int,int)>
<javax.net.ssl.SNIHostName: javax.net.ssl.SNIMatcher createSNIMatcher(java.lang.String)>
<ohos.net.ConnectionProperties: java.util.List getLinkAddresses()>
<ohos.agp.components.ProgressBar: int getViceProgressValue()>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setTag(java.lang.String)>
<ohos.security.seoperator.SEOperatorAbs: java.lang.String getCplc(java.lang.String)>
<ohos.sysappcomponents.calendar.entity.Events: void setEventColour(int)>
<java.util.UUID: boolean equals(java.lang.Object)>
<ohos.media.audio.AudioDeviceDescriptor: int[] getChannelIndexMasks()>
<ohos.agp.components.Picker: ohos.agp.components.element.Element getDisplayedTopElement()>
<java.lang.StringBuffer: void <init>()>
<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
<java.nio.channels.AsynchronousByteChannel: void write(java.nio.ByteBuffer,java.lang.Object,java.nio.channels.CompletionHandler)>
<java.time.format.DateTimeFormatter: java.time.format.DecimalStyle getDecimalStyle()>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<ohos.bundle.AbilityInfo: java.util.List getPermissions()>
<javax.net.ssl.KeyManagerFactorySpi: void <init>()>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate dateNow()>
<ohos.data.distributed.common.KvManagerConfig: int hashCode()>
<java.sql.ResultSetMetaData: boolean isCaseSensitive(int)>
<java.io.File: boolean isAbsolute()>
<java.util.LinkedHashMap: void <init>(int)>
<ohos.net.ConnectionProperties: java.util.List getRoutes()>
<ohos.agp.render.opengl.GLES2Ext: void glPopDebugGroupKHR()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query equalTo(java.lang.String,double)>
<ohos.wifi.p2p.WifiP2pConfig: java.lang.String getDeviceAddress()>
<java.security.Policy: java.security.Policy getInstance(java.lang.String,java.security.Policy.Parameters,java.lang.String)>
<java.util.Calendar: java.util.Calendar getInstance()>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate dateNow(java.time.ZoneId)>
<ohos.data.distributed.device.DeviceFilterStrategy: ohos.data.distributed.device.DeviceFilterStrategy valueOf(java.lang.String)>
<ohos.data.search.schema.PhotoItem: java.lang.String getTag()>
<ohos.agp.text.TextForm: ohos.agp.text.Font getTextFont()>
<java.lang.String: boolean matches(java.lang.String)>
<ohos.agp.render.render3d.RenderLoop: void startRendering()>
<ohos.media.audio.AudioCapturer: ohos.media.audio.AudioDeviceDescriptor getSelectedDevice()>
<java.io.StringReader: int read(char[],int,int)>
<ohos.agp.render.Canvas: void drawLine(ohos.agp.utils.Line,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<java.net.ServerSocket: int getSoTimeout()>
<ohos.agp.render.Paint: void setDither(boolean)>
<java.nio.ShortBuffer: boolean isDirect()>
<java.io.DataInputStream: short readShort()>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.stream.DoubleStream: java.util.OptionalDouble findFirst()>
<ohos.sysappcomponents.contact.ContactsHelper: ohos.sysappcomponents.contact.ContactsCollection queryContactsByPhoneNumber(java.lang.String,ohos.sysappcomponents.contact.entity.Holder,ohos.sysappcomponents.contact.ContactAttributes)>
<ohos.media.camera.device.FrameStateCallback: void onCaptureTriggerFinished(ohos.media.camera.device.Camera,int,long)>
<java.util.Locale.Builder: java.util.Locale.Builder addUnicodeLocaleAttribute(java.lang.String)>
<java.util.Map.Entry: java.util.Comparator comparingByValue()>
<java.util.NavigableMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>
<javax.sql.RowSet: void addRowSetListener(javax.sql.RowSetListener)>
<java.util.Arrays: void sort(byte[],int,int)>
<ohos.net.RouteInfo: boolean isDefaultRoute()>
<ohos.workscheduler.WorkInfo: int getRepeatCounter()>
<javax.crypto.IllegalBlockSizeException: void <init>(java.lang.String)>
<ohos.data.orm.DowngradeComparator: void <init>()>
<ohos.agp.render.Paint: void setUnderLine(boolean)>
<ohos.agp.components.DirectionalLayout.LayoutConfig: void <init>()>
<java.nio.LongBuffer: int arrayOffset()>
<ohos.agp.utils.Matrix.ScaleToFit: int value()>
<ohos.global.icu.text.MessageFormat: java.util.Map parseToMap(java.lang.String,java.text.ParsePosition)>
<ohos.agp.render.render3d.resources.MeshDesc: ohos.agp.render.render3d.resources.MeshDesc.PrimitiveDesc[] getPrimitives()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThanOrEqualTo(java.lang.String,float)>
<java.util.Map: boolean isEmpty()>
<java.util.TreeMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>
<java.security.Signature: void setParameter(java.lang.String,java.lang.Object)>
<ohos.agp.render.Path: int countPoints()>
<ohos.global.icu.text.CaseMap.Lower: ohos.global.icu.text.CaseMap.Lower omitUnchangedText()>
<ohos.media.player.Player: ohos.media.player.Player.StreamInfo[] getStreamInfo()>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig build()>
<java.util.TreeSet: java.util.NavigableSet headSet(java.lang.Object,boolean)>
<ohos.data.search.SearchAbility: boolean hasConnected()>
<ohos.bluetooth.ble.BleCentralManagerCallback: void groupScanResultsEvent(java.util.List)>
<java.sql.CallableStatement: java.sql.SQLXML getSQLXML(int)>
<java.util.concurrent.ThreadLocalRandom: int nextInt(int)>
<ohos.telephony.ShortMessage: long getScTimestamp()>
<ohos.agp.render.Path.AddPathMode: ohos.agp.render.Path.AddPathMode valueOf(java.lang.String)>
<ohos.agp.render.Path: void arcTo(ohos.agp.utils.Point,float,ohos.agp.render.Path.ArcSize,ohos.agp.render.Path.Direction,ohos.agp.utils.Point)>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.resources.MaterialDesc.MaterialType getType()>
<ohos.agp.colors.HslPalette: void <clinit>()>
<java.lang.OutOfMemoryError: void <init>()>
<ohos.global.icu.text.Bidi: int getParagraphIndex(int)>
<ohos.multimodalinput.event.MultimodalEvent: int getInputDeviceId()>
<java.util.Collections: java.util.List singletonList(java.lang.Object)>
<java.io.CharArrayWriter: java.io.CharArrayWriter append(char)>
<ohos.agp.render.Canvas: void drawLine(ohos.agp.utils.Line,ohos.agp.render.Paint)>
<java.lang.System: void setErr(java.io.PrintStream)>
<java.lang.Short: int compareTo(java.lang.Object)>
<ohos.sensor.common.SensorUtils: int parseSensorIndex(int)>
<java.nio.file.Files: java.util.stream.Stream lines(java.nio.file.Path)>
<java.util.logging.LogRecord: void setThreadID(int)>
<java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class)>
<ohos.agp.components.webengine.ResourceRequest: boolean isMainFrame()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getSharedQueuedThreads()>
<ohos.utils.PersistablePacMap: ohos.utils.PersistablePacMap deepCopy()>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>
<ohos.global.icu.util.HebrewCalendar: int handleComputeMonthStart(int,int,boolean)>
<ohos.agp.render.render3d.math.Vector2: float getLengthSquared()>
<java.lang.Throwable: java.lang.String getMessage()>
<javax.crypto.Cipher: byte[] wrap(java.security.Key)>
<ohos.global.icu.text.CaseMap.Fold: ohos.global.icu.text.CaseMap.Fold turkic()>
<ohos.usb.USBCore: void <init>(ohos.app.Context)>
<ohos.utils.PlainIntArray: void setValueAt(int,int)>
<ohos.net.LocalSocket: void setSocketReadTimeout(int)>
<java.net.CookieStore: boolean removeAll()>
<ohos.data.search.listener.IIndexChangeListener: void onDataChanged(java.lang.String,ohos.data.search.model.ChangedIndexContent)>
<java.net.MulticastSocket: void <init>()>
<ohos.media.sessioncore.AVSession: void setAVRatingStyle(int)>
<ohos.vibrator.agent.VibratorAgent: boolean start(ohos.vibrator.bean.VibrationPattern)>
<javax.sql.CommonDataSource: void setLoginTimeout(int)>
<java.time.chrono.JapaneseChronology: java.lang.String getId()>
<java.util.zip.Deflater: void finish()>
<ohos.telephony.SimInfoManager: java.lang.String getVoiceMailNumber(int)>
<ohos.bluetooth.BluetoothRemoteDevice: java.lang.String toString()>
<java.nio.file.Files: boolean isReadable(java.nio.file.Path)>
<javax.tools.DocumentationTool.DocumentationTask: java.lang.Object call()>
<java.util.logging.ConsoleHandler: void publish(java.util.logging.LogRecord)>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate dateNow(java.time.Clock)>
<java.lang.Math: float nextDown(float)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>
<ohos.agp.render.opengl.GLES20: void glBlendColor(float,float,float,float)>
<java.sql.DatabaseMetaData: int getMaxUserNameLength()>
<ohos.aafwk.ability.AbilitySlice: void terminateAbility()>
<java.util.NavigableMap: java.lang.Object floorKey(java.lang.Object)>
<ohos.telephony.RadioInfoManager: java.lang.String getUniqueDeviceId(int)>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>
<java.util.IllformedLocaleException: int getErrorIndex()>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitVariableAsExceptionParameter(javax.lang.model.element.VariableElement,java.lang.Object)>
<ohos.event.notification.NotificationActionButton: java.lang.String getTitle()>
<java.time.MonthDay: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.utils.geo.Rect: boolean isIntersect(ohos.utils.geo.Rect)>
<java.nio.channels.FileChannel: long read(java.nio.ByteBuffer[],int,int)>
<ohos.global.icu.util.BuddhistCalendar: void <init>(ohos.global.icu.util.TimeZone)>
<ohos.light.agent.LightAgent: boolean isEffectSupport(int,java.lang.String)>
<ohos.location.GeoAddress: int getDescriptionsSize()>
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>
<ohos.agp.components.ListContainer: ohos.agp.components.ListContainer.ReboundEffectParams getReboundEffectParams()>
<ohos.agp.render.render3d.gltf.GltfImportData: java.lang.String getError()>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat subtraction(float,float)>
<ohos.global.icu.util.Calendar: int getFirstDayOfWeek()>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitInt(int,java.lang.Object)>
<ohos.utils.IntArray: int getCapacity()>
<javax.sql.RowSet: void setDouble(java.lang.String,double)>
<ohos.sysappcomponents.calendar.entity.Reminders: int getEventId()>
<java.util.Arrays: void fill(boolean[],boolean)>
<ohos.utils.system.SystemCapability.IVI: void <init>()>
<java.text.DecimalFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<ohos.aafwk.ability.DataAbilityResult: ohos.utils.net.Uri getUri()>
<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>
<ohos.agp.render.render3d.gltf.GltfLoader: ohos.agp.render.render3d.Entity importScene(int,ohos.agp.render.render3d.gltf.GltfData,ohos.agp.render.render3d.gltf.GltfImportData,ohos.agp.render.render3d.Entity,int)>
<ohos.ai.cv.common.VisionConfiguration.Builder: ohos.ai.cv.common.VisionConfiguration.Builder setClientPkgName(java.lang.String)>
<ohos.storageinfomgr.StorageInfo: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.zip.InflaterInputStream: void close()>
<ohos.eventhandler.InnerEvent: java.lang.Runnable getTask()>
<ohos.global.icu.lang.UCharacter.UnicodeBlock: ohos.global.icu.lang.UCharacter.UnicodeBlock forName(java.lang.String)>
<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>
<java.util.NavigableSet: java.util.NavigableSet tailSet(java.lang.Object,boolean)>
<ohos.telephony.SimInfoManager: int getVoiceMailCount(int)>
<java.util.jar.Pack200.Packer: void removePropertyChangeListener(java.beans.PropertyChangeListener)>
<ohos.javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.String)>
<ohos.miscservices.inputmethod.EditingText: java.lang.String getPrompt()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThan(java.lang.String,long)>
<ohos.hiviewdfx.HiChecker: void addRule(ohos.hiviewdfx.HiChecker.Rule)>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onSend(ohos.multimodalinput.event.MultimodalEvent)>
<java.security.SecureRandom: void setSeed(byte[])>
<ohos.utils.Parcel: boolean writeInt(int)>
<java.security.SignatureSpi: void <init>()>
<ohos.data.search.schema.NoticeItem: java.lang.Double getLongitude()>
<ohos.net.HttpProxy: boolean equals(java.lang.Object)>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitType(javax.lang.model.element.TypeElement,java.lang.Object)>
<javax.net.ssl.SSLSession: java.security.Principal getLocalPrincipal()>
<ohos.agp.components.TabList: void removeTab(int)>
<ohos.agp.animation.Animator: long getDelay()>
<ohos.agp.render.Paint: boolean getFillPath(ohos.agp.render.Path,ohos.agp.render.Path)>
<ohos.data.search.model.Recommendation: java.util.List getIndexDataList()>
<java.nio.file.Files: java.io.BufferedReader newBufferedReader(java.nio.file.Path,java.nio.charset.Charset)>
<java.util.zip.CheckedOutputStream: java.util.zip.Checksum getChecksum()>
<javax.crypto.CipherInputStream: void close()>
<ohos.agp.render.opengl.GLES20: void glDrawElements(int,int,int,java.nio.Buffer)>
<java.util.stream.IntStream: java.util.stream.IntStream flatMap(java.util.function.IntFunction)>
<ohos.agp.components.SlideDrawer: void setTouchForClose(boolean)>
<ohos.data.file.FileAbility: void onStart(ohos.aafwk.content.Intent)>
<java.time.OffsetDateTime: java.time.OffsetDateTime withSecond(int)>
<ohos.agp.render.opengl.GLES20: void glGenTextures(int,java.nio.IntBuffer)>
<ohos.agp.components.ComponentContainer.LayoutConfig: boolean isMarginsRelative()>
<ohos.global.icu.lang.UScript: java.lang.String getName(int)>
<ohos.interwork.ui.TextureComponentEx: void <init>(ohos.app.Context)>
<ohos.event.notification.NotificationSubscribeInfo: java.util.Set getAppNames()>
<java.security.cert.CertificateException: void <init>(java.lang.String)>
<java.io.Reader: void <init>(java.lang.Object)>
<javax.sql.RowSetMetaData: void setSearchable(int,boolean)>
<ohos.data.DatabaseFileConfig.Builder: ohos.data.DatabaseFileConfig.Builder setDatabaseFileSecurityLevel(ohos.data.DatabaseFileSecurityLevel)>
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.security.Provider)>
<java.net.InterfaceAddress: java.net.InetAddress getAddress()>
<ohos.net.NetManager: boolean sendNetConnectState(ohos.net.NetHandle,boolean)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates groupBy(java.lang.String[])>
<java.security.PermissionCollection: boolean implies(java.security.Permission)>
<ohos.agp.window.dialog.CommonDialog: boolean deliverTouchCase(ohos.multimodalinput.event.TouchEvent)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,int)>
<ohos.bundle.FormInfo: void <init>(ohos.bundle.FormInfo)>
<java.sql.CallableStatement: void setShort(java.lang.String,short)>
<ohos.aafwk.ability.DataAbilityResult: java.lang.String toString()>
<ohos.utils.zson.ZSONReader: double readDouble()>
<java.time.LocalTime: java.time.LocalTime plusNanos(long)>
<java.util.logging.LogRecord: java.lang.Object[] getParameters()>
<ohos.rpc.RemoteObjectCallbackList: java.lang.Object getBroadcastCookie(int)>
<javax.sql.RowSet: void setRef(int,java.sql.Ref)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThanOrEqualTo(java.lang.String,java.util.Date)>
<ohos.agp.window.dialog.BaseDialog: void onCreate()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet applyPropertyAlias(java.lang.String,java.lang.String,ohos.global.icu.text.SymbolTable)>
<ohos.location.RequestParam: void <init>(int)>
<javax.lang.model.UnknownEntityException: void <init>(java.lang.String)>
<java.net.URLConnection: void setReadTimeout(int)>
<ohos.event.commonevent.CommonEventManager: void publishCommonEvent(ohos.event.commonevent.CommonEventData)>
<ohos.global.icu.text.UCharacterIterator: int previousCodePoint()>
<ohos.data.resultset.CombinedResultSet: float getFloat(int)>
<javax.lang.model.util.ElementScanner6: java.lang.Object visitExecutable(javax.lang.model.element.ExecutableElement,java.lang.Object)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query inLong(java.lang.String,java.util.List)>
<ohos.aafwk.ability.AbilitySlice: ohos.aafwk.ability.ContinuationState getContinuationState()>
<ohos.aafwk.ability.fraction.Fraction: void onStart(ohos.aafwk.content.Intent)>
<ohos.agp.components.Component: void setKeyEventListener(ohos.agp.components.Component.KeyEventListener)>
<java.util.AbstractMap.SimpleImmutableEntry: void <init>(java.util.Map.Entry)>
<ohos.media.common.sessioncore.AVControllerCallback: void <init>()>
<ohos.app.Context: ohos.app.dispatcher.TaskDispatcher getUITaskDispatcher()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: void acquire(long)>
<java.lang.reflect.Array: void setShort(java.lang.Object,int,short)>
<java.lang.reflect.Executable: java.lang.Class getDeclaringClass()>
<ohos.location.Location: void setLatitude(double)>
<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>
<ohos.data.preferences.Preferences: java.lang.String getString(java.lang.String,java.lang.String)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.String formatOffsetISO8601Extended(int,boolean,boolean,boolean)>
<java.io.ObjectInputStream: boolean enableResolveObject(boolean)>
<ohos.agp.components.Component: void setLayoutRefreshedListener(ohos.agp.components.Component.LayoutRefreshedListener)>
<ohos.global.icu.util.ChineseCalendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<java.util.SplittableRandom: long nextLong()>
<ohos.agp.components.Text: void setLineSpacing(float,float)>
<java.time.ZonedDateTime: java.time.ZonedDateTime withZoneSameInstant(java.time.ZoneId)>
<ohos.agp.render.PixelMapShader: void <init>()>
<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>
<ohos.data.search.schema.Schema: java.lang.Object setIdentifier(java.lang.String)>
<ohos.bundle.BundleInfo: java.util.List getModuleNames()>
<ohos.data.search.schema.MusicItem: ohos.data.search.schema.MusicItem setSize(java.lang.Integer)>
<ohos.agp.components.ComponentContainer.LayoutConfig: void setMarginsRelative(int,int,int,int)>
<ohos.agp.components.element.FrameAnimationElement: void setOneShot(boolean)>
<ohos.agp.utils.RectFloat: void <init>()>
<ohos.agp.render.opengl.GLES30: int glGetFragDataLocation(int,java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: java.lang.String getText()>
<java.text.Collator: java.lang.Object clone()>
<ohos.agp.components.TimePicker: ohos.agp.components.element.Element getDisplayedTopElement()>
<ohos.agp.components.TableLayoutManager: int getRowCount()>
<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>
<java.net.DatagramPacket: void setData(byte[],int,int)>
<ohos.net.LinkAddress: java.net.InetAddress getAddress()>
<java.nio.FloatBuffer: java.nio.FloatBuffer put(int,float)>
<ohos.utils.ConditionHelper: void <init>(boolean)>
<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>
<ohos.agp.render.opengl.GLES1X: void glStencilMask(int)>
<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>
<ohos.agp.render.layoutboost.LayoutBoostUtils: ohos.agp.text.Font getTextWeight(ohos.agp.components.Text,int)>
<java.util.Arrays: boolean equals(char[],char[])>
<javax.crypto.spec.GCMParameterSpec: int getTLen()>
<java.util.Arrays: char[] copyOfRange(char[],int,int)>
<ohos.global.icu.text.Bidi: int getLogicalIndex(int)>
<ohos.utils.BasePacMap: int getSize()>
<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>
<ohos.agp.render.Paint: void setStrikeThrough(boolean)>
<ohos.agp.render.opengl.GLES20: void glDepthFunc(int)>
<java.util.jar.Attributes: void <init>()>
<java.util.jar.Manifest: int hashCode()>
<ohos.global.icu.util.IndianCalendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<ohos.javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>
<java.util.concurrent.PriorityBlockingQueue: void <init>(int)>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: void <init>()>
<ohos.agp.components.ListContainer: void scrollToCenter(int)>
<ohos.aafwk.ability.Lifecycle: void dispatchLifecycle(ohos.aafwk.ability.Lifecycle.Event,ohos.aafwk.content.Intent)>
<java.sql.Connection: void setReadOnly(boolean)>
<java.util.EnumMap: boolean containsKey(java.lang.Object)>
<java.util.zip.ZipOutputStream: void close()>
<java.lang.Math: int floorMod(int,int)>
<java.lang.invoke.MutableCallSite: void <init>(java.lang.invoke.MethodType)>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: void setMaterial(ohos.agp.render.render3d.resources.ResourceHandle)>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.Object freeze()>
<java.util.logging.LogRecord: void setLoggerName(java.lang.String)>
<java.io.OutputStream: void close()>
<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThanOrEqualTo(java.lang.String,float)>
<ohos.bundleactive.BundleActiveStates: boolean hasNextState()>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object pollLast()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,java.util.Date)>
<ohos.agp.render.opengl.GLES30: void glGetActiveUniformsiv(int,int,int[],int,int[])>
<java.util.PriorityQueue: java.util.Comparator comparator()>
<ohos.global.icu.util.LocaleData: ohos.global.icu.util.LocaleData getInstance(ohos.global.icu.util.ULocale)>
<java.sql.SQLOutput: void writeSQLXML(java.sql.SQLXML)>
<ohos.utils.LightweightMap: boolean retainAll(java.util.Collection)>
<ohos.global.icu.util.ULocale.Builder: void <init>()>
<java.lang.reflect.Modifier: int methodModifiers()>
<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror asMemberOf(javax.lang.model.type.DeclaredType,javax.lang.model.element.Element)>
<java.util.Scanner: boolean hasNext()>
<java.util.SortedSet: java.lang.Object last()>
<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>
<java.sql.CallableStatement: java.lang.String getString(java.lang.String)>
<ohos.event.commonevent.AsyncCommonEventResult: java.lang.String getData()>
<java.util.Vector: void removeRange(int,int)>
<java.util.Base64.Decoder: byte[] decode(byte[])>
<ohos.agp.utils.DimensFloat: int getMaxToInt()>
<java.sql.CallableStatement: void setNCharacterStream(java.lang.String,java.io.Reader,long)>
<java.lang.Character: boolean isTitleCase(char)>
<ohos.utils.PacMap: void putSequenceableObject(java.lang.String,ohos.utils.Sequenceable)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat copy(int,int)>
<ohos.batterymanager.BatteryInfo: ohos.batterymanager.BatteryInfo.BatteryChargeState getChargingStatus()>
<ohos.agp.components.Text: java.lang.String getText()>
<ohos.miscservices.inputmethodability.KeyboardDelegate: boolean onKeyDown(ohos.multimodalinput.event.KeyEvent)>
<ohos.media.audio.AudioManager.CallState: ohos.media.audio.AudioManager.CallState getEnumByValue(int)>
<java.security.PolicySpi: void engineRefresh()>
<ohos.app.Context: void compelVerifyPermission(java.lang.String,int,int,java.lang.String)>
<ohos.utils.SequenceUuid: java.lang.String toString()>
<ohos.global.icu.text.DecimalFormat: void <init>(java.lang.String,ohos.global.icu.text.DecimalFormatSymbols)>
<java.time.temporal.ChronoField: java.lang.String toString()>
<java.security.DomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
<ohos.eventhandler.EventHandler: void sendSyncEvent(ohos.eventhandler.InnerEvent,ohos.eventhandler.EventHandler.Priority)>
<ohos.utils.geo.Point: void modify(ohos.utils.geo.Point)>
<ohos.accessibility.AccessibilityEventInfo: java.lang.CharSequence getBundleName()>
<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.ToastDialog setSize(int,int)>
<java.sql.ResultSet: java.sql.Timestamp getTimestamp(java.lang.String)>
<java.io.UTFDataFormatException: void <init>()>
<java.security.spec.EllipticCurve: byte[] getSeed()>
<javax.lang.model.util.AbstractElementVisitor7: void <init>()>
<ohos.agp.render.render3d.components.CameraComponent: int getRenderResolutionY()>
<java.sql.SQLTransientException: void <init>(java.lang.String,java.lang.Throwable)>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster previous(java.time.DayOfWeek)>
<ohos.agp.colors.HsvColor: ohos.agp.colors.HsvColor toHSV(int)>
<java.lang.StringBuilder: char charAt(int)>
<java.security.SecureClassLoader: void <init>()>
<java.io.PrintWriter: void <init>(java.io.File,java.lang.String)>
<ohos.telephony.NetworkState: boolean isRoaming()>
<ohos.agp.render.render3d.components.CameraComponent: float getOrthoWidth()>
<ohos.eventhandler.InnerEvent: void setPacMap(ohos.utils.PacMap)>
<java.lang.Integer: int reverseBytes(int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates glob(java.lang.String,java.lang.String)>
<java.util.MissingFormatWidthException: java.lang.String getMessage()>
<ohos.aafwk.ability.AbilitySlice: void acquireFormState(ohos.aafwk.content.Intent,ohos.aafwk.ability.AbilitySlice.FormCallback)>
<java.nio.LongBuffer: int compareTo(java.lang.Object)>
<ohos.utils.geo.DimensFloat: float getMedian()>
<java.nio.file.ClosedDirectoryStreamException: void <init>()>
<java.net.URISyntaxException: java.lang.String getInput()>
<java.util.concurrent.BlockingDeque: boolean remove(java.lang.Object)>
<ohos.utils.BasePacMap: void putByteValueArray(java.lang.String,byte[])>
<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>
<java.sql.DatabaseMetaData: boolean supportsSchemasInIndexDefinitions()>
<ohos.global.icu.text.LocaleDisplayNames.UiListItem: void <init>(ohos.global.icu.util.ULocale,ohos.global.icu.util.ULocale,java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glRenderbufferStorageMultisample(int,int,int,int,int)>
<ohos.data.resultset.CombinedResultSet: long getLong(int)>
<ohos.agp.components.Component: ohos.agp.components.ComponentContainer.LayoutConfig getLayoutConfig()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates leftOuterJoin(java.lang.Class)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLEventReader createXMLEventReader(java.io.Reader)>
<ohos.accessibility.ability.AccessibilityWindow: java.util.Optional getParent()>
<ohos.global.icu.text.UnicodeSet: boolean containsSome(int,int)>
<ohos.agp.components.AbsButton: void toggle()>
<ohos.aafwk.ability.Ability: void onActive()>
<ohos.hiviewdfx.Debug: void functionTraceBegin(java.lang.String,int,int)>
<ohos.wifi.p2p.WifiP2pConfig: int getGroupOwnerBand()>
<ohos.data.distributed.common.KvManager: void registerDeviceChangeCallback(ohos.data.distributed.device.DeviceChangeCallback,ohos.data.distributed.device.DeviceFilterStrategy)>
<ohos.aafwk.content.Intent: java.util.ArrayList getSequenceableArrayListParam(java.lang.String)>
<ohos.agp.animation.AnimatorGroup: void runSerially(ohos.agp.animation.Animator[])>
<ohos.agp.graphics.TextureHolder: void unbindFromGPUContext()>
<java.util.TreeSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.window.dialog.CommonDialog setContentCustomComponent(ohos.agp.components.Component)>
<ohos.data.distributed.common.FieldNode: boolean setDefault(double)>
<java.text.CharacterIterator: char next()>
<java.text.Bidi: int getRunStart(int)>
<ohos.sysappcomponents.contact.entity.Contact: void setNote(ohos.sysappcomponents.contact.entity.Note)>
<java.util.LinkedHashMap: java.util.Collection values()>
<java.nio.file.FileSystemException: java.lang.String getFile()>
<javax.net.SocketFactory: java.net.Socket createSocket(java.lang.String,int)>
<javax.net.ssl.SSLEngine: void setNeedClientAuth(boolean)>
<ohos.app.Context: java.lang.String getBundleCodePath()>
<java.lang.CharSequence: int length()>
<java.util.concurrent.atomic.AtomicLongArray: void <init>(int)>
<ohos.global.icu.text.Collator: int compare(java.lang.Object,java.lang.Object)>
<java.util.SimpleTimeZone: boolean inDaylightTime(java.util.Date)>
<java.security.cert.X509CertSelector: void setSubject(byte[])>
<java.util.stream.IntStream: java.util.OptionalDouble average()>
<ohos.agp.components.BaseItemProvider: void notifyDataChanged()>
<ohos.data.search.schema.NoticeItem: ohos.data.search.schema.NoticeItem setLatitude(java.lang.Double)>
<ohos.aafwk.content.Intent.OperationBuilder: ohos.aafwk.content.Intent.OperationBuilder withUri(ohos.utils.net.Uri)>
<ohos.global.icu.text.DateTimePatternGenerator: java.util.Map getSkeletons(java.util.Map)>
<ohos.eventhandler.EventQueue: boolean isQueueEmpty()>
<ohos.agp.render.opengl.GLES31: void glGetProgramPipelineiv(int,int,int[])>
<javax.sql.RowSet: void setBinaryStream(int,java.io.InputStream,int)>
<java.util.Locale: java.util.Set getUnicodeLocaleKeys()>
<java.time.chrono.ChronoLocalDate: boolean isSupported(java.time.temporal.TemporalUnit)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendOffsetId()>
<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getPeerPrincipal()>
<ohos.aafwk.ability.AbilitySliceAnimator: ohos.aafwk.ability.AbilitySliceAnimator setDelay(long)>
<ohos.global.icu.util.TimeZone: java.lang.String[] getAvailableIDs()>
<java.util.stream.IntStream: java.util.stream.IntStream iterate(int,java.util.function.IntUnaryOperator)>
<java.lang.Math: int multiplyExact(int,int)>
<ohos.media.sessioncore.AVBrowser: ohos.bundle.ElementName getElementName()>
<java.lang.Package: int hashCode()>
<javax.crypto.SealedObject: java.lang.String getAlgorithm()>
<ohos.agp.components.AttrHelper: float convertValueToFloat(java.lang.String,float)>
<java.sql.DatabaseMetaData: int getMaxProcedureNameLength()>
<ohos.global.icu.text.Bidi: byte[] getLevels()>
<ohos.javax.xml.validation.ValidatorHandler: java.lang.Object getProperty(java.lang.String)>
<ohos.telephony.NetworkState: int getRegState()>
<ohos.telephony.ShortMessageManager: boolean hasSmsCapability()>
<ohos.global.icu.text.UnicodeSetSpanner: java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence)>
<ohos.agp.render.opengl.GLES20: void glViewport(int,int,int,int)>
<ohos.system.version.SystemVersion: int getSeniorVersion()>
<ohos.miscservices.timeutility.Timer.RepeatTimer: ohos.miscservices.timeutility.Timer.RepeatTimer getTimer(ohos.app.Context,ohos.miscservices.timeutility.Timer.TimerIntent)>
<java.time.Period: java.time.Period plusMonths(long)>
<java.util.concurrent.ForkJoinTask: void invokeAll(java.util.concurrent.ForkJoinTask,java.util.concurrent.ForkJoinTask)>
<ohos.agp.components.webengine.WebView: void addJsCallback(java.lang.String,ohos.agp.components.webengine.JsCallback)>
<ohos.bluetooth.BluetoothHost: ohos.bluetooth.BluetoothHost getDefaultHost(ohos.app.Context)>
<ohos.global.icu.text.UCharacterIterator: int moveIndex(int)>
<javax.crypto.spec.DESKeySpec: boolean isParityAdjusted(byte[],int)>
<java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>
<java.util.concurrent.atomic.AtomicLongArray: void <init>(long[])>
<ohos.event.notification.NotificationSortingMap: java.lang.String toString()>
<ohos.agp.components.Component.VoiceEvent: void addSynonyms(java.lang.String)>
<ohos.agp.components.Component: float[] getContentPosition()>
<ohos.multimodalinput.event.RotationEvent: float getRotationValue()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThan(java.lang.String,java.sql.Timestamp)>
<ohos.global.icu.text.AlphabeticIndex.Bucket.LabelType: ohos.global.icu.text.AlphabeticIndex.Bucket.LabelType valueOf(java.lang.String)>
<java.util.GregorianCalendar: void setGregorianChange(java.util.Date)>
<ohos.agp.render.render3d.resources.ResourceManager: ohos.agp.render.render3d.resources.GpuResourceHandle createTexture(java.lang.String,int,int,ohos.agp.render.render3d.resources.ImageFormat)>
<ohos.aafwk.ability.FormState: ohos.aafwk.ability.FormState valueOf(java.lang.String)>
<ohos.global.icu.util.HebrewCalendar: int handleGetExtendedYear()>
<java.lang.StrictMath: long subtractExact(long,long)>
<ohos.utils.PlainIntArray: java.lang.String toString()>
<java.util.regex.MatchResult: java.lang.String group(int)>
<ohos.agp.components.TabList: void <init>(ohos.app.Context)>
<ohos.distributedhardware.devicemanager.DeviceManager: java.util.List getTrustedDeviceList(java.lang.String,java.util.Map)>
<ohos.agp.render.render3d.Entity: java.util.Optional getComponent(java.lang.Class)>
<ohos.agp.database.DataSetPublisher: void notifyItemRangeRemoved(int,int)>
<java.util.zip.Adler32: void update(byte[],int,int)>
<java.util.concurrent.atomic.AtomicInteger: int getAndUpdate(java.util.function.IntUnaryOperator)>
<java.util.Vector: boolean remove(java.lang.Object)>
<java.lang.Long: long parseLong(java.lang.String)>
<ohos.bluetooth.ble.BlePeripheralCallback: void readRemoteRssiEvent(int,int)>
<ohos.agp.components.Component.BindStateChangedListener: void onComponentUnboundFromWindow(ohos.agp.components.Component)>
<ohos.global.icu.text.DateFormatSymbols: void setAmPmStrings(java.lang.String[])>
<java.math.MathContext: int getPrecision()>
<ohos.data.usage.CachePolicy: void <init>()>
<ohos.eventhandler.EventHandler: void postTimingTask(java.lang.Runnable,java.lang.Object,long)>
<ohos.media.audio.ToneDescriptor.ToneType: int getValue()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query greaterThanOrEqualTo(java.lang.String,double)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates contains(java.lang.String,java.lang.String)>
<java.util.Deque: boolean offer(java.lang.Object)>
<java.sql.SQLInvalidAuthorizationSpecException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notIn(java.lang.String,java.lang.String[])>
<ohos.agp.components.StackLayout.LayoutConfig: void <init>(int,int)>
<ohos.agp.render.opengl.GLES32: void <init>()>
<java.lang.StrictMath: double copySign(double,double)>
<java.util.Arrays: void fill(char[],char)>
<java.util.concurrent.ForkJoinPool: long getQueuedTaskCount()>
<java.util.concurrent.atomic.AtomicLong: float floatValue()>
<ohos.media.camera.device.FrameConfig.Builder: java.lang.Object get(ohos.media.camera.params.ParameterKey.Key)>
<java.sql.ResultSet: void updateRef(int,java.sql.Ref)>
<java.io.PushbackReader: void <init>(java.io.Reader,int)>
<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>
<java.io.ObjectOutputStream: void annotateClass(java.lang.Class)>
<java.util.concurrent.ForkJoinPool: java.util.List shutdownNow()>
<ohos.agp.render.opengl.GLES2Ext: void glTexStorage3DMultisampleOES(int,int,int,int,int,int,boolean)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<ohos.global.icu.text.Edits.Iterator: java.lang.String toString()>
<java.util.Locale: java.lang.String lookupTag(java.util.List,java.util.Collection)>
<ohos.agp.render.Canvas: void drawPixelMapHolderCircleShape(ohos.agp.render.PixelMapHolder,ohos.agp.utils.RectFloat,float,float,float)>
<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>
<java.text.Collator: java.text.Collator getInstance(java.util.Locale)>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>
<ohos.aafwk.ability.AbilitySlice: ohos.aafwk.ability.AbilitySliceLifecycleExecutor.LifecycleState getState()>
<java.io.IOException: void <init>(java.lang.String)>
<java.security.AlgorithmConstraints: boolean permits(java.util.Set,java.lang.String,java.security.Key,java.security.AlgorithmParameters)>
<java.security.cert.X509CRLEntry: javax.security.auth.x500.X500Principal getCertificateIssuer()>
<java.util.Calendar: boolean isWeekDateSupported()>
<ohos.data.dataability.DataAbilityPredicates: java.util.List getWhereArgs()>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setNotificationId(int)>
<java.sql.ResultSet: boolean isFirst()>
<java.util.Collections: java.util.Set emptySet()>
<ohos.global.icu.text.UnicodeMatcher: java.lang.String toPattern(boolean)>
<ohos.location.GeoAddress: void setPremises(java.lang.String)>
<java.util.Arrays: int binarySearch(double[],double)>
<ohos.system.OsHelper: ohos.system.FileStat getLinkFileStatus(java.lang.String)>
<java.io.PrintWriter: void <init>(java.io.OutputStream)>
<java.util.Formatter: java.lang.Appendable out()>
<ohos.miscservices.download.DownloadSession: ohos.rpc.MessageParcel openDownloadedFile()>
<ohos.event.notification.NotificationRequest: java.lang.String getOwnerBundleName()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: ohos.event.notification.NotificationRequest.NotificationConversationalContent setTitle(java.lang.String)>
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>
<java.net.URLClassLoader: java.lang.Class findClass(java.lang.String)>
<ohos.agp.components.DatePicker: int getSelectorItemNum()>
<javax.net.ssl.SSLEngine: boolean isOutboundDone()>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 multiply(ohos.agp.render.render3d.math.Vector3,float)>
<java.security.cert.CertPathValidator: java.security.cert.CertPathChecker getRevocationChecker()>
<java.text.DecimalFormat: void setMinimumFractionDigits(int)>
<java.time.LocalTime: boolean isSupported(java.time.temporal.TemporalUnit)>
<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>
<java.nio.channels.FileChannel.MapMode: void <clinit>()>
<ohos.aafwk.ability.Ability: void onTriggerFormEvent(long,java.lang.String)>
<ohos.agp.components.TimePicker: ohos.agp.components.TimePicker.TimeChangedListener getTimeChangedListener()>
<ohos.global.icu.text.Bidi: byte getBaseDirection(java.lang.CharSequence)>
<ohos.global.icu.text.Collator: java.util.Locale[] getAvailableLocales()>
<ohos.aafwk.ability.AbilitySlice: void startAbilityForResult(ohos.aafwk.content.Intent,int,ohos.aafwk.ability.startsetting.AbilityStartSetting)>
<java.util.PriorityQueue: boolean add(java.lang.Object)>
<ohos.media.tubecore.AVTubeManager: java.util.Optional createTubeSet(int)>
<java.net.URI: java.lang.String getQuery()>
<ohos.agp.window.dialog.BaseDialog: void onDestroy()>
<javax.sql.RowSetEvent: void <init>(javax.sql.RowSet)>
<java.nio.file.ProviderNotFoundException: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glPolygonOffsetx(int,int)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getInfinity()>
<java.util.Map.Entry: int hashCode()>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat copy(float,float)>
<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.util.Map)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayScript(java.lang.String,ohos.global.icu.util.ULocale)>
<ohos.data.orm.OrmConfig.Builder: ohos.data.orm.OrmConfig.Builder setName(java.lang.String)>
<ohos.global.icu.text.DisplayContext.Type: ohos.global.icu.text.DisplayContext.Type valueOf(java.lang.String)>
<ohos.media.image.ImageSource.UpdateMode: ohos.media.image.ImageSource.UpdateMode valueOf(java.lang.String)>
<ohos.event.intentagent.IntentAgentConstant.OperationType: ohos.event.intentagent.IntentAgentConstant.OperationType[] values()>
<ohos.data.file.FileAbility: ohos.utils.PacMap call(java.lang.String,java.lang.String,ohos.utils.PacMap)>
<ohos.net.NetCapabilities: boolean unmarshalling(ohos.utils.Parcel)>
<java.security.cert.PKIXRevocationChecker: java.lang.Object clone()>
<java.sql.SQLNonTransientConnectionException: void <init>(java.lang.Throwable)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateTimeInstance(ohos.global.icu.util.Calendar,int,int,java.util.Locale)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>
<java.text.ChoiceFormat: void <init>(java.lang.String)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet retain(int)>
<ohos.aafwk.abilityjet.activedata.DataObserver: void <init>()>
<ohos.global.icu.text.NumberFormat: void setContext(ohos.global.icu.text.DisplayContext)>
<java.util.AbstractSequentialList: void add(int,java.lang.Object)>
<java.util.regex.PatternSyntaxException: int getIndex()>
<java.security.Provider: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<ohos.bundle.AbilityInfo: java.lang.String getTargetAbility()>
<ohos.agp.components.Component: void setMarginsTopAndBottom(int,int)>
<ohos.global.icu.text.SearchIterator: int handleNext(int)>
<ohos.agp.components.PageSliderIndicator: void setViewPager(ohos.agp.components.PageSlider)>
<ohos.global.icu.text.Bidi: ohos.global.icu.text.BidiRun getParagraph(int)>
<java.util.LinkedHashMap: java.util.Set entrySet()>
<ohos.ace.ability.AceAbility: void onActive()>
<ohos.global.icu.text.DecimalFormatSymbols: java.util.Locale[] getAvailableLocales()>
<ohos.system.OsHelper: void setFileExtendedAttribute(java.lang.String,java.lang.String,byte[],int)>
<ohos.agp.render.render3d.math.Vector3: float dot(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<ohos.bluetooth.ble.GattCharacteristic: boolean marshalling(ohos.utils.Parcel)>
<java.security.AlgorithmParameterGeneratorSpi: void engineInit(int,java.security.SecureRandom)>
<ohos.event.notification.NotificationSlot: long[] getVibrationStyle()>
<javax.crypto.KeyAgreement: java.security.Provider getProvider()>
<ohos.media.audio.AudioCapturerInfo: java.lang.String toString()>
<java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<java.lang.CharSequence: char charAt(int)>
<ohos.agp.window.dialog.ListDialog: ohos.agp.window.dialog.ListDialog addItem(java.lang.String)>
<ohos.aafwk.ability.DataAbilityHelper: java.lang.String getType(ohos.utils.net.Uri)>
<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>
<ohos.agp.render.Region: boolean contains(int,int)>
<java.lang.SecurityManager: void checkLink(java.lang.String)>
<ohos.agp.render.render3d.components.LightComponent: float getSpotOuterAngle()>
<ohos.global.icu.lang.UCharacterDirection: java.lang.String toString(int)>
<ohos.sensor.agent.CategoryOtherAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryOtherDataCallback,ohos.sensor.bean.CategoryOther,int)>
<java.time.temporal.ValueRange: boolean isValidValue(long)>
<java.util.concurrent.ArrayBlockingQueue: int size()>
<java.util.concurrent.ConcurrentSkipListSet: void <init>(java.util.SortedSet)>
<ohos.aafwk.ability.AbilitySliceAnimator: ohos.aafwk.ability.AbilitySliceAnimator setDuration(long)>
<javax.net.ssl.SSLSessionBindingListener: void valueUnbound(javax.net.ssl.SSLSessionBindingEvent)>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter getInstance(ohos.global.icu.util.ULocale,ohos.global.icu.text.NumberFormat)>
<ohos.global.icu.text.SelectFormat: java.lang.String format(java.lang.String)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofLocalizedDateTime(java.time.format.FormatStyle)>
<ohos.utils.zson.ZSONObject: long getLongValue(java.lang.String)>
<java.time.OffsetDateTime: int getDayOfYear()>
<ohos.media.audio.AudioDeviceDescriptor: int[] getSamplingRates()>
<java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance()>
<ohos.javax.xml.parsers.SAXParserFactory: boolean isNamespaceAware()>
<ohos.media.common.sessioncore.AVPlaybackState: java.util.List getAVPlaybackCustomActions()>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectError(java.io.File)>
<javax.sql.RowSet: void setObject(int,java.lang.Object,int,int)>
<java.util.Formatter: void <init>(java.lang.Appendable)>
<ohos.agp.components.TabList: void addTab(ohos.agp.components.TabList.Tab)>
<ohos.event.notification.NotificationSlot: void setEnableVibration(boolean)>
<ohos.global.icu.lang.UCharacter: boolean isSupplementaryCodePoint(int)>
<ohos.media.audio.AudioDeviceDescriptor.DeviceRole: void <clinit>()>
<java.lang.Short: int intValue()>
<ohos.bluetooth.ble.GattCharacteristic: java.util.UUID getUuid()>
<java.security.KeyPairGeneratorSpi: void initialize(int,java.security.SecureRandom)>
<java.util.concurrent.SynchronousQueue: java.lang.Object[] toArray()>
<ohos.telephony.ShortMessage.ShortMessageClass: void <clinit>()>
<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>
<ohos.event.notification.MessageUser: boolean isMachine()>
<java.io.File: void <init>(java.lang.String,java.lang.String)>
<ohos.media.camera.device.CameraDeviceCallback: void onPhysicalCameraStatus(java.lang.String,int)>
<java.time.OffsetDateTime: java.time.OffsetDateTime withDayOfMonth(int)>
<java.sql.ResultSetMetaData: boolean isAutoIncrement(int)>
<ohos.agp.render.Paint: int getDashIntervalCount()>
<ohos.agp.render.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[])>
<ohos.media.image.ImageSource.SourceInfo: void <init>()>
<ohos.agp.components.SlideDrawer: boolean openSmoothly(int)>
<ohos.agp.render.Canvas.PorterDuffMode: ohos.agp.render.Canvas.PorterDuffMode[] values()>
<java.util.SplittableRandom: java.util.stream.DoubleStream doubles(long,double,double)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal subtract(ohos.global.icu.math.BigDecimal)>
<java.time.DayOfWeek: java.time.DayOfWeek minus(long)>
<ohos.media.codec.Codec: ohos.media.codec.Codec createDecoder()>
<java.nio.CharBuffer: java.nio.CharBuffer put(char)>
<ohos.agp.components.Text: int getSelectionRightBubbleWidth()>
<java.lang.StackOverflowError: void <init>()>
<ohos.agp.render.render3d.components.CameraComponent: void setViewportParams(float[])>
<java.time.Duration: void <clinit>()>
<java.io.PushbackReader: void reset()>
<ohos.agp.render.render3d.math.Vector3: float getZ()>
<ohos.agp.components.ScrollView: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.global.icu.text.RelativeDateTimeFormatter: java.lang.String format(ohos.global.icu.text.RelativeDateTimeFormatter.Direction,ohos.global.icu.text.RelativeDateTimeFormatter.AbsoluteUnit)>
<java.io.DataInput: float readFloat()>
<ohos.global.icu.text.Transliterator: java.lang.String transliterate(java.lang.String)>
<java.lang.AssertionError: void <init>(java.lang.Object)>
<ohos.event.notification.NotificationRequest.NotificationNormalContent: void <init>()>
<ohos.media.camera.params.AfResult: int getState()>
<ohos.aafwk.ability.AbilityForm: ohos.agp.components.Component getComponent()>
<java.time.OffsetDateTime: java.time.OffsetDateTime plusYears(long)>
<ohos.data.search.model.IndexForm: java.lang.String getIndexFieldName()>
<ohos.utils.zson.ZSONObject: boolean getBooleanValue(java.lang.String)>
<ohos.agp.components.SearchBar: void setSearchButton(ohos.media.image.PixelMap)>
<ohos.sysappcomponents.calendar.CalendarDataHelper: boolean update(ohos.data.rdb.ValuesBucket,ohos.data.dataability.DataAbilityPredicates)>
<java.nio.channels.MulticastChannel: void close()>
<javax.crypto.EncryptedPrivateKeyInfo: void <init>(java.security.AlgorithmParameters,byte[])>
<ohos.agp.utils.Circle: int hashCode()>
<ohos.data.search.model.ChangedIndexContent: void setInsertedItems(java.util.List)>
<javax.sql.RowSet: void setBigDecimal(java.lang.String,java.math.BigDecimal)>
<ohos.aafwk.content.Intent: int[] getIntArrayParam(java.lang.String)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setSortingKey(java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThanOrEqualTo(java.lang.String,double)>
<java.nio.channels.SelectionKey: boolean isConnectable()>
<ohos.global.icu.lang.UCharacter: boolean isJavaIdentifierStart(int)>
<java.nio.file.NoSuchFileException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>
<java.nio.file.InvalidPathException: void <init>(java.lang.String,java.lang.String)>
<ohos.agp.components.Picker: void setSelectedTextBackground(ohos.agp.components.element.Element)>
<ohos.agp.components.ProgressBar: void setMaxValue(int)>
<ohos.aafwk.ability.Ability.LayoutParamsHelper: ohos.aafwk.ability.Ability.LayoutParamsHelper setAlignment(int)>
<ohos.data.search.schema.PlaceItem: ohos.data.search.schema.PlaceItem setCity(java.lang.String)>
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoPeriod until(java.time.chrono.ChronoLocalDate)>
<ohos.agp.render.Paint.MaskType: ohos.agp.render.Paint.MaskType[] values()>
<ohos.javax.xml.validation.ValidatorHandler: void setContentHandler(ohos.org.xml.sax.ContentHandler)>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getInitialId()>
<ohos.telephony.SimInfoManager: int getMaxSimCount()>
<java.lang.Boolean: boolean equals(java.lang.Object)>
<java.util.concurrent.atomic.LongAdder: long sum()>
<ohos.data.resultset.AbsResultSet: float getFloat(int)>
<java.time.chrono.ChronoLocalDateTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates endsWith(java.lang.String,java.lang.String)>
<ohos.global.icu.util.IllformedLocaleException: int getErrorIndex()>
<ohos.sysappcomponents.contact.entity.SipAddress: void setLabelId(ohos.app.Context,int)>
<java.io.ByteArrayOutputStream: int size()>
<java.util.zip.Inflater: int inflate(byte[])>
<java.sql.CallableStatement: java.math.BigDecimal getBigDecimal(int,int)>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>
<java.time.OffsetDateTime: java.time.OffsetDateTime withDayOfYear(int)>
<java.util.Collections: java.util.Comparator reverseOrder(java.util.Comparator)>
<ohos.global.icu.text.PluralRules: ohos.global.icu.text.PluralRules forLocale(ohos.global.icu.util.ULocale)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage runAfterEither(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty rotate(float)>
<java.time.Duration: java.time.temporal.Temporal addTo(java.time.temporal.Temporal)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: ohos.event.notification.NotificationRequest.NotificationConversationalContent setAdditionalText(java.lang.String)>
<ohos.javax.xml.stream.events.XMLEvent: boolean isStartDocument()>
<ohos.agp.utils.TextTool: char[] subCharArray(java.lang.CharSequence,int,int)>
<ohos.agp.components.ListContainer: boolean getReboundEffect()>
<ohos.utils.PlainArray: int indexOfKey(int)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitShort(short,java.lang.Object)>
<ohos.event.notification.NotificationHelper: ohos.event.notification.NotificationSlot getNotificationSlot(java.lang.String)>
<javax.lang.model.util.ElementScanner6: java.lang.Object visitTypeParameter(javax.lang.model.element.TypeParameterElement,java.lang.Object)>
<ohos.utils.Parcel: void writeMap(java.util.Map)>
<ohos.media.codec.CodecDescriptionList: java.util.List getSupportedEncoders()>
<ohos.global.icu.text.DecimalFormatSymbols: ohos.global.icu.util.ULocale getULocale()>
<ohos.location.GeoAddress: void setPostalCode(java.lang.String)>
<java.lang.Long: long rotateRight(long,int)>
<javax.tools.SimpleJavaFileObject: javax.lang.model.element.NestingKind getNestingKind()>
<javax.lang.model.type.UnknownTypeException: java.lang.Object getArgument()>
<ohos.data.search.SearchAbility: int setIndexForm(java.lang.String,int,java.util.List)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: boolean awaitUntil(java.util.Date)>
<ohos.utils.SequenceUuid: void <clinit>()>
<ohos.data.distributed.common.SyncMode: ohos.data.distributed.common.SyncMode[] values()>
<ohos.data.resultset.ResultSetWrapper: boolean goToRow(int)>
<ohos.media.audio.AudioRenderer: int getBufferUnderflowTimes()>
<ohos.event.notification.ReminderRequest: int getSnoozeTimes()>
<ohos.global.icu.text.Transliterator: ohos.global.icu.text.Transliterator[] getElements()>
<java.nio.file.Files: java.nio.file.FileStore getFileStore(java.nio.file.Path)>
<ohos.agp.components.Image: void setClipAlignment(int)>
<java.util.concurrent.atomic.LongAdder: long sumThenReset()>
<java.util.function.ToIntBiFunction: int applyAsInt(java.lang.Object,java.lang.Object)>
<ohos.aafwk.ability.IAbilityContinuation: boolean onSaveData(ohos.aafwk.content.IntentParams)>
<java.time.temporal.ValueRange: boolean isValidIntValue(long)>
<javax.security.cert.X509Certificate: java.lang.String getSigAlgOID()>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setParameter(ohos.media.camera.params.ParameterKey.Key,java.lang.Object)>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitBoolean(boolean,java.lang.Object)>
<ohos.app.AbilityContext: void startAbility(ohos.aafwk.content.Intent,int,ohos.aafwk.ability.startsetting.AbilityStartSetting)>
<ohos.hiviewdfx.Debug: int getIpcSentCount()>
<ohos.aafwk.content.Intent: boolean equals(java.lang.Object)>
<ohos.net.NetSpecifier.Builder: ohos.net.NetSpecifier.Builder clearCapabilities()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>
<java.security.cert.CRLSelector: java.lang.Object clone()>
<ohos.utils.geo.RectFloat: void clear()>
<java.security.PrivilegedActionException: java.lang.Throwable getCause()>
<javax.crypto.Cipher: java.security.spec.AlgorithmParameterSpec getMaxAllowedParameterSpec(java.lang.String)>
<java.lang.Integer: int hashCode(int)>
<ohos.agp.components.ComponentContainer: void addComponent(ohos.agp.components.Component,int,int)>
<java.lang.StringBuilder: java.lang.Appendable append(java.lang.CharSequence,int,int)>
<ohos.app.AbilityContext: ohos.bundle.ApplicationInfo getApplicationInfo()>
<ohos.hiviewdfx.HiTrace: void end(ohos.hiviewdfx.HiTraceId)>
<java.security.Provider: void clear()>
<java.util.stream.Stream: java.util.stream.Stream concat(java.util.stream.Stream,java.util.stream.Stream)>
<java.util.NavigableMap: java.util.SortedMap headMap(java.lang.Object)>
<ohos.vibrator.bean.VibrationPattern.EffectFlagType: int getValue()>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.NluClient getInstance()>
<java.util.Calendar: boolean isSet(int)>
<java.util.Arrays: int hashCode(long[])>
<java.util.Spliterator: long estimateSize()>
<ohos.agp.components.Component: boolean getCentralScrollMode()>
<ohos.agp.render.render3d.TargetBuffer: boolean isBufferAvailable()>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty setStateChangedListener(ohos.agp.animation.Animator.StateChangedListener)>
<java.sql.DatabaseMetaData: boolean supportsSubqueriesInQuantifieds()>
<ohos.aafwk.content.Intent: char[] getCharArrayParam(java.lang.String)>
<ohos.media.audio.AudioRenderer: ohos.media.audio.Timestamp getAudioTime()>
<java.nio.Buffer: boolean hasRemaining()>
<ohos.agp.components.Text: ohos.agp.utils.Color getSelectionColor()>
<java.lang.StrictMath: double tan(double)>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoZonedDateTime minus(java.time.temporal.TemporalAmount)>
<ohos.agp.render.opengl.GLES31: void glDispatchCompute(int,int,int)>
<ohos.global.icu.text.DateFormat: void <init>()>
<java.net.DatagramPacket: void setAddress(java.net.InetAddress)>
<javax.crypto.CipherSpi: void engineUpdateAAD(java.nio.ByteBuffer)>
<ohos.usb.USBDevicePipe: int controlTransfer(int,int,int,int,byte[],int,int,int)>
<java.security.SignatureSpi: void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)>
<ohos.agp.components.ListContainer.ReboundEffectParams: int getRemainVisiblePercent()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates beginsWith(java.lang.String,java.lang.String)>
<ohos.global.icu.text.MeasureFormat.FormatWidth: ohos.global.icu.text.MeasureFormat.FormatWidth[] values()>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String getLocalPatternChars()>
<ohos.utils.PlainBooleanArray: int keyAt(int)>
<ohos.telephony.ShortMessageManager: int getDefaultSmsSlotId()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
<javax.sql.RowSet: void setBinaryStream(java.lang.String,java.io.InputStream)>
<java.lang.Double: void <init>(double)>
<ohos.global.icu.util.Currency: int getDefaultFractionDigits()>
<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()>
<ohos.event.notification.NotificationActionButton: boolean marshalling(ohos.utils.Parcel)>
<ohos.sysappcomponents.contact.entity.Event: void setCustomLabelName(java.lang.String)>
<ohos.bundle.IBundleManager: void unregisterPermissionsChanged(ohos.rpc.IRemoteObject)>
<ohos.ai.cv.sr.SisrConfiguration: ohos.utils.PacMap getParam()>
<ohos.agp.render.PdfGenerator.PageInfo: int getPageIndex()>
<ohos.global.icu.util.TaiwanCalendar: void <init>(java.util.Date)>
<java.net.InetAddress: boolean isLinkLocalAddress()>
<ohos.agp.components.Text: void setBubbleSize(int,int)>
<java.sql.Connection: boolean getAutoCommit()>
<ohos.rpc.MessageParcel: boolean writeInterfaceToken(java.lang.String)>
<ohos.agp.components.Component: void addDrawTask(ohos.agp.components.Component.DrawTask,int)>
<java.util.Arrays: int hashCode(java.lang.Object[])>
<ohos.app.ElementsCallback: void onConfigurationUpdated(ohos.global.configuration.Configuration)>
<ohos.global.icu.util.Calendar: int getGregorianDayOfMonth()>
<java.time.temporal.TemporalAmount: long get(java.time.temporal.TemporalUnit)>
<ohos.global.icu.lang.UScript: int[] getCode(java.util.Locale)>
<java.awt.font.NumericShaper: boolean equals(java.lang.Object)>
<ohos.agp.render.render3d.util.SceneUtil.RayCastResult: ohos.agp.render.render3d.SceneNode getNode()>
<ohos.agp.window.dialog.CommonDialog: void onWindowSelectionUpdated(boolean)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenRun(java.lang.Runnable)>
<ohos.sensor.bean.SensorBase: int getSensorId()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThanOrEqualTo(java.lang.String,java.util.Date)>
<java.util.Timer: void <init>()>
<ohos.security.seckeychain.SecKeyChain: void selectSecPrivateKey(ohos.app.AbilityContext,java.lang.String[],java.security.Principal[],java.lang.String,int,ohos.security.seckeychain.SecKeyAliasCallback,java.lang.String)>
<javax.tools.ToolProvider: void <clinit>()>
<java.security.cert.X509CRLSelector: java.math.BigInteger getMaxCRL()>
<java.net.HttpRetryException: void <init>(java.lang.String,int,java.lang.String)>
<javax.sql.RowSet: void setNString(int,java.lang.String)>
<ohos.utils.IntArray: void <init>(int[],int,int)>
<java.security.Policy: java.lang.String getType()>
<java.util.Calendar: java.util.Date getTime()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object peek()>
<ohos.agp.components.Component: float getTranslationX()>
<ohos.bundle.LauncherService: boolean isAbilityEnabled(ohos.bundle.AbilityInfo)>
<ohos.security.permission.Permission: int verifyPermissionFromRemote(java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.components.Component: void setBindStateChangedListener(ohos.agp.components.Component.BindStateChangedListener)>
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<ohos.agp.components.IndexBar: void setSelectedCount(int)>
<ohos.global.icu.text.SimpleDateFormat: void applyLocalizedPattern(java.lang.String)>
<ohos.wifi.p2p.WifiP2pDevice: java.lang.String getPrimaryDeviceType()>
<ohos.miscservices.pasteboard.SystemPasteboard: ohos.miscservices.pasteboard.SystemPasteboard getSystemPasteboard(ohos.app.Context)>
<javax.lang.model.util.Types: javax.lang.model.type.ArrayType getArrayType(javax.lang.model.type.TypeMirror)>
<ohos.agp.components.SearchBar: ohos.agp.components.Image getCloseButton()>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.ToastDialog setComponent(ohos.agp.components.DirectionalLayout)>
<java.util.concurrent.CompletionService: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>
<ohos.agp.text.RichTextBuilder: void <init>(ohos.agp.text.TextForm)>
<ohos.agp.render.opengl.GLES20: void glGetUniformiv(int,int,java.nio.IntBuffer)>
<ohos.media.sessioncore.AVController.PlayControls: void seekTo(long)>
<ohos.event.notification.NotificationUserInput.Builder: ohos.event.notification.NotificationUserInput.Builder setPermitFreeFormInput(boolean)>
<ohos.data.rdb.ValuesBucket: java.lang.Double getDouble(java.lang.String)>
<ohos.data.distributed.device.DeviceFilterStrategy: void <clinit>()>
<ohos.ai.cv.common.ImageResult: void <init>(ohos.media.image.PixelMap)>
<java.nio.file.spi.FileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
<java.sql.SQLTransactionRollbackException: void <init>(java.lang.String,java.lang.String)>
<java.util.Calendar: void set(int,int)>
<ohos.global.icu.text.Normalizer2: boolean isNormalized(java.lang.CharSequence)>
<ohos.bundle.BundleInfo: java.lang.Boolean isSilentInstallation()>
<java.util.concurrent.CompletableFuture: java.lang.Object getNow(java.lang.Object)>
<ohos.global.icu.text.UnicodeSet: boolean containsAll(java.lang.String)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayKeywordValue(java.lang.String)>
<ohos.agp.render.render3d.components.SkinComponent: ohos.agp.render.render3d.resources.ResourceHandle getHandle()>
<java.security.UnrecoverableEntryException: void <init>()>
<java.util.ArrayList: void <init>()>
<java.lang.reflect.Field: int getModifiers()>
<ohos.global.i18n.utils.CalendarUtils: ohos.global.icu.util.Calendar getPersianCalendar(java.util.Locale)>
<ohos.agp.components.DatePicker: ohos.agp.utils.Color getSelectedTextColor()>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>
<ohos.agp.components.Switch: void setTrackElement(ohos.agp.components.element.Element)>
<java.time.Instant: int compareTo(java.time.Instant)>
<java.util.prefs.AbstractPreferences: int getInt(java.lang.String,int)>
<java.nio.channels.SelectionKey: boolean isAcceptable()>
<java.lang.Integer: int rotateRight(int,int)>
<java.util.InputMismatchException: void <init>(java.lang.String)>
<ohos.multimodalinput.event.KeyEvent: int getMaxKeyCode()>
<ohos.nfc.oma.Channel: byte[] getSelectResponse()>
<java.text.CollationElementIterator: int getMaxExpansion(int)>
<ohos.media.audio.ToneDescriptor: double getHighFrequency()>
<ohos.agp.render.Canvas: void clipRect(ohos.agp.utils.RectFloat)>
<java.security.cert.PolicyNode: boolean isCritical()>
<ohos.global.icu.text.Bidi: boolean requiresBidi(char[],int,int)>
<javax.lang.model.element.UnknownElementException: java.lang.Object getArgument()>
<ohos.sysappcomponents.calendar.entity.Participants: int getEventId()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notBetween(java.lang.String,java.util.Calendar,java.util.Calendar)>
<java.net.DatagramPacket: int getOffset()>
<ohos.agp.components.Component: void setPaddingTop(int)>
<java.nio.file.spi.FileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>
<ohos.media.camera.params.FaceLandmark: int hashCode()>
<ohos.data.rdb.RdbReadOnlyException: void <init>(java.lang.String)>
<ohos.accessibility.ability.AccessibilityInfo: void setClickable(boolean)>
<ohos.bluetooth.ble.GattCharacteristic: boolean addDescriptor(ohos.bluetooth.ble.GattDescriptor)>
<ohos.agp.database.DataSetPublisher: void notifyItemRemoved(int)>
<java.sql.DatabaseMetaData: int getMaxColumnsInSelect()>
<java.security.IdentityScope: java.lang.String toString()>
<ohos.data.rdb.RdbStore: ohos.data.resultset.ResultSet querySqlByStep(java.lang.String,java.lang.String[])>
<ohos.global.icu.text.LocaleDisplayNames: java.lang.String localeDisplayName(ohos.global.icu.util.ULocale)>
<ohos.global.resource.solidxml.TypedAttribute.AttrData: java.lang.String getAttrName()>
<ohos.agp.render.render3d.components.CameraComponent: void setCameraType(ohos.agp.render.render3d.components.CameraComponent.CameraType)>
<ohos.net.LocalSocket: java.lang.String getSocketName()>
<ohos.agp.render.opengl.GLES1X: void glFrontFace(int)>
<javax.crypto.Cipher: void updateAAD(byte[],int,int)>
<ohos.data.rdb.DataObservable: void notifyObservers()>
<ohos.agp.render.opengl.GLES1X: boolean glIsEnabled(int)>
<ohos.utils.PacMap: char[] getCharArray(java.lang.String)>
<java.nio.file.attribute.PosixFileAttributes: java.util.Set permissions()>
<ohos.agp.utils.TextTool: boolean isLayoutRightToLeft(java.util.Locale)>
<ohos.media.tubecore.AVTubeManager: java.util.Optional createTubeSet(java.lang.String)>
<java.sql.ParameterMetaData: int getPrecision(int)>
<ohos.event.notification.NotificationConstant.InputEditType: void <clinit>()>
<java.util.Locale: java.lang.String toString()>
<ohos.data.search.model.IndexData: java.lang.Double getAsDouble(java.lang.String)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getInstanceForSkeleton(java.lang.String,java.util.Locale)>
<ohos.miscservices.inputmethodability.TextInputClient: ohos.miscservices.inputmethod.EditorAttribute getEditorAttribute()>
<java.util.stream.Stream: java.util.Optional max(java.util.Comparator)>
<java.time.ZonedDateTime: long getLong(java.time.temporal.TemporalField)>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[][] getZoneStrings()>
<ohos.agp.render.render3d.math.Vector4: float getW()>
<ohos.agp.components.ComponentContainer: int getChildCount()>
<ohos.aafwk.ability.Ability: void <init>()>
<ohos.global.icu.text.SimpleDateFormat: ohos.global.icu.text.DateFormatSymbols getSymbols()>
<ohos.telephony.TelephoneNumberUtils: boolean isInternationalPhoneNumber(java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,float[])>
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<ohos.aafwk.ability.AbilityLifecycleExecutor.LifecycleState: ohos.aafwk.ability.AbilityLifecycleExecutor.LifecycleState intToEnum(int)>
<ohos.event.notification.NotificationRequest: long getDeliveryTime()>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.ToastDialog setAutoClosable(boolean)>
<java.nio.file.WatchKey: void cancel()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet retainAll(java.lang.Iterable)>
<javax.lang.model.util.ElementFilter: java.util.List fieldsIn(java.lang.Iterable)>
<ohos.nfc.tag.NdefTag: boolean canSetReadOnly()>
<ohos.wifi.WifiEvents: void <init>()>
<ohos.agp.components.webengine.AsyncCallback: void onReceive(java.lang.Object)>
<ohos.data.dataability.DataAbilityPredicates: void <init>()>
<java.util.concurrent.ConcurrentLinkedQueue: boolean isEmpty()>
<ohos.agp.render.opengl.GLES1X: void glShadeModel(int)>
<java.text.DateFormatSymbols: void setMonths(java.lang.String[])>
<java.io.DataOutputStream: int size()>
<ohos.global.icu.text.DecimalFormat: byte getMinimumExponentDigits()>
<java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>
<ohos.javax.xml.namespace.QName: ohos.javax.xml.namespace.QName valueOf(java.lang.String)>
<ohos.agp.components.RoundProgressBar: void setStartAngle(float)>
<java.net.DatagramSocket: void <init>(java.net.SocketAddress)>
<ohos.agp.render.render3d.components.SceneComponent: void setRadianceCubemap(ohos.agp.render.render3d.resources.GpuResourceHandle)>
<ohos.rpc.IRemoteBroker: ohos.rpc.IRemoteObject asObject()>
<java.text.Bidi: boolean baseIsLeftToRight()>
<ohos.agp.graphics.TextureHolder: long getLastRefreshTextureImageTime()>
<ohos.nfc.tag.NfcFTag: byte[] getPMm()>
<java.sql.Blob: long length()>
<ohos.utils.BasePacMap: void putFloatValue(java.lang.String,float)>
<ohos.event.notification.NotificationSorting: java.lang.String getHashCode()>
<ohos.org.xml.sax.DocumentHandler: void endDocument()>
<java.io.StringBufferInputStream: long skip(long)>
<java.nio.channels.SelectableChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)>
<ohos.agp.graphics.SurfaceOps: void setKeepScreenOn(boolean)>
<ohos.javax.xml.stream.events.Characters: boolean isWhiteSpace()>
<ohos.agp.render.render3d.components.LightComponent: void setIntensity(float)>
<ohos.agp.window.dialog.BaseDialog: void remove()>
<ohos.media.camera.device.FrameConfig: ohos.agp.utils.Rect getAeRect()>
<java.time.Instant: java.time.Instant now()>
<ohos.data.distributed.file.DistFiles: boolean isSupported()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatter toFormatter(java.util.Locale)>
<java.util.concurrent.ConcurrentSkipListSet: void clear()>
<java.util.regex.Matcher: int start(int)>
<java.text.DecimalFormatSymbols: void <init>()>
<java.util.Timer: void schedule(java.util.TimerTask,java.util.Date)>
<java.net.Socket: void bind(java.net.SocketAddress)>
<ohos.event.notification.NotificationRequest.NotificationContent: void <init>(ohos.event.notification.NotificationRequest.NotificationPictureContent)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,long)>
<ohos.event.notification.MessageUser: ohos.event.notification.MessageUser setName(java.lang.String)>
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream,java.nio.charset.Charset)>
<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>
<ohos.media.photokit.metadata.AVMetadataHelper: boolean setSource(java.io.FileDescriptor,long,long)>
<ohos.agp.window.dialog.BaseDialog: ohos.agp.window.dialog.BaseDialog setTransparent(boolean)>
<java.util.stream.IntStream: java.util.OptionalInt max()>
<ohos.bluetooth.ble.BleAdvertiseSettings: boolean unmarshalling(ohos.utils.Parcel)>
<java.lang.invoke.MutableCallSite: java.lang.invoke.MethodHandle dynamicInvoker()>
<ohos.agp.render.opengl.GLES20: void glUniform4i(int,int,int,int,int)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitDouble(double,java.lang.Object)>
<ohos.global.icu.math.BigDecimal: java.lang.String format(int,int,int,int,int,int)>
<ohos.app.AbilityContext: void compelVerifyCallerUriPermission(ohos.utils.net.Uri,int,java.lang.String)>
<ohos.utils.Dimension: java.lang.String toString()>
<java.security.NoSuchProviderException: void <init>()>
<ohos.utils.system.SystemCapability.Security: void <init>()>
<javax.sql.RowSet: void setNClob(int,java.io.Reader)>
<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>
<ohos.media.codec.CodecDescriptionList: boolean isEncoderSupportedByFormat(ohos.media.common.Format)>
<ohos.agp.graphics.SurfaceOps: ohos.agp.utils.Rect getSurfaceDimension()>
<java.net.Inet4Address: int hashCode()>
<java.util.concurrent.CountedCompleter: void <init>(java.util.concurrent.CountedCompleter)>
<ohos.media.audio.AudioRendererInfo.Builder: ohos.media.audio.AudioRendererInfo.Builder audioStreamOutputFlag(ohos.media.audio.AudioRendererInfo.AudioStreamOutputFlag)>
<java.nio.channels.NonReadableChannelException: void <init>()>
<ohos.event.notification.NotificationRequest.NotificationNormalContent: ohos.event.notification.NotificationRequest.NotificationNormalContent setText(java.lang.String)>
<ohos.rpc.RemoteObjectCallbackList: boolean unregister(ohos.rpc.IRemoteBroker)>
<ohos.data.resultset.AbsResultSet: boolean goToLastRow()>
<ohos.wifi.WifiScanInfo: java.lang.String toString()>
<ohos.agp.components.Picker: void setSelectedTextSize(int)>
<java.util.PriorityQueue: boolean offer(java.lang.Object)>
<java.io.ObjectStreamField: boolean isUnshared()>
<ohos.global.icu.text.UnicodeSetSpanner: int hashCode()>
<ohos.agp.render.Canvas: void drawCircle(ohos.agp.utils.Point,float,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<java.io.ObjectOutputStream: void writeUnshared(java.lang.Object)>
<ohos.security.keystore.KeyStoreProtectionParameter.Builder: ohos.security.keystore.KeyStoreProtectionParameter.Builder setSecKeyCryptoAttrs(int,java.lang.String[])>
<java.time.zone.ZoneRules: java.time.Duration getDaylightSavings(java.time.Instant)>
<java.lang.Object: void wait()>
<java.time.Period: java.time.chrono.ChronoPeriod negated()>
<java.util.concurrent.TransferQueue: boolean tryTransfer(java.lang.Object)>
<ohos.agp.components.TimePicker: void setRange(int[])>
<ohos.aafwk.ability.AbilitySlice: java.util.List getAllForms()>
<java.io.RandomAccessFile: void close()>
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>
<java.sql.DriverManager: void registerDriver(java.sql.Driver)>
<ohos.agp.components.Switch: ohos.agp.components.element.Element getTrackElement()>
<ohos.global.icu.text.CollationKey: byte[] toByteArray()>
<java.nio.charset.CoderResult: boolean isError()>
<ohos.agp.components.PageFlipper: void setCurrentIndex(int)>
<java.nio.CharBuffer: int compareTo(java.nio.CharBuffer)>
<java.util.concurrent.atomic.AtomicMarkableReference: boolean attemptMark(java.lang.Object,boolean)>
<ohos.data.rdb.AbsRdbPredicates: void <init>(java.lang.String)>
<java.lang.AbstractMethodError: void <init>()>
<java.lang.Enum: java.lang.String name()>
<java.lang.Long: int intValue()>
<java.nio.channels.FileLock: boolean isShared()>
<java.time.chrono.Era: int get(java.time.temporal.TemporalField)>
<ohos.event.notification.NotificationRequest: boolean isShowCreateTime()>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitTypeAsEnum(javax.lang.model.element.TypeElement,java.lang.Object)>
<ohos.media.image.PixelMap: ohos.media.image.PixelMap create(ohos.media.image.PixelMap,ohos.media.image.common.Rect,ohos.media.image.PixelMap.InitializationOptions)>
<ohos.bluetooth.ble.BleScanResult: java.util.List getServiceUuids()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage applyToEither(java.util.concurrent.CompletionStage,java.util.function.Function)>
<java.util.Properties: void load(java.io.InputStream)>
<ohos.data.search.schema.MessageItem: java.util.List getMessageSchema()>
<ohos.agp.render.SweepShader: void <init>()>
<java.util.TreeMap: void putAll(java.util.Map)>
<java.nio.file.attribute.AclEntry: java.nio.file.attribute.AclEntry.Builder newBuilder(java.nio.file.attribute.AclEntry)>
<java.sql.DatabaseMetaData: boolean supportsResultSetHoldability(int)>
<ohos.aafwk.ability.DataAbilityResult: ohos.aafwk.ability.DataAbilityResult createFromParcel(ohos.utils.Parcel)>
<java.lang.Package: boolean isSealed()>
<ohos.telephony.NetworkState: java.lang.String getLongOperatorName()>
<ohos.ai.tts.TtsClient: void speakLongText(java.lang.String,java.lang.String)>
<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>
<java.time.ZonedDateTime: java.time.ZonedDateTime ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)>
<ohos.global.icu.util.Calendar: void handleComputeFields(int)>
<java.util.logging.SocketHandler: void <init>()>
<ohos.aafwk.ability.Ability: boolean updateForm(long,ohos.agp.components.ComponentProvider)>
<java.io.RandomAccessFile: void writeChars(java.lang.String)>
<ohos.bluetooth.ble.BlePeripheralManagerCallback: void serviceAddedEvent(int,ohos.bluetooth.ble.GattService)>
<ohos.data.distributed.user.SingleKvStore: ohos.data.distributed.common.KvStoreResultSet getResultSet(java.lang.String)>
<java.security.spec.PKCS8EncodedKeySpec: java.lang.String getFormat()>
<ohos.agp.components.ComponentContainer: int getFocusOrder()>
<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
<java.security.KeyStore: boolean isKeyEntry(java.lang.String)>
<ohos.global.icu.math.MathContext: int getRoundingMode()>
<java.lang.Math: int max(int,int)>
<ohos.media.camera.device.FrameConfig: ohos.agp.graphics.Surface getCoordinateSurface()>
<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(java.util.Collection)>
<java.time.LocalDateTime: java.time.chrono.ChronoZonedDateTime atZone(java.time.ZoneId)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThanOrEqualTo(java.lang.String,java.util.Calendar)>
<java.util.jar.Manifest: void read(java.io.InputStream)>
<java.lang.System: void runFinalization()>
<ohos.aafwk.ability.AbilityLifecycleCallbacks: void onAbilityForeground(ohos.aafwk.ability.Ability)>
<ohos.utils.Parcel: boolean writeChar(char)>
<java.io.SequenceInputStream: int available()>
<ohos.agp.components.Switch: void setStateOnText(java.lang.String)>
<ohos.data.DatabaseHelper: ohos.data.orm.OrmContext getOrmContext(java.lang.String,java.lang.String,java.lang.Class,ohos.data.orm.OrmMigration[])>
<java.nio.file.ClosedWatchServiceException: void <init>()>
<ohos.batterymanager.BatteryInfo.BatteryHealthState: void <clinit>()>
<ohos.agp.components.Component: ohos.agp.utils.Color getScrollbarColor()>
<ohos.global.icu.number.LocalizedNumberFormatter: java.lang.String toSkeleton()>
<java.nio.channels.spi.AbstractSelectableChannel: void implCloseSelectableChannel()>
<ohos.media.audio.SoundEffect.SoundEffectInfo: void setMode(java.lang.String)>
<java.lang.ThreadGroup: void suspend()>
<java.nio.file.Files: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)>
<ohos.aafwk.ability.Ability: void onDeleteForm(int)>
<java.time.YearMonth: java.time.YearMonth plusYears(long)>
<ohos.app.Context: void terminateAbility(int)>
<java.security.cert.PKIXCertPathChecker: void check(java.security.cert.Certificate,java.util.Collection)>
<java.net.URI: java.net.URI resolve(java.lang.String)>
<javax.lang.model.util.ElementScanner7: void <init>()>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate withVariant(java.time.chrono.HijrahChronology)>
<java.lang.Character: int digit(int,int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThanOrEqualTo(java.lang.String,double)>
<ohos.global.icu.util.Calendar: boolean equals(java.lang.Object)>
<ohos.global.icu.text.DateTimePatternGenerator: ohos.global.icu.text.DateTimePatternGenerator getInstance()>
<ohos.event.notification.NotificationUserInput: java.util.Set getPermitMimeTypes()>
<ohos.agp.utils.Matrix44: void reset()>
<java.util.ArrayDeque: void push(java.lang.Object)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThan(java.lang.String,java.util.Calendar)>
<java.net.URL: void <init>(java.lang.String)>
<java.nio.IntBuffer: java.nio.IntBuffer put(java.nio.IntBuffer)>
<java.time.chrono.ThaiBuddhistChronology: java.lang.String getCalendarType()>
<ohos.agp.components.ListContainer: void scrollTo(int)>
<javax.sql.RowSet: void setNClob(java.lang.String,java.io.Reader,long)>
<ohos.global.resource.solidxml.TypedAttribute.AttrData: void setAttrName(java.lang.String)>
<ohos.aafwk.ability.Ability: void onRestoreAbilityState(ohos.utils.PacMap)>
<java.text.CharacterIterator: char first()>
<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<ohos.data.search.model.IndexData: void put(java.lang.String,java.lang.Float)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: int getQueueLength()>
<ohos.agp.render.opengl.GLES1X: void glClipPlanef(int,float[])>
<ohos.rpc.ReliableFileDescriptor: long getFileTotalSize()>
<java.security.interfaces.DSAKey: java.security.interfaces.DSAParams getParams()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean tryReleaseShared(int)>
<java.io.ByteArrayOutputStream: void reset()>
<ohos.agp.render.render3d.resources.MeshDesc: ohos.agp.render.render3d.util.BoundingBox getBounds()>
<ohos.global.icu.util.HebrewCalendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder optionalEnd()>
<java.util.Date: void setDate(int)>
<ohos.miscservices.pasteboard.PasteData: void addHtmlRecord(java.lang.String)>
<java.io.SequenceInputStream: int read()>
<ohos.media.common.sessioncore.AVSessionCallback: void onPlayByUri(ohos.utils.net.Uri,ohos.utils.PacMap)>
<ohos.miscservices.pasteboard.PasteData.Record: java.lang.CharSequence convertToText(ohos.app.Context)>
<ohos.global.icu.lang.UScript: int getScriptExtensions(int,java.util.BitSet)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates between(java.lang.String,java.lang.String,java.lang.String)>
<java.security.SignatureSpi: boolean engineVerify(byte[])>
<java.sql.SQLClientInfoException: void <init>(java.lang.String,java.lang.String,java.util.Map)>
<ohos.media.audio.Timestamp: void setFramePosition(long)>
<ohos.app.IAbilityManager: java.util.List getAllRunningProcesses()>
<ohos.nfc.tag.TagManager: void reset()>
<ohos.media.tubecore.AVTube: ohos.media.audio.AudioStreamInfo.StreamType streamType()>
<java.util.Calendar.Builder: java.util.Calendar.Builder setTimeZone(java.util.TimeZone)>
<ohos.bundle.FormInfo: java.lang.String getColorMode()>
<java.time.Instant: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<java.time.YearMonth: java.time.YearMonth minusMonths(long)>
<javax.sql.RowSet: void setNClob(java.lang.String,java.io.Reader)>
<ohos.nfc.tag.TagManager: boolean setSendDataTimeout(int)>
<java.io.LineNumberInputStream: int getLineNumber()>
<java.lang.Math: long multiplyExact(long,long)>
<java.nio.LongBuffer: java.nio.LongBuffer put(long)>
<ohos.rpc.RemoteObjectCallbackList: ohos.rpc.IRemoteBroker getBroadcastInterface(int)>
<ohos.app.Context: boolean terminateAbilityResult(int)>
<ohos.utils.LongPlainArray: int size()>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate date(java.time.temporal.TemporalAccessor)>
<ohos.global.icu.text.MeasureFormat: boolean equals(java.lang.Object)>
<ohos.bluetooth.A2dpSource: int getDeviceState(ohos.bluetooth.BluetoothRemoteDevice)>
<ohos.agp.components.SlideDrawer.SlideListener: void onSlideChange(ohos.agp.components.SlideDrawer,ohos.agp.components.SlideDrawer.SlideDirection,int,int)>
<ohos.global.icu.lang.UCharacter: java.lang.String toTitleCase(ohos.global.icu.util.ULocale,java.lang.String,ohos.global.icu.text.BreakIterator,int)>
<ohos.utils.BasePacMap: float getFloatValue(java.lang.String,float)>
<ohos.media.image.PixelMap: ohos.media.image.PixelMap create(ohos.media.image.PixelMap,ohos.media.image.PixelMap.InitializationOptions)>
<ohos.bluetooth.BluetoothRemoteDevice: java.util.Optional getDeviceClass()>
<ohos.agp.components.Component: void setMarginLeft(int)>
<java.util.logging.LoggingMXBean: java.lang.String getLoggerLevel(java.lang.String)>
<ohos.global.icu.text.UnicodeSet: int compareTo(java.lang.Iterable)>
<java.net.ProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)>
<java.util.ResourceBundle: java.util.Set handleKeySet()>
<javax.lang.model.type.UnknownTypeException: javax.lang.model.type.TypeMirror getUnknownType()>
<ohos.agp.utils.Circle: void <init>(float,float,float)>
<ohos.agp.components.IndexBar: void setStringSelectedPaint(ohos.agp.render.Paint)>
<javax.crypto.ExemptionMechanismSpi: void engineInit(java.security.Key)>
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDate minus(java.time.temporal.TemporalAmount)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)>
<ohos.app.IAbilityManager: int getHomeScreenIconSize()>
<ohos.data.search.schema.EmailItem: ohos.data.search.schema.EmailItem setAttachment(java.lang.String)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneFormat setGMTOffsetPattern(ohos.global.icu.text.TimeZoneFormat.GMTOffsetPatternType,java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,java.lang.String)>
<ohos.aafwk.ability.fraction.FractionScheduler: ohos.aafwk.ability.fraction.FractionScheduler hide(ohos.aafwk.ability.fraction.Fraction)>
<ohos.tools.ByTrace: void updateTraceLabel()>
<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>
<java.lang.InstantiationException: void <init>(java.lang.String)>
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key)>
<ohos.data.search.schema.PhotoItem: java.lang.String getCity()>
<java.util.function.IntUnaryOperator: java.util.function.IntUnaryOperator identity()>
<java.util.concurrent.ConcurrentLinkedDeque: void addLast(java.lang.Object)>
<ohos.data.distributed.common.KvStoreException: void <init>(ohos.data.distributed.common.KvStoreErrorCode)>
<java.util.Scanner: boolean hasNextBigInteger()>
<java.nio.ShortBuffer: int hashCode()>
<java.lang.Math: int getExponent(double)>
<ohos.event.notification.NotificationSlotGroup: void <clinit>()>
<java.net.HttpCookie: void setPath(java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glReadBuffer(int)>
<ohos.media.common.Format: long getLongValue(java.lang.String)>
<java.util.Scanner: void <init>(java.lang.String)>
<ohos.bluetooth.HandsFreeAudioGateway: boolean disconnectSco()>
<java.util.Spliterator.OfDouble: void forEachRemaining(java.lang.Object)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newWorkStealingPool()>
<ohos.global.icu.text.Collator: ohos.global.icu.text.Collator getInstance()>
<ohos.media.camera.params.AeResult: int getState()>
<ohos.net.LinkAddress: int getFlags()>
<ohos.accessibility.ability.AccessibilityInfo: boolean isVisible()>
<ohos.agp.components.Rating: boolean isOperable()>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource create(java.lang.String,ohos.media.image.ImageSource.SourceOptions)>
<java.lang.Float: void <init>(java.lang.String)>
<java.nio.charset.CharsetEncoder: void implReplaceWith(byte[])>
<ohos.data.search.schema.EventItem: java.lang.Long getStartDate()>
<ohos.telephony.SimInfoManager: java.lang.String getVoiceMailIdentifier(int)>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster dayOfWeekInMonth(int,java.time.DayOfWeek)>
<ohos.agp.window.service.WindowManager: ohos.agp.window.service.WindowManager getInstance()>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate dateEpochDay(long)>
<java.util.function.LongPredicate: boolean test(long)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayNameWithDialect()>
<java.lang.ref.SoftReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,java.lang.String)>
<ohos.agp.render.render3d.math.Matrix4x4: void multiply(ohos.agp.render.render3d.math.Matrix4x4,ohos.agp.render.render3d.math.Matrix4x4,ohos.agp.render.render3d.math.Matrix4x4)>
<ohos.agp.render.ColorFilter: void <init>(int,ohos.agp.render.BlendMode)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal plus()>
<ohos.nfc.tag.NdefTag: void writeNdefMessage(ohos.nfc.tag.NdefMessage)>
<java.util.concurrent.ConcurrentHashMap: java.util.Map.Entry reduceEntries(long,java.util.function.BiFunction)>
<ohos.agp.render.render3d.math.Matrix4x4: int hashCode()>
<ohos.org.xml.sax.Attributes: java.lang.String getLocalName(int)>
<ohos.data.rdb.RdbUtils: java.lang.String escapeQuote(java.lang.String)>
<java.lang.IllegalAccessException: void <init>(java.lang.String)>
<ohos.agp.render.render3d.components.CameraComponent: float[] getViewportParams()>
<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>
<java.util.concurrent.CountDownLatch: java.lang.String toString()>
<ohos.agp.components.CornerMark: void setHeight(int)>
<ohos.hiviewdfx.Debug: int getProcessSwappedOut(ohos.hiviewdfx.Debug.MemType)>
<java.lang.Integer: int compareTo(java.lang.Object)>
<java.security.Signature: void initSign(java.security.PrivateKey)>
<java.sql.RowId: byte[] getBytes()>
<ohos.aafwk.ability.Ability: void onBackground()>
<java.time.chrono.AbstractChronology: void <init>()>
<ohos.agp.render.layoutboost.LayoutBoostUtils: ohos.agp.text.Font getItalic(ohos.agp.components.Text,java.lang.Boolean)>
<java.time.Duration: java.time.Duration plusDays(long)>
<java.io.ObjectInputStream: int readUnsignedShort()>
<java.time.temporal.TemporalField: java.time.temporal.TemporalAccessor resolve(java.util.Map,java.time.temporal.TemporalAccessor,java.time.format.ResolverStyle)>
<java.util.logging.LogRecord: java.lang.String getMessage()>
<java.util.logging.Logger: void entering(java.lang.String,java.lang.String,java.lang.Object)>
<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>
<ohos.agp.render.Canvas: void drawCircle(ohos.agp.utils.Point,float,ohos.agp.render.Paint)>
<ohos.data.rdb.RdbUtils.OperationType: ohos.data.rdb.RdbUtils.OperationType valueOf(java.lang.String)>
<java.lang.Process: boolean waitFor(long,java.util.concurrent.TimeUnit)>
<java.nio.charset.CharsetDecoder: void <init>(java.nio.charset.Charset,float,float)>
<ohos.media.image.ImageSource: void setDecodeEventListener(ohos.media.image.ImageSource.DecodeEventListener)>
<java.sql.Timestamp: void setNanos(int)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<java.nio.charset.Charset: java.lang.String name()>
<ohos.agp.utils.DimensFloat: float getProduct()>
<java.lang.Math: double abs(double)>
<java.util.Collections: void shuffle(java.util.List)>
<javax.net.ssl.SSLEngine: void setEnabledProtocols(java.lang.String[])>
<ohos.global.icu.util.ULocale: java.lang.Object clone()>
<ohos.event.notification.IAdvancedNotificationManager: boolean canPublishNotificationAsBundle(java.lang.String,java.lang.String)>
<ohos.media.common.AudioProperty: int getRecorderSamplingRate()>
<java.util.GregorianCalendar: void roll(int,boolean)>
<ohos.global.icu.util.Calendar: ohos.global.icu.text.DateFormat getDateTimeFormat(int,int,java.util.Locale)>
<ohos.data.search.SearchAbility: ohos.data.search.model.SearchableEntity getSearchableEntity(java.lang.String)>
<ohos.sysappcomponents.contact.entity.Name: void <init>()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query notInString(java.lang.String,java.util.List)>
<java.nio.file.FileSystems: java.nio.file.FileSystem newFileSystem(java.nio.file.Path,java.lang.ClassLoader)>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion slerp(ohos.agp.render.render3d.math.Quaternion,ohos.agp.render.render3d.math.Quaternion,float)>
<java.time.MonthDay: java.time.MonthDay parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
<java.util.concurrent.ConcurrentLinkedDeque: java.util.Spliterator spliterator()>
<java.time.Duration: java.time.Duration ofDays(long)>
<ohos.utils.zson.ZSONArray: java.util.ListIterator listIterator(int)>
<ohos.agp.graphics.SurfaceOps.Callback: void surfaceCreated(ohos.agp.graphics.SurfaceOps)>
<ohos.agp.render.opengl.GLES1X: void glLineWidthx(int)>
<ohos.bundle.BundleInfo: int getVersionCode()>
<ohos.agp.utils.TextTool: java.lang.String getSubstring(java.lang.CharSequence,int,int)>
<ohos.media.tubecore.AVTubeManager: ohos.media.tubecore.AVTube defaultTube()>
<ohos.javax.xml.stream.XMLStreamWriter: void setDefaultNamespace(java.lang.String)>
<ohos.global.icu.text.NumberingSystem: ohos.global.icu.text.NumberingSystem getInstance(ohos.global.icu.util.ULocale)>
<ohos.media.common.VideoProperty: int getRecorderHeight()>
<ohos.global.icu.text.DecimalFormat: void setMaximumFractionDigits(int)>
<ohos.utils.Pair: void <init>(java.lang.Object,java.lang.Object)>
<ohos.agp.components.ComponentContainer: void setLayoutManager(ohos.agp.components.LayoutManager)>
<ohos.media.audio.AudioStreamInfo.ContentType: int getValue()>
<java.time.chrono.ChronoLocalDate: boolean isLeapYear()>
<java.time.chrono.ThaiBuddhistDate: boolean equals(java.lang.Object)>
<java.util.concurrent.ForkJoinPool: java.util.List invokeAll(java.util.Collection)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal remainder(ohos.global.icu.math.BigDecimal)>
<ohos.security.NetworkSecurityPolicy: boolean isPlaintextAccessAllowed()>
<ohos.media.audio.AudioManager: java.util.List getActiveRendererConfigs()>
<ohos.agp.render.Paint: float getCornerPathEffectRadius()>
<ohos.agp.render.opengl.GLES20: void glAttachShader(int,int)>
<ohos.utils.zson.ZSONWriter: void <init>(java.io.Writer)>
<java.nio.file.WatchKey: java.nio.file.Watchable watchable()>
<ohos.account.OsAccountType: ohos.account.OsAccountType valueOf(java.lang.String)>
<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int)>
<ohos.agp.components.SlideDrawer: boolean isTouchForClose()>
<ohos.utils.geo.Point: void <init>()>
<ohos.agp.render.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<ohos.global.icu.util.Calendar: boolean isWeekend(java.util.Date)>
<java.lang.Math: double asin(double)>
<ohos.global.icu.text.SearchIterator: void setElementComparisonType(ohos.global.icu.text.SearchIterator.ElementComparisonType)>
<java.nio.file.FileStore: long getUsableSpace()>
<java.lang.System: void setProperties(java.util.Properties)>
<ohos.rpc.RemoteObject: java.lang.String getInterfaceDescriptor()>
<ohos.media.camera.device.Camera: void configure(ohos.media.camera.device.CameraConfig)>
<java.lang.Class: java.lang.Class[] getDeclaredClasses()>
<ohos.global.icu.util.VersionInfo: int getMajor()>
<java.net.NetworkInterface: boolean isLoopback()>
<ohos.agp.components.SearchBar.QueryListener: boolean onQuerySubmit(java.lang.String)>
<ohos.agp.render.render3d.components.CameraComponent: void setAdditionalFlags(int)>
<java.sql.BatchUpdateException: void <init>(int[],java.lang.Throwable)>
<ohos.powermanager.PowerManager: boolean isScreenOn()>
<ohos.agp.render.Texture.ColorType: ohos.agp.render.Texture.ColorType[] values()>
<ohos.global.resource.solidxml.Theme: int size()>
<ohos.bluetooth.BluetoothHost: boolean setLocalName(java.lang.String)>
<ohos.agp.utils.RectFloat: ohos.agp.utils.Point getPivot()>
<ohos.global.icu.text.UnicodeSetSpanner: java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence,ohos.global.icu.text.UnicodeSetSpanner.CountMethod)>
<java.security.SignatureSpi: java.lang.Object engineGetParameter(java.lang.String)>
<java.nio.ShortBuffer: java.lang.Object array()>
<java.util.IllegalFormatConversionException: char getConversion()>
<java.sql.SQLClientInfoException: void <init>(java.lang.String,java.lang.String,int,java.util.Map,java.lang.Throwable)>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object remove()>
<ohos.data.resultset.AbsSharedResultSet: boolean onGo(int,int)>
<ohos.agp.components.TabList: int getTabLength()>
<ohos.agp.window.dialog.BaseDialog: void destroy()>
<java.security.Signature: java.security.AlgorithmParameters getParameters()>
<java.text.BreakIterator: java.text.BreakIterator getWordInstance(java.util.Locale)>
<ohos.global.icu.text.MessagePattern.Part: ohos.global.icu.text.MessagePattern.Part.Type getType()>
<java.util.Map: java.lang.Object remove(java.lang.Object)>
<java.lang.Class: java.lang.String getSimpleName()>
<ohos.wifi.WifiLinkedInfo: int getFrequency()>
<java.net.SocketImpl: void setPerformancePreferences(int,int,int)>
<java.util.concurrent.BlockingDeque: boolean offerLast(java.lang.Object)>
<ohos.agp.components.webengine.WebAgent: boolean isNeedLoadUrl(ohos.agp.components.webengine.WebView,ohos.agp.components.webengine.ResourceRequest)>
<java.text.DateFormat.Field: java.text.DateFormat.Field ofCalendarField(int)>
<ohos.agp.components.Text: void setFadeEffectBoundaryWidth(int)>
<ohos.agp.components.ListContainer: int getContentEndOffset()>
<ohos.agp.render.Paint.Style: ohos.agp.render.Paint.Style[] values()>
<java.text.DateFormatSymbols: void <init>(java.util.Locale)>
<ohos.data.distributed.device.DeviceInfo: java.lang.String getId()>
<ohos.global.icu.text.ConstrainedFieldPosition: int getLimit()>
<java.util.Spliterators.AbstractLongSpliterator: long estimateSize()>
<ohos.wifi.p2p.WifiP2pLinkedInfo: boolean marshalling(ohos.utils.Parcel)>
<java.sql.CallableStatement: java.sql.Array getArray(int)>
<java.util.concurrent.DelayQueue: void put(java.lang.Object)>
<java.net.ProtocolException: void <init>()>
<ohos.app.ProcessInfo: boolean marshalling(ohos.utils.Parcel)>
<java.nio.file.Files: java.util.stream.Stream walk(java.nio.file.Path,int,java.nio.file.FileVisitOption[])>
<ohos.ai.tts.TtsParams: void setVolume(int)>
<ohos.telephony.TelephoneNumberUtils: java.lang.String changeKeypadLettersToDigits(java.lang.String)>
<ohos.data.search.model.IndexForm: boolean equals(java.lang.Object)>
<java.util.Arrays: void sort(float[],int,int)>
<ohos.media.image.ImageReceiver: int getCapacity()>
<java.sql.ResultSet: void deleteRow()>
<ohos.media.common.Format: ohos.media.common.Format.FormatArrays getFormatArrays()>
<java.util.concurrent.ConcurrentHashMap: int size()>
<java.io.Writer: void <init>(java.lang.Object)>
<java.util.concurrent.CompletableFuture: boolean isDone()>
<java.security.cert.CertPathValidatorResult: java.lang.Object clone()>
<java.util.zip.Deflater: long getBytesRead()>
<java.util.concurrent.BlockingDeque: boolean contains(java.lang.Object)>
<javax.security.auth.PrivateCredentialPermission: boolean implies(java.security.Permission)>
<ohos.agp.render.render3d.resources.MeshDesc.PrimitiveDesc: void setMaterial(ohos.agp.render.render3d.resources.ResourceHandle)>
<ohos.utils.LightweightSet: boolean add(java.lang.Object)>
<ohos.agp.render.render3d.SceneNode: boolean isExported()>
<java.util.TreeSet: boolean remove(java.lang.Object)>
<java.lang.Math: double tanh(double)>
<ohos.event.notification.NotificationHelper: void cancelAllNotifications()>
<ohos.media.image.common.AlphaType: ohos.media.image.common.AlphaType valueOf(java.lang.String)>
<java.net.Inet6Address: boolean isLoopbackAddress()>
<java.util.concurrent.locks.StampedLock: java.util.concurrent.locks.Lock asReadLock()>
<ohos.javax.xml.stream.events.StartDocument: java.lang.String getVersion()>
<java.security.KeyStore.PasswordProtection: boolean isDestroyed()>
<ohos.agp.components.ComponentState: void <init>()>
<ohos.agp.components.TabList: int getTabTextSize()>
<javax.security.auth.x500.X500Principal: byte[] getEncoded()>
<java.lang.Long: boolean equals(java.lang.Object)>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate plus(long,java.time.temporal.TemporalUnit)>
<java.text.DecimalFormat: void setPositiveSuffix(java.lang.String)>
<java.util.TreeSet: int size()>
<java.lang.Character: boolean isDefined(char)>
<java.util.concurrent.atomic.LongAdder: long longValue()>
<java.sql.SQLNonTransientException: void <init>(java.lang.Throwable)>
<java.util.prefs.AbstractPreferences: void putLong(java.lang.String,long)>
<ohos.data.search.model.IndexData: void setValues(java.util.Map)>
<ohos.app.Context: boolean deleteFile(java.lang.String)>
<java.security.PKCS12Attribute: void <init>(byte[])>
<ohos.agp.components.ProgressBar: void setProgressWidth(int)>
<ohos.agp.render.opengl.EGL: ohos.agp.render.opengl.EGLContext eglCreateContext(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLConfig,ohos.agp.render.opengl.EGLContext,int[])>
<java.nio.IntBuffer: int compareTo(java.nio.IntBuffer)>
<java.util.NavigableSet: java.lang.Object pollFirst()>
<java.text.AttributedCharacterIterator.Attribute: void <clinit>()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notBetween(java.lang.String,java.sql.Time,java.sql.Time)>
<java.lang.IllegalThreadStateException: void <init>(java.lang.String)>
<java.security.spec.ECFieldF2m: int getM()>
<java.util.concurrent.ForkJoinTask: boolean compareAndSetForkJoinTaskTag(short,short)>
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndAdd(int,int)>
<java.time.LocalDateTime: java.time.DayOfWeek getDayOfWeek()>
<ohos.event.commonevent.CommonEventData: ohos.aafwk.content.Intent getIntent()>
<ohos.agp.components.RadioContainer: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.bundle.IBundleManager: int[] getBundleGids(java.lang.String)>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<java.util.prefs.InvalidPreferencesFormatException: void <init>(java.lang.String)>
<java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance()>
<java.lang.StrictMath: int round(float)>
<ohos.agp.render.render3d.math.Quaternion: float getLength()>
<ohos.global.icu.text.UnicodeFilter: int matches(ohos.global.icu.text.Replaceable,int[],int,boolean)>
<java.security.cert.X509CertSelector: void setMatchAllSubjectAltNames(boolean)>
<ohos.media.audio.AudioEqualizer: void <init>(int,int,java.lang.String)>
<java.sql.SQLInput: java.sql.Clob readClob()>
<java.sql.SQLTransientException: void <init>(java.lang.String,java.lang.String,int)>
<ohos.bundle.ElementName: java.lang.String getURI()>
<ohos.system.OsHelper: ohos.system.FileStat getFileStatus(java.io.FileDescriptor)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeEntityRef(java.lang.String)>
<java.util.List: boolean containsAll(java.util.Collection)>
<ohos.agp.transition.Transition: void setDuration(float)>
<ohos.agp.components.Rating: ohos.agp.components.element.Element getThumbElement()>
<java.util.stream.LongStream.Builder: java.util.stream.LongStream build()>
<java.util.jar.Attributes.Name: int hashCode()>
<ohos.bundle.ElementName: java.lang.String getAbilityName()>
<ohos.nfc.tag.MessageRecord: java.util.Optional buildUri()>
<ohos.agp.components.AttrHelper: int fp2px(float,ohos.app.Context)>
<java.net.ConnectException: void <init>(java.lang.String)>
<ohos.media.photokit.support.AlbumList: java.lang.String getAlbumCapacity()>
<java.util.regex.Matcher: java.util.regex.Pattern pattern()>
<java.sql.SQLData: java.lang.String getSQLTypeName()>
<ohos.sysappcomponents.calendar.entity.Participants: int getParticipantType()>
<ohos.media.image.ImageReceiver: void setImageArrivalListener(ohos.media.image.ImageReceiver.IImageArrivalListener)>
<ohos.aafwk.content.Intent.OperationBuilder: void <init>()>
<ohos.sysappcomponents.contact.entity.Holder: java.lang.String getBundleName()>
<ohos.bundle.ShortcutInfo: void <init>()>
<ohos.media.image.common.ImageFormat.ComponentType: ohos.media.image.common.ImageFormat.ComponentType[] values()>
<java.util.concurrent.Executors: java.util.concurrent.Callable callable(java.security.PrivilegedExceptionAction)>
<java.sql.SQLOutput: void writeArray(java.sql.Array)>
<ohos.distributedhardware.devicemanager.DeviceInfo: java.lang.String getDeviceName()>
<ohos.global.icu.lang.UCharacter: int getDirection(int)>
<java.lang.Thread: java.lang.Thread.UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<ohos.agp.window.dialog.CommonDialog: void onWindowConfigUpdated(ohos.agp.window.service.WindowManager.LayoutConfig)>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.ToastDialog setAlignment(int)>
<ohos.agp.components.SlideDrawer: void setSlideEnabled(boolean)>
<java.sql.CallableStatement: void setRowId(java.lang.String,java.sql.RowId)>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onEnter(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.utils.Parcel: boolean writeStringList(java.util.List)>
<java.util.Vector: int indexOf(java.lang.Object,int)>
<ohos.agp.render.render3d.resources.ResourceManager: java.util.Optional getMeshDesc(ohos.agp.render.render3d.resources.ResourceHandle)>
<java.sql.CallableStatement: void setClob(java.lang.String,java.io.Reader,long)>
<ohos.utils.geo.Rect: void translateTo(int,int)>
<ohos.ai.cv.sr.SisrConfiguration.Builder: void <init>()>
<ohos.global.icu.text.SelectFormat: java.lang.String toPattern()>
<ohos.bundle.LauncherService: void startShortcut(java.lang.String,java.lang.String)>
<java.lang.StringBuffer: void setLength(int)>
<ohos.media.common.Source: void <init>()>
<ohos.global.icu.util.EthiopicCalendar: int handleGetLimit(int,int)>
<ohos.global.icu.util.EthiopicCalendar: void <init>(ohos.global.icu.util.TimeZone)>
<ohos.sensor.agent.CategoryLightAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryLightDataCallback,ohos.sensor.bean.CategoryLight,long,long)>
<ohos.agp.components.Text: void setTextColor(ohos.agp.utils.Color)>
<ohos.media.camera.device.CameraConfig.Builder: ohos.media.camera.device.CameraConfig.Builder addDeferredSurfaceSize(ohos.media.image.common.Size,java.lang.Class)>
<java.security.cert.CertPathBuilderSpi: java.security.cert.CertPathChecker engineGetRevocationChecker()>
<ohos.bluetooth.ble.BleScanResult: java.util.Map getServiceData()>
<javax.crypto.Mac: void update(java.nio.ByteBuffer)>
<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>
<ohos.global.icu.text.MessagePattern: ohos.global.icu.text.MessagePattern freeze()>
<java.nio.file.Path: java.nio.file.Path relativize(java.nio.file.Path)>
<java.lang.Enum: int hashCode()>
<ohos.bluetooth.ble.BleScanResult: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.Component: boolean isRtl()>
<java.util.Deque: void push(java.lang.Object)>
<java.lang.Object: void <init>()>
<ohos.agp.components.NestedScrollView: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.EnumSet)>
<java.nio.channels.Channels: java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream)>
<javax.tools.DocumentationTool.Location: java.lang.String getName()>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setString(int,java.lang.String,java.lang.String)>
<java.time.chrono.HijrahDate: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>
<ohos.agp.components.Component: void enableCornerMark(boolean)>
<java.time.LocalDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<ohos.global.icu.text.NumberFormat: int getMinimumFractionDigits()>
<java.io.PrintWriter: void println(double)>
<ohos.global.resource.solidxml.TypedAttribute: boolean getBooleanValue()>
<java.util.Collections: java.util.NavigableSet emptyNavigableSet()>
<ohos.agp.render.Shader.TileMode: ohos.agp.render.Shader.TileMode[] values()>
<ohos.sysappcomponents.contact.entity.Website: java.lang.String getWebsite()>
<ohos.aafwk.ability.AbilityForm: ohos.aafwk.content.Intent getFullPageIntent()>
<ohos.bundle.ShortcutIntent: void <clinit>()>
<ohos.media.audio.AudioRenderer: boolean setSendEffect(int)>
<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator.Attribute,java.lang.Object)>
<ohos.agp.render.Path: void reset()>
<java.sql.ResultSetMetaData: boolean isSearchable(int)>
<ohos.agp.components.ListContainer.ReboundEffectParams: float getOverscrollRate()>
<ohos.utils.geo.Rect: void <init>(ohos.utils.geo.Rect)>
<java.lang.invoke.VolatileCallSite: java.lang.invoke.MethodHandle getTarget()>
<ohos.aafwk.ability.Ability: void onOrientationChanged(ohos.bundle.AbilityInfo.DisplayOrientation)>
<ohos.global.icu.text.TimeZoneFormat.ParseOption: void <clinit>()>
<java.lang.String: java.lang.String valueOf(char)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setMetallicFactor(float)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query notInInt(java.lang.String,java.util.List)>
<ohos.agp.components.PageSlider: int getCachedPagesLimit()>
<java.time.ZonedDateTime: boolean isSupported(java.time.temporal.TemporalUnit)>
<java.io.DataInput: int readUnsignedShort()>
<java.util.Spliterator.OfDouble: java.util.Spliterator.OfDouble trySplit()>
<ohos.global.icu.text.SimpleDateFormat: void <init>(java.lang.String,ohos.global.icu.text.DateFormatSymbols)>
<java.text.CollationKey: int compareTo(java.lang.Object)>
<java.util.zip.ZipFile: java.util.Enumeration entries()>
<javax.net.ssl.SSLEngineResult.HandshakeStatus: javax.net.ssl.SSLEngineResult.HandshakeStatus valueOf(java.lang.String)>
<ohos.bundle.BackupBundleInfo: void <init>(java.lang.String,int)>
<java.security.SignatureException: void <init>(java.lang.Throwable)>
<java.util.concurrent.RecursiveTask: void <init>()>
<java.util.Scanner: java.math.BigInteger nextBigInteger(int)>
<ohos.global.icu.util.TimeZone: ohos.global.icu.util.TimeZone freeze()>
<ohos.agp.components.SlideDrawer: void addSlideListener(ohos.agp.components.SlideDrawer.SlideListener)>
<ohos.sensor.data.CategoryOrientationData: float[] getQuaternionValues(float[])>
<ohos.miscservices.inputmethod.EditingText: int getChangedEnd()>
<ohos.utils.SequenceUuid: void <init>(java.util.UUID)>
<java.net.DatagramSocket: boolean isBound()>
<java.nio.ByteBuffer: java.nio.ByteOrder order()>
<ohos.agp.components.TickTimer: void setBaseTime(long)>
<ohos.agp.components.Rating: void setGrainSize(float)>
<java.util.concurrent.atomic.AtomicStampedReference: java.lang.Object getReference()>
<ohos.media.tubecore.AVTube.PlayMode: ohos.media.tubecore.AVTube.PlayMode[] values()>
<ohos.utils.net.Uri: java.util.List getDecodedPathList()>
<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(int,long)>
<ohos.telephony.TelephoneNumberUtils: boolean isDialableDtmfKey(char)>
<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>
<ohos.bluetooth.BluetoothHost: boolean enableBt()>
<java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function)>
<ohos.event.commonevent.CommonEventPublishInfo: boolean isOrdered()>
<java.time.Period: java.util.List getUnits()>
<ohos.global.icu.util.TimeZone: boolean hasSameRules(ohos.global.icu.util.TimeZone)>
<ohos.sysappcomponents.contact.entity.PhoneNumber: void setCustomLabelName(java.lang.String)>
<java.util.Comparator: java.util.Comparator naturalOrder()>
<java.time.OffsetTime: java.time.OffsetTime now(java.time.Clock)>
<ohos.javax.xml.stream.FactoryConfigurationError: void <init>()>
<javax.crypto.spec.SecretKeySpec: java.lang.String getAlgorithm()>
<ohos.sysappcomponents.contact.HoldersCollection: ohos.sysappcomponents.contact.entity.Holder next()>
<java.security.cert.X509CertSelector: void setSubjectPublicKey(java.security.PublicKey)>
<ohos.global.icu.text.DecimalFormatSymbols: void setExponentMultiplicationSign(java.lang.String)>
<java.net.DatagramSocketImpl: java.io.FileDescriptor getFileDescriptor()>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: void setColors(java.nio.FloatBuffer)>
<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction malformedInputAction()>
<ohos.data.rdb.RdbTooBigException: void <init>()>
<ohos.global.resource.solidxml.Node: java.util.List getTypedAttributes(ohos.global.resource.solidxml.Pattern)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>
<ohos.app.AbilityContext: void setTransitionAnimation(int,int)>
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<java.lang.String: int codePointCount(int,int)>
<java.lang.StringBuilder: int indexOf(java.lang.String)>
<java.nio.file.SecureDirectoryStream: void deleteFile(java.lang.Object)>
<ohos.media.audio.AudioWaver: void release()>
<java.lang.System: int identityHashCode(java.lang.Object)>
<ohos.agp.utils.Matrix: void setScaleY(float)>
<ohos.bluetooth.ble.BleScanFilter: void setPeripheralName(java.lang.String)>
<java.net.InetSocketAddress: java.lang.String getHostString()>
<java.text.DecimalFormat: void setPositivePrefix(java.lang.String)>
<ohos.agp.components.Component: boolean getClipEnabled()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notBetween(java.lang.String,long,long)>
<java.lang.IllegalStateException: void <init>()>
<java.util.HashMap: void <init>(int,float)>
<ohos.media.camera.device.FrameConfig.Builder: ohos.agp.utils.Rect getAfRect()>
<ohos.agp.components.RadioContainer: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.agp.utils.Matrix: boolean postScale(float,float)>
<ohos.global.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit: void <clinit>()>
<java.lang.Integer: java.lang.String toUnsignedString(int,int)>
<java.security.cert.LDAPCertStoreParameters: java.lang.Object clone()>
<ohos.bundle.IBundleManager: int checkPublicKeys(java.lang.String,java.lang.String)>
<java.util.GregorianCalendar: int getWeeksInWeekYear()>
<ohos.agp.components.Rating: float getGrainSize()>
<javax.lang.model.SourceVersion: boolean isName(java.lang.CharSequence)>
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndUpdate(int,java.util.function.IntUnaryOperator)>
<java.nio.channels.SocketChannel: java.net.SocketAddress getLocalAddress()>
<ohos.agp.text.Layout: float getCoordinateForVertical(int)>
<java.util.Arrays: java.lang.String toString(double[])>
<java.security.cert.X509Certificate: int getVersion()>
<java.lang.Math: double log10(double)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long get(java.lang.Object)>
<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>
<java.lang.Character.UnicodeScript: void <clinit>()>
<javax.lang.model.util.Types: javax.lang.model.type.PrimitiveType getPrimitiveType(javax.lang.model.type.TypeKind)>
<java.lang.ClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>
<ohos.agp.utils.TextTool: boolean isNullOrEmpty(java.lang.CharSequence)>
<java.util.jar.JarFile: java.util.stream.Stream stream()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: boolean hasWaiters()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates on(java.lang.String[])>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>
<ohos.agp.render.opengl.GLES20: void glLineWidth(float)>
<java.io.RandomAccessFile: java.lang.String readUTF()>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<ohos.bluetooth.ble.BlePeripheralManager: boolean removeGattService(ohos.bluetooth.ble.GattService)>
<ohos.utils.SequenceUuid: boolean equals(java.lang.Object)>
<ohos.nfc.NfcController: boolean isNfcOpen()>
<java.io.PushbackReader: void unread(char[])>
<java.util.Base64: java.util.Base64.Encoder getEncoder()>
<java.io.DataOutput: void writeChars(java.lang.String)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query lessThan(java.lang.String,java.lang.String)>
<ohos.agp.render.render3d.math.Vector4: float getY()>
<ohos.agp.render.opengl.EGL: boolean eglDestroyContext(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLContext)>
<javax.lang.model.type.WildcardType: javax.lang.model.type.TypeMirror getSuperBound()>
<ohos.distributedschedule.interwork.DeviceManager: boolean unregisterDeviceStateCallback(ohos.distributedschedule.interwork.IDeviceStateCallback)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneFormat freeze()>
<ohos.aafwk.ability.Ability: ohos.data.rdb.ValuesBucket parseValuesBucketReference(ohos.aafwk.ability.DataAbilityResult[],ohos.aafwk.ability.DataAbilityOperation,int)>
<java.nio.channels.SocketChannel: long write(java.nio.ByteBuffer[],int,int)>
<ohos.app.Context: java.lang.String[] getStringArray(int)>
<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>
<ohos.global.icu.util.ValueIterator: void setRange(int,int)>
<ohos.global.icu.text.DateIntervalFormat: void setTimeZone(ohos.global.icu.util.TimeZone)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getAttributeType(int)>
<ohos.app.GeneralReceiver: void sendResult(int,ohos.utils.PacMap)>
<ohos.agp.components.RadioContainer: void mark(int)>
<java.net.URLClassLoader: java.net.URL findResource(java.lang.String)>
<java.time.chrono.ChronoPeriod: java.time.chrono.ChronoPeriod between(java.time.chrono.ChronoLocalDate,java.time.chrono.ChronoLocalDate)>
<ohos.data.search.schema.EmailItem: ohos.data.search.schema.EmailItem setToEmail(java.lang.String)>
<ohos.miscservices.screenlock.ScreenLockController: void unlockScreen(ohos.app.Context,ohos.miscservices.screenlock.interfaces.UnlockScreenCallback)>
<java.sql.SQLInvalidAuthorizationSpecException: void <init>(java.lang.Throwable)>
<java.time.Instant: int get(java.time.temporal.TemporalField)>
<ohos.agp.components.NestedScrollCoordinator: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.utils.RectFloat: void setPivot(ohos.agp.utils.Point)>
<java.text.Collator: java.text.Collator getInstance()>
<ohos.media.common.sessioncore.AVSessionCallback: void onSetAVPlaybackSpeed(float)>
<ohos.aafwk.ability.AbilityPackage: void <init>()>
<ohos.app.AbilityContext: java.io.File getNoBackupFilesDir()>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>
<java.util.concurrent.locks.ReentrantLock: boolean hasWaiters(java.util.concurrent.locks.Condition)>
<ohos.powermanager.DevicePowerStatusInfo: ohos.batterymanager.BatteryInfo.BatteryChargeState getBatteryChargingStatus()>
<ohos.agp.window.dialog.ListDialog: ohos.agp.window.dialog.ListDialog removeItem(java.lang.String)>
<ohos.hiviewdfx.FaultLogger.FaultLogInfo: java.lang.String getReason()>
<ohos.agp.utils.RectFloat: boolean isIntersect(ohos.agp.utils.RectFloat)>
<java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int)>
<java.nio.channels.AsynchronousFileChannel: void write(java.nio.ByteBuffer,long,java.lang.Object,java.nio.channels.CompletionHandler)>
<ohos.data.distributed.common.KvStore: void commit()>
<ohos.agp.utils.Matrix: int hashCode()>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getWordInstance(ohos.global.icu.util.ULocale)>
<ohos.agp.components.SearchBar: void setCloseButton(int)>
<java.nio.file.Files: long copy(java.nio.file.Path,java.io.OutputStream)>
<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>
<java.io.FilterWriter: void write(java.lang.String,int,int)>
<ohos.event.notification.NotificationActionButton.Builder: void <init>(ohos.event.notification.NotificationActionButton)>
<ohos.media.sessioncore.AVController: ohos.media.common.sessioncore.AVToken getAVToken()>
<java.lang.invoke.MethodHandles.Lookup: java.lang.Class lookupClass()>
<java.lang.Math: double log1p(double)>
<ohos.agp.render.Canvas: void drawPoints(float[],int,int,ohos.agp.render.Paint)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType insertParameterTypes(int,java.util.List)>
<java.nio.CharBuffer: java.nio.CharBuffer asReadOnlyBuffer()>
<ohos.agp.components.webengine.BrowserAgent: boolean onJsMessageShow(ohos.agp.components.webengine.WebView,java.lang.String,java.lang.String,boolean,ohos.agp.components.webengine.JsMessageResult)>
<javax.lang.model.util.Elements: javax.lang.model.element.PackageElement getPackageOf(javax.lang.model.element.Element)>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: java.lang.String getExpandedTitle()>
<java.nio.file.DirectoryIteratorException: java.lang.Throwable getCause()>
<ohos.aafwk.ability.DataAbilityOperation: boolean isInterruptionAllowed()>
<java.sql.ResultSet: java.sql.NClob getNClob(java.lang.String)>
<java.lang.SecurityManager: void checkConnect(java.lang.String,int,java.lang.Object)>
<ohos.agp.components.webengine.WebView: java.lang.String getTitle()>
<java.util.zip.ZipOutputStream: void closeEntry()>
<ohos.agp.utils.Matrix: float get(int)>
<ohos.agp.components.TimePicker: void setSelectedTextFont(ohos.agp.text.Font)>
<ohos.miscservices.wallpaper.WallpaperController: ohos.agp.components.element.Element getElement()>
<ohos.utils.Pair: int hashCode()>
<java.util.ArrayList: boolean isEmpty()>
<ohos.agp.render.opengl.GLES1X: void glFogxv(int,int[])>
<ohos.agp.render.render3d.math.Matrix4x4: void makeTranslation(ohos.agp.render.render3d.math.Vector3)>
<java.util.ArrayList: void <init>(int)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle arrayElementSetter(java.lang.Class)>
<ohos.media.photokit.support.AlbumListInfo: java.lang.String getDateModified()>
<ohos.global.resource.solidxml.TypedAttribute: java.lang.String getStringValue()>
<ohos.hiviewdfx.Debug: void dumpHeapFile(java.lang.String)>
<java.io.FilterReader: void mark(int)>
<java.nio.file.spi.FileSystemProvider: java.nio.channels.FileChannel newFileChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>
<ohos.miscservices.inputmethod.EditorAttribute: boolean unmarshalling(ohos.utils.Parcel)>
<java.security.cert.X509CRL: boolean equals(java.lang.Object)>
<java.security.DigestException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.media.audio.AudioCapturer: int getChannelCount()>
<ohos.agp.render.Paint: float getAngle()>
<javax.sql.RowSet: java.lang.String getDataSourceName()>
<ohos.eventhandler.EventHandler: void sendSyncEvent(int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notIn(java.lang.String,float[])>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates in(java.lang.String,int[])>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.io.BufferedInputStream: long skip(long)>
<ohos.agp.components.StackLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<javax.lang.model.util.AbstractTypeVisitor7: java.lang.Object visitUnion(javax.lang.model.type.UnionType,java.lang.Object)>
<javax.tools.FileObject: java.io.OutputStream openOutputStream()>
<java.nio.file.Files: java.util.stream.Stream find(java.nio.file.Path,int,java.util.function.BiPredicate,java.nio.file.FileVisitOption[])>
<ohos.agp.render.render3d.util.BoundingBox: ohos.agp.render.render3d.math.Vector3 getAabbMin()>
<ohos.bluetooth.ble.BleScanFilter: java.lang.String getPeripheralName()>
<ohos.aafwk.ability.fraction.FractionScheduler: int submit()>
<java.lang.reflect.Array: void setChar(java.lang.Object,int,char)>
<java.io.ObjectInputStream: void <init>()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<java.sql.ResultSet: double getDouble(int)>
<ohos.agp.render.PathMeasure: void <init>(ohos.agp.render.Path,boolean)>
<ohos.global.icu.text.LocaleDisplayNames: java.lang.String localeDisplayName(java.util.Locale)>
<ohos.agp.components.Component: void setComponentPosition(ohos.agp.utils.Rect)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenCompose(java.util.function.Function)>
<java.io.File: java.lang.String toString()>
<java.time.LocalDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.sysappcomponents.contact.entity.PostalAddress: java.lang.String getPobox()>
<ohos.ai.asr.AsrListener: void onAudioStart()>
<ohos.media.sessioncore.AVController.PlayControls: void prepareToPlayBySearch(java.lang.String,ohos.utils.PacMap)>
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.security.spec.RSAOtherPrimeInfo[] getOtherPrimeInfo()>
<java.lang.Integer: long longValue()>
<ohos.global.icu.number.FormattedNumber: java.lang.Appendable appendTo(java.lang.Appendable)>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>
<java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
<ohos.agp.components.element.Element: int getMinHeight()>
<ohos.agp.animation.Animator: int getCurveType()>
<java.security.cert.X509CRL: int hashCode()>
<java.util.concurrent.Phaser: java.lang.String toString()>
<ohos.sysappcomponents.calendar.support.TableSupport: void initColumnMap()>
<java.lang.Thread: boolean holdsLock(java.lang.Object)>
<ohos.media.common.StorageProperty.Builder: ohos.media.common.StorageProperty.Builder setRecorderPath(java.lang.String)>
<java.sql.SQLTimeoutException: void <init>(java.lang.String)>
<ohos.aafwk.ability.Ability: void setUIContent(int)>
<java.time.chrono.ChronoLocalDate: boolean isAfter(java.time.chrono.ChronoLocalDate)>
<java.util.prefs.AbstractPreferences: java.util.prefs.AbstractPreferences childSpi(java.lang.String)>
<ohos.data.distributed.common.Value: float getFloat()>
<ohos.utils.HalfFloat: java.lang.String toString()>
<java.lang.Byte: int compareTo(java.lang.Byte)>
<ohos.agp.components.Switch: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.nio.file.FileSystemException: java.lang.String getReason()>
<ohos.global.icu.text.Bidi: void setPara(java.lang.String,byte,byte[])>
<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,java.nio.file.OpenOption[])>
<ohos.agp.components.ComponentProvider.Action: java.lang.String getActionKey()>
<java.time.zone.ZoneOffsetTransitionRule: java.lang.String toString()>
<ohos.net.NetManager: ohos.net.ConnectionProperties getConnectionProperties(ohos.net.NetHandle)>
<java.util.prefs.Preferences: double getDouble(java.lang.String,double)>
<ohos.data.resultset.CombinedResultSet: void close()>
<ohos.agp.render.ColorMatrix: void modify(float[])>
<ohos.wifi.p2p.WifiP2pNetworkInfo: ohos.wifi.WifiLinkedInfo.ConnState getConnState()>
<java.lang.StringIndexOutOfBoundsException: void <init>(int)>
<java.util.Spliterator.OfLong: java.util.Spliterator trySplit()>
<ohos.agp.window.service.ComponentPadding: ohos.agp.utils.Rect getNotSettableGestureRect()>
<java.net.Socket: boolean isOutputShutdown()>
<java.io.ObjectStreamException: void <init>()>
<ohos.agp.colors.RgbColor: void setBlue(int)>
<java.sql.Connection: java.util.Map getTypeMap()>
<java.time.chrono.IsoChronology: java.time.ZonedDateTime zonedDateTime(java.time.Instant,java.time.ZoneId)>
<ohos.ai.cv.sr.SisrConfiguration: void setScale()>
<java.time.chrono.Chronology: java.lang.String getCalendarType()>
<java.lang.invoke.LambdaConversionException: void <init>(java.lang.String,java.lang.Throwable)>
<java.net.DatagramSocket: void setBroadcast(boolean)>
<ohos.data.search.schema.Schema: java.lang.Long getDateCreate()>
<java.lang.Long: int signum(long)>
<ohos.agp.components.ScrollView.ReboundEffectParams: void setOverscrollPercent(int)>
<ohos.agp.components.element.ElementScatter: ohos.agp.components.element.Element parse(int)>
<ohos.global.icu.util.HebrewCalendar: int handleGetYearLength(int)>
<ohos.agp.render.Path: boolean isValid()>
<java.io.BufferedOutputStream: void write(int)>
<java.security.AlgorithmParametersSpi: void engineInit(java.security.spec.AlgorithmParameterSpec)>
<ohos.agp.components.ProgressBar: void setInfiniteModeElement(ohos.agp.components.element.Element)>
<ohos.net.NetManager: ohos.net.NetHandle[] getAllNets()>
<java.util.concurrent.ForkJoinTask: boolean isCancelled()>
<java.time.YearMonth: java.time.YearMonth now(java.time.Clock)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query lessThanOrEqualTo(java.lang.String,double)>
<java.util.regex.Matcher: boolean requireEnd()>
<ohos.accessibility.ability.DisplayResizeListener: void onDisplayResizeChanged(ohos.accessibility.ability.DisplayResizeController,ohos.agp.utils.Rect,float,float,float)>
<ohos.bluetooth.ble.BlePeripheralManager: void cancelConnection(ohos.bluetooth.ble.BlePeripheralDevice)>
<java.io.FilterInputStream: void reset()>
<java.util.LongSummaryStatistics: void <init>()>
<java.text.AttributedString: void <init>(java.lang.String,java.util.Map)>
<ohos.agp.components.element.StateElement: ohos.agp.components.element.Element getStateElement(int)>
<ohos.bundle.BackupBundleInfo: java.lang.String toString()>
<ohos.data.orm.Blob: int setBytes(long,byte[],int,int)>
<ohos.javax.xml.stream.XMLEventReader: ohos.javax.xml.stream.events.XMLEvent peek()>
<javax.crypto.spec.RC5ParameterSpec: void <init>(int,int,int,byte[],int)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,int)>
<java.text.StringCharacterIterator: char last()>
<java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()>
<java.util.IllegalFormatWidthException: int getWidth()>
<ohos.org.xml.sax.Attributes: java.lang.String getValue(int)>
<ohos.utils.geo.Rect: float getPreciseVerticalCenter()>
<java.time.LocalDateTime: int getDayOfYear()>
<java.time.MonthDay: int get(java.time.temporal.TemporalField)>
<ohos.aafwk.ability.Form: void <clinit>()>
<ohos.agp.render.render3d.gltf.GltfLoader: ohos.agp.render.render3d.Task importGltfAsync(ohos.agp.render.render3d.gltf.GltfData,int,ohos.agp.render.render3d.gltf.GltfLoader.ImportListener)>
<ohos.agp.components.ListContainer: void setReboundEffectParams(ohos.agp.components.ListContainer.ReboundEffectParams)>
<ohos.accessibility.ability.AccessibilityInfo: java.lang.String getComponentResourceId()>
<ohos.data.rdb.StoreConfig: ohos.data.rdb.StoreConfig newMemoryConfig()>
<ohos.media.common.AVMetadata.Builder: void <init>()>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat copy(float)>
<ohos.data.search.model.Recommendation: void <init>(java.lang.String,java.lang.String,java.util.List,long)>
<ohos.nfc.tag.NfcFTag: byte[] getSystemCode()>
<ohos.bluetooth.ble.BleCentralManager: void <init>(ohos.app.Context,ohos.bluetooth.ble.BleCentralManagerCallback)>
<ohos.utils.LightweightSet: int indexOf(java.lang.Object)>
<ohos.data.usage.MountState: void <clinit>()>
<ohos.agp.components.ListContainer: void addComponent(ohos.agp.components.Component)>
<ohos.data.distributed.common.Entry: void <init>(java.lang.String,ohos.data.distributed.common.Value)>
<ohos.agp.render.PdfDisplay.Page: int getHeight()>
<ohos.agp.render.PixelMapShader: void <init>(ohos.agp.render.PixelMapHolder,ohos.agp.render.Shader.TileMode,ohos.agp.render.Shader.TileMode)>
<java.time.MonthDay: int getDayOfMonth()>
<java.sql.ResultSet: void updateShort(java.lang.String,short)>
<ohos.agp.render.render3d.Engine: void requestRender()>
<ohos.storageinfomgr.StorageInfo: void <clinit>()>
<ohos.global.icu.text.AlphabeticIndex.ImmutableIndex: ohos.global.icu.text.AlphabeticIndex.Bucket getBucket(int)>
<ohos.global.icu.text.RuleBasedCollator: int getVariableTop()>
<java.util.concurrent.DelayQueue: boolean remove(java.lang.Object)>
<java.lang.Integer: int bitCount(int)>
<javax.crypto.spec.SecretKeySpec: java.lang.String getFormat()>
<ohos.data.distributed.common.Schema: java.lang.String getVersion()>
<ohos.event.notification.ReminderHelper: java.util.List getValidReminders()>
<java.io.FileInputStream: int read(byte[])>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates in(java.lang.String,java.util.Date[])>
<java.io.File: boolean exists()>
<ohos.agp.render.Paint: void setBlurDrawLooper(ohos.agp.render.BlurDrawLooper)>
<ohos.sysappcomponents.calendar.entity.Events: void setTitle(java.lang.String)>
<ohos.event.commonevent.MatchingSkills: void <init>()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query notEqualTo(java.lang.String,int)>
<ohos.rpc.RemoteObjectCallbackList: boolean register(ohos.rpc.IRemoteBroker)>
<ohos.agp.components.TimePicker: void setAmPmStrings(java.lang.String,java.lang.String)>
<ohos.global.icu.util.TimeUnit: ohos.global.icu.util.TimeUnit[] values()>
<ohos.global.icu.text.SimpleDateFormat: java.lang.Object clone()>
<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>
<java.time.format.DateTimeFormatterBuilder: void <init>()>
<java.time.chrono.JapaneseEra: java.time.chrono.JapaneseEra[] values()>
<java.security.KeyStore.PasswordProtection: void <init>(char[])>
<java.util.stream.StreamSupport: java.util.stream.LongStream longStream(java.util.function.Supplier,int,boolean)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.util.TimeZone getTimeZone()>
<ohos.global.icu.text.StringSearch: int handleNext(int)>
<ohos.agp.components.PageSlider: void setReboundEffectParams(ohos.agp.components.PageSlider.ReboundEffectParams)>
<java.util.stream.DoubleStream: java.util.OptionalDouble max()>
<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateInstance(int,java.util.Locale)>
<ohos.telephony.RadioInfoManager: int getPsRadioTech(int)>
<java.security.cert.CertSelector: boolean match(java.security.cert.Certificate)>
<javax.crypto.Cipher: void init(int,java.security.cert.Certificate)>
<ohos.agp.window.service.Window: java.util.Optional getLayoutConfig()>
<java.net.URLConnection: java.util.Map getHeaderFields()>
<ohos.usb.USBDevice: java.lang.String getDeviceName()>
<java.net.DatagramSocketImpl: void disconnect()>
<ohos.data.resultset.AbsResultSet: ohos.utils.PacMap getExtensions()>
<ohos.ace.ability.AceAbility: boolean onSaveData(ohos.aafwk.content.IntentParams)>
<java.util.GregorianCalendar: boolean isLeapYear(int)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndAdd(java.lang.Object,int)>
<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>
<java.sql.Array: int getBaseType()>
<java.time.Period: java.time.temporal.Temporal subtractFrom(java.time.temporal.Temporal)>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean weakCompareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>
<ohos.event.notification.NotificationRequest: java.lang.String getSlotId()>
<java.sql.ResultSet: java.net.URL getURL(java.lang.String)>
<ohos.sysappcomponents.settings.SystemSettings: ohos.utils.net.Uri getUri(java.lang.String)>
<java.security.spec.ECPublicKeySpec: java.security.spec.ECParameterSpec getParams()>
<java.sql.DatabaseMetaData: boolean supportsCatalogsInProcedureCalls()>
<ohos.sysappcomponents.contact.entity.PhoneNumber: void <clinit>()>
<java.util.Vector: int lastIndexOf(java.lang.Object)>
<ohos.global.icu.text.Bidi: boolean baseIsLeftToRight()>
<ohos.workscheduler.WorkInfo: boolean isRequestRepeat()>
<java.lang.ThreadGroup: int enumerate(java.lang.ThreadGroup[])>
<ohos.miscservices.inputmethod.EditorAttribute: void <init>()>
<javax.net.ssl.SSLServerSocket: void setEnabledProtocols(java.lang.String[])>
<ohos.media.tubecore.AVTube: java.lang.String toString()>
<java.lang.AbstractMethodError: void <init>(java.lang.String)>
<java.net.DatagramSocket: boolean isClosed()>
<ohos.javax.xml.stream.events.Attribute: ohos.javax.xml.namespace.QName getName()>
<java.util.concurrent.ConcurrentNavigableMap: java.util.concurrent.ConcurrentNavigableMap tailMap(java.lang.Object)>
<javax.net.ssl.SSLEngine: java.lang.String[] getSupportedCipherSuites()>
<ohos.utils.PacMap: short getShortValue(java.lang.String)>
<ohos.agp.components.element.ElementContainer.ElementState: ohos.agp.components.element.Element getChildElement(int)>
<ohos.media.image.common.AllocatorType: ohos.media.image.common.AllocatorType valueOf(java.lang.String)>
<java.text.DecimalFormatSymbols: char getDigit()>
<javax.lang.model.type.MirroredTypeException: void <init>(javax.lang.model.type.TypeMirror)>
<ohos.event.notification.NotificationUserInput.Builder: ohos.event.notification.NotificationUserInput.Builder setPermitMimeTypes(java.lang.String,boolean)>
<ohos.media.audio.AudioManager: java.lang.String getAudioParameter(java.lang.String)>
<ohos.agp.components.element.Element: boolean setVisible(boolean,boolean)>
<ohos.usb.USBDevice: java.lang.String getManufacturerName()>
<java.util.NavigableMap: java.util.Map.Entry higherEntry(java.lang.Object)>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setTextSize(int)>
<java.util.concurrent.TimeUnit: long toMicros(long)>
<ohos.aafwk.ability.delegation.IAbilityMonitor: ohos.aafwk.ability.Ability waitForAbility(long)>
<ohos.net.NetHotspot: long getTxBytes()>
<java.time.LocalDate: int compareTo(java.lang.Object)>
<ohos.multimodalinput.standard.MediaEventHandle: boolean onMediaControl(ohos.multimodalinput.event.MultimodalEvent)>
<java.util.regex.Matcher: boolean matches()>
<ohos.agp.components.ProgressBar: int getProgress()>
<ohos.agp.components.ScrollHelper: int getFlingDistanceX(int)>
<java.util.Observable: boolean hasChanged()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThanOrEqualTo(java.lang.String,java.sql.Timestamp)>
<java.lang.Math: int incrementExact(int)>
<java.net.DatagramPacket: void <init>(byte[],int,int,java.net.SocketAddress)>
<ohos.global.icu.text.RuleBasedCollator: void getContractionsAndExpansions(ohos.global.icu.text.UnicodeSet,ohos.global.icu.text.UnicodeSet,boolean)>
<java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>
<ohos.data.resultset.AbsSharedResultSet: boolean isColumnNull(int)>
<ohos.aafwk.ability.continuation.ExtraParams: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale minimizeSubtags(ohos.global.icu.util.ULocale)>
<ohos.data.search.SearchAbility: int getIndexFormVersion(java.lang.String)>
<javax.net.ssl.SSLSession: byte[] getId()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notIn(java.lang.String,long[])>
<ohos.global.icu.text.DecimalFormatSymbols: void setInfinity(java.lang.String)>
<ohos.interwork.bundle.ElementNameEx: java.lang.String getBundleName()>
<ohos.event.notification.NotificationUserInput: java.lang.String getInputKey()>
<ohos.telephony.TelephoneNumberUtils: java.lang.String getCountryIsoFromDbNumber(java.lang.String)>
<ohos.media.camera.device.CameraStateCallback: void onReleased(ohos.media.camera.device.Camera)>
<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOf(java.lang.Object)>
<ohos.global.icu.text.TimeZoneFormat: int parseOffsetISO8601(java.lang.String,java.text.ParsePosition)>
<java.nio.channels.MembershipKey: java.nio.channels.MembershipKey unblock(java.net.InetAddress)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayNameWithDialect(java.lang.String,ohos.global.icu.util.ULocale)>
<ohos.agp.components.Component.ScaledListener: void onScaleEnd(ohos.agp.components.Component,ohos.agp.components.ScaleInfo)>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getTitleInstance()>
<ohos.global.icu.util.TaiwanCalendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<java.util.BitSet: int size()>
<ohos.global.icu.util.Calendar: void complete()>
<ohos.global.icu.text.UnicodeSetSpanner.CountMethod: void <clinit>()>
<java.sql.CallableStatement: java.net.URL getURL(java.lang.String)>
<ohos.data.file.FileAbility: int update(ohos.utils.net.Uri,ohos.data.rdb.ValuesBucket,ohos.data.dataability.DataAbilityPredicates)>
<java.util.Date: void <init>(int,int,int,int,int,int)>
<ohos.event.notification.NotificationRequest: long getCreateTime()>
<ohos.agp.components.PositionLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.lang.Byte: short shortValue()>
<ohos.sysappcomponents.contact.entity.Relation: void <init>(java.lang.String,java.lang.String)>
<ohos.global.icu.math.MathContext: void <init>(int,int)>
<ohos.global.icu.util.ChineseCalendar: void <init>(int,int,int,int,int,int,int,int)>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: boolean unmarshalling(ohos.utils.Parcel)>
<javax.sql.RowSet: void setConcurrency(int)>
<java.text.DecimalFormat: int hashCode()>
<ohos.net.DataFlowStatistics: long getCellularRxBytes()>
<ohos.utils.system.SystemCapability.Startup: void <init>()>
<java.net.SocketImpl: int getPort()>
<java.lang.Character.UnicodeBlock: java.lang.Character.UnicodeBlock of(char)>
<java.util.AbstractSequentialList: void <init>()>
<ohos.utils.geo.Point: int getPointYToInt()>
<java.io.Writer: java.lang.Appendable append(char)>
<ohos.agp.render.BlendMode: int value()>
<ohos.sysappcomponents.calendar.entity.Instances: void <init>()>
<ohos.net.RouteInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.utils.PacMap: ohos.utils.Sequenceable[] getSequenceableArray(java.lang.String)>
<ohos.data.distributed.device.DeviceKvStore: void removeDeviceData(java.lang.String)>
<java.nio.file.Path: java.nio.file.Path getRoot()>
<ohos.media.camera.CameraKit: void setFlashlight(java.lang.String,boolean)>
<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal,java.math.MathContext)>
<java.lang.Float: int hashCode()>
<javax.net.ssl.SSLEngine: void beginHandshake()>
<ohos.agp.utils.Matrix: boolean setConcat(ohos.agp.utils.Matrix,ohos.agp.utils.Matrix)>
<ohos.data.preferences.Preferences: boolean flushSync()>
<java.io.PrintStream: void println()>
<ohos.agp.components.Picker: void setNormalTextFont(ohos.agp.text.Font)>
<ohos.agp.components.Text: int length()>
<ohos.bundle.ElementName: ohos.bundle.ElementName unflattenFromString(java.lang.String)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>
<ohos.utils.Parcel: void writeSerializable(java.io.Serializable)>
<java.util.WeakHashMap: void clear()>
<ohos.agp.components.Picker: int getSelectedTextSize()>
<ohos.bluetooth.ProfileBase: java.util.List getDevicesByStates(int[])>
<java.security.CodeSigner: java.lang.String toString()>
<ohos.agp.components.Component: void setCentralScrollMode(boolean)>
<ohos.security.keystore.KeyStoreKeySpec: int getSecKeySizeInBits()>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.NumberFormat getNumberFormat()>
<ohos.utils.BasePacMap: short getShortValue(java.lang.String)>
<ohos.global.icu.util.Output: void <init>()>
<ohos.global.icu.text.Edits: int lengthDelta()>
<java.lang.Long: java.lang.String toBinaryString(long)>
<ohos.telephony.CellularDataStateObserver: void <init>(int,ohos.eventhandler.EventRunner)>
<ohos.agp.components.LayoutScatter: ohos.agp.components.LayoutScatter.Picker getPicker()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet remove(java.lang.CharSequence)>
<java.text.AttributedCharacterIterator: java.util.Set getAllAttributeKeys()>
<ohos.agp.render.opengl.GLES30: void glVertexAttribI4uiv(int,int[])>
<java.util.prefs.AbstractPreferences: byte[] getByteArray(java.lang.String,byte[])>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getPITarget()>
<ohos.event.notification.NotificationActionButton: boolean isContextDependent()>
<java.util.Deque: java.lang.Object element()>
<ohos.utils.HalfFloat: float floatValue()>
<java.lang.reflect.GenericSignatureFormatError: void <init>(java.lang.String)>
<ohos.agp.components.Component: void setPadding(int,int,int,int)>
<ohos.data.search.schema.AppItem: java.lang.Integer getSize()>
<javax.crypto.CipherInputStream: long skip(long)>
<ohos.agp.components.Image: ohos.agp.components.element.Element getImageElement()>
<ohos.agp.render.opengl.GLES32: void glBlendEquationi(int,int)>
<ohos.data.preferences.Preferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>
<java.lang.Float: int compareTo(java.lang.Object)>
<ohos.agp.components.Component: void setPosition(int,int)>
<ohos.media.audio.GainControlEffect: ohos.media.audio.GainControlEffect create(int,java.lang.String)>
<java.security.acl.Owner: boolean deleteOwner(java.security.Principal,java.security.Principal)>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.resources.MaterialDesc.MaterialAlphaMode getAlphaMode()>
<ohos.agp.components.Text: void <init>(ohos.app.Context)>
<ohos.media.image.ExifUtils: void <init>()>
<java.sql.DatabaseMetaData: int getMaxColumnsInIndex()>
<ohos.utils.IntArray: void setAt(int,int)>
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLEngine engineCreateSSLEngine(java.lang.String,int)>
<ohos.aafwk.content.Intent: void <init>()>
<java.time.ZonedDateTime: java.time.chrono.ChronoZonedDateTime minus(long,java.time.temporal.TemporalUnit)>
<java.security.cert.PKIXParameters: java.util.Set getTrustAnchors()>
<ohos.data.orm.Clob: void free()>
<java.sql.PreparedStatement: void setClob(int,java.io.Reader,long)>
<java.text.ChoiceFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
<ohos.net.http.SslError: boolean addError(int)>
<ohos.account.AccountAbility: boolean isOsAccountActive(int)>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitUnknown(javax.lang.model.type.TypeMirror,java.lang.Object)>
<ohos.data.rdb.TransactionObserver: void onRollback()>
<java.io.IOException: void <init>(java.lang.Throwable)>
<ohos.global.icu.lang.UCharacter: int charCount(int)>
<ohos.sensor.agent.CategoryOrientationAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,long,long)>
<ohos.accessibility.ability.AccessibilityInfo: java.lang.CharSequence getDescriptionInfo()>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofLocalizedTime(java.time.format.FormatStyle)>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.utils.Rect getBoundRect()>
<java.security.acl.AclEntry: boolean removePermission(java.security.acl.Permission)>
<java.time.ZonedDateTime: java.time.LocalDateTime toLocalDateTime()>
<ohos.agp.components.MagicLayout: void <init>(ohos.app.Context)>
<java.lang.Character: boolean isAlphabetic(int)>
<ohos.aafwk.ability.DataAbilityOperation: void <clinit>()>
<java.security.Security: int insertProviderAt(java.security.Provider,int)>
<java.sql.SQLInput: java.sql.Array readArray()>
<java.io.Writer: void write(int)>
<ohos.agp.render.Path: void addRect(ohos.agp.utils.RectFloat,ohos.agp.render.Path.Direction,int)>
<java.util.Calendar: int getGreatestMinimum(int)>
<ohos.agp.window.dialog.CommonDialog: void setMovable(boolean)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles.Lookup publicLookup()>
<ohos.ai.cv.docrefine.DocCoordinates: void setTopLeft(ohos.ai.cv.common.CvPoint)>
<java.io.FilterOutputStream: void flush()>
<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>
<ohos.event.notification.NotificationRequest: java.util.List getMessageUsers()>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<java.util.MissingFormatArgumentException: java.lang.String getFormatSpecifier()>
<java.util.Locale.LanguageRange: int hashCode()>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat increaseAll(int)>
<java.security.Security: void removeProvider(java.lang.String)>
<ohos.event.notification.NotificationSlot: java.lang.String getDescription()>
<java.sql.SQLInput: long readLong()>
<java.lang.SecurityManager: void checkPermission(java.security.Permission,java.lang.Object)>
<ohos.agp.utils.Contour: void <init>()>
<ohos.security.keystore.KeyGenAlgorithmParaSpec: java.security.spec.AlgorithmParameterSpec getSecKeyAlgorithmParameterSpec()>
<ohos.miscservices.screenlock.ScreenLockController: boolean isSecureMode()>
<ohos.global.icu.math.BigDecimal: void <init>(char[],int,int)>
<ohos.agp.components.Component: int[] getVerticalPadding()>
<java.util.stream.LongStream: java.util.Spliterator.OfLong spliterator()>
<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal abs()>
<java.nio.file.Path: boolean isAbsolute()>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: ohos.event.notification.NotificationRequest.NotificationMediaContent setAVToken(ohos.media.common.sessioncore.AVToken)>
<java.util.logging.SocketHandler: void close()>
<ohos.global.icu.text.PluralRules: ohos.global.icu.text.PluralRules forLocale(ohos.global.icu.util.ULocale,ohos.global.icu.text.PluralRules.PluralType)>
<ohos.media.photokit.support.AlbumList: void <init>(ohos.data.resultset.ResultSet)>
<java.io.ObjectOutputStream.PutField: void put(java.lang.String,boolean)>
<ohos.usb.USBCore: java.lang.String usbFunctionsToString(long)>
<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>
<ohos.aafwk.content.Intent: int getIntParam(java.lang.String,int)>
<ohos.agp.window.service.WindowManager.PermissionException: void <init>(java.lang.String)>
<java.time.OffsetTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.security.interfaces.RSAMultiPrimePrivateCrtKey: java.security.spec.RSAOtherPrimeInfo[] getOtherPrimeInfo()>
<java.util.LinkedList: java.util.Iterator descendingIterator()>
<ohos.agp.render.opengl.GLES30: void glDrawArraysInstanced(int,int,int,int)>
<javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom)>
<ohos.nfc.tag.MessageRecord: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.Clock: java.time.Clock offset(java.time.Clock,java.time.Duration)>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: ohos.event.notification.NotificationRequest.NotificationLongTextContent setLongText(java.lang.String)>
<ohos.eventhandler.EventHandler: void sendEvent(ohos.eventhandler.InnerEvent,long)>
<ohos.agp.components.Component.DraggedListener: void onDragUpdate(ohos.agp.components.Component,ohos.agp.components.DragInfo)>
<java.time.format.DecimalStyle: char getDecimalSeparator()>
<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>
<ohos.sysappcomponents.calendar.entity.Events: void setEndTimezone(java.lang.String)>
<java.util.Comparator: java.util.Comparator comparingDouble(java.util.function.ToDoubleFunction)>
<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,int[])>
<java.time.chrono.ChronoLocalDate: java.util.Comparator timeLineOrder()>
<ohos.agp.window.service.Window: void setMovable(boolean)>
<java.security.Provider: double getVersion()>
<java.text.CharacterIterator: char last()>
<ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime: java.lang.String toString()>
<ohos.agp.render.render3d.components.SceneComponent: float getEnvironmentSpecularIntensity()>
<ohos.utils.HalfFloat: ohos.utils.HalfFloat valueOf(short)>
<ohos.agp.components.element.StateElement: void addState(int[],ohos.agp.components.element.Element)>
<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>
<ohos.aafwk.ability.FormException: ohos.aafwk.ability.FormException.FormError getErrorCode()>
<ohos.nfc.oma.Aid: void <init>(byte[],int,int)>
<ohos.agp.components.PageSlider.ReboundEffectParams: int getRemainVisiblePercent()>
<ohos.telephony.RadioStateObserver: void onNetworkStateUpdated(ohos.telephony.NetworkState)>
<java.text.DecimalFormatSymbols: char getMinusSign()>
<ohos.data.distributed.file.DistFiles: boolean delete(java.lang.String)>
<ohos.event.notification.ReminderRequest: int hashCode()>
<java.sql.DatabaseMetaData: int getMaxSchemaNameLength()>
<ohos.ai.cv.common.CvRect: boolean equals(java.lang.Object)>
<ohos.global.resource.solidxml.Node: java.lang.String getName()>
<java.util.prefs.AbstractPreferences: java.lang.String[] childrenNamesSpi()>
<ohos.sysappcomponents.contact.entity.Name: java.lang.String getFamilyName()>
<java.util.function.IntPredicate: java.util.function.IntPredicate and(java.util.function.IntPredicate)>
<ohos.telephony.LteSignalInformation: int hashCode()>
<ohos.utils.net.Uri: ohos.utils.net.Uri getLowerCaseScheme()>
<java.lang.Integer: java.lang.String toString()>
<ohos.system.OsHelper: void allocSpaceForFile(java.io.FileDescriptor,long,long)>
<ohos.agp.components.Switch: void setThumbVerticalPadding(int)>
<java.sql.SQLWarning: void <init>(java.lang.Throwable)>
<ohos.agp.render.opengl.GLES32: void glDrawElementsBaseVertex(int,int,int,java.nio.Buffer,int)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateInstance(int,ohos.global.icu.util.ULocale)>
<java.sql.ClientInfoStatus: java.sql.ClientInfoStatus[] values()>
<ohos.aafwk.ability.RunningProcessInfo: java.lang.String[] getPkgList()>
<ohos.event.notification.ReminderRequest: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.render.opengl.GLES20: void glStencilFuncSeparate(int,int,int,int)>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: ohos.event.notification.NotificationRequest.NotificationMediaContent setText(java.lang.String)>
<ohos.agp.animation.AnimatorValue: void setValueUpdateListener(ohos.agp.animation.AnimatorValue.ValueUpdateListener)>
<ohos.org.xml.sax.HandlerBase: void ignorableWhitespace(char[],int,int)>
<java.lang.Character: boolean isSurrogatePair(char,char)>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate dateYearDay(int,int)>
<java.time.chrono.IsoChronology: java.time.LocalDate dateNow(java.time.Clock)>
<java.util.stream.IntStream: java.util.stream.LongStream asLongStream()>
<javax.sql.RowSetMetaData: void setColumnTypeName(int,java.lang.String)>
<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getCrtCoefficient()>
<ohos.agp.window.dialog.PopupDialog: void setArrowSize(int,int)>
<ohos.eventhandler.EventRunner: void setLogger(ohos.eventhandler.Logger)>
<java.util.concurrent.Phaser: int getArrivedParties()>
<java.io.FilterReader: boolean markSupported()>
<ark.system.ClassLoaderCreator: java.lang.ClassLoader createClassLoader(java.lang.String,java.lang.ClassLoader)>
<ohos.data.distributed.common.Entry: void setValue(ohos.data.distributed.common.Value)>
<java.sql.SQLOutput: void writeBinaryStream(java.io.InputStream)>
<java.util.Calendar: int getMinimum(int)>
<ohos.aafwk.ability.DataAbilityHelper: ohos.utils.net.Uri denormalizeUri(ohos.utils.net.Uri)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.util.Calendar getCalendar()>
<javax.crypto.spec.DHGenParameterSpec: int getPrimeSize()>
<javax.net.ssl.SSLSocket: java.lang.String[] getEnabledProtocols()>
<java.sql.ResultSet: boolean next()>
<java.io.RandomAccessFile: int readUnsignedShort()>
<ohos.telephony.TelephoneNumberUtils: boolean isDialableKey(char)>
<java.time.chrono.Era: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>
<java.time.chrono.HijrahDate: boolean isLeapYear()>
<ohos.agp.components.TimePicker: int getSecond()>
<ohos.bundle.BundleInfo: ohos.bundle.ApplicationInfo getAppInfo()>
<javax.sql.RowSet: void setTime(int,java.sql.Time)>
<ohos.security.keystore.KeyStoreProtectionParameter.Builder: void <init>(int)>
<ohos.media.image.ImageReceiver: ohos.media.image.ImageReceiver create(int,int,int,int)>
<ohos.agp.window.service.Window: void <init>()>
<ohos.net.NetSpecifier.Builder: ohos.net.NetSpecifier.Builder setBearerPrivateIdentifier(java.lang.String)>
<ohos.agp.components.ComponentProvider: int getLayoutId()>
<java.util.concurrent.CopyOnWriteArrayList: java.util.List subList(int,int)>
<ohos.event.commonevent.CommonEventData: void <clinit>()>
<java.util.TreeMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>
<java.util.concurrent.CompletionService: java.util.concurrent.Future poll(long,java.util.concurrent.TimeUnit)>
<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>
<javax.lang.model.util.AbstractTypeVisitor6: void <init>()>
<ohos.agp.render.Path: void rQuadTo(float,float,float,float)>
<ohos.agp.utils.Matrix44: boolean isTranslate()>
<ohos.global.icu.text.MessagePattern: boolean hasNamedArguments()>
<ohos.global.icu.math.BigDecimal: long longValueExact()>
<java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)>
<ohos.aafwk.ability.fraction.Fraction: void onStop()>
<java.io.FilterWriter: void <init>(java.io.Writer)>
<java.nio.ShortBuffer: java.nio.ShortBuffer put(short[],int,int)>
<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>
<ohos.agp.render.PdfGenerator.PageInfo: ohos.agp.utils.Rect getRect()>
<ohos.global.icu.text.ListFormatter: ohos.global.icu.text.ListFormatter getInstance(ohos.global.icu.util.ULocale)>
<ohos.global.icu.text.StringPrepParseException: int hashCode()>
<ohos.global.icu.text.TimeZoneFormat.ParseOption: ohos.global.icu.text.TimeZoneFormat.ParseOption[] values()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: ohos.event.notification.NotificationRequest.NotificationMediaContent setShownActions(int[])>
<ohos.miscservices.inputmethod.EditorAttribute: int getInputPattern()>
<java.util.zip.DataFormatException: void <init>(java.lang.String)>
<java.nio.channels.AsynchronousFileChannel: java.nio.channels.FileLock tryLock()>
<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>
<java.util.Vector: java.util.ListIterator listIterator()>
<java.util.concurrent.ConcurrentSkipListSet: void <init>(java.util.Collection)>
<ohos.global.icu.util.IndianCalendar: void <init>(java.util.Date)>
<java.sql.SQLFeatureNotSupportedException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<ohos.agp.render.render3d.resources.ResourceManager: void copyDataToImage(ohos.agp.render.render3d.resources.GpuResourceHandle,java.nio.ByteBuffer,int,int)>
<ohos.global.icu.lang.UScript: java.lang.String getSampleString(int)>
<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>
<ohos.global.icu.util.Calendar: ohos.global.icu.util.Calendar.WeekData getWeekDataForRegion(java.lang.String)>
<java.nio.CharBuffer: java.lang.String toString()>
<java.text.DecimalFormatSymbols: char getDecimalSeparator()>
<ohos.agp.utils.Matrix44: float get(int,int)>
<ohos.media.audio.AudioInterrupt: void <init>()>
<java.util.BitSet: int nextSetBit(int)>
<ohos.media.audio.AudioRendererInfo.Builder: ohos.media.audio.AudioRendererInfo.Builder deviceId(int)>
<java.lang.System: java.lang.String getenv(java.lang.String)>
<ohos.media.audio.AudioDeviceDescriptor: java.util.List getEncodings()>
<ohos.app.Context: ohos.app.dispatcher.TaskDispatcher getMainTaskDispatcher()>
<java.util.concurrent.Phaser: int awaitAdvance(int)>
<ohos.agp.window.dialog.BaseDialog: ohos.agp.window.dialog.BaseDialog setCornerRadius(float)>
<ohos.global.icu.text.StringSearch: void setCanonical(boolean)>
<java.sql.ResultSetMetaData: int getScale(int)>
<ohos.sysappcomponents.calendar.CalendarDataHelper: ohos.sysappcomponents.calendar.CalendarCollection query(int,java.lang.String[])>
<java.math.MathContext: int hashCode()>
<ohos.bluetooth.ble.BleAdvertiser: void startAdvertising(ohos.bluetooth.ble.BleAdvertiseSettings,ohos.bluetooth.ble.BleAdvertiseData,ohos.bluetooth.ble.BleAdvertiseData)>
<java.util.BitSet: int previousClearBit(int)>
<ohos.sensor.agent.CategoryBodyAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int)>
<ohos.global.icu.text.TimeZoneNames: java.lang.String getMetaZoneID(java.lang.String,long)>
<ohos.global.i18n.LocaleHelperUtils: java.lang.String getCityName(java.lang.String,java.util.Locale)>
<ohos.media.common.sessioncore.AVPlaybackState: float getAVPlaybackSpeed()>
<ohos.miscservices.inputmethod.EditingText: void setFlags(int)>
<ohos.aafwk.ability.Ability: void shutdown()>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitPrimitiveAsByte(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<ohos.miscservices.screenlock.interfaces.UnlockScreenCallback: void onUnlockFailed()>
<ohos.utils.Parcel: float[] readFloatArray()>
<ohos.accessibility.ability.DisplayResizeController: void addListener(ohos.accessibility.ability.DisplayResizeListener)>
<java.util.stream.Collectors: java.util.stream.Collector counting()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setShortcutId(java.lang.String)>
<ohos.agp.components.TabList: void setTabLength(int)>
<ohos.agp.window.service.DisplayManager: ohos.agp.window.service.DisplayManager getInstance()>
<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,java.lang.String)>
<java.time.Year: boolean isLeap(long)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object reduceKeys(long,java.util.function.BiFunction)>
<java.util.concurrent.ConcurrentLinkedDeque: int size()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query equalTo(java.lang.String,boolean)>
<java.text.DecimalFormat: void setMaximumIntegerDigits(int)>
<ohos.agp.components.Component.EstimateSpec: int getSize(int)>
<ohos.rpc.RemoteObject: void slowPathDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<ohos.agp.render.opengl.EGLDisplay: boolean equals(java.lang.Object)>
<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>
<ohos.agp.components.Component: boolean getScrollbarRoundRect()>
<ohos.org.xml.sax.XMLReader: void setErrorHandler(ohos.org.xml.sax.ErrorHandler)>
<java.nio.channels.SelectionKey: java.nio.channels.Selector selector()>
<java.nio.channels.Selector: void close()>
<java.util.concurrent.ExecutorService: boolean isShutdown()>
<javax.lang.model.util.AbstractAnnotationValueVisitor8: void <init>()>
<ohos.wifi.WifiLinkedInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.utils.Parcel: boolean setCapacity(int)>
<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>
<java.lang.Compiler: java.lang.Object command(java.lang.Object)>
<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
<ohos.media.image.PixelMap: void setBaseDensity(int)>
<java.security.SignatureSpi: void engineUpdate(java.nio.ByteBuffer)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThan(java.lang.String,long)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,int)>
<ohos.agp.render.render3d.RenderLoop.FrameListener: void onFrameBegin(ohos.agp.render.render3d.Engine.Time)>
<ohos.agp.text.RichText: void setLeadingMargin(int,int)>
<ohos.agp.components.IndexBar: void setMinCount(int)>
<ohos.agp.render.opengl.GLES32: void glBlendEquationSeparatei(int,int,int)>
<java.nio.file.attribute.AclFileAttributeView: java.util.List getAcl()>
<ohos.agp.components.webengine.WebAgent: void onLoadingContent(ohos.agp.components.webengine.WebView,java.lang.String)>
<ohos.agp.render.Canvas: void drawRect(ohos.agp.utils.RectFloat,ohos.agp.render.Paint)>
<java.lang.NoSuchMethodError: void <init>(java.lang.String)>
<java.security.spec.InvalidParameterSpecException: void <init>()>
<ohos.agp.render.opengl.GLES2Ext: void glDebugMessageInsertKHR(int,int,int,int,int,java.lang.String)>
<java.io.File: java.io.File[] listFiles()>
<java.sql.SQLNonTransientException: void <init>(java.lang.String,java.lang.String,int)>
<ohos.agp.render.Canvas: boolean getDeviceClipBounds(ohos.agp.utils.Rect)>
<ohos.agp.render.opengl.GLES30: boolean glIsSampler(int)>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<ohos.agp.render.opengl.GLES30: void glBindTransformFeedback(int,int)>
<java.util.concurrent.ThreadLocalRandom: double nextGaussian()>
<java.util.concurrent.ConcurrentHashMap: int reduceKeysToInt(long,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator)>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)>
<ohos.agp.components.webengine.WebConfig: void setUserAgent(java.lang.String)>
<ohos.sysappcomponents.contact.entity.PostalAddress: java.lang.String getRegion()>
<ohos.net.NetCapabilities: boolean hasCap(int)>
<java.io.ObjectInputStream: java.lang.Object readObjectOverride()>
<ohos.agp.components.TabList: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.media.photokit.metadata.AVStorage.Audio: java.lang.String convertNameToKey(java.lang.String)>
<ohos.agp.graphics.TextureHolder: void abandon()>
<ohos.data.orm.OrmContext: void unregisterContextObserver(ohos.data.orm.OrmContext,ohos.data.orm.OrmObjectObserver)>
<ohos.data.distributed.common.UserType: ohos.data.distributed.common.UserType[] values()>
<java.lang.Character: int toTitleCase(int)>
<ohos.app.AbilityContext: ohos.app.IAbilityManager getAbilityManager()>
<ohos.agp.components.SlideDrawer: void addSlideDisable(ohos.agp.components.SlideDrawer.SlideDisable)>
<java.util.concurrent.atomic.AtomicStampedReference: void <init>(java.lang.Object,int)>
<ohos.media.common.AVDescription.Builder: ohos.media.common.AVDescription.Builder setDescription(java.lang.CharSequence)>
<ohos.media.camera.device.FrameConfig.Builder: int getAeMode()>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()>
<ohos.global.icu.util.TimeZone: java.lang.Object cloneAsThawed()>
<java.io.DataInputStream: java.lang.String readUTF()>
<ohos.agp.components.TimePicker.AmPmOrder: ohos.agp.components.TimePicker.AmPmOrder[] values()>
<ohos.agp.render.opengl.GLES20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notBetween(java.lang.String,long,long)>
<java.sql.SQLInput: short readShort()>
<java.sql.Clob: long position(java.lang.String,long)>
<ohos.agp.utils.Matrix44: void setScale(float)>
<ohos.app.Context: java.lang.String getCallingBundle()>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate dateNow(java.time.ZoneId)>
<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.AsynchronousServerSocketChannel bind(java.net.SocketAddress)>
<ohos.global.icu.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>
<ohos.utils.zson.ZSONArray: java.util.Iterator iterator()>
<java.text.StringCharacterIterator: void <init>(java.lang.String,int,int,int)>
<ohos.aafwk.ability.Ability.LayoutParamsHelper: ohos.aafwk.ability.Ability.LayoutParamsHelper setY(int)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<java.util.logging.Logger: void fine(java.lang.String)>
<ohos.org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,ohos.org.xml.sax.Attributes)>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitExecutable(javax.lang.model.type.ExecutableType,java.lang.Object)>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getCharacterInstance(java.util.Locale)>
<java.net.SocketPermission: boolean implies(java.security.Permission)>
<java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<ohos.javax.xml.stream.XMLStreamReader: boolean isAttributeSpecified(int)>
<java.lang.Class: java.lang.String getCanonicalName()>
<ohos.agp.components.webengine.ResourceResponse: int getStatus()>
<ohos.event.notification.NotificationSorting: void <clinit>()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayName(ohos.global.icu.util.ULocale)>
<ohos.agp.render.opengl.GLES20: void glGetActiveUniform(int,int,int,int[],int[],int[],byte[])>
<ohos.agp.utils.RectFloat: void modify(ohos.agp.utils.Rect)>
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator.Attribute[])>
<ohos.agp.render.render3d.math.Quaternion: float getY()>
<ohos.rpc.RemoteObjectCallbackList: int getRemoteObjectCallbackCount()>
<ohos.sysappcomponents.contact.entity.PhoneNumber: java.lang.String getPhoneNumber()>
<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>
<java.util.Map: void clear()>
<java.util.Currency: java.lang.String getSymbol()>
<ohos.event.commonevent.CommonEventSubscribeInfo: void <init>(ohos.event.commonevent.CommonEventSubscribeInfo)>
<ohos.sysappcomponents.calendar.entity.Events: void setEventStatus(int)>
<ohos.media.photokit.common.AVLogCompletedListener: void onLogCompleted(java.lang.String,ohos.utils.net.Uri)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void acquireSharedInterruptibly(int)>
<ohos.media.image.PixelMap: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.utils.PacMap: float getFloatValue(java.lang.String,float)>
<ohos.agp.components.Component: ohos.agp.components.ComponentHolder findComponentHolderById(int)>
<ohos.agp.transition.TransitionMove: void <init>(int)>
<ohos.agp.render.opengl.GLES1X: void glClearDepthf(float)>
<ohos.agp.render.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,float[])>
<java.util.AbstractCollection: boolean isEmpty()>
<ohos.agp.render.Paint: void <init>()>
<java.util.Map: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>
<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.AsynchronousServerSocketChannel open(java.nio.channels.AsynchronousChannelGroup)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setIntegerArrayListParam(java.lang.String,java.util.ArrayList)>
<java.util.LongSummaryStatistics: void accept(int)>
<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>
<ohos.media.common.Format: void <init>(java.util.HashMap)>
<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>
<ohos.ai.asr.AsrIntent: void setFilePath(java.lang.String)>
<java.util.zip.GZIPInputStream: void close()>
<ohos.global.icu.text.NumberFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>
<java.time.chrono.Chronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThan(java.lang.String,java.util.Date)>
<java.time.LocalDate: java.time.LocalDate now(java.time.ZoneId)>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.window.dialog.CommonDialog setTitleCustomComponent(ohos.agp.components.DirectionalLayout)>
<java.lang.Error: void <init>()>
<ohos.location.GeoConvert: java.util.List getAddressFromLocationName(java.lang.String,int)>
<java.nio.file.FileSystem: java.nio.file.spi.FileSystemProvider provider()>
<ohos.agp.components.SlideDrawer: boolean close()>
<ohos.location.Location: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.DateTimeException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.components.ListContainer: void setShaderColor(ohos.agp.utils.Color)>
<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOf(java.lang.Object,int)>
<ohos.telephony.TelephoneNumberUtils: boolean isLatinDigit(char)>
<ohos.agp.components.SlideDrawer: float getSlideDistanceRatio()>
<ohos.agp.utils.Rect: int getCenterY()>
<java.util.jar.Manifest: java.lang.Object clone()>
<java.math.BigInteger: java.lang.String toString()>
<ohos.miscservices.inputmethodability.TextInputClient: java.lang.String getForward(int)>
<ohos.bundle.HapModuleInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.event.notification.NotificationSlot: ohos.utils.net.Uri getSound()>
<ohos.agp.components.SlideDrawer: void removeAllSlideListeners()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThan(java.lang.String,float)>
<ohos.interwork.utils.PacMapEx: java.util.Optional getObjectValue(java.lang.String)>
<ohos.global.icu.text.DecimalFormat: void setCurrencyUsage(ohos.global.icu.util.Currency.CurrencyUsage)>
<java.time.LocalTime: java.time.LocalDateTime atDate(java.time.LocalDate)>
<ohos.aafwk.ability.AbilityMissionInfo: ohos.bundle.ElementName getAbilityBaseBundleName()>
<java.lang.InternalError: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.data.resultset.ResultSetWrapper: java.lang.String[] getAllColumnNames()>
<java.security.spec.ECParameterSpec: int getCofactor()>
<java.nio.Buffer: boolean isReadOnly()>
<java.lang.ThreadGroup: int getMaxPriority()>
<java.util.Collection: boolean containsAll(java.util.Collection)>
<ohos.global.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit: ohos.global.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit[] values()>
<ohos.sysappcomponents.contact.entity.Event: boolean equals(java.lang.Object)>
<ohos.global.icu.text.Normalizer2: ohos.global.icu.text.Normalizer.QuickCheckResult quickCheck(java.lang.CharSequence)>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<ohos.media.camera.params.ResultKey.Key: java.lang.String getName()>
<java.io.InvalidClassException: java.lang.String getMessage()>
<ohos.eventhandler.Courier: boolean equals(java.lang.Object)>
<ohos.utils.zson.ZSONArray: boolean remove(java.lang.Object)>
<java.nio.charset.Charset: boolean isRegistered()>
<java.sql.CallableStatement: void registerOutParameter(java.lang.String,int,int)>
<java.sql.Timestamp: void <init>(long)>
<ohos.global.icu.text.Bidi: int[] reorderLogical(byte[])>
<javax.lang.model.util.SimpleTypeVisitor7: java.lang.Object visitUnion(javax.lang.model.type.UnionType,java.lang.Object)>
<ohos.global.icu.text.UnicodeSet: boolean containsSome(ohos.global.icu.text.UnicodeSet)>
<ohos.agp.colors.RgbColor: ohos.agp.colors.RgbColor assign(ohos.agp.colors.RgbColor)>
<java.io.PipedReader: boolean ready()>
<ohos.media.audio.AudioRenderer: boolean stop()>
<javax.sql.RowSet: int getQueryTimeout()>
<javax.lang.model.util.SimpleTypeVisitor6: java.lang.Object visitNoType(javax.lang.model.type.NoType,java.lang.Object)>
<ohos.accessibility.ability.AccessibilityInfo: void setVisible(boolean)>
<ohos.sensor.agent.SensorAgent: java.util.List getAllSensors()>
<java.lang.String: void <init>(char[])>
<ohos.agp.components.AdaptiveBoxLayout.LayoutConfig: void <init>(int,int,int)>
<ohos.agp.components.TabList: void setTabMargin(int)>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndAccumulate(java.lang.Object,java.lang.Object,java.util.function.BinaryOperator)>
<ohos.utils.RationalNumber: int hashCode()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: boolean awaitUntil(java.util.Date)>
<ohos.media.camera.params.FaceLandmark: int getType()>
<java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable,java.lang.String)>
<ohos.data.orm.Clob: int setString(long,java.lang.String,int,int)>
<java.sql.DatabaseMetaData: boolean supportsGroupBy()>
<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>
<java.security.cert.CertPathValidatorSpi: java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)>
<java.lang.Double: boolean isNaN(double)>
<java.security.cert.PKIXParameters: java.security.cert.CertSelector getTargetCertConstraints()>
<java.nio.channels.AsynchronousServerSocketChannel: void <init>(java.nio.channels.spi.AsynchronousChannelProvider)>
<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>
<java.io.FileInputStream: int read()>
<ohos.ai.cv.text.TextDetectType: void <clinit>()>
<java.text.DecimalFormat: int getMultiplier()>
<ohos.bluetooth.ble.BleScanResult: int getRssi()>
<ohos.event.notification.NotificationRequest: java.lang.String getLabel()>
<java.lang.ClassLoader: java.lang.Class defineClass(byte[],int,int)>
<java.util.concurrent.ConcurrentSkipListSet: java.lang.Object clone()>
<java.sql.ResultSet: java.sql.Time getTime(int,java.util.Calendar)>
<ohos.agp.components.CornerMark: int getHeight()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThan(java.lang.String,long)>
<ohos.distributedschedule.interwork.DeviceManager: ohos.distributedschedule.interwork.DeviceInfo getDeviceInfo(java.lang.String)>
<ohos.event.notification.NotificationHelper: void addNotificationSlotGroups(java.util.List)>
<ohos.net.LinkAddress: int hashCode()>
<ohos.utils.geo.Rect: void reorder()>
<java.net.Socket: void connect(java.net.SocketAddress)>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setTextBackgroundColor(int)>
<ohos.global.icu.text.SimpleDateFormat: void <init>()>
<ohos.agp.render.opengl.GLES20: void glUniform2i(int,int,int)>
<java.security.AlgorithmParameters: void init(byte[],java.lang.String)>
<ohos.eventhandler.EventRunner: boolean run()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThanOrEqualTo(java.lang.String,java.sql.Timestamp)>
<ohos.telephony.GsmSignalInformation: boolean unmarshalling(ohos.utils.Parcel)>
<java.sql.SQLData: void readSQL(java.sql.SQLInput,java.lang.String)>
<ohos.data.distributed.user.SingleKvStore: boolean getBoolean(java.lang.String)>
<java.security.spec.ECGenParameterSpec: java.lang.String getName()>
<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,java.lang.Iterable,java.nio.file.OpenOption[])>
<ohos.bundle.ApplicationInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.org.w3c.dom.ls.LSInput: java.io.InputStream getByteStream()>
<java.nio.file.attribute.FileTime: java.lang.String toString()>
<java.sql.CallableStatement: java.sql.Ref getRef(int)>
<java.time.ZonedDateTime: java.time.ZoneId getZone()>
<ohos.system.version.SystemVersion: int getApiVersion()>
<java.sql.SQLFeatureNotSupportedException: void <init>(java.lang.Throwable)>
<ohos.miscservices.download.DownloadConfig.Builder: void <init>(ohos.app.Context,ohos.utils.net.Uri)>
<java.util.concurrent.LinkedBlockingDeque: void putLast(java.lang.Object)>
<ohos.global.icu.lang.UCharacter: int codePointCount(java.lang.CharSequence,int,int)>
<ohos.event.notification.ReminderRequest: int compareTo(java.lang.Object)>
<java.nio.file.FileSystemNotFoundException: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>
<ohos.global.icu.util.TaiwanCalendar: int handleGetExtendedYear()>
<ohos.data.search.schema.EmailItem: java.lang.String getSenderName()>
<ohos.event.notification.NotificationRequest: java.lang.String toString()>
<ohos.utils.Scope: boolean contains(ohos.utils.Scope)>
<java.nio.file.WatchEvent.Modifier: java.lang.String name()>
<java.util.concurrent.ConcurrentHashMap: void forEach(long,java.util.function.BiFunction,java.util.function.Consumer)>
<ohos.media.sessioncore.AVBrowser: void subscribeByParentMediaId(java.lang.String,ohos.utils.PacMap,ohos.media.common.sessioncore.AVSubscriptionCallback)>
<ohos.agp.render.render3d.components.CameraComponent: float getPerspectiveVerticalFov()>
<ohos.ai.asr.AsrIntent: int getAudioSourceType()>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getCurrencyInstance(ohos.global.icu.util.ULocale)>
<java.security.spec.MGF1ParameterSpec: void <clinit>()>
<ohos.ai.cv.text.TextConfiguration.Builder: ohos.ai.cv.text.TextConfiguration.Builder setRoi(ohos.ai.cv.common.CvRect)>
<ohos.accessibility.ability.AccessibleAbility: void <init>()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setAlertOneTime(boolean)>
<java.security.KeyStore: void <init>(java.security.KeyStoreSpi,java.security.Provider,java.lang.String)>
<java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>
<javax.net.ssl.SSLSession: javax.net.ssl.SSLSessionContext getSessionContext()>
<java.util.LinkedList: boolean removeFirstOccurrence(java.lang.Object)>
<ohos.utils.zson.ZSONReader: java.lang.Object read(java.lang.Class)>
<ohos.global.icu.text.DateFormat: void parse(java.lang.String,ohos.global.icu.util.Calendar,java.text.ParsePosition)>
<ohos.media.codec.Codec: java.nio.ByteBuffer getAvailableBuffer(long)>
<ohos.media.muxer.Muxer: boolean release()>
<javax.lang.model.util.Elements: boolean hides(javax.lang.model.element.Element,javax.lang.model.element.Element)>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean readDescriptor(ohos.bluetooth.ble.GattDescriptor)>
<ohos.media.sessioncore.AVController: java.lang.CharSequence getAVQueueTitle()>
<java.io.DataOutput: void writeInt(int)>
<java.time.temporal.Temporal: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<ohos.global.resource.solidxml.SolidXml: ohos.global.resource.solidxml.Node getRoot()>
<ohos.agp.components.Text: void setEditorActionListener(ohos.agp.components.Text.EditorActionListener)>
<ohos.agp.window.dialog.ToastDialog: void show()>
<java.security.ProviderException: void <init>(java.lang.Throwable)>
<java.lang.Process: java.io.OutputStream getOutputStream()>
<java.util.stream.Stream.Builder: void accept(java.lang.Object)>
<java.math.BigDecimal: java.math.BigDecimal setScale(int)>
<ohos.biometrics.authentication.BiometricAuthentication: int checkAuthenticationAvailability(ohos.biometrics.authentication.BiometricAuthentication.AuthType,ohos.biometrics.authentication.BiometricAuthentication.SecureLevel,boolean)>
<java.lang.Integer: int min(int,int)>
<java.sql.Connection: java.lang.String nativeSQL(java.lang.String)>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.Entity generateSphere(java.lang.String,ohos.agp.render.render3d.resources.ResourceHandle,float,int,int)>
<java.net.DatagramSocketImpl: void <init>()>
<java.util.OptionalLong: java.util.OptionalLong of(long)>
<java.security.SecureClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.CodeSource)>
<ohos.bundle.CommonEventInfo: java.util.List getType()>
<ohos.data.preferences.Preferences: ohos.data.preferences.Preferences putInt(java.lang.String,int)>
<ohos.global.icu.text.DecimalFormatSymbols: ohos.global.icu.util.Currency getCurrency()>
<java.math.BigInteger: int intValue()>
<ohos.agp.utils.Matrix: boolean isTranslate()>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onCut(ohos.multimodalinput.event.MultimodalEvent)>
<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)>
<java.util.concurrent.LinkedBlockingQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<ohos.global.icu.lang.UCharacter: java.lang.String getNameAlias(int)>
<java.text.NumberFormat: void setRoundingMode(java.math.RoundingMode)>
<java.time.LocalTime: boolean equals(java.lang.Object)>
<java.sql.DatabaseMetaData: boolean supportsPositionedDelete()>
<java.util.prefs.AbstractPreferences: boolean isRemoved()>
<ohos.utils.zson.ZSONArray: boolean getBooleanValue(int)>
<java.time.LocalDate: java.time.LocalDateTime atStartOfDay()>
<ohos.media.image.ImageReceiver: void finalize()>
<ohos.media.photokit.support.FetchResult: java.lang.Object getPositionObject(int)>
<ohos.ai.asr.AsrListener: void onBeginningOfSpeech()>
<java.net.URLConnection: int getHeaderFieldInt(java.lang.String,int)>
<java.sql.DatabaseMetaData: boolean supportsCatalogsInTableDefinitions()>
<java.io.ObjectInputStream.GetField: boolean get(java.lang.String,boolean)>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,java.lang.Class)>
<ohos.sysappcomponents.contact.entity.PostalAddress: void setStreet(java.lang.String)>
<ohos.utils.PersistablePacMap: java.lang.String toJsonString()>
<java.util.Dictionary: void <init>()>
<ohos.data.resultset.SharedBlock: double getDouble(int,int)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,byte)>
<ohos.aafwk.content.Intent: boolean hasEntity(java.lang.String)>
<ohos.agp.text.RichTextBuilder: ohos.agp.text.RichTextBuilder revertForm()>
<ohos.security.keystore.KeyGenAlgorithmParaSpec: boolean isKeyAccessible(int)>
<ohos.agp.components.SearchBar: void <init>(ohos.app.Context)>
<java.util.Date: void setYear(int)>
<ohos.app.AbilityContext: ohos.app.Context getContext()>
<java.sql.ResultSet: int getConcurrency()>
<ohos.global.icu.text.LocaleDisplayNames.UiListItem: java.util.Comparator getComparator(java.util.Comparator,boolean)>
<ohos.media.tubecore.AVTubeEx: void setCurVolume(int)>
<java.nio.ByteBuffer: short getShort(int)>
<ohos.agp.render.opengl.GLES30: java.nio.Buffer glMapBufferRange(int,int,int,int)>
<ohos.data.search.schema.Schema: java.lang.String getTitle()>
<java.sql.PreparedStatement: void setSQLXML(int,java.sql.SQLXML)>
<ohos.agp.render.opengl.GLES20: void glUniform3i(int,int,int,int)>
<java.io.ByteArrayInputStream: int read(byte[],int,int)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>
<ohos.media.common.sessioncore.AVPlaybackState: long getActiveQueueElementId()>
<java.nio.file.spi.FileTypeDetector: void <init>()>
<java.util.SortedMap: java.util.Comparator comparator()>
<ohos.bluetooth.A2dpSink: int getDeviceState(ohos.bluetooth.BluetoothRemoteDevice)>
<ohos.event.notification.INotificationSubscriber: void onSubscribeDisConnected()>
<java.security.Provider.Service: java.lang.String getClassName()>
<ohos.org.xml.sax.Locator: int getColumnNumber()>
<java.util.prefs.PreferenceChangeEvent: void <init>(java.util.prefs.Preferences,java.lang.String,java.lang.String)>
<java.util.zip.ZipFile: java.util.stream.Stream stream()>
<ohos.agp.animation.AnimatorGroup: void setDuration(long)>
<ohos.agp.components.Component: boolean isEnabled()>
<ohos.agp.components.SlideDrawer.DisplayMode: ohos.agp.components.SlideDrawer.DisplayMode[] values()>
<ohos.org.xml.sax.InputSource: void <init>()>
<ohos.sysappcomponents.contact.entity.PostalAddress: java.lang.String getPostcode()>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream skip(long)>
<java.util.zip.InflaterOutputStream: void <init>(java.io.OutputStream)>
<ohos.bundle.ApplicationInfo: java.lang.String getIcon()>
<ohos.agp.components.Text: boolean setFontVariations(java.lang.String)>
<ohos.utils.ConditionHelper: void <init>()>
<ohos.wifi.WifiLinkedInfo: boolean isHiddenSsid()>
<java.text.DateFormat.Field: void <clinit>()>
<ohos.global.icu.text.RelativeDateTimeFormatter: java.lang.String combineDateAndTime(java.lang.String,java.lang.String)>
<java.sql.PreparedStatement: void setAsciiStream(int,java.io.InputStream)>
<ohos.backgroundtaskmgr.DelaySuspendInfo: int getRequestId()>
<ohos.global.icu.text.IDNA: java.lang.StringBuilder nameToASCII(java.lang.CharSequence,java.lang.StringBuilder,ohos.global.icu.text.IDNA.Info)>
<ohos.agp.components.PageSlider: int getCurrentPage()>
<java.net.Proxy: int hashCode()>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime formatToValue(double,ohos.global.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit)>
<java.nio.file.attribute.AclFileAttributeView: void setAcl(java.util.List)>
<java.security.cert.PKIXParameters: void addCertStore(java.security.cert.CertStore)>
<java.net.Socket: boolean getKeepAlive()>
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>
<java.time.OffsetDateTime: java.time.ZoneOffset getOffset()>
<java.lang.String: void <init>(java.lang.StringBuffer)>
<ohos.data.rdb.RdbStore: boolean isOpen()>
<ohos.agp.render.Path: void arcTo(float,float,float,float,float)>
<javax.sql.RowSet: boolean getEscapeProcessing()>
<java.time.OffsetDateTime: java.time.OffsetDateTime now()>
<ohos.agp.components.Component: void setFocusChangedListener(ohos.agp.components.Component.FocusChangedListener)>
<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<ohos.net.SocketCertificates: int getPid()>
<ohos.utils.PlainIntArray: void append(int,int)>
<java.util.NavigableSet: java.lang.Object ceiling(java.lang.Object)>
<ohos.media.camera.device.CameraAbility: java.util.List getSupportedHighFrameRate(java.lang.Class,ohos.media.image.common.Size)>
<java.security.KeyStore.PasswordProtection: void destroy()>
<java.util.concurrent.Phaser: int arriveAndAwaitAdvance()>
<java.util.HashMap: java.util.Set entrySet()>
<java.time.LocalDate: java.time.LocalDate plusDays(long)>
<java.util.stream.LongStream: java.util.stream.LongStream filter(java.util.function.LongPredicate)>
<java.sql.CallableStatement: java.sql.RowId getRowId(java.lang.String)>
<ohos.sysappcomponents.contact.entity.Email: void <init>(ohos.app.Context,java.lang.String,int)>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: void <init>()>
<ohos.global.i18n.LocaleHelperUtils: java.util.ArrayList getBlockedLangs(ohos.app.Context)>
<ohos.agp.utils.RectFloat.RotationEnum: ohos.agp.utils.RectFloat.RotationEnum valueOf(java.lang.String)>
<ohos.biometrics.authentication.BiometricAuthentication: ohos.biometrics.authentication.BiometricAuthentication getInstance(ohos.aafwk.ability.Ability)>
<java.io.StringReader: boolean ready()>
<java.time.OffsetDateTime: boolean isSupported(java.time.temporal.TemporalUnit)>
<ohos.eventhandler.EventHandler: boolean hasInnerEvent(java.lang.Runnable)>
<ohos.media.tubecore.AVTubeEx: void cmdDecVolume(int)>
<java.util.SplittableRandom: java.util.stream.DoubleStream doubles(double,double)>
<java.util.prefs.Preferences: java.util.prefs.Preferences parent()>
<java.time.ZoneOffset: java.time.ZoneOffset ofTotalSeconds(int)>
<java.util.prefs.Preferences: java.lang.String absolutePath()>
<ohos.event.commonevent.CommonEventPublishInfo: void setOrdered(boolean)>
<ohos.agp.graphics.TextureHolder: boolean isAbandoned()>
<ohos.net.NetManager: boolean hasDefaultNet()>
<ohos.wifi.WifiDevice: boolean isWifiActive()>
<ohos.agp.render.Canvas: void drawChangelessTexture(float,float,ohos.agp.render.Texture)>
<java.nio.channels.spi.SelectorProvider: java.nio.channels.SocketChannel openSocketChannel()>
<java.time.MonthDay: java.time.LocalDate atYear(int)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getPrefix()>
<ohos.global.icu.text.RuleBasedCollator: boolean isCaseLevel()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,java.sql.Timestamp)>
<java.nio.channels.UnsupportedAddressTypeException: void <init>()>
<java.text.Collator: boolean equals(java.lang.Object)>
<ohos.agp.render.render3d.SceneNode: ohos.agp.render.render3d.math.Vector3 getPosition()>
<java.util.LongSummaryStatistics: void combine(java.util.LongSummaryStatistics)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getDefaultSSLParameters()>
<ohos.utils.LightweightMap: void <init>(ohos.utils.LightweightMap)>
<ohos.location.GeoAddress: void setLatitude(double)>
<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<javax.lang.model.util.AbstractTypeVisitor7: void <init>()>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.IntStream ints(int,int)>
<ohos.media.common.AVDescription: ohos.utils.PacMap getExtras()>
<java.sql.DatabaseMetaData: boolean nullsAreSortedAtEnd()>
<javax.crypto.KeyAgreement: void init(java.security.Key)>
<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(java.lang.Object[])>
<javax.crypto.spec.DESedeKeySpec: boolean isParityAdjusted(byte[],int)>
<java.util.stream.LongStream: java.util.Spliterator spliterator()>
<java.util.concurrent.atomic.AtomicLong: boolean weakCompareAndSet(long,long)>
<ohos.data.resultset.CombinedResultSet: void <init>(ohos.data.resultset.ResultSet[])>
<ohos.agp.components.ProgressBar: void setProgressBackgroundElement(ohos.agp.components.element.Element)>
<java.math.BigInteger: double doubleValue()>
<ohos.agp.components.DirectionalLayout: ohos.agp.components.ComponentContainer.LayoutConfig createLayoutConfig(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.utils.zson.ZSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>
<ohos.utils.Parcel: byte[] readByteArray()>
<java.io.BufferedWriter: void flush()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates offset(int)>
<ohos.media.camera.device.FrameResult: ohos.media.camera.params.ParametersResult getParametersResult()>
<ohos.media.audio.AudioRenderer: boolean setOutputDevice(ohos.media.audio.AudioDeviceDescriptor)>
<java.security.cert.CertificateFactory: java.util.Iterator getCertPathEncodings()>
<ohos.agp.render.Path: void addOval(ohos.agp.utils.RectFloat,ohos.agp.render.Path.Direction)>
<java.net.URLConnection: java.lang.String getContentEncoding()>
<java.nio.file.WatchService: java.nio.file.WatchKey take()>
<ohos.agp.text.Layout: int getHeight()>
<java.time.ZonedDateTime: java.time.ZonedDateTime minus(long,java.time.temporal.TemporalUnit)>
<java.io.DataInputStream: char readChar()>
<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror capture(javax.lang.model.type.TypeMirror)>
<ohos.agp.components.PageSliderProvider: boolean isPageMatchToObject(ohos.agp.components.Component,java.lang.Object)>
<java.lang.InheritableThreadLocal: java.lang.Object childValue(java.lang.Object)>
<java.util.Spliterators: java.util.Spliterator spliteratorUnknownSize(java.util.Iterator,int)>
<ohos.media.recorder.Recorder: boolean stop()>
<java.util.concurrent.locks.Condition: void await()>
<ohos.miscservices.inputmethodability.TextInputClient: boolean markText(int,int)>
<ohos.global.icu.text.DecimalFormatSymbols: void setMonetaryGroupingSeparatorString(java.lang.String)>
<java.sql.ParameterMetaData: java.lang.String getParameterClassName(int)>
<java.time.Duration: java.time.Duration minus(java.time.Duration)>
<ohos.eventhandler.EventHandler: void sendTimingEvent(int,long)>
<java.sql.SQLInput: java.sql.NClob readNClob()>
<ohos.org.xml.sax.HandlerBase: void warning(ohos.org.xml.sax.SAXParseException)>
<ohos.utils.BasePacMap: char getChar(java.lang.String,char)>
<java.text.CharacterIterator: char current()>
<ohos.agp.components.Component: void setMode(int)>
<ohos.event.notification.NotificationRequest.NotificationNormalContent: java.lang.String getAdditionalText()>
<ohos.data.rdb.RdbAbortException: void <init>(java.lang.String)>
<ohos.agp.components.BaseItemProvider: int getCount()>
<ohos.nfc.cardemulation.CardEmulation: int getSelectionType(java.lang.String)>
<java.util.PrimitiveIterator.OfLong: java.lang.Object next()>
<java.nio.file.attribute.BasicFileAttributes: java.nio.file.attribute.FileTime creationTime()>
<java.security.cert.PKIXRevocationChecker: void setOptions(java.util.Set)>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate dateYearDay(java.time.chrono.Era,int,int)>
<ohos.data.async.RdbStoreAsyncHandler: void addDeleteJob(ohos.data.async.JobParams,ohos.data.rdb.RdbPredicates,ohos.data.async.DeleteCallback)>
<ohos.agp.components.PageSliderIndicator: void <init>(ohos.app.Context)>
<ohos.global.icu.text.Replaceable: void replace(int,int,java.lang.String)>
<java.util.Properties: java.util.Set stringPropertyNames()>
<java.nio.file.WatchService: java.nio.file.WatchKey poll()>
<ohos.sysappcomponents.calendar.entity.Reminders: java.lang.String getSyncId()>
<java.sql.SQLOutput: void writeTimestamp(java.sql.Timestamp)>
<ohos.aafwk.ability.AbilitySlice: boolean acquireForm(ohos.aafwk.content.Intent,ohos.aafwk.ability.AbilitySlice.FormCallback)>
<ohos.net.NetManager: boolean isDefaultNetMetered()>
<ohos.sysappcomponents.contact.entity.Relation: java.lang.String getLabelName()>
<java.lang.StrictMath: double hypot(double,double)>
<ohos.global.icu.lang.UCharacter: int getIntPropertyValue(int,int)>
<javax.security.auth.Subject: javax.security.auth.Subject getSubject(java.security.AccessControlContext)>
<ohos.agp.components.TimePicker: void getRange(int[])>
<javax.crypto.spec.PSource: void <init>(java.lang.String)>
<java.time.chrono.ChronoLocalDate: int compareTo(java.time.chrono.ChronoLocalDate)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThan(java.lang.String,int)>
<javax.net.ssl.HttpsURLConnection: void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>
<java.lang.NoSuchMethodException: void <init>(java.lang.String)>
<ohos.global.resource.solidxml.SolidXml: void <init>()>
<ohos.agp.utils.Rect: void reorder()>
<java.lang.Object: java.lang.String toString()>
<java.util.Calendar: void computeTime()>
<java.sql.CallableStatement: java.lang.String getNString(int)>
<ohos.org.xml.sax.ContentHandler: void endDocument()>
<java.sql.SQLDataException: void <init>()>
<ohos.agp.render.Canvas: void drawPixelMapHolderRect(ohos.agp.render.PixelMapHolder,ohos.agp.utils.RectFloat,ohos.agp.render.Paint)>
<ohos.bundle.IBundleManager: java.util.Optional getPermissionGroupDef(java.lang.String)>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setActionButton(java.lang.String,int)>
<ohos.data.resultset.ResultSetWrapper: java.lang.String getColumnNameForIndex(int)>
<ohos.account.app.AppAccountAbility: boolean setAppAccountSync(java.lang.String,boolean)>
<ohos.agp.render.Canvas: void drawPixelMapHolderRoundRectShape(ohos.agp.render.PixelMapHolder,ohos.agp.utils.RectFloat,ohos.agp.utils.RectFloat,float,float)>
<ohos.utils.BasePacMap: float getFloatValue(java.lang.String)>
<ohos.event.notification.NotificationRequest: boolean isCountdownTimer()>
<java.util.regex.Matcher: int end(int)>
<ohos.bluetooth.ble.GattDescriptor: boolean setValue(byte[])>
<javax.net.ssl.SSLContextSpi: void <init>()>
<javax.sql.RowSet: void setCharacterStream(java.lang.String,java.io.Reader)>
<ohos.utils.HalfFloat: short shortValue()>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<ohos.media.camera.device.FrameStateCallback: void onFrameError(ohos.media.camera.device.Camera,ohos.media.camera.device.FrameConfig,int,ohos.media.camera.device.FrameResult)>
<ohos.javax.xml.stream.events.StartElement: java.util.Iterator getNamespaces()>
<java.security.cert.CertPathValidatorException: java.security.cert.CertPath getCertPath()>
<ohos.agp.window.dialog.ListDialog: void show()>
<ohos.media.audio.AudioRendererInfo.AudioStreamOutputFlag: int getOutputFlag()>
<ohos.global.resource.solidxml.Theme: void set(ohos.global.resource.solidxml.Theme)>
<ohos.app.AbilityContext: void startAbility(ohos.aafwk.content.Intent,int)>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle unreflect(java.lang.reflect.Method)>
<java.util.concurrent.LinkedBlockingDeque: boolean offerLast(java.lang.Object)>
<java.math.BigInteger: java.math.BigInteger max(java.math.BigInteger)>
<ohos.agp.components.SlideDrawer: ohos.agp.components.SlideDrawer.DisplayMode[] getDisplayMode()>
<ohos.utils.BasePacMap: void putFloatDimension(java.lang.String,ohos.utils.FloatDimension)>
<java.net.Inet6Address: boolean isMCOrgLocal()>
<java.util.concurrent.ConcurrentNavigableMap: java.util.NavigableSet navigableKeySet()>
<ohos.agp.components.Component: void setMarginBottom(int)>
<java.net.InetAddress: boolean isSiteLocalAddress()>
<ohos.backgroundtaskmgr.BackgroundTaskManager: void cancelSuspendDelay(int)>
<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>
<ohos.agp.render.PixelMapHolder: void release()>
<java.sql.Clob: java.io.Reader getCharacterStream(long,long)>
<ohos.accessibility.ability.AccessibilityInfo: java.util.Optional getChild(int)>
<ohos.agp.components.Component.BindStateChangedListener: void onComponentBoundToWindow(ohos.agp.components.Component)>
<ohos.event.commonevent.CommonEventSubscribeInfo: ohos.event.commonevent.CommonEventSubscribeInfo.ThreadMode getThreadMode()>
<java.sql.DatabaseMetaData: boolean supportsANSI92EntryLevelSQL()>
<java.lang.StrictMath: long floorDiv(long,long)>
<ohos.agp.render.render3d.resources.AnimationPlayback: void setPlaybackState(ohos.agp.render.render3d.resources.AnimationPlayback.State)>
<ohos.wifi.p2p.WifiP2pLinkedInfo: java.net.InetAddress getGroupOwnerAddress()>
<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>
<ohos.javax.xml.stream.XMLStreamReader: ohos.javax.xml.namespace.QName getAttributeName(int)>
<ohos.data.search.schema.IndexSchemaType: void <clinit>()>
<javax.sql.RowSet: void setShort(int,short)>
<java.lang.Byte: double doubleValue()>
<java.awt.font.NumericShaper: int getRanges()>
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry createZipEntry(java.lang.String)>
<ohos.eventhandler.InnerEvent: ohos.eventhandler.InnerEvent get()>
<java.util.zip.Adler32: void update(int)>
<ohos.data.distributed.user.SingleKvStore: int getInt(java.lang.String)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThan(java.lang.String,java.sql.Time)>
<java.util.Comparator: java.util.Comparator comparing(java.util.function.Function,java.util.Comparator)>
<ohos.event.notification.NotificationUserInput: java.lang.String getTag()>
<ohos.global.icu.text.DateIntervalFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<java.time.chrono.ThaiBuddhistDate: long toEpochDay()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: void awaitUninterruptibly()>
<javax.net.ssl.SSLServerSocket: void <init>(int,int,java.net.InetAddress)>
<ohos.agp.render.Path.ArcSize: ohos.agp.render.Path.ArcSize[] values()>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<javax.tools.DocumentationTool.Location: javax.tools.DocumentationTool.Location[] values()>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setHeight(java.lang.Integer)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayLanguageWithDialect(java.lang.String,ohos.global.icu.util.ULocale)>
<java.util.Currency: java.lang.String getCurrencyCode()>
<java.lang.reflect.Modifier: boolean isAbstract(int)>
<ohos.global.icu.util.ICUUncheckedIOException: void <init>(java.lang.String,java.lang.Throwable)>
<java.lang.Integer: java.lang.String toString(int,int)>
<ohos.data.distributed.device.DeviceKvStore: int getInt(java.lang.String,java.lang.String)>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate of(int,int,int)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setDouble(int,java.lang.String,double)>
<ohos.data.orm.OrmConfig.Builder: ohos.data.orm.OrmConfig.Builder setAlias(java.lang.String)>
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()>
<ohos.global.config.ConfigManager: boolean getBoolean(ohos.global.config.ConfigType)>
<ohos.net.RouteInfo: boolean marshalling(ohos.utils.Parcel)>
<java.util.concurrent.LinkedBlockingDeque: void put(java.lang.Object)>
<java.lang.reflect.Modifier: java.lang.String toString(int)>
<java.util.Hashtable: void rehash()>
<java.time.Clock: java.time.Clock tickSeconds(java.time.ZoneId)>
<ohos.utils.zson.ZSONWriter: void writeName(java.lang.String)>
<ohos.global.icu.text.PluralFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<ohos.global.icu.util.Calendar: void roll(int,int)>
<java.sql.DatabaseMetaData: boolean usesLocalFilePerTable()>
<ohos.agp.text.Layout: int getLineCount()>
<java.lang.reflect.Array: byte getByte(java.lang.Object,int)>
<java.nio.IntBuffer: int hashCode()>
<ohos.agp.components.ProgressBar: ohos.agp.components.element.Element getInfiniteModeElement()>
<javax.crypto.spec.DESKeySpec: void <init>(byte[])>
<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)>
<ohos.data.resultset.ResultSet: void setExtensions(ohos.utils.PacMap)>
<ohos.agp.database.DataSetPublisher: void notifyItemRangeChanged(int,int)>
<java.util.concurrent.atomic.DoubleAdder: void <init>()>
<ohos.agp.components.ComponentContainer.ArrangeListener: boolean onArrange(int,int,int,int)>
<ohos.event.notification.NotificationSortingMap: boolean getNotificationSorting(java.lang.String,ohos.event.notification.NotificationSorting)>
<ohos.bundle.CommonEventInfo: java.lang.String getBundleName()>
<javax.crypto.CipherSpi: byte[] engineUpdate(byte[],int,int)>
<ohos.agp.utils.Rect: boolean getIntersectRect(ohos.agp.utils.Rect,ohos.agp.utils.Rect)>
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory()>
<ohos.utils.Parcel: void <init>()>
<javax.lang.model.util.ElementFilter: java.util.Set typesIn(java.util.Set)>
<ohos.sysappcomponents.contact.HoldersCollection: boolean isEmpty()>
<java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>
<ohos.media.audio.AudioWaver.FrequencyDataObserver: void onFrequencyData(byte[],int)>
<ohos.data.resultset.TableResultSet: ohos.data.resultset.ResultSet.ColumnType getColumnTypeForIndex(int)>
<java.util.concurrent.Phaser: int arrive()>
<ohos.global.icu.text.DecimalFormat: boolean isParseBigDecimal()>
<ohos.agp.components.Text: ohos.agp.components.element.Element getRightElement()>
<java.net.SocketOption: java.lang.Class type()>
<ohos.agp.components.element.ShapeElement: void setRgbColors(ohos.agp.colors.RgbColor[])>
<ohos.event.notification.NotificationSlot: void setEnableLight(boolean)>
<javax.lang.model.type.WildcardType: javax.lang.model.type.TypeMirror getExtendsBound()>
<java.util.Vector: void <init>()>
<java.util.logging.LogRecord: long getSequenceNumber()>
<ohos.data.search.schema.MessageItem: java.lang.String getSenderName()>
<ohos.sysappcomponents.contact.entity.Name: void setMiddleNamePhonetic(java.lang.String)>
<java.util.Locale.Builder: java.util.Locale build()>
<ohos.agp.components.AbsButton: void <init>(ohos.app.Context)>
<ohos.agp.render.opengl.GLES1X: void glMaterialf(int,int,float)>
<ohos.ai.cv.text.TextLine: java.lang.String getValue()>
<ohos.utils.geo.RectFloat: void fuse(float,float)>
<java.text.BreakIterator: int last()>
<ohos.global.icu.text.DecimalFormat: void setNegativeSuffix(java.lang.String)>
<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean setNotifyCharacteristic(ohos.bluetooth.ble.GattCharacteristic,boolean)>
<ohos.telephony.SimInfoManager: java.lang.String getSimTelephoneNumber(int)>
<ohos.agp.components.PageSliderIndicator: void setWidth(int)>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: ohos.media.common.sessioncore.AVPlaybackState.Builder addAVPlaybackCustomAction(java.lang.String,java.lang.String,int)>
<java.lang.Float: float max(float,float)>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat copy(int)>
<javax.crypto.KeyAgreement: int generateSecret(byte[],int)>
<ohos.rpc.RemoteProxy: void finalize()>
<java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>
<ohos.media.sessioncore.AVBrowserService: ohos.media.common.sessioncore.AVCallerUserInfo getCallerUserInfo()>
<java.lang.Float: int floatToIntBits(float)>
<ohos.media.sessioncore.AVBrowser: void connect()>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)>
<java.security.cert.PKIXCertPathValidatorResult: void <init>(java.security.cert.TrustAnchor,java.security.cert.PolicyNode,java.security.PublicKey)>
<javax.lang.model.element.Modifier: javax.lang.model.element.Modifier valueOf(java.lang.String)>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder removeUnicodeLocaleAttribute(java.lang.String)>
<ohos.data.search.schema.EmailItem: java.lang.String getCcName()>
<javax.lang.model.util.AbstractTypeVisitor8: void <init>()>
<java.lang.Long: byte byteValue()>
<java.sql.Time: void <init>(int,int,int)>
<ohos.media.codec.TrackInfo: void <init>()>
<ohos.account.app.AppAccount: int hashCode()>
<ohos.agp.render.opengl.GLES20: int glCheckFramebufferStatus(int)>
<ohos.data.distributed.common.KvStoreResultSet: boolean goToLastRow()>
<ohos.sysappcomponents.contact.entity.PhoneNumber: void <init>(ohos.app.Context,java.lang.String,int)>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: void setJointDataDefined(boolean)>
<java.net.SocketImpl: void connect(java.lang.String,int)>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)>
<ohos.light.bean.LightEffect: ohos.light.bean.LightBrightness getLightBrightness()>
<ohos.utils.PacMap: void putSerializableObject(java.lang.String,java.io.Serializable)>
<java.time.LocalDateTime: java.time.LocalDate toLocalDate()>
<java.text.MessageFormat: java.util.Locale getLocale()>
<java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>
<java.io.PrintWriter: void <init>(java.io.File)>
<java.util.concurrent.atomic.DoubleAccumulator: void reset()>
<java.util.zip.Inflater: long getBytesRead()>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.BaseDialog setOffset(int,int)>
<java.util.prefs.Preferences: int getInt(java.lang.String,int)>
<ohos.agp.components.ProgressBar.BarObserver: void onBarChanged(int,int,int)>
<ohos.agp.render.render3d.RenderLoop: void setRenderNodeGraph(ohos.agp.render.render3d.Engine.RenderNodeGraph)>
<ohos.media.sessioncore.AVController.PlayControls: void setAVPlaybackSpeed(float)>
<ohos.global.i18n.utils.CalendarUtils: ohos.global.i18n.utils.CalendarUtils getInstance()>
<java.net.ResponseCache: void <init>()>
<ohos.agp.components.ListContainer.ItemVisibilityChangedListener: void onItemRemoved(ohos.agp.components.Component,int)>
<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>
<java.security.MessageDigest: void update(byte[],int,int)>
<ohos.miscservices.pasteboard.PasteData: void addRecord(ohos.miscservices.pasteboard.PasteData.Record)>
<java.time.LocalDateTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<javax.sql.RowSet: void setDate(int,java.sql.Date)>
<ohos.global.icu.text.UnicodeSetIterator: boolean nextRange()>
<ohos.utils.geo.Rect: int getHeight()>
<ohos.sensor.agent.CategoryOtherAgent: java.util.List getAllSensors()>
<java.lang.InternalError: void <init>(java.lang.String)>
<ohos.global.icu.util.Calendar: java.util.Locale[] getAvailableLocales()>
<java.nio.charset.CharsetEncoder: byte[] replacement()>
<ohos.agp.components.webengine.WebView: void removeJsCallback(java.lang.String)>
<java.time.OffsetTime: int hashCode()>
<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.AsynchronousServerSocketChannel bind(java.net.SocketAddress,int)>
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenCompose(java.util.function.Function)>
<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>
<ohos.miscservices.inputmethodability.InputMethodAbility: void onDisconnect(ohos.aafwk.content.Intent)>
<ohos.data.search.SearchResult: ohos.data.search.SearchResult getSearchResult(int)>
<java.time.zone.ZoneOffsetTransitionRule: java.time.zone.ZoneOffsetTransitionRule of(java.time.Month,int,java.time.DayOfWeek,java.time.LocalTime,boolean,java.time.zone.ZoneOffsetTransitionRule.TimeDefinition,java.time.ZoneOffset,java.time.ZoneOffset,java.time.ZoneOffset)>
<ohos.sysappcomponents.contact.entity.Contact: java.lang.String getKey()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setFlags(int)>
<ohos.biometrics.authentication.BiometricAuthentication.AuthType: ohos.biometrics.authentication.BiometricAuthentication.AuthType[] values()>
<ohos.agp.render.render3d.resources.MaterialDesc: float getClearCoatRoughness()>
<ohos.agp.components.ComponentProvider: void setDefaultBundleName(java.lang.String)>
<ohos.global.icu.util.Calendar: boolean isWeekend()>
<ohos.global.icu.text.UCharacterIterator: java.text.CharacterIterator getCharacterIterator()>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource create(java.nio.ByteBuffer,ohos.media.image.ImageSource.SourceOptions)>
<java.lang.String: java.lang.String valueOf(char[])>
<java.time.zone.ZoneRules: int hashCode()>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat increaseAll(int)>
<ohos.global.icu.text.MessageFormat: void setFormatsByArgumentName(java.util.Map)>
<java.nio.file.attribute.AclEntry: java.util.Set permissions()>
<java.time.MonthDay: boolean isAfter(java.time.MonthDay)>
<java.util.PrimitiveIterator.OfDouble: void forEachRemaining(java.util.function.Consumer)>
<ohos.bluetooth.ble.BlePeripheralManagerCallback: void executeWriteEvent(ohos.bluetooth.ble.BlePeripheralDevice,int,boolean)>
<java.sql.SQLInput: byte readByte()>
<ohos.agp.render.opengl.GLES1X: void glFogx(int,int)>
<ohos.agp.components.ListContainer: int getFirstVisibleItemPosition()>
<java.lang.Thread: boolean isInterrupted()>
<ohos.agp.components.ListContainer: int getBoundaryThickness()>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: ohos.agp.render.render3d.resources.ResourceHandle getMaterial()>
<ohos.ai.cv.docrefine.DocCoordinates: void <init>()>
<java.security.cert.X509CRLSelector: void setIssuers(java.util.Collection)>
<java.util.function.IntFunction: java.lang.Object apply(int)>
<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>
<ohos.data.rdb.StoreConfig.Builder: ohos.data.rdb.StoreConfig.Builder setReadOnly(boolean)>
<ohos.data.search.schema.Schema: java.lang.Object setDateCreate(java.lang.Long)>
<java.sql.CallableStatement: void setByte(java.lang.String,byte)>
<ohos.agp.utils.Matrix: float getSkewY()>
<java.time.chrono.HijrahEra: void <clinit>()>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
<ohos.bundle.IBackupSessionCallback: void onTaskStatusChanged(int,int,int,java.lang.String)>
<java.util.logging.LogRecord: void setParameters(java.lang.Object[])>
<javax.tools.JavaFileObject: javax.tools.JavaFileObject.Kind getKind()>
<java.util.logging.Handler: void setEncoding(java.lang.String)>
<java.util.Arrays: void parallelSort(java.lang.Object[],java.util.Comparator)>
<ohos.global.resource.solidxml.Node: ohos.global.resource.solidxml.Node getChild()>
<ohos.event.notification.NotificationSubscribeInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.utils.Parcel: boolean writeShort(short)>
<java.net.Socket: void close()>
<ohos.agp.window.service.ComponentPadding: int getUnchangedPaddingBottom()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates in(java.lang.String,double[])>
<java.lang.ref.PhantomReference: java.lang.Object get()>
<ohos.media.image.PixelMap: void writePixels(java.nio.Buffer)>
<ohos.global.icu.util.Currency: boolean isAvailable(java.lang.String,java.util.Date,java.util.Date)>
<java.util.HashMap: void <init>(java.util.Map)>
<ohos.agp.render.Path: boolean isLastContourClosed()>
<ohos.bluetooth.ble.GattCharacteristic: byte[] getValue()>
<ohos.miscservices.pasteboard.PasteData.DataProperty: boolean hasMimeType(java.lang.String)>
<java.util.jar.JarInputStream: void <init>(java.io.InputStream)>
<ohos.utils.PacMap: byte getByteValue(java.lang.String)>
<java.util.jar.JarEntry: void <init>(java.util.zip.ZipEntry)>
<ohos.agp.utils.Circle: boolean isInclude(ohos.agp.utils.Circle)>
<ohos.global.icu.text.Transliterator.Position: java.lang.String toString()>
<ohos.account.OsAccountType: ohos.account.OsAccountType[] values()>
<java.util.concurrent.locks.Condition: boolean awaitUntil(java.util.Date)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getInstance(int)>
<java.util.AbstractMap.SimpleImmutableEntry: int hashCode()>
<ohos.agp.components.ComponentProvider: boolean marshalling(ohos.utils.Parcel)>
<java.io.BufferedWriter: void write(java.lang.String,int,int)>
<java.security.cert.CertPathChecker: void check(java.security.cert.Certificate)>
<java.time.LocalDate: java.time.LocalDateTime atTime(int,int,int,int)>
<ohos.agp.utils.DimensFloat: boolean equals(java.lang.Object)>
<javax.net.ssl.SSLServerSocket: boolean getNeedClientAuth()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean isQueued(java.lang.Thread)>
<ohos.agp.utils.Matrix44: void setIdentity()>
<ohos.media.photokit.metadata.AVStorage.Audio.Media: void <clinit>()>
<java.lang.invoke.CallSite: java.lang.invoke.MethodType type()>
<ohos.usb.USBEndpoint: int getInterval()>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 add(ohos.agp.render.render3d.math.Vector3,float)>
<ohos.aafwk.content.Intent.OperationBuilder: ohos.aafwk.content.Intent.OperationBuilder withAction(java.lang.String)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.Object freeze()>
<java.time.format.DateTimeParseException: void <init>(java.lang.String,java.lang.CharSequence,int)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>
<ohos.agp.components.PageSliderProvider: int getPageIndex(java.lang.Object)>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean connect(boolean,ohos.bluetooth.ble.BlePeripheralCallback)>
<ohos.wifi.p2p.WifiP2pGroup: java.util.List getClientList()>
<ohos.bluetooth.BluetoothHost: boolean setDevicePairingConfirmation(ohos.bluetooth.BluetoothRemoteDevice,boolean)>
<java.lang.ClassFormatError: void <init>()>
<ohos.data.resultset.TableResultSet: void <init>(java.lang.String[])>
<ohos.agp.render.Insets: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream sequential()>
<java.nio.channels.spi.AbstractSelector: void deregister(java.nio.channels.spi.AbstractSelectionKey)>
<ohos.media.camera.device.FrameResult: long getTimestamp()>
<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra valueOf(java.lang.String)>
<java.util.Scanner: java.lang.Object next()>
<ohos.agp.components.TabList: void removeTab(ohos.agp.components.TabList.Tab)>
<java.net.InetSocketAddress: java.lang.String getHostName()>
<ohos.global.icu.text.SimpleDateFormat: int subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],ohos.global.icu.util.Calendar)>
<ohos.agp.render.render3d.components.CameraComponent: java.lang.String getName()>
<java.nio.file.attribute.FileTime: long toMillis()>
<java.security.KeyStore.Builder: java.security.KeyStore.Builder newInstance(java.lang.String,java.security.Provider,java.security.KeyStore.ProtectionParameter)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object firstKey()>
<ohos.agp.utils.RectFloat: boolean isInclude(float,float,float,float)>
<ohos.media.camera.params.Face: int getId()>
<java.net.SocketImpl: void shutdownOutput()>
<ohos.utils.PlainLongArray: java.util.Optional remove(int)>
<ohos.telephony.RadioInfoManager: java.lang.String getPlmnNumeric(int)>
<ohos.ai.cv.text.TextLine: java.util.List getElements()>
<java.sql.Statement: int getQueryTimeout()>
<ohos.global.icu.text.NumberFormat: void setParseStrict(boolean)>
<java.lang.Double: double sum(double,double)>
<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>
<ohos.global.icu.text.DecimalFormat: boolean equals(java.lang.Object)>
<ohos.media.audio.AudioRemoteException: void <init>(java.lang.String)>
<java.lang.Character: boolean isIdeographic(int)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture handleAsync(java.util.function.BiFunction)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenRunAsync(java.lang.Runnable)>
<java.math.BigDecimal: java.math.BigDecimal plus(java.math.MathContext)>
<java.util.regex.MatchResult: int end()>
<ohos.agp.render.Canvas: void drawRoundRect(ohos.agp.utils.RectFloat,float,float,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<java.net.CookieManager: java.util.Map get(java.net.URI,java.util.Map)>
<java.nio.charset.CoderResult: int length()>
<ohos.global.icu.util.UniversalTimeScale: ohos.global.icu.math.BigDecimal bigDecimalFrom(double,int)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas()>
<ohos.agp.components.ProgressBar: int getMax()>
<java.util.concurrent.CountedCompleter: void setRawResult(java.lang.Object)>
<java.nio.file.Path: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind[],java.nio.file.WatchEvent.Modifier[])>
<javax.tools.DocumentationTool: javax.tools.StandardJavaFileManager getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)>
<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameters generateParameters()>
<ohos.rpc.RemoteObjectCallbackList: int startBroadcast()>
<ohos.bundle.HapModuleInfo: java.lang.String getModuleName()>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion add(ohos.agp.render.render3d.math.Quaternion,float)>
<java.io.ObjectInputStream: short readShort()>
<ohos.event.intentagent.TriggerInfo.Builder: ohos.event.intentagent.TriggerInfo.Builder setIntent(ohos.aafwk.content.Intent)>
<ohos.net.LocalSocket: ohos.net.LocalSocket acceptSocket()>
<java.util.concurrent.LinkedTransferQueue: java.lang.Object peek()>
<java.security.KeyFactory: java.security.Provider getProvider()>
<java.security.SecureRandom: int next(int)>
<ohos.bundle.LauncherService.BundleStatusCallback: void onBundleAdded(java.lang.String,int)>
<java.time.chrono.JapaneseEra: java.time.chrono.JapaneseEra of(int)>
<java.time.format.SignStyle: void <clinit>()>
<javax.lang.model.type.ArrayType: javax.lang.model.type.TypeMirror getComponentType()>
<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>
<ohos.aafwk.ability.fraction.FractionScheduler: ohos.aafwk.ability.fraction.FractionScheduler replace(int,ohos.aafwk.ability.fraction.Fraction)>
<ohos.utils.system.SystemCapability.Wearable: void <init>()>
<ohos.bundle.ApplicationInfo: void <init>()>
<java.lang.Character: void <clinit>()>
<java.nio.file.Files: java.nio.file.Path setOwner(java.nio.file.Path,java.nio.file.attribute.UserPrincipal)>
<ohos.agp.components.Slider: void setThumbElement(ohos.agp.components.element.Element)>
<ohos.media.recorder.Recorder: void <init>()>
<ohos.global.icu.text.PluralRules: java.util.Collection getAllKeywordValues(java.lang.String)>
<java.net.Socket: void setPerformancePreferences(int,int,int)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: int getAbilitySliceState(ohos.aafwk.ability.AbilitySlice)>
<ohos.data.distributed.file.DistFile: java.io.File[] listFiles(java.io.FileFilter)>
<ohos.usb.USBRequest: void free()>
<ohos.utils.Sequenceable: boolean hasFileDescriptor()>
<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>
<java.time.temporal.ChronoUnit: java.lang.String toString()>
<java.sql.CallableStatement: void setObject(java.lang.String,java.lang.Object,int,int)>
<ohos.data.rdb.RdbStore: void addAttach(java.lang.String,java.lang.String,byte[])>
<ohos.agp.components.ComponentContainer: ohos.agp.components.LayoutManager getLayoutManager()>
<ohos.global.icu.text.RelativeDateTimeFormatter.RelativeUnit: void <clinit>()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage acceptEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Consumer)>
<java.util.concurrent.ConcurrentNavigableMap: java.util.Set keySet()>
<ohos.agp.utils.Circle: void shrink(float)>
<java.util.concurrent.locks.StampedLock: boolean isWriteLocked()>
<ohos.global.icu.text.BreakIterator: void <init>()>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.Entity generatePlane(java.lang.String,ohos.agp.render.render3d.resources.ResourceHandle,float,float)>
<ohos.miscservices.download.DownloadSession.DownloadInfo: long getTotalBytes()>
<ohos.global.icu.util.IslamicCalendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<java.util.Scanner: void <init>(java.io.File,java.lang.String)>
<java.time.ZoneOffset: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.aafwk.ability.Ability: void setWindowBackgroundColor(int,int,int)>
<ohos.utils.BasePacMap: void putBooleanValueArray(java.lang.String,boolean[])>
<ohos.nfc.cardemulation.HostService: void <init>()>
<java.io.PushbackInputStream: void <init>(java.io.InputStream)>
<java.time.Month: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>
<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>
<java.time.OffsetTime: int getHour()>
<java.text.DecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)>
<java.lang.Thread: void run()>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: void setColorDataDefined(boolean)>
<java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)>
<ohos.global.icu.util.BuddhistCalendar: void <init>(ohos.global.icu.util.ULocale)>
<ohos.org.xml.sax.Attributes: java.lang.String getType(int)>
<java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<java.io.ObjectOutputStream.PutField: void put(java.lang.String,short)>
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.lang.String)>
<ohos.agp.components.PageFlipper: void <init>(ohos.app.Context)>
<ohos.utils.LruBuffer: int getRemovalCount()>
<java.util.Calendar: java.util.Locale[] getAvailableLocales()>
<ohos.global.icu.lang.UScript: int getCodeFromName(java.lang.String)>
<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.util.InvalidPropertiesFormatException: void <init>(java.lang.Throwable)>
<java.io.PrintWriter: void println()>
<java.util.stream.LongStream: java.util.stream.LongStream iterate(long,java.util.function.LongUnaryOperator)>
<ohos.ai.cv.text.TextConfiguration: int getTrackingRelease()>
<ohos.global.icu.text.LocaleDisplayNames: ohos.global.icu.text.DisplayContext getContext(ohos.global.icu.text.DisplayContext.Type)>
<ohos.security.permission.Permission: int verifySelfPermissionFromRemote(java.lang.String,java.lang.String)>
<java.util.Currency: java.lang.String getDisplayName(java.util.Locale)>
<java.nio.channels.DatagramChannel: int read(java.nio.ByteBuffer)>
<java.util.concurrent.ForkJoinPool: void execute(java.util.concurrent.ForkJoinTask)>
<java.util.prefs.Preferences: boolean nodeExists(java.lang.String)>
<ohos.agp.utils.RectFloat: void scale(float)>
<ohos.sysappcomponents.calendar.entity.Reminders: int getRemindMinutes()>
<ohos.agp.render.Region: boolean op(ohos.agp.render.Region,ohos.agp.render.Region.Op)>
<ohos.distributedhardware.devicemanager.DeviceInfo.DeviceType: void <clinit>()>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate date(int,int,int)>
<ohos.data.search.SearchResult: ohos.data.search.SearchResult valueOf(java.lang.String)>
<ohos.agp.window.service.Window: void setAccessibilityEventListener(ohos.agp.window.service.Window.IAccessibilityEventListener)>
<ohos.agp.render.opengl.GLES31: int glGetProgramResourceIndex(int,int,java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: void replaceAll(java.util.function.UnaryOperator)>
<java.util.Arrays: int binarySearch(int[],int,int,int)>
<java.time.Instant: java.lang.Object query(java.time.temporal.TemporalQuery)>
<java.security.cert.CertPathChecker: void init(boolean)>
<java.util.stream.Stream: java.util.Optional min(java.util.Comparator)>
<java.security.cert.X509CRLSelector: java.util.Date getDateAndTime()>
<java.text.DecimalFormat: void setMaximumFractionDigits(int)>
<ohos.global.icu.text.SimpleDateFormat: java.lang.StringBuffer format(ohos.global.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)>
<java.io.PushbackInputStream: void unread(byte[],int,int)>
<java.lang.Long: int compareTo(java.lang.Object)>
<java.nio.channels.AsynchronousChannelGroup: java.nio.channels.AsynchronousChannelGroup withThreadPool(java.util.concurrent.ExecutorService)>
<java.time.YearMonth: int getYear()>
<ohos.agp.components.SearchBar: ohos.agp.components.SearchBar.FoldListener getFoldListener()>
<java.time.LocalTime: boolean isBefore(java.time.LocalTime)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int updateAndGet(java.lang.Object,java.util.function.IntUnaryOperator)>
<java.net.SocketImplFactory: java.net.SocketImpl createSocketImpl()>
<java.sql.CallableStatement: void setDouble(java.lang.String,double)>
<ohos.agp.components.TabList.Tab: void <init>(ohos.agp.components.TabList,ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.ai.cv.text.TextElement: void setElementRect(ohos.ai.cv.common.CvRect)>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<java.nio.file.Path: java.nio.file.Path subpath(int,int)>
<java.util.concurrent.locks.Lock: boolean tryLock()>
<ohos.global.icu.util.Calendar: int handleGetLimit(int,int)>
<ohos.utils.zson.ZSONObject: void putAll(java.util.Map)>
<java.util.concurrent.LinkedBlockingQueue: java.util.Iterator iterator()>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate date(java.time.chrono.Era,int,int,int)>
<java.util.logging.MemoryHandler: void flush()>
<ohos.accessibility.ability.AccessibilityWindow: int getWindowLayer()>
<ohos.agp.components.ProgressBar: ohos.agp.components.element.Element getBackgroundInstructElement()>
<ohos.data.rdb.ValuesBucket: boolean marshalling(ohos.utils.Parcel)>
<ohos.utils.geo.Rect: boolean isIntersect(int,int,int,int)>
<ohos.media.audio.AudioCapturerCallback: void <init>()>
<ohos.agp.render.render3d.Entity: void setComponent(ohos.agp.render.render3d.Component)>
<ohos.global.icu.util.IslamicCalendar: void <init>()>
<ohos.agp.components.ComponentContainer: void removeComponents(int,int)>
<ohos.media.audio.AudioStreamInfo.StreamUsage: int getValue()>
<java.io.PrintWriter: java.io.Writer append(char)>
<java.io.StringWriter: void write(int)>
<ohos.agp.render.render3d.math.Quaternion: void <clinit>()>
<java.security.cert.Certificate: void <init>(java.lang.String)>
<ohos.agp.components.Component: void setVisibility(int)>
<ohos.global.configuration.LocaleProfile: java.lang.String toString()>
<ohos.hiviewdfx.Debug: void <clinit>()>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<java.util.concurrent.LinkedBlockingQueue: int drainTo(java.util.Collection,int)>
<ohos.agp.components.Picker: void setElementFormatter(ohos.agp.components.Picker.ElementFormatter)>
<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<java.security.cert.PKIXParameters: java.lang.String getSigProvider()>
<java.text.DecimalFormatSymbols: java.lang.String getInternationalCurrencySymbol()>
<ohos.ai.cv.common.ICvBase: int getAvailability()>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat setSizeY(int)>
<ohos.utils.net.Uri: ohos.utils.net.Uri readFromParcel(ohos.utils.Parcel)>
<java.util.Vector: void copyInto(java.lang.Object[])>
<ohos.sysappcomponents.contact.ContactAttributes: void <init>()>
<ohos.global.icu.math.BigDecimal: int compareTo(ohos.global.icu.math.BigDecimal,ohos.global.icu.math.MathContext)>
<ohos.aafwk.content.Intent: ohos.utils.net.Uri getUri()>
<ohos.sensor.agent.CategoryOrientationAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryOrientationDataCallback,ohos.sensor.bean.CategoryOrientation,int)>
<ohos.global.icu.text.NumberFormat: int getMaximumIntegerDigits()>
<ohos.global.icu.math.BigDecimal: void <init>(java.lang.String)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setContent(ohos.event.notification.NotificationRequest.NotificationContent)>
<ohos.global.icu.util.ULocale: java.lang.String getBaseName(java.lang.String)>
<java.time.zone.ZoneRules: java.time.zone.ZoneOffsetTransition previousTransition(java.time.Instant)>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>
<ohos.agp.render.render3d.Engine.RenderMode: ohos.agp.render.render3d.Engine.RenderMode valueOf(java.lang.String)>
<ohos.media.photokit.metadata.AVMetadataHelper: java.util.List fetchVideoPixelMapsByIndex(int,int)>
<ohos.net.LinkAddress: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.components.Attr: int getIntegerValue()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet complement(java.lang.CharSequence)>
<java.nio.IntBuffer: java.nio.IntBuffer put(int)>
<ohos.global.icu.util.TimeZone: java.lang.Object freeze()>
<ohos.interwork.eventhandler.CourierEx: void <clinit>()>
<java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<ohos.sysappcomponents.calendar.entity.Accounts: void setAccType(java.lang.String)>
<ohos.agp.components.SlideDrawer: boolean closeSmoothly(ohos.agp.components.SlideDrawer.SlideDirection)>
<ohos.miscservices.inputmethodability.TextInputClient: boolean insertRichContent(ohos.miscservices.inputmethod.RichContent)>
<java.util.concurrent.ConcurrentMap: boolean remove(java.lang.Object,java.lang.Object)>
<java.util.stream.Stream: java.util.stream.Stream generate(java.util.function.Supplier)>
<ohos.utils.geo.RectFloat: void reorder()>
<ohos.bluetooth.ProfileBase: int getDeviceState(ohos.bluetooth.BluetoothRemoteDevice)>
<ohos.nfc.tag.MifareClassicTag: int getSectorsNum()>
<ohos.agp.render.opengl.GLES30: void glSamplerParameteri(int,int,int)>
<java.util.concurrent.RecursiveAction: java.lang.Object getRawResult()>
<ohos.account.app.AppAccountAbility: boolean setAccountCredential(java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.components.Component: boolean getContentEnable()>
<ohos.agp.render.opengl.GLES20: void glFramebufferRenderbuffer(int,int,int,int)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>
<java.util.SimpleTimeZone: void setStartYear(int)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate dateNow()>
<java.nio.channels.FileChannel: long write(java.nio.ByteBuffer[],int,int)>
<java.time.LocalDateTime: java.time.LocalDateTime plusMinutes(long)>
<ohos.agp.utils.Point: void <init>(float,float)>
<java.time.ZonedDateTime: int getSecond()>
<java.nio.channels.SelectableChannel: void <init>()>
<java.time.chrono.HijrahDate: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.util.concurrent.atomic.AtomicLong: void <init>(long)>
<ohos.utils.net.Uri: java.lang.String getDecodedUserInfo()>
<ohos.data.resultset.AbsResultSet: byte[] getBlob(int)>
<java.util.zip.Deflater: int deflate(byte[])>
<java.util.Deque: java.util.Iterator descendingIterator()>
<ohos.sysappcomponents.contact.entity.SipAddress: void <clinit>()>
<ohos.utils.PacMap: java.lang.String getString(java.lang.String)>
<java.nio.CharBuffer: java.util.stream.IntStream chars()>
<ohos.global.icu.text.UnicodeSet: int spanBack(java.lang.CharSequence,ohos.global.icu.text.UnicodeSet.SpanCondition)>
<java.net.URLConnection: java.net.URL getURL()>
<ohos.agp.colors.HsvColor: int hashCode()>
<ohos.global.icu.text.SimpleDateFormat: java.lang.String subFormat(char,int,int,java.text.FieldPosition,ohos.global.icu.text.DateFormatSymbols,ohos.global.icu.util.Calendar)>
<java.io.Reader: void close()>
<ohos.media.image.ImageReceiver: ohos.agp.graphics.Surface getRecevingSurface()>
<ohos.net.LocalSocket: void closeSocket()>
<java.sql.ResultSet: void updateDouble(int,double)>
<ohos.global.icu.text.MessageFormat: boolean usesNamedArguments()>
<ohos.agp.components.Image: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.util.logging.MemoryHandler: void <init>(java.util.logging.Handler,int,java.util.logging.Level)>
<ohos.agp.components.TabList: void setTabTextColors(int,int)>
<ohos.agp.render.opengl.GLES20: void glTexParameterf(int,int,float)>
<ohos.aafwk.content.Operation: java.util.Set getEntities()>
<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>
<ohos.media.audio.AudioRenderer: boolean start()>
<ohos.bundle.BundleInfo: void <init>(ohos.bundle.BundleInfo)>
<ohos.media.audio.AudioRenderer: int getMinBufferSize(int,ohos.media.audio.AudioStreamInfo.EncodingFormat,ohos.media.audio.AudioStreamInfo.ChannelMask)>
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>
<javax.security.cert.Certificate: void <init>()>
<ohos.agp.render.opengl.GLES32: void glBlendFuncSeparatei(int,int,int,int,int)>
<java.sql.PreparedStatement: java.sql.ParameterMetaData getParameterMetaData()>
<ohos.agp.render.render3d.components.LocalMatrixComponent: void <init>()>
<java.util.prefs.AbstractPreferences: java.util.prefs.Preferences node(java.lang.String)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query like(java.lang.String,java.lang.String)>
<ohos.agp.utils.DimensFloat: void <init>(ohos.agp.utils.DimensFloat)>
<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>
<ohos.global.icu.lang.UCharacter: int offsetByCodePoints(java.lang.CharSequence,int,int)>
<ohos.global.icu.text.Transliterator: int getMaximumContextLength()>
<ohos.agp.render.Canvas.VertexMode: ohos.agp.render.Canvas.VertexMode valueOf(java.lang.String)>
<ohos.media.common.Source: void <init>(java.lang.String,java.util.Map)>
<javax.sql.RowSetMetaData: void setNullable(int,int)>
<ohos.bundle.IBundleManager: boolean isApplicationEnabled(java.lang.String)>
<ohos.agp.components.webengine.ResourceResponse: void setData(java.io.InputStream,java.lang.String)>
<ohos.app.Context: void setColorMode(int)>
<ohos.org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>
<java.sql.CallableStatement: void setBoolean(java.lang.String,boolean)>
<ohos.multimodalinput.event.MmiPoint: java.lang.String toString()>
<ohos.global.icu.text.ListFormatter: java.lang.String format(java.lang.Object[])>
<ohos.agp.components.Component: void setDoubleClickedListener(ohos.agp.components.Component.DoubleClickedListener)>
<ohos.nfc.tag.MessageRecord: byte[] getPayload()>
<java.util.TimeZone: void setID(java.lang.String)>
<java.util.concurrent.ThreadLocalRandom: long nextLong(long)>
<javax.net.ssl.SSLSessionContext: int getSessionTimeout()>
<ohos.utils.PacMap: java.util.Set getKeys()>
<java.util.NavigableSet: java.util.SortedSet tailSet(java.lang.Object)>
<ohos.data.DatabaseFileConfig.Builder: void <init>()>
<ohos.event.notification.NotificationConstant.SemanticActionButton: void <clinit>()>
<ohos.usb.USBDevicePipe: boolean setConfiguration(ohos.usb.USBConfig)>
<ohos.global.icu.text.AlphabeticIndex.Bucket.LabelType: void <clinit>()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DisplayContext getContext(ohos.global.icu.text.DisplayContext.Type)>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<java.nio.file.SecureDirectoryStream: void move(java.lang.Object,java.nio.file.SecureDirectoryStream,java.lang.Object)>
<ohos.global.icu.text.DecimalFormat: boolean isParseCaseSensitive()>
<java.lang.Throwable: void <init>(java.lang.Throwable)>
<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>
<ohos.bundleactive.BundleActiveInfos: java.lang.String queryBundleName()>
<ohos.agp.utils.Circle: void zoom(float)>
<ohos.vibrator.agent.VibratorAgent: java.util.List getVibratorIdList()>
<ohos.agp.components.RecycleItemProvider: void setCacheSize(int)>
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
<ohos.global.icu.text.SelectFormat: void applyPattern(java.lang.String)>
<java.util.WeakHashMap: void <init>(java.util.Map)>
<java.net.StandardSocketOptions: void <clinit>()>
<java.lang.Character: boolean isLetterOrDigit(int)>
<java.lang.Math: long incrementExact(long)>
<ohos.agp.utils.Matrix44: double getDouble(int,int)>
<java.time.LocalTime: java.time.LocalTime ofNanoOfDay(long)>
<java.util.Map: boolean remove(java.lang.Object,java.lang.Object)>
<java.util.AbstractList: int indexOf(java.lang.Object)>
<ohos.miscservices.wallpaper.WallpaperController: void setWallpaper(ohos.media.image.PixelMap,int)>
<ohos.org.xml.sax.ContentHandler: void skippedEntity(java.lang.String)>
<ohos.wifi.p2p.WifiP2pController: void removeGroup(ohos.wifi.p2p.WifiP2pCallback)>
<ohos.global.icu.util.IslamicCalendar.CalculationType: ohos.global.icu.util.IslamicCalendar.CalculationType[] values()>
<ohos.agp.render.opengl.GLES30: void glProgramParameteri(int,int,int)>
<ohos.global.icu.text.NumberFormat: void setGroupingUsed(boolean)>
<java.lang.StringBuilder: int codePointAt(int)>
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object accumulateAndGet(int,java.lang.Object,java.util.function.BinaryOperator)>
<ohos.hiviewdfx.Caution: void <init>(ohos.hiviewdfx.HiChecker.Rule,java.lang.String,java.lang.Throwable)>
<java.util.zip.Deflater: void setInput(byte[],int,int)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage handleAsync(java.util.function.BiFunction)>
<ohos.javax.xml.namespace.QName: void <init>(java.lang.String)>
<ohos.nfc.tag.MessageRecord: ohos.nfc.tag.MessageRecord buildApplicationRecord(java.lang.String)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getTimeInstance(int)>
<java.lang.Double: int intValue()>
<ohos.data.rdb.ValuesBucket: void putShort(java.lang.String,java.lang.Short)>
<java.io.PrintStream: void print(char[])>
<ohos.agp.render.opengl.GLES31: void glFramebufferParameteri(int,int,int)>
<ohos.aafwk.ability.AbilityLifecycleCallbacks: void onAbilitySaveState(ohos.utils.PacMap)>
<java.util.logging.LogRecord: long getMillis()>
<java.time.chrono.ChronoZonedDateTime: int compareTo(java.lang.Object)>
<java.util.concurrent.ForkJoinPool: void <init>(int,java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory,java.lang.Thread.UncaughtExceptionHandler,boolean)>
<java.time.MonthDay: java.time.MonthDay now(java.time.Clock)>
<ohos.data.distributed.file.DistFile: java.io.File[] listFiles()>
<ohos.aafwk.ability.Ability: java.lang.CharSequence onNewDescription()>
<java.io.RandomAccessFile: java.io.FileDescriptor getFD()>
<ohos.data.search.model.Recommendation: long getCount()>
<ohos.media.photokit.metadata.AVMetadataHelper: void <init>()>
<ohos.utils.net.UrlQueryFilter: void parseUrlQuery(java.lang.String)>
<java.text.BreakIterator: java.util.Locale[] getAvailableLocales()>
<java.net.IDN: java.lang.String toUnicode(java.lang.String)>
<ohos.bundle.ModuleInfo: void <init>()>
<java.time.chrono.MinguoChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
<java.lang.ProcessBuilder.Redirect: int hashCode()>
<java.time.DayOfWeek: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<ohos.app.IAbilityManager: boolean isLowRamDevice()>
<ohos.global.icu.text.AlphabeticIndex.Record: java.lang.Object getData()>
<ohos.aafwk.ability.SystemMemoryInfo: boolean isLowSysMemory()>
<ohos.media.sessioncore.AVBrowserService: void onLoadAVElementList(java.lang.String,ohos.media.common.sessioncore.AVBrowserResult,ohos.utils.PacMap)>
<java.text.AttributedString: void <init>(java.lang.String)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: void set(java.lang.Object,long)>
<java.sql.SQLException: int getErrorCode()>
<ohos.sysappcomponents.calendar.entity.Accounts: java.lang.String getAttendeeTypes()>
<ohos.global.icu.text.Bidi: void <init>()>
<ohos.javax.xml.stream.XMLStreamReader: int nextTag()>
<ohos.global.icu.text.Collator: int getStrength()>
<java.time.Year: java.time.Year plus(java.time.temporal.TemporalAmount)>
<java.util.Collections: java.util.NavigableMap emptyNavigableMap()>
<ohos.javax.xml.validation.ValidatorHandler: void setProperty(java.lang.String,java.lang.Object)>
<ohos.utils.zson.ZSONArray: java.math.BigDecimal getBigDecimal(int)>
<java.util.BitSet: int cardinality()>
<java.util.logging.LogManager: boolean addLogger(java.util.logging.Logger)>
<javax.crypto.Cipher: void updateAAD(java.nio.ByteBuffer)>
<java.util.prefs.AbstractPreferences: java.util.prefs.AbstractPreferences[] cachedChildren()>
<javax.net.ssl.TrustManagerFactory: java.security.Provider getProvider()>
<ohos.net.NetHotspot: java.lang.String[] getNetHotspotAbleIfaces()>
<ohos.sysappcomponents.calendar.entity.Participants: int getParticipantStatus()>
<ohos.global.icu.text.DecimalFormat: void setMinimumExponentDigits(byte)>
<ohos.bundle.AbilityInfo: int getDefaultFormHeight()>
<java.util.stream.StreamSupport: java.util.stream.IntStream intStream(java.util.Spliterator.OfInt,boolean)>
<ohos.utils.BasePacMap: byte[] getByteValueArray(java.lang.String)>
<java.net.InetSocketAddress: void <init>(int)>
<ohos.biometrics.authentication.BiometricAuthentication.SystemAuthDialogInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.webengine.WebView: boolean pageDown(boolean)>
<java.time.Duration: java.time.Duration minusMinutes(long)>
<ohos.agp.components.Component: void setHeight(int)>
<java.util.logging.MemoryHandler: void setPushLevel(java.util.logging.Level)>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String)>
<ohos.org.xml.sax.Parser: void parse(ohos.org.xml.sax.InputSource)>
<ohos.bundle.IBundleManager: java.util.List getAllFormsInfo()>
<ohos.global.icu.util.TimeZone: java.lang.String getEquivalentID(java.lang.String,int)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.RoundingMode)>
<ohos.smartcomm.MultiPathManager: int disableMultipath(java.lang.String,java.lang.String)>
<ohos.event.commonevent.CommonEventSubscriber: void <init>(ohos.event.commonevent.CommonEventSubscribeInfo)>
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPublicExponent()>
<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>
<ohos.global.icu.text.CollationKey: ohos.global.icu.text.CollationKey merge(ohos.global.icu.text.CollationKey)>
<ohos.global.icu.util.Measure: ohos.global.icu.util.MeasureUnit getUnit()>
<java.net.HttpCookie: void setDomain(java.lang.String)>
<ohos.agp.components.ComponentTreeObserver: void addWindowBoundListener(ohos.agp.components.ComponentTreeObserver.WindowBoundListener)>
<java.util.concurrent.atomic.AtomicIntegerArray: int length()>
<ohos.agp.render.opengl.GLES30: boolean glIsTransformFeedback(int)>
<ohos.global.icu.util.GregorianCalendar: void <init>(ohos.global.icu.util.ULocale)>
<ohos.agp.components.MagicLayout: void setFoldAlignment(int)>
<ohos.aafwk.ability.AbilitySlice: void onBackground()>
<java.sql.DatabaseMetaData: boolean isCatalogAtStart()>
<java.util.concurrent.TimeUnit: void <clinit>()>
<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>
<ohos.global.icu.util.Calendar: ohos.global.icu.text.DateFormat handleGetDateFormat(java.lang.String,java.util.Locale)>
<ohos.global.icu.text.BreakIterator: boolean isBoundary(int)>
<java.time.LocalTime: java.time.LocalTime plusSeconds(long)>
<java.util.ResourceBundle.Control: long getTimeToLive(java.lang.String,java.util.Locale)>
<ohos.light.agent.LightAgent: boolean turnOn(ohos.light.bean.LightEffect)>
<java.util.Arrays: void fill(byte[],byte)>
<ohos.event.notification.ReminderRequestCalendar: boolean marshalling(ohos.utils.Parcel)>
<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>
<java.util.prefs.InvalidPreferencesFormatException: void <init>(java.lang.String,java.lang.Throwable)>
<java.net.InetAddress: int hashCode()>
<ohos.agp.render.opengl.GLES2Ext: void glSamplerParameterIuivEXT(int,int,int[])>
<java.time.LocalDateTime: int compareTo(java.time.chrono.ChronoLocalDateTime)>
<ohos.rpc.RemoteObject: int getCallingUid()>
<ohos.utils.PlainArray: boolean contains(int)>
<ohos.aafwk.ability.fraction.FractionAbility: void onStart(ohos.aafwk.content.Intent)>
<javax.net.ssl.SSLSocketFactory: void <init>()>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setBoolean(int,java.lang.String,boolean)>
<java.util.TreeSet: boolean isEmpty()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notIn(java.lang.String,long[])>
<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>
<java.time.Year: java.time.Year parse(java.lang.CharSequence)>
<ohos.media.photokit.support.AlbumListInfo: java.lang.String getLatitude()>
<java.security.KeyStoreException: void <init>(java.lang.String)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal max(ohos.global.icu.math.BigDecimal)>
<ohos.utils.PlainIntArray: java.util.Optional get(int)>
<java.lang.Process: java.lang.Process destroyForcibly()>
<ohos.bundle.IBundleManager: ohos.bundle.BundleInfo getBundleInfo(java.lang.String,java.lang.String,int)>
<java.nio.file.Files: java.lang.Object getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>
<ohos.bundle.ShortcutInfo: void setHostAbilityName(java.lang.String)>
<java.util.StringTokenizer: java.lang.String nextToken()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates like(java.lang.String,java.lang.String)>
<ohos.event.notification.NotificationUserInput: java.util.Map getMimeInputsFromIntent(ohos.aafwk.content.Intent,java.lang.String)>
<java.security.cert.X509CertSelector: void setIssuer(javax.security.auth.x500.X500Principal)>
<ohos.media.common.sessioncore.AVQueueElement: ohos.media.common.AVDescription getDescription()>
<java.util.Formatter: java.util.Locale locale()>
<java.util.PriorityQueue: boolean remove(java.lang.Object)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,java.util.Date)>
<java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence)>
<java.util.GregorianCalendar: void <init>()>
<ohos.aafwk.ability.Ability: void onInitialized(ohos.bundle.AbilityInfo)>
<ohos.miscservices.inputmethod.EditingText: void setSelectionStart(int)>
<ohos.event.notification.ReminderRequest: long getTimeInterval()>
<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>
<java.security.SecureRandomSpi: void engineSetSeed(byte[])>
<ohos.agp.colors.UserDefinedColor: void fromRgb(ohos.agp.colors.RgbColor)>
<ohos.storageinfomgr.StorageInfoManager: ohos.storageinfomgr.StorageInfo queryInfoByUid(java.util.UUID,int)>
<ohos.global.icu.text.Normalizer2.Mode: void <clinit>()>
<java.util.zip.Inflater: void setDictionary(byte[],int,int)>
<ohos.agp.render.opengl.GLES20: void glGetShaderiv(int,int,int[])>
<java.net.ServerSocket: void setSoTimeout(int)>
<java.util.OptionalInt: int orElseGet(java.util.function.IntSupplier)>
<ohos.agp.components.ComponentContainer.LayoutConfig: void setMarginsLeftAndRight(int,int)>
<java.time.temporal.ChronoField: java.time.temporal.ValueRange rangeRefinedBy(java.time.temporal.TemporalAccessor)>
<java.nio.file.FileSystemAlreadyExistsException: void <init>()>
<ohos.agp.render.Canvas: void setTexture(ohos.agp.render.Texture)>
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>
<ohos.data.search.schema.NotepadItem: java.lang.String getAttachment()>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getNumberInstance(ohos.global.icu.util.ULocale)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean tryAcquireSharedNanos(int,long)>
<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock()>
<java.util.ArrayDeque: java.util.Iterator iterator()>
<ohos.agp.render.opengl.GLES1X: void glLightxv(int,int,int[])>
<ohos.interwork.bundle.ElementNameEx: void <clinit>()>
<ohos.data.distributed.common.Options: ohos.data.distributed.common.Options setSecurityLevel(ohos.data.distributed.common.SecurityLevel)>
<ohos.agp.render.Path: void arcTo(ohos.agp.utils.Point,ohos.agp.utils.Point,float)>
<ohos.utils.Dimension: void <init>(int,int)>
<ohos.global.icu.text.DecimalFormat: void <init>()>
<ohos.media.audio.AudioStreamInfo.EncodingFormat: void <clinit>()>
<java.text.DecimalFormatSymbols: java.lang.String getCurrencySymbol()>
<java.util.stream.IntStream: java.util.stream.IntStream sequential()>
<ohos.agp.components.Component: int getForegroundGravity()>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate dateYearDay(java.time.chrono.Era,int,int)>
<ohos.accessibility.ability.SoftKeyBoardController: int getShowMode()>
<java.sql.PreparedStatement: boolean execute()>
<ohos.bundle.ShortcutInfo: void setLabel(java.lang.String)>
<java.security.Permission: void <init>(java.lang.String)>
<java.util.zip.DeflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Deflater)>
<java.security.AuthProvider: void <init>(java.lang.String,double,java.lang.String)>
<javax.sql.RowSet: void setNClob(int,java.io.Reader,long)>
<javax.sql.RowSetMetaData: void setPrecision(int,int)>
<java.lang.Character: boolean isLowSurrogate(char)>
<ohos.agp.utils.Rect: void <init>(ohos.agp.utils.Rect)>
<ohos.global.icu.text.MessageFormat: java.util.Locale getLocale()>
<ohos.workscheduler.WorkInfo: java.lang.String getAbilityName()>
<java.time.temporal.TemporalUnit: boolean isSupportedBy(java.time.temporal.Temporal)>
<ohos.bundle.AbilityInfo: void dump(java.lang.String,java.io.PrintWriter)>
<ohos.sensor.agent.CategoryOrientationAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryOrientationDataCallback,ohos.sensor.bean.CategoryOrientation,long)>
<ohos.bluetooth.ble.BleAdvertiseSettings.Builder: ohos.bluetooth.ble.BleAdvertiseSettings.Builder setTxPower(int)>
<ohos.media.common.Format: void putLongValue(java.lang.String,long)>
<ohos.global.icu.lang.UScript: boolean hasScript(int,int)>
<java.util.StringTokenizer: int countTokens()>
<ohos.global.icu.text.AlphabeticIndex.Bucket.LabelType: ohos.global.icu.text.AlphabeticIndex.Bucket.LabelType[] values()>
<java.security.IdentityScope: void addIdentity(java.security.Identity)>
<java.util.concurrent.SynchronousQueue: void <init>()>
<java.io.Flushable: void flush()>
<java.lang.SecurityManager: java.lang.ClassLoader currentClassLoader()>
<java.util.Stack: java.lang.Object peek()>
<ohos.aafwk.ability.Ability: void addActionRoute(java.lang.String,java.lang.String)>
<java.io.PrintStream: void println(char[])>
<ohos.aafwk.ability.AbilitySlice: void setDisplayOrientation(ohos.bundle.AbilityInfo.DisplayOrientation)>
<ohos.global.resource.AccessDeniedException: void <init>()>
<ohos.agp.render.Path.AddPathMode: ohos.agp.render.Path.AddPathMode[] values()>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.text.NumberFormat getNumberFormat()>
<java.lang.String: java.lang.String valueOf(long)>
<ohos.bundle.IBundleManager: java.util.List getFormsInfoByModule(java.lang.String,java.lang.String)>
<java.sql.CallableStatement: void setInt(java.lang.String,int)>
<java.sql.ResultSet: void updateCharacterStream(int,java.io.Reader,long)>
<ohos.agp.render.Path: void reverseAddPath(ohos.agp.render.Path)>
<java.time.chrono.MinguoChronology: boolean isLeapYear(long)>
<ohos.javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>
<ohos.data.rdb.RdbStore: int delete(ohos.data.rdb.AbsRdbPredicates)>
<ohos.app.Context: void requestPermissionsFromUser(java.lang.String[],int)>
<javax.net.ssl.SSLSocket: boolean getEnableSessionCreation()>
<ohos.agp.render.Path: void conicTo(float,float,float,float,float)>
<ohos.global.icu.lang.UCharacter: int getCharFromName(java.lang.String)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine(java.lang.String,int)>
<ohos.org.xml.sax.InputSource: java.lang.String getEncoding()>
<ohos.distributedschedule.interwork.DeviceInfo: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate of(int,int,int)>
<ohos.agp.components.Slider: ohos.agp.components.element.Element getIncreaseButton()>
<ohos.global.icu.util.ULocale: java.lang.String toLegacyType(java.lang.String,java.lang.String)>
<java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<ohos.media.camera.device.FrameConfig: int getImageRotation()>
<ohos.agp.render.render3d.components.CameraComponent.CameraType: ohos.agp.render.render3d.components.CameraComponent.CameraType valueOf(java.lang.String)>
<java.security.Policy: java.security.Policy getInstance(java.lang.String,java.security.Policy.Parameters)>
<java.security.cert.X509CertSelector: void setSubjectPublicKeyAlgID(java.lang.String)>
<java.util.Base64.Encoder: java.util.Base64.Encoder withoutPadding()>
<ohos.event.notification.NotificationSorting: boolean isDisplayBadge()>
<ohos.sysappcomponents.calendar.entity.Participants: void setParticipantName(java.lang.String)>
<ohos.agp.components.DatePicker: void setSelectedTextSize(int)>
<java.util.concurrent.atomic.AtomicStampedReference: boolean weakCompareAndSet(java.lang.Object,java.lang.Object,int,int)>
<java.util.stream.DoubleStream: java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)>
<ohos.data.search.schema.PlaceItem: java.lang.String getProvince()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>
<java.util.Date: int getDate()>
<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(java.lang.String)>
<ohos.location.RequestParam: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.utils.Parcel: boolean writeIntArray(int[])>
<ohos.ace.ability.AceAbility: void onForeground(ohos.aafwk.content.Intent)>
<ohos.global.icu.lang.UCharacter: int codePointAt(char[],int,int)>
<ohos.event.notification.NotificationRequest.NotificationContent: void <init>(ohos.event.notification.NotificationRequest.NotificationMediaContent)>
<java.util.Observable: void notifyObservers(java.lang.Object)>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitExecutableAsStaticInit(javax.lang.model.element.ExecutableElement,java.lang.Object)>
<javax.security.cert.CertificateNotYetValidException: void <init>(java.lang.String)>
<java.lang.String: void <init>(byte[])>
<ohos.bundle.LauncherService: void unRegisterCallback()>
<ohos.media.player.Player.IPlayerCallback: void onResolutionChanged(int,int)>
<java.time.chrono.IsoChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
<ohos.global.icu.text.Replaceable: void replace(int,int,char[],int,int)>
<ohos.utils.geo.DimensFloat: int getProductToInt()>
<java.util.stream.IntStream: boolean allMatch(java.util.function.IntPredicate)>
<java.sql.ResultSet: java.sql.Array getArray(int)>
<ohos.agp.components.Component: void setScrollbarFadingEnabled(boolean)>
<ohos.distributedschedule.interwork.DeviceInfo: ohos.distributedschedule.interwork.DeviceInfo.DeviceType getDeviceType()>
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>
<ohos.media.audio.AudioRenderer: boolean setPosition(int)>
<ohos.bluetooth.ble.GattService: java.util.UUID getUuid()>
<java.text.NumberFormat: boolean isGroupingUsed()>
<ohos.agp.components.ProgressBar: int getMaxHeight()>
<java.security.SignatureSpi: void engineSetParameter(java.security.spec.AlgorithmParameterSpec)>
<ohos.utils.PlainArray: java.util.Optional removeAt(int)>
<java.nio.file.Path: java.nio.file.Path normalize()>
<java.lang.IllegalAccessError: void <init>()>
<ohos.global.icu.text.Collator: boolean equals(java.lang.String,java.lang.String)>
<javax.crypto.ExemptionMechanismSpi: void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setAeTrigger(int)>
<java.security.cert.Extension: void encode(java.io.OutputStream)>
<java.util.Hashtable: void <init>(int)>
<ohos.agp.render.Canvas: void drawPicture(ohos.agp.render.Picture)>
<ohos.agp.components.TextField.CursorChangedListener: void onCursorChange(ohos.agp.components.TextField,int,int)>
<ohos.bluetooth.ble.BleAdvertiser: void stopAdvertising()>
<ohos.media.codec.CodecDescriptionList: boolean isEncodeSupportedByMime(java.lang.String)>
<javax.lang.model.SourceVersion: javax.lang.model.SourceVersion latest()>
<ohos.utils.geo.Rect: void setPivotXCoordinate(int)>
<ohos.data.resultset.SharedBlock: void setStartRowIndex(int)>
<ohos.data.orm.OrmContext: void registerObjectObserver(ohos.data.orm.OrmObject,ohos.data.orm.OrmObjectObserver)>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)>
<javax.lang.model.util.TypeKindVisitor6: void <init>()>
<ohos.utils.Ashmem: ohos.utils.Ashmem createAshmem(java.lang.String,int)>
<ohos.agp.components.surfaceprovider.SurfaceProvider: void pinToZTop(boolean)>
<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>
<java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>
<ohos.agp.render.opengl.Utils: boolean greatNotEqual(float,float)>
<ohos.global.icu.util.ULocale: java.lang.String getExtension(char)>
<java.time.Year: long getLong(java.time.temporal.TemporalField)>
<java.sql.ResultSet: void updateBigDecimal(java.lang.String,java.math.BigDecimal)>
<java.util.jar.JarFile: void <init>(java.io.File)>
<java.util.Date: java.time.Instant toInstant()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: int getWaitQueueLength()>
<java.util.List: boolean addAll(java.util.Collection)>
<ohos.media.player.Player.IPlayerCallback: void onNewTimedMetaData(ohos.media.player.Player.MediaTimedMetaData)>
<ohos.sysappcomponents.calendar.entity.Instances: void setInstanceStartMinute(long)>
<ohos.global.icu.util.TimeZone: boolean inDaylightTime(java.util.Date)>
<javax.net.ssl.SSLSession: java.lang.String getCipherSuite()>
<ohos.media.image.ImageSource: int getThumbnailFormat()>
<java.time.OffsetDateTime: int get(java.time.temporal.TemporalField)>
<ohos.sysappcomponents.calendar.entity.Events: void setAlarm(boolean)>
<ohos.utils.geo.Rect: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.TimePicker: void showSecond(boolean)>
<ohos.global.icu.text.TimeZoneFormat: int parseOffsetShortLocalizedGMT(java.lang.String,java.text.ParsePosition)>
<java.util.concurrent.ForkJoinWorkerThread: void <init>(java.util.concurrent.ForkJoinPool)>
<ohos.agp.render.opengl.GLES1X: void glLogicOp(int)>
<ohos.agp.components.ComponentContainer: ohos.agp.components.ComponentContainer.LayoutConfig verifyLayoutConfig(ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getPatternInstance(java.lang.String,ohos.global.icu.util.ULocale)>
<java.util.jar.JarInputStream: java.util.jar.Manifest getManifest()>
<java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>
<java.time.chrono.ChronoLocalDateTime: java.time.Instant toInstant(java.time.ZoneOffset)>
<java.util.LinkedList: void clear()>
<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReceiverType()>
<ohos.agp.render.render3d.Scene: ohos.agp.render.render3d.SceneNode createNode()>
<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>
<ohos.agp.render.render3d.components.LightComponent: void <init>()>
<ohos.media.audio.SoundPlayer.SoundPlayerParameters: float getSpeed()>
<java.time.chrono.IsoChronology: java.time.ZonedDateTime zonedDateTime(java.time.temporal.TemporalAccessor)>
<java.util.concurrent.CompletableFuture: java.lang.String toString()>
<java.util.NavigableMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>
<ohos.utils.IntArray: int hashCode()>
<ohos.agp.render.Path: void quadTo(ohos.agp.utils.Point,ohos.agp.utils.Point)>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: boolean isTangentDataDefined()>
<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>
<ohos.agp.render.Paint.ShaderType: int value()>
<ohos.agp.render.render3d.components.LightComponent: void setSpotOuterAngle(float)>
<java.nio.CharBuffer: int hashCode()>
<ohos.media.tubecore.AVTube.PlayMode: int getValue()>
<ohos.utils.geo.DimensFloat: int hashCode()>
<ohos.utils.PersistablePacMap: short[] getShortValueArray(java.lang.String)>
<ohos.media.audio.ToneDescriptor.ToneType: void <clinit>()>
<java.lang.reflect.Member: java.lang.Class getDeclaringClass()>
<java.io.ObjectOutputStream: void writeChar(int)>
<java.security.KeyManagementException: void <init>(java.lang.Throwable)>
<java.time.chrono.JapaneseChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
<ohos.light.bean.LightBrightness: void setGreenBrightness(int)>
<ohos.org.xml.sax.HandlerBase: void endElement(java.lang.String)>
<ohos.global.icu.text.ScientificNumberFormatter: ohos.global.icu.text.ScientificNumberFormatter getMarkupInstance(ohos.global.icu.util.ULocale,java.lang.String,java.lang.String)>
<java.lang.Float: float parseFloat(java.lang.String)>
<java.util.stream.IntStream: java.util.stream.IntStream parallel()>
<ohos.multimodalinput.event.MouseEvent: int getActionButton()>
<ohos.global.icu.text.PluralRules: void <clinit>()>
<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>
<ohos.agp.components.AbsSlider: void setThumbElement(ohos.agp.components.element.Element)>
<ohos.data.orm.DowngradeComparator: int compare(java.lang.Object,java.lang.Object)>
<ohos.global.icu.text.Bidi: int getProcessedLength()>
<ohos.global.resource.solidxml.TypedAttribute: int getPixelValue(boolean)>
<java.util.PriorityQueue: java.lang.Object poll()>
<ohos.agp.render.render3d.components.NodeComponent: void setExported(boolean)>
<java.security.cert.CertPathBuilder: java.security.cert.CertPathChecker getRevocationChecker()>
<java.io.UTFDataFormatException: void <init>(java.lang.String)>
<java.security.AlgorithmParametersSpi: void engineInit(byte[],java.lang.String)>
<java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<ohos.agp.components.IndexBar: int getSelectedCount()>
<ohos.agp.render.Paint.MaskType: int value()>
<ohos.global.icu.util.Calendar: void computeFields()>
<ohos.global.icu.util.BuddhistCalendar: void <init>(java.util.Date)>
<ohos.media.image.ImageReceiver: ohos.media.image.Image readNextImage()>
<ohos.vibrator.agent.VibratorAgent: boolean startOnce(int,int)>
<java.util.NavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>
<ohos.javax.xml.stream.events.XMLEvent: boolean isStartElement()>
<java.security.cert.CertificateRevokedException: java.util.Map getExtensions()>
<ohos.miscservices.wallpaper.WallpaperColorsCollection: int count()>
<java.lang.Package: java.lang.String getImplementationVendor()>
<ohos.media.common.AVDescription: java.lang.CharSequence getSubTitle()>
<java.util.concurrent.ForkJoinTask: boolean exec()>
<java.nio.file.AtomicMoveNotSupportedException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query isNotNull(java.lang.String)>
<ohos.sysappcomponents.contact.entity.PhoneNumber: void setLabelId(ohos.app.Context,int)>
<ohos.sysappcomponents.calendar.entity.Events: void setInitialId(java.lang.String)>
<javax.lang.model.util.TypeKindVisitor7: java.lang.Object visitUnion(javax.lang.model.type.UnionType,java.lang.Object)>
<ohos.agp.colors.HslColor: void <init>(float,float,float)>
<ohos.media.camera.device.CameraAbility: int[] getSupportedFaceDetection()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>
<ohos.utils.PacMap: ohos.utils.PacMap deepCopy()>
<java.lang.Float: int floatToRawIntBits(float)>
<ohos.agp.components.PageFlipper: void stopFlipping()>
<java.io.ByteArrayInputStream: int read()>
<java.lang.Class: boolean isPrimitive()>
<java.util.zip.ZipEntry: void setComment(java.lang.String)>
<java.util.concurrent.atomic.DoubleAdder: java.lang.String toString()>
<java.nio.file.FileSystemNotFoundException: void <init>()>
<java.util.LinkedHashMap: void replaceAll(java.util.function.BiFunction)>
<ohos.agp.components.ComponentContainer.LayoutConfig: int getMarginLeft()>
<javax.tools.DiagnosticListener: void report(javax.tools.Diagnostic)>
<ohos.nfc.tag.MessageRecord: boolean marshalling(ohos.utils.Parcel)>
<java.util.concurrent.CountedCompleter: void addToPendingCount(int)>
<ohos.eventhandler.InnerEvent: ohos.eventhandler.InnerEvent get(java.lang.Runnable)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectError(java.lang.ProcessBuilder.Redirect)>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>
<ohos.nfc.tag.TagInfo: boolean isProfileSupported(int)>
<ohos.data.rdb.ValuesBucket: void putBoolean(java.lang.String,java.lang.Boolean)>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.AlphabeticIndex setInflowLabel(java.lang.String)>
<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>
<ohos.agp.utils.Rect: boolean isIntersect(ohos.agp.utils.Rect)>
<ohos.agp.components.Component: void setScrollbarRoundRect(boolean)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenApplyAsync(java.util.function.Function)>
<ohos.global.icu.util.Calendar.WeekData: int hashCode()>
<java.security.cert.X509CRLEntry: java.util.Date getRevocationDate()>
<ohos.agp.render.render3d.gltf.GltfData: java.util.List getExternalUris()>
<ohos.agp.window.dialog.ListDialog: ohos.agp.components.Component getItemComponent(int)>
<ohos.media.camera.CameraKit: void registerCameraDeviceCallback(ohos.media.camera.device.CameraDeviceCallback,ohos.eventhandler.EventHandler)>
<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<java.security.acl.Group: boolean isMember(java.security.Principal)>
<ohos.net.LinkAddress: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.Text: void setMultipleLine(boolean)>
<java.util.HashMap: void clear()>
<java.net.ServerSocket: int getReceiveBufferSize()>
<java.util.concurrent.atomic.LongAccumulator: void <init>(java.util.function.LongBinaryOperator,long)>
<ohos.ai.cv.text.Text: void setBlocks(java.util.List)>
<java.sql.ResultSet: void updateNull(java.lang.String)>
<java.util.IdentityHashMap: int hashCode()>
<java.io.ObjectInput: int read(byte[])>
<java.lang.Byte: java.lang.Byte valueOf(java.lang.String,int)>
<ohos.agp.render.Canvas: void drawPaint(ohos.agp.render.Paint)>
<ohos.aafwk.content.Intent: int countEntities()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThan(java.lang.String,long)>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitNull(javax.lang.model.type.NullType,java.lang.Object)>
<ohos.app.Context: java.lang.String getString(int)>
<ohos.agp.render.render3d.components.SceneComponent: ohos.agp.render.render3d.math.Quaternion getEnvironmentRotation()>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream flatMap(java.util.function.DoubleFunction)>
<ohos.media.camera.params.ParameterKey.Key: boolean checkType(java.lang.Class)>
<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>
<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getPeerCertificates()>
<java.util.Base64.Encoder: java.nio.ByteBuffer encode(java.nio.ByteBuffer)>
<java.nio.channels.SeekableByteChannel: int read(java.nio.ByteBuffer)>
<java.time.LocalDate: void <clinit>()>
<ohos.data.distributed.common.KvStoreType: ohos.data.distributed.common.KvStoreType[] values()>
<ohos.global.icu.lang.UScript: ohos.global.icu.lang.UScript.ScriptUsage getUsage(int)>
<ohos.agp.components.AdaptiveBoxLayout.LayoutConfig: void <init>(ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.global.icu.text.Edits.Iterator: int newLength()>
<ohos.utils.LongPlainArray: ohos.utils.LongPlainArray clone()>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate dateEpochDay(long)>
<java.time.temporal.ChronoUnit: boolean isDateBased()>
<java.sql.CallableStatement: java.sql.Time getTime(int)>
<ohos.powermanager.PowerManager.RunningLockType: ohos.powermanager.PowerManager.RunningLockType[] values()>
<java.nio.ShortBuffer: short get()>
<java.util.Optional: java.lang.String toString()>
<ohos.data.search.model.IndexData: void put(java.lang.String,java.lang.Double)>
<ohos.aafwk.ability.AbilitySlice: void startAbilityForResult(ohos.aafwk.content.Intent,int)>
<ohos.telephony.TelephoneNumberUtils: boolean comparePhoneNumbers(java.lang.String,java.lang.String)>
<java.lang.String: java.lang.String toUpperCase()>
<java.util.Locale: java.util.Set getExtensionKeys()>
<java.nio.channels.FileLock: java.nio.channels.Channel acquiredBy()>
<ohos.agp.components.Component: void setRotation(float)>
<ohos.aafwk.ability.Ability: java.lang.String getOriginalDeviceId()>
<java.util.concurrent.FutureTask: void setException(java.lang.Throwable)>
<java.net.URLConnection: boolean getAllowUserInteraction()>
<ohos.data.distributed.common.FieldNode: boolean setDefault(boolean)>
<java.sql.Date: int getHours()>
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>
<ohos.global.icu.text.Transliterator: java.util.Enumeration getAvailableIDs()>
<ohos.data.distributed.common.Options: void <init>()>
<ohos.bundle.ApplicationInfo: int getFlags()>
<ohos.sysappcomponents.calendar.entity.Instances: long getInstanceBegin()>
<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>
<java.time.ZoneOffset: java.time.ZoneOffset ofHoursMinutesSeconds(int,int,int)>
<ohos.nfc.oma.Channel: byte[] transmit(byte[])>
<java.security.interfaces.DSAKeyPairGenerator: void initialize(int,boolean,java.security.SecureRandom)>
<javax.lang.model.util.ElementScanner8: void <init>(java.lang.Object)>
<ohos.data.search.schema.EventItem: java.lang.Double getLongitude()>
<ohos.agp.render.Canvas: boolean quickRejectRect(ohos.agp.utils.RectFloat)>
<ohos.global.icu.util.GregorianCalendar: void roll(int,int)>
<java.nio.channels.spi.AsynchronousChannelProvider: java.nio.channels.AsynchronousChannelGroup openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)>
<ohos.accessibility.ability.AccessibilityWindow: boolean isFocused()>
<ark.system.ClassLoaderCreator: java.lang.ClassLoader createClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)>
<ohos.agp.animation.Animator: boolean isRunning()>
<java.util.concurrent.ThreadPoolExecutor: long getCompletedTaskCount()>
<ohos.agp.utils.RectFloat: java.lang.String convertRectToSignedValue()>
<java.sql.Statement: boolean execute(java.lang.String,int[])>
<ohos.agp.render.render3d.util.BoundingBox: ohos.agp.render.render3d.math.Vector3 getAabbMax()>
<java.util.TreeMap: int size()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,java.lang.String)>
<java.lang.ArrayStoreException: void <init>()>
<ohos.utils.system.SystemCapability.Accessibility: void <init>()>
<ohos.agp.render.render3d.math.Vector2: float dot(ohos.agp.render.render3d.math.Vector2,ohos.agp.render.render3d.math.Vector2)>
<javax.sql.RowSet: void setAsciiStream(java.lang.String,java.io.InputStream,int)>
<java.lang.Boolean: void <init>(java.lang.String)>
<java.lang.NoSuchFieldException: void <init>(java.lang.String)>
<ohos.agp.render.render3d.components.CameraComponent: void setPerspectiveAspectRatio(float)>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate now(java.time.Clock)>
<ohos.agp.render.opengl.EGLContext: int hashCode()>
<ohos.agp.components.webengine.CookieStore: void <init>()>
<java.time.Year: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<ohos.agp.utils.Circle: java.lang.String toString()>
<java.util.concurrent.ExecutorService: boolean isTerminated()>
<ohos.accessibility.AccessibilityEventInfo: void setDescription(java.lang.CharSequence)>
<java.security.cert.PKIXBuilderParameters: java.lang.String toString()>
<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>
<java.sql.ResultSet: short getShort(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: boolean contains(java.lang.Object)>
<ohos.security.fileprotect.ISfpPolicyManager: int getFlag(ohos.app.Context,java.lang.String,java.lang.String)>
<ohos.agp.utils.Circle: boolean isEmpty()>
<java.io.InputStream: int read(byte[])>
<ohos.utils.zson.ZSONArray: java.lang.Object getObject(int,java.lang.Class)>
<ohos.data.async.JobParams.Builder: ohos.data.async.JobParams build()>
<ohos.data.rdb.RdbCantOpenException: void <init>(java.lang.String)>
<java.security.cert.CertStoreException: void <init>(java.lang.String)>
<java.util.concurrent.ArrayBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<java.sql.DatabaseMetaData: boolean supportsColumnAliasing()>
<javax.lang.model.util.Elements: javax.lang.model.element.Name getName(java.lang.CharSequence)>
<java.sql.CallableStatement: void setString(java.lang.String,java.lang.String)>
<java.util.Locale: java.lang.String getDisplayName()>
<ohos.utils.zson.ZSONObject: void <init>()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.eventhandler.EventHandler: void postTask(java.lang.Runnable,java.lang.Object)>
<ohos.agp.components.Component: void setTouchFocusable(boolean)>
<ohos.agp.render.opengl.EGLDisplay: int hashCode()>
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getContextualShaper(java.util.Set,java.awt.font.NumericShaper.Range)>
<ohos.global.icu.text.CollationElementIterator: int next()>
<ohos.global.icu.util.Calendar: boolean before(java.lang.Object)>
<ohos.location.GeoAddress: double getLatitude()>
<javax.lang.model.util.SimpleTypeVisitor8: java.lang.Object visitIntersection(javax.lang.model.type.IntersectionType,java.lang.Object)>
<java.util.concurrent.atomic.AtomicInteger: double doubleValue()>
<java.security.AlgorithmParameterGeneratorSpi: java.security.AlgorithmParameters engineGenerateParameters()>
<java.util.TreeMap: void <init>(java.util.Comparator)>
<java.util.IntSummaryStatistics: void <init>()>
<ohos.agp.components.IndexBar: ohos.agp.render.Paint getStringSelectedPaint()>
<ohos.agp.graphics.SurfaceOps: void setFormat(int)>
<ohos.global.icu.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.sensor.agent.CategoryLightAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryLightDataCallback,ohos.sensor.bean.CategoryLight,long)>
<ohos.utils.geo.Rect: boolean isInclude(ohos.utils.geo.Point)>
<java.time.temporal.TemporalField: long getFrom(java.time.temporal.TemporalAccessor)>
<ohos.app.IAbilityManager: void getSystemMemoryInfo(ohos.aafwk.ability.SystemMemoryInfo)>
<ohos.agp.render.ColorMatrix: void postTranslate(float,float,float,float)>
<java.io.FilterOutputStream: void write(byte[],int,int)>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitArray(javax.lang.model.type.ArrayType,java.lang.Object)>
<ohos.media.image.common.PixelFormat: ohos.media.image.common.PixelFormat valueOf(java.lang.String)>
<ohos.utils.system.SystemCapability.Data: void <init>()>
<java.lang.Math: float max(float,float)>
<ohos.global.icu.text.NumberFormat.Field: void <clinit>()>
<ohos.media.audio.AudioRenderer.SpeedPara: float getSpeed()>
<ohos.agp.components.Component: void setTouchEventListener(ohos.agp.components.Component.TouchEventListener)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThan(java.lang.String,java.sql.Timestamp)>
<java.nio.IntBuffer: int get()>
<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>
<java.time.Period: java.time.Period withDays(int)>
<ohos.sysappcomponents.calendar.entity.CalendarEntity: void setId(int)>
<ohos.ace.ability.LocalParticleAbility: void deregister(ohos.ace.ability.AceAbility)>
<java.io.RandomAccessFile: short readShort()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.NumberFormat getNumberFormat()>
<java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>
<ohos.agp.components.Slider: void setDecreaseButton(ohos.agp.components.element.Element,ohos.agp.components.Component.ClickedListener)>
<java.security.MessageDigestSpi: void engineUpdate(byte)>
<java.time.chrono.JapaneseDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<javax.sql.CommonDataSource: java.io.PrintWriter getLogWriter()>
<java.sql.CallableStatement: void setDate(java.lang.String,java.sql.Date)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder optionalStart()>
<java.sql.SQLRecoverableException: void <init>(java.lang.String,java.lang.String,int)>
<ohos.data.search.schema.DocumentItem: java.util.List getDocumentSchema()>
<ohos.location.RequestParam: void setScenario(int)>
<ohos.net.DataFlowStatistics: long getAllRxBytes()>
<java.text.BreakIterator: int first()>
<java.lang.Compiler: void enable()>
<ohos.event.notification.NotificationSubscriber: void onCanceled(ohos.event.notification.NotificationRequest)>
<javax.net.ssl.SSLContext: void <init>(javax.net.ssl.SSLContextSpi,java.security.Provider,java.lang.String)>
<ohos.global.icu.util.ULocale: java.lang.String getISO3Country()>
<java.nio.file.InvalidPathException: java.lang.String getReason()>
<java.util.concurrent.PriorityBlockingQueue: void <init>(java.util.Collection)>
<java.lang.ref.SoftReference: void <init>(java.lang.Object)>
<ohos.global.icu.util.Calendar: int getLeastMaximum(int)>
<ohos.agp.animation.AnimatorGroup: void clear()>
<java.text.DecimalFormat: void <init>(java.lang.String)>
<java.util.concurrent.CountDownLatch: void <init>(int)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.CharsetDecoder)>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: void setTangents(java.nio.FloatBuffer)>
<java.sql.SQLNonTransientConnectionException: void <init>()>
<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[],int,int)>
<java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<ohos.agp.components.AdaptiveBoxLayout.LayoutConfig: void <init>()>
<ohos.agp.components.Slider: ohos.agp.components.element.Element getThumbElement()>
<ohos.agp.components.Switch: void setStateOffText(java.lang.String)>
<java.io.ObjectStreamException: void <init>(java.lang.String)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notBetween(java.lang.String,double,double)>
<java.nio.channels.AsynchronousFileChannel: java.nio.channels.AsynchronousFileChannel truncate(long)>
<ohos.data.rdb.RdbPermException: void <init>(java.lang.String)>
<ohos.sysappcomponents.contact.entity.SipAddress: java.lang.String getLabelName()>
<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getPrivateExponent()>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.components.Component getContentCustomComponent()>
<ohos.utils.RationalNumber: void <init>(int,int)>
<java.io.ObjectOutputStream.PutField: void put(java.lang.String,float)>
<ohos.global.resource.solidxml.Attribute: ohos.global.resource.solidxml.TypedAttribute getTypedAttribute(ohos.global.resource.ResourceManager)>
<ohos.global.icu.text.Normalizer2: int getCombiningClass(int)>
<ohos.wifi.p2p.WifiP2pDevice: void <init>()>
<ohos.media.codec.CodecDescriptionList: java.util.List getSupportedDecoders()>
<java.lang.Number: int intValue()>
<javax.tools.ToolProvider: javax.tools.DocumentationTool getSystemDocumentationTool()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: ohos.event.notification.NotificationRequest.NotificationConversationalContent setConversationGroup(boolean)>
<ohos.ai.cv.common.BoundingBox: int getHeight()>
<ohos.media.image.ImageSource: java.lang.String getImagePropertyString(java.lang.String)>
<ohos.data.distributed.common.KvManagerConfig: boolean equals(java.lang.Object)>
<java.security.Identity: boolean equals(java.lang.Object)>
<ohos.agp.render.opengl.GLES20: void glDeleteFramebuffers(int,int[])>
<java.lang.Long: long sum(long,long)>
<ohos.media.audio.SoundPlayer: boolean resume(int)>
<ohos.agp.components.ListContainer: int getIndexForComponent(ohos.agp.components.Component)>
<ohos.agp.utils.Rect: void modify(ohos.agp.utils.Rect)>
<ohos.wifi.p2p.WifiP2pController: void connect(ohos.wifi.p2p.WifiP2pConfig,ohos.wifi.p2p.WifiP2pCallback)>
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndDecrement(int)>
<java.io.CharArrayWriter: java.io.Writer append(char)>
<java.nio.Buffer: java.nio.Buffer clear()>
<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>
<java.util.Hashtable: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<java.util.TreeMap: java.util.NavigableSet descendingKeySet()>
<ohos.agp.window.service.Window.IAccessibilityEventListener: void onDispatchEvent(ohos.accessibility.AccessibilityEventInfo)>
<ohos.global.icu.text.MessagePattern: void clear()>
<ohos.global.icu.util.ChineseCalendar: int handleGetLimit(int,int)>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<javax.lang.model.util.AbstractTypeVisitor6: java.lang.Object visitUnknown(javax.lang.model.type.TypeMirror,java.lang.Object)>
<ohos.agp.database.Publisher: void unregisterSubscriber(long)>
<ohos.global.configuration.Configuration: java.lang.String toString()>
<java.io.FileInputStream: void close()>
<java.util.LinkedHashSet: void <init>(int,float)>
<ohos.data.distributed.common.Schema: boolean setCompositeIndexes(java.util.List)>
<java.util.concurrent.ConcurrentHashMap: long mappingCount()>
<java.util.stream.Stream: java.util.stream.Stream distinct()>
<java.time.OffsetDateTime: java.time.OffsetDateTime ofInstant(java.time.Instant,java.time.ZoneId)>
<ohos.agp.render.opengl.GLES30: void glDrawBuffers(int,int[])>
<ohos.media.audio.AudioRendererInfo.AudioStreamOutputFlag: ohos.media.audio.AudioRendererInfo.AudioStreamOutputFlag valueOf(int)>
<java.lang.StringBuilder: java.lang.Appendable append(char)>
<ohos.media.common.AudioProperty.Builder: ohos.media.common.AudioProperty.Builder setRecorderAudioEncoder(int)>
<ohos.bundleactive.BundleActiveInfos: long queryAbilityPrevSeenMs()>
<ohos.ai.asr.AsrIntent: void setVadFrontWaitMs(int)>
<javax.security.auth.Destroyable: boolean isDestroyed()>
<java.text.NumberFormat: void setMinimumFractionDigits(int)>
<java.util.Hashtable: java.lang.String toString()>
<ohos.utils.PlainBooleanArray: void <init>(int)>
<java.util.concurrent.AbstractExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>
<java.sql.CallableStatement: byte getByte(java.lang.String)>
<java.util.UUID: int hashCode()>
<javax.crypto.CipherSpi: void <init>()>
<ohos.data.distributed.common.UserInfo: void setUserId(java.lang.String)>
<ohos.bluetooth.ble.GattCharacteristic: int getProperties()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThan(java.lang.String,java.sql.Time)>
<javax.net.ssl.SSLServerSocket: void setWantClientAuth(boolean)>
<ohos.agp.components.ListContainer: void removeAllComponents()>
<java.net.Socket: void shutdownOutput()>
<java.math.BigInteger: long longValue()>
<java.util.concurrent.ThreadPoolExecutor: long getTaskCount()>
<ohos.agp.components.Component: boolean simulateDrag()>
<ohos.javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setImageRotation(int)>
<ohos.agp.components.webengine.ResourceResponse: java.lang.String getReason()>
<ohos.miscservices.download.DownloadSession: void <init>(ohos.app.Context,ohos.miscservices.download.DownloadConfig)>
<ohos.data.search.schema.PlaceItem: java.lang.String getCity()>
<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int,java.util.Calendar)>
<ohos.media.audio.AudioManager: boolean isMicrophoneMute()>
<ohos.bundle.BundleInfo: java.lang.String getEntryModuleName()>
<java.util.concurrent.LinkedBlockingQueue: java.lang.String toString()>
<ohos.sysappcomponents.calendar.entity.Events: void setEventPosition(java.lang.String)>
<ohos.global.icu.text.DecimalFormat: ohos.global.icu.text.CurrencyPluralInfo getCurrencyPluralInfo()>
<ohos.media.audio.AudioManager: void <init>(java.lang.String)>
<ohos.miscservices.inputmethodability.TextInputClient: boolean subscribeCursorContext()>
<ohos.media.image.common.AllocatorType: int getValue()>
<ohos.agp.utils.Circle: boolean isIntersect(float,float,float)>
<ohos.agp.render.opengl.GLES1X: void glFogfv(int,float[])>
<java.lang.reflect.Field: java.lang.Class getType()>
<java.util.concurrent.Executors: java.util.concurrent.Callable callable(java.lang.Runnable)>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)>
<ohos.data.resultset.AbsResultSet: java.lang.String getString(int)>
<java.sql.SQLInput: byte[] readBytes()>
<ohos.data.rdb.RawRdbPredicates: java.lang.String getWhereClause()>
<ohos.global.icu.text.BidiRun: int getStart()>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder encodedOpaqueSsp(java.lang.String)>
<java.nio.file.Files: java.nio.file.Path walkFileTree(java.nio.file.Path,java.nio.file.FileVisitor)>
<ohos.aafwk.content.Intent.OperationBuilder: ohos.aafwk.content.Intent.OperationBuilder withEntities(java.util.Set)>
<java.time.OffsetTime: java.time.OffsetTime withNano(int)>
<ohos.data.resultset.ResultSet.ColumnType: void <clinit>()>
<ohos.wifi.p2p.WifiP2pDevice: java.lang.String getDeviceAddress()>
<java.nio.Buffer: int arrayOffset()>
<ohos.rpc.ReliableFileDescriptor.AutoCloseFileOutputStream: void close()>
<ohos.global.icu.text.RuleBasedCollator: void <init>(java.lang.String)>
<java.util.concurrent.CyclicBarrier: int await()>
<java.net.URLClassLoader: java.util.Enumeration findResources(java.lang.String)>
<java.util.function.Predicate: java.util.function.Predicate negate()>
<ohos.event.notification.NotificationRequest: boolean isAlertOneTime()>
<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(int)>
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndSet(int,int)>
<javax.net.ssl.SSLContext: void setDefault(javax.net.ssl.SSLContext)>
<ohos.agp.components.RadioButton: void <init>(ohos.app.Context)>
<ohos.javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>
<java.io.RandomAccessFile: long readLong()>
<java.sql.BatchUpdateException: void <init>(java.lang.String,java.lang.String,int,int[],java.lang.Throwable)>
<ohos.agp.render.render3d.resources.ResourceManager: java.util.Optional createPlayback(ohos.agp.render.render3d.resources.ResourceHandle,ohos.agp.render.render3d.SceneNode)>
<ohos.system.OsHelper: int readFile(java.io.FileDescriptor,byte[],int,int)>
<java.util.jar.JarException: void <init>()>
<ohos.data.search.SearchSession: int getSearchHitCount(java.lang.String)>
<java.lang.StringBuilder: int codePointCount(int,int)>
<java.lang.reflect.Method: int getModifiers()>
<java.nio.DoubleBuffer: int arrayOffset()>
<ohos.data.distributed.file.DistFile: ohos.data.distributed.file.DistFile[] listFiles(java.io.FileFilter)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<java.sql.ResultSet: void updateByte(java.lang.String,byte)>
<javax.sql.RowSet: void setTypeMap(java.util.Map)>
<ohos.miscservices.pasteboard.PasteData.Record: java.lang.String getHtmlText()>
<java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock: boolean isHeldByCurrentThread()>
<java.util.Deque: java.lang.Object getLast()>
<java.net.MulticastSocket: void setTimeToLive(int)>
<ohos.global.icu.math.BigDecimal: void <init>(java.math.BigInteger)>
<java.nio.LongBuffer: java.nio.LongBuffer put(int,long)>
<java.util.Collections: java.util.SortedSet checkedSortedSet(java.util.SortedSet,java.lang.Class)>
<java.util.concurrent.locks.ReentrantLock: boolean isLocked()>
<ohos.global.icu.text.UCharacterIterator: java.lang.String getText()>
<java.util.Spliterators.AbstractDoubleSpliterator: java.util.Spliterator trySplit()>
<java.security.cert.PKIXParameters: void <init>(java.security.KeyStore)>
<ohos.agp.components.StackLayout: ohos.agp.components.ComponentContainer.LayoutConfig verifyLayoutConfig(ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.security.cert.CertSelector: java.lang.Object clone()>
<java.net.DatagramPacket: void setSocketAddress(java.net.SocketAddress)>
<java.util.stream.LongStream: long sum()>
<java.util.ArrayDeque: boolean offerLast(java.lang.Object)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenAccept(java.util.function.Consumer)>
<ohos.accessibility.AccessibilityEventInfo: void setClassName(java.lang.CharSequence)>
<ohos.data.search.schema.MessageItem: ohos.data.search.schema.MessageItem setContent(java.lang.String)>
<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable,java.util.function.Supplier)>
<ohos.global.icu.text.CaseMap.Upper: java.lang.Appendable apply(java.util.Locale,java.lang.CharSequence,java.lang.Appendable,ohos.global.icu.text.Edits)>
<java.util.Deque: boolean offerLast(java.lang.Object)>
<java.io.CharArrayWriter: void write(java.lang.String,int,int)>
<java.io.PrintWriter: void write(int)>
<java.util.function.BiPredicate: java.util.function.BiPredicate negate()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,java.util.Date)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates between(java.lang.String,java.util.Calendar,java.util.Calendar)>
<javax.security.auth.callback.UnsupportedCallbackException: void <init>(javax.security.auth.callback.Callback)>
<ohos.agp.components.SearchBar: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.data.search.schema.EmailItem: ohos.data.search.schema.EmailItem setBccName(java.lang.String)>
<java.util.concurrent.ThreadPoolExecutor: long getKeepAliveTime(java.util.concurrent.TimeUnit)>
<ohos.global.icu.text.DateTimePatternGenerator: void setDateTimeFormat(java.lang.String)>
<ohos.agp.components.Component: ohos.agp.components.Component.LayoutRefreshedListener getLayoutRefreshedListener()>
<java.util.Locale: java.util.Set getUnicodeLocaleAttributes()>
<java.util.Spliterators: java.util.Spliterator.OfInt spliterator(int[],int,int,int)>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: java.lang.String getTitle()>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder setUnicodeLocaleKeyword(java.lang.String,java.lang.String)>
<java.util.LinkedList: boolean addAll(java.util.Collection)>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 multiply(ohos.agp.render.render3d.math.Vector2,float)>
<ohos.bluetooth.ble.BlePeripheralManagerCallback: void receiveCharacteristicWriteEvent(ohos.bluetooth.ble.BlePeripheralDevice,int,ohos.bluetooth.ble.GattCharacteristic,boolean,boolean,int,byte[])>
<ohos.miscservices.wallpaper.WallpaperController: void reset(int)>
<java.nio.channels.NetworkChannel: java.lang.Object getOption(java.net.SocketOption)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate plus(java.time.temporal.TemporalAmount)>
<ohos.utils.net.Uri: ohos.utils.net.Uri getUriFromFileCanonicalPath(java.io.File)>
<java.util.BitSet: void andNot(java.util.BitSet)>
<ohos.bundleactive.BundleActiveStates.State: java.lang.String queryIndexOfLink()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setCustomFloatView(ohos.agp.components.ComponentProvider)>
<ohos.media.player.Player.MediaTimeInfo: void <init>()>
<ohos.data.search.schema.ContactItem: java.lang.String getPhone()>
<ohos.agp.utils.Matrix: float mapRadius(float)>
<java.time.chrono.HijrahChronology: java.util.List eras()>
<java.util.ResourceBundle: void <init>()>
<ohos.data.search.schema.Schema: java.lang.Object setCategory(java.lang.String)>
<ohos.agp.colors.RgbColor: void <init>(int,int,int,int)>
<java.text.NumberFormat: int getMaximumIntegerDigits()>
<java.nio.file.attribute.BasicFileAttributeView: java.nio.file.attribute.BasicFileAttributes readAttributes()>
<java.util.Spliterators.AbstractSpliterator: java.util.Spliterator trySplit()>
<ohos.utils.HalfFloat: byte byteValue()>
<ohos.agp.render.opengl.GLES20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<ohos.media.recorder.Recorder: boolean release()>
<java.nio.charset.CoderResult: java.nio.charset.CoderResult unmappableForLength(int)>
<java.nio.channels.spi.AbstractSelectableChannel: boolean isRegistered()>
<java.text.StringCharacterIterator: void <init>(java.lang.String,int)>
<java.security.CodeSource: java.net.URL getLocation()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object search(long,java.util.function.BiFunction)>
<java.security.Permissions: void <init>()>
<ohos.global.icu.text.Collator: boolean equals(java.lang.Object)>
<ohos.media.player.Player: boolean setSurfaceOps(ohos.agp.graphics.SurfaceOps)>
<ohos.data.search.SearchAbility: void <init>(ohos.app.Context)>
<ohos.global.icu.text.DecimalFormatSymbols: java.util.Locale getLocale()>
<java.time.Instant: long toEpochMilli()>
<ohos.agp.render.Canvas: void clipRect(ohos.agp.utils.RectFloat,ohos.agp.render.Canvas.ClipOp)>
<ohos.agp.components.Component: void setVerticalPadding(int,int)>
<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>
<ohos.security.permission.Permission.OnRequestPermissionsResult: void onTimeOut(java.lang.String,java.lang.String[])>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal valueOf(long)>
<ohos.global.icu.lang.UCharacter: boolean isBaseForm(int)>
<ohos.media.image.PixelMap: ohos.media.image.common.Size getFitDensitySize(int)>
<ohos.eventhandler.EventRunner: ohos.eventhandler.EventQueue getCurrentEventQueue()>
<ohos.global.icu.text.AlphabeticIndex.ImmutableIndex: int getBucketIndex(java.lang.CharSequence)>
<java.text.Bidi: int getRunCount()>
<ohos.agp.render.render3d.Engine: ohos.agp.render.render3d.Engine.RenderNodeGraph loadRenderNodeGraph(java.lang.String)>
<ohos.sysappcomponents.calendar.entity.Events: void setStartTimezone(java.lang.String)>
<java.util.concurrent.RecursiveTask: boolean exec()>
<ohos.utils.PlainIntArray: ohos.utils.PlainIntArray clone()>
<ohos.agp.components.Component: int getRight()>
<ohos.sysappcomponents.calendar.CalendarCollection: int count()>
<java.sql.DatabaseMetaData: int getResultSetHoldability()>
<java.time.ZonedDateTime: java.time.DayOfWeek getDayOfWeek()>
<java.io.LineNumberInputStream: void reset()>
<ohos.aafwk.ability.fraction.Fraction: ohos.agp.components.Component getComponent()>
<ohos.media.audio.AudioCapturerInfo.AudioInputSource: void <clinit>()>
<ohos.media.tubecore.AVTubeEx: void setStreamType(ohos.media.audio.AudioStreamInfo.StreamType)>
<ohos.agp.render.Canvas: void drawPoint(ohos.agp.utils.Point,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<ohos.utils.LongPlainArray: void clear()>
<ohos.app.AbilityContext: java.lang.String getBundleCodePath()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,java.util.Date)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getSuperTables(java.lang.String,java.lang.String,java.lang.String)>
<ohos.data.search.schema.NoticeItem: ohos.data.search.schema.NoticeItem setContent(java.lang.String)>
<java.sql.DatabaseMetaData: int getMaxColumnsInOrderBy()>
<ohos.aafwk.ability.continuation.IContinuationDeviceCallback: void onConnected(ohos.aafwk.ability.continuation.ContinuationDeviceInfo)>
<java.io.ObjectOutputStream.PutField: void <init>()>
<ohos.accessibility.ability.AccessibleAbility: boolean onKeyPressEvent(ohos.multimodalinput.event.KeyEvent)>
<ohos.agp.components.Picker: void setCompoundElementPadding(int)>
<java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock: void <init>(java.util.concurrent.locks.ReentrantReadWriteLock)>
<ohos.data.search.schema.Schema: java.lang.String getKeywords()>
<ohos.utils.BasePacMap: java.lang.String getString(java.lang.String,java.lang.String)>
<javax.tools.StandardJavaFileManager: java.lang.Iterable getLocation(javax.tools.JavaFileManager.Location)>
<java.util.Calendar.Builder: java.util.Calendar.Builder setTimeOfDay(int,int,int)>
<ohos.global.icu.text.MessagePattern: boolean partSubstringMatches(ohos.global.icu.text.MessagePattern.Part,java.lang.String)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendFraction(java.time.temporal.TemporalField,int,int,boolean)>
<ohos.agp.components.PageSlider: void setReboundEffectParams(int,float,int)>
<java.lang.Math: double nextAfter(double,double)>
<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>
<java.util.Locale.Builder: java.util.Locale.Builder setScript(java.lang.String)>
<java.util.concurrent.Phaser: int bulkRegister(int)>
<ohos.agp.components.TabList: void setFixedMode(boolean)>
<ohos.aafwk.ability.Ability: void onWindowFocusChanged(boolean)>
<ohos.event.notification.NotificationRequest: int getBadgeNumber()>
<java.lang.Class: boolean isMemberClass()>
<java.security.GeneralSecurityException: void <init>(java.lang.Throwable)>
<ohos.location.GeoAddress: void setAddressUrl(java.lang.String)>
<java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)>
<java.lang.Byte: java.lang.Byte decode(java.lang.String)>
<ohos.agp.components.webengine.ResourceResponse: void setStatusAndReason(int,java.lang.String)>
<java.nio.charset.Charset: java.lang.String displayName()>
<java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>
<java.util.Collections: java.util.NavigableMap unmodifiableNavigableMap(java.util.NavigableMap)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate now()>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 divide(ohos.agp.render.render3d.math.Vector4,float)>
<java.net.URLConnection: void setDoInput(boolean)>
<java.sql.ResultSetMetaData: java.lang.String getCatalogName(int)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.time.chrono.ThaiBuddhistChronology: java.lang.String getId()>
<java.util.Scanner: void <init>(java.nio.file.Path)>
<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap.KeySetView newKeySet()>
<ohos.utils.LightweightSet: boolean addAll(ohos.utils.LightweightSet)>
<java.time.chrono.IsoChronology: boolean isLeapYear(long)>
<java.security.Signature: int sign(byte[],int,int)>
<javax.lang.model.element.TypeParameterElement: java.util.List getBounds()>
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getP()>
<java.sql.Date: void setHours(int)>
<ohos.global.icu.util.JapaneseCalendar: void <init>(int,int,int,int)>
<javax.lang.model.util.AbstractTypeVisitor6: java.lang.Object visit(javax.lang.model.type.TypeMirror)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayKeyword(java.lang.String,java.lang.String)>
<ohos.media.audio.SoundPlayer.SoundPlayerParameters: void setPriority(int)>
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>
<java.util.Hashtable: java.util.Set keySet()>
<ohos.net.DataFlowStatistics: void clearDataFlowTag()>
<ohos.sysappcomponents.contact.entity.Email: java.lang.String getDisplayName()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object reduceValues(long,java.util.function.BiFunction)>
<ohos.data.orm.OrmMigration: void onMigrate(ohos.data.rdb.RdbStore)>
<ohos.hiviewdfx.Debug: int getProcessSwappablePssSum()>
<java.text.Collator: java.text.CollationKey getCollationKey(java.lang.String)>
<java.util.ServiceLoader: void reload()>
<ohos.global.icu.text.DecimalFormatSymbols: void setPatternForCurrencySpacing(int,boolean,java.lang.String)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<ohos.agp.render.render3d.resources.ImageFormat: ohos.agp.render.render3d.resources.ImageFormat[] values()>
<ohos.event.notification.NotificationUserInput: void <clinit>()>
<ohos.global.icu.number.FormattedNumber: java.lang.String toString()>
<java.net.JarURLConnection: java.util.jar.JarFile getJarFile()>
<ohos.aafwk.ability.MemoryInfo: void <init>()>
<ohos.agp.animation.styledsolutions.GravitationalClick: ohos.agp.animation.AnimatorProperty getActionDownAnimation(ohos.agp.components.Component,int,float)>
<ohos.miscservices.pasteboard.PasteData.Record: boolean unmarshalling(ohos.utils.Parcel)>
<java.lang.StringBuilder: java.lang.CharSequence subSequence(int,int)>
<java.util.concurrent.atomic.AtomicReferenceArray: boolean compareAndSet(int,java.lang.Object,java.lang.Object)>
<ohos.event.notification.NotificationRequest: boolean isColorEnabled()>
<ohos.ai.cv.text.TextConfiguration: ohos.ai.cv.common.CvRect getRoi()>
<java.nio.DoubleBuffer: double[] array()>
<ohos.data.distributed.common.Value: ohos.data.distributed.common.Value get(int)>
<java.sql.DataTruncation: int getIndex()>
<java.util.zip.ZipEntry: java.lang.String toString()>
<ohos.agp.components.Component: ohos.agp.components.Component.TouchEventListener getTouchEventListener()>
<ohos.agp.render.PathEffect: void <init>(float[],float)>
<java.util.AbstractCollection: java.lang.Object[] toArray()>
<ohos.aafwk.ability.FormBindingData: void <init>(java.lang.String)>
<java.nio.Buffer: java.nio.Buffer mark()>
<ohos.agp.render.layoutboost.LayoutBoost: ohos.agp.components.Component inflate(ohos.agp.components.LayoutScatter,ohos.app.Context,int,ohos.agp.components.ComponentContainer,boolean)>
<ohos.usb.USBInterface: int getInterfaceSubclass()>
<ohos.agp.components.DirectionalLayout.LayoutConfig: void <init>(ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.utils.PacMap: int hashCode()>
<java.security.cert.X509CRLSelector: void setMaxCRLNumber(java.math.BigInteger)>
<java.time.LocalTime: long toNanoOfDay()>
<ohos.sysappcomponents.calendar.entity.Accounts: java.lang.String getRemindersType()>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream sorted()>
<ohos.media.photokit.support.FetchResult: java.lang.Object getNextObject()>
<java.nio.file.Files: java.io.BufferedReader newBufferedReader(java.nio.file.Path)>
<javax.tools.StandardLocation: java.lang.String getName()>
<java.util.concurrent.SynchronousQueue: boolean contains(java.lang.Object)>
<java.sql.SQLTimeoutException: void <init>()>
<ohos.accessibility.CaptionProperties: boolean checkProperty(java.lang.String)>
<ohos.agp.components.SearchBar.FoldListener: boolean onFold()>
<ohos.global.icu.text.DateTimePatternGenerator.DisplayWidth: ohos.global.icu.text.DateTimePatternGenerator.DisplayWidth[] values()>
<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>
<ohos.agp.components.DatePicker.ValueChangedListener: void onValueChanged(ohos.agp.components.DatePicker,int,int,int)>
<ohos.utils.LruBuffer: java.lang.Object get(java.lang.Object)>
<ohos.global.icu.math.BigDecimal: short shortValueExact()>
<java.time.Duration: long toNanos()>
<ohos.utils.PlainLongArray: void clear()>
<ohos.global.icu.text.DecimalFormatSymbols: ohos.global.icu.text.DecimalFormatSymbols forNumberingSystem(java.util.Locale,ohos.global.icu.text.NumberingSystem)>
<ohos.media.image.PixelMap: void writePixel(ohos.media.image.common.Position,int)>
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.render.Texture: int getHeight()>
<java.nio.file.Path: int compareTo(java.nio.file.Path)>
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getG()>
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>
<ohos.global.icu.lang.UCharacter: java.lang.String toLowerCase(java.lang.String)>
<java.lang.SecurityManager: void checkRead(java.lang.String,java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy: void <init>()>
<ohos.media.sessioncore.AVController: java.util.List getAVQueueElement()>
<java.net.URI: java.net.URI resolve(java.net.URI)>
<java.sql.SQLTransientConnectionException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.SimpleTimeZone: int getOffset(int,int,int,int,int,int)>
<ohos.global.icu.text.UnicodeSet: boolean matchesIndexValue(int)>
<ohos.utils.Parcel: boolean readSequenceable(ohos.utils.Sequenceable)>
<java.net.DatagramSocketImpl: void join(java.net.InetAddress)>
<ohos.global.icu.util.Calendar: int getFieldCount()>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setPhotoCategory(java.lang.String)>
<ohos.agp.render.Paint: void setFont(ohos.agp.text.Font)>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitVariableAsLocalVariable(javax.lang.model.element.VariableElement,java.lang.Object)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage acceptEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Consumer,java.util.concurrent.Executor)>
<ohos.app.IAbilityManager: void getMyProcessMemoryInfo(ohos.aafwk.ability.RunningProcessInfo)>
<javax.net.ssl.X509ExtendedTrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)>
<ohos.utils.RationalNumber: int compareTo(java.lang.Object)>
<java.security.cert.CRL: java.lang.String toString()>
<ohos.data.resultset.SharedBlock: boolean putBlob(byte[],int,int)>
<ohos.global.icu.text.DateIntervalFormat.FormattedDateInterval: int length()>
<ohos.usb.USBConfig: java.lang.String getName()>
<ohos.wifi.WifiSecurity.EapMethod: ohos.wifi.WifiSecurity.EapMethod valueOf(java.lang.String)>
<ohos.os.ProcessManager: long getStartUptime()>
<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>
<ohos.global.icu.text.DecimalFormat: java.lang.String toString()>
<ohos.agp.render.opengl.GLES20: boolean glIsFramebuffer(int)>
<java.io.InputStreamReader: boolean ready()>
<ohos.aafwk.ability.AbilityPackage: void onInitialize()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getTimeInstance(ohos.global.icu.util.Calendar,int,java.util.Locale)>
<ohos.global.icu.util.ICUUncheckedIOException: void <init>(java.lang.Throwable)>
<ohos.hiviewdfx.HiTrace: ohos.hiviewdfx.HiTraceId begin(java.lang.String,int)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getColumnPrivileges(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.media.common.sessioncore.AVElementCallback: void onAVElementLoaded(ohos.media.common.sessioncore.AVElement)>
<java.util.concurrent.CountedCompleter: int decrementPendingCountUnlessZero()>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseChronology getChronology()>
<ohos.media.audio.SoundPlayer.AudioVolumes: float getRearLeftVolume()>
<java.util.zip.ZipEntry: void setExtra(byte[])>
<java.lang.StringBuffer: char charAt(int)>
<java.util.concurrent.atomic.AtomicLong: long getAndAccumulate(long,java.util.function.LongBinaryOperator)>
<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator)>
<ohos.data.resultset.ResultSet: boolean goToRow(int)>
<ohos.global.icu.text.Bidi: java.lang.String getTextAsString()>
<java.nio.channels.AsynchronousFileChannel: void <init>()>
<ohos.agp.render.Path: void transform(ohos.agp.utils.Matrix)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: void setState(long)>
<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>
<ohos.location.GeoAddress: void setPhoneNumber(java.lang.String)>
<javax.net.SocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>
<ohos.wifi.p2p.WifiP2pConfig: void setGroupName(java.lang.String)>
<java.lang.reflect.Method: java.lang.String getName()>
<java.time.LocalDateTime: java.time.LocalDateTime withMinute(int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,java.sql.Timestamp)>
<ohos.global.icu.util.JapaneseCalendar: void <init>(ohos.global.icu.util.ULocale)>
<ohos.agp.components.TimePicker: void setWheelModeEnabled(boolean)>
<java.util.logging.Logger: java.util.logging.Handler[] getHandlers()>
<ohos.agp.components.element.Element: int getHeight()>
<java.sql.ResultSet: java.io.Reader getCharacterStream(int)>
<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)>
<ohos.agp.components.Component: void setFocusBorderRadius(float[])>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndIncrement(java.lang.Object)>
<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getUndeclaredThrowable()>
<java.security.cert.X509CRL: byte[] getTBSCertList()>
<ohos.ai.cv.text.ITextDetector: void setVisionConfiguration(ohos.ai.cv.text.TextConfiguration)>
<ohos.global.icu.util.ChineseCalendar: int handleGetExtendedYear()>
<ohos.location.Location: void setTimeStamp(long)>
<ohos.security.permission.Permission: boolean canRequestPermissionFromRemote(java.lang.String,java.lang.String)>
<java.util.Map: java.util.Set keySet()>
<ohos.miscservices.timeutility.Time: long getCurrentThreadTimeNs()>
<java.sql.PreparedStatement: void setBoolean(int,boolean)>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 add(ohos.agp.render.render3d.math.Vector2,float)>
<java.sql.DatabaseMetaData: boolean storesMixedCaseIdentifiers()>
<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>
<ohos.agp.components.SlideDrawer.SlideListener: void onMiddle(ohos.agp.components.SlideDrawer,ohos.agp.components.SlideDrawer.SlideDirection,ohos.agp.components.SlideDrawer.DrawerState)>
<ohos.sysappcomponents.contact.entity.Contact: java.util.List getGroups()>
<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>
<ohos.utils.PlainLongArray: int size()>
<java.io.PrintStream: void print(char)>
<ohos.global.icu.text.BidiClassifier: int classify(int)>
<java.math.BigDecimal: java.math.BigDecimal negate(java.math.MathContext)>
<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getInstanceForSkeleton(ohos.global.icu.util.Calendar,java.lang.String,java.util.Locale)>
<java.net.DatagramSocketImpl: void receive(java.net.DatagramPacket)>
<java.security.interfaces.RSAMultiPrimePrivateCrtKey: java.math.BigInteger getPrimeExponentQ()>
<ohos.miscservices.timeutility.Time: long setTime(ohos.app.Context,long)>
<ohos.utils.geo.Point: float getPointX()>
<java.util.Spliterator.OfDouble: void forEachRemaining(java.util.function.DoubleConsumer)>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String getAppendItemFormat(int)>
<ohos.agp.render.Region.Op: ohos.agp.render.Region.Op valueOf(java.lang.String)>
<ohos.aafwk.content.Intent: long getLongParam(java.lang.String,long)>
<java.util.logging.Handler: void publish(java.util.logging.LogRecord)>
<ohos.data.resultset.ResultSet: long getLong(int)>
<ohos.utils.Parcel: int getSize()>
<ohos.media.camera.device.Camera: int triggerMultiCapture(java.util.List)>
<java.time.chrono.ChronoPeriod: java.time.temporal.Temporal subtractFrom(java.time.temporal.Temporal)>
<java.lang.Byte: void <init>(java.lang.String)>
<javax.crypto.spec.PBEKeySpec: int getKeyLength()>
<ohos.interwork.eventhandler.InnerEventUtils: ohos.interwork.utils.PacMapEx getPacMapEx(ohos.eventhandler.InnerEvent)>
<ohos.utils.ObjectAttribute: void <init>(java.lang.Class,java.lang.String)>
<ohos.sysappcomponents.contact.entity.PostalAddress: java.lang.String getStreet()>
<java.lang.String: boolean isEmpty()>
<java.security.cert.PKIXParameters: void setDate(java.util.Date)>
<java.nio.file.attribute.FileOwnerAttributeView: java.nio.file.attribute.UserPrincipal getOwner()>
<ohos.global.icu.lang.UCharacter: int getCodePoint(char)>
<ohos.global.icu.util.JapaneseCalendar: java.lang.String getType()>
<java.lang.SecurityManager: void checkAccess(java.lang.Thread)>
<java.sql.Blob: byte[] getBytes(long,int)>
<java.util.Observer: void update(java.util.Observable,java.lang.Object)>
<ohos.data.rdb.ValuesBucket: void putByte(java.lang.String,java.lang.Byte)>
<java.util.concurrent.Exchanger: java.lang.Object exchange(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<ohos.media.common.sessioncore.AVConnectionCallback: void onConnectFailed()>
<ohos.utils.zson.ZSONObject: java.lang.Long getLong(java.lang.String)>
<ohos.media.audio.AudioDeviceDescriptor: java.lang.String getName()>
<ohos.javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.String)>
<java.lang.SecurityManager: java.lang.ThreadGroup getThreadGroup()>
<java.nio.channels.Selector: int select(long)>
<java.lang.Runtime: void exit(int)>
<ohos.eventhandler.EventHandler: void removeTask(java.lang.Runnable,java.lang.Object)>
<ohos.agp.render.Canvas: void drawLines(float[],ohos.agp.render.Paint)>
<java.nio.file.InvalidPathException: java.lang.String getMessage()>
<ohos.data.resultset.ResultSet: java.lang.String[] getAllColumnNames()>
<java.util.Map: java.util.Collection values()>
<java.nio.channels.AsynchronousChannel: void close()>
<ohos.global.icu.util.Calendar: int handleGetYearLength(int)>
<java.text.NumberFormat: void setParseIntegerOnly(boolean)>
<ohos.agp.render.render3d.RenderLoop: void <init>(ohos.agp.render.render3d.ViewHolder,ohos.agp.render.render3d.Engine)>
<ohos.global.icu.text.DateFormatSymbols: void setShortMonths(java.lang.String[])>
<ohos.data.rdb.RdbStore.ConflictResolution: int getValue()>
<java.sql.ResultSet: void updateRowId(int,java.sql.RowId)>
<ohos.agp.components.TabList: void setSelectedTabIndicatorHeight(int)>
<ohos.global.icu.text.Edits.Iterator: int destinationIndexFromSourceIndex(int)>
<ohos.data.DatabaseFileConfig.Builder: ohos.data.DatabaseFileConfig.Builder setDatabaseFileType(ohos.data.DatabaseFileType)>
<ohos.sysappcomponents.calendar.support.TableSupport: ohos.data.dataability.DataAbilityPredicates getPredicate(int)>
<java.util.prefs.Preferences: void putDouble(java.lang.String,double)>
<java.nio.channels.SelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>
<java.util.ArrayList: int size()>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.resources.GpuResourceHandle getAmbientOcclusion()>
<ohos.media.audio.NoiseSuppressorEffect: ohos.media.audio.NoiseSuppressorEffect create(int,java.lang.String)>
<ohos.data.distributed.common.KvStoreType: void <clinit>()>
<java.util.stream.Stream: java.util.stream.Stream sorted(java.util.Comparator)>
<ohos.sensor.agent.CategoryOrientationAgent: java.util.List getAllSensors(int)>
<ohos.agp.components.NestedScrollView: void <init>(ohos.app.Context)>
<ohos.global.icu.text.DateIntervalFormat: void setDateIntervalInfo(ohos.global.icu.text.DateIntervalInfo)>
<java.util.Arrays: float[] copyOf(float[],int)>
<java.lang.SecurityManager: void checkWrite(java.lang.String)>
<ohos.agp.render.render3d.SceneNode: void setScale(ohos.agp.render.render3d.math.Vector3)>
<java.text.BreakIterator: int next(int)>
<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.Throwable)>
<java.security.cert.PKIXParameters: java.util.Set getInitialPolicies()>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream parallel()>
<ohos.media.common.StorageProperty: long getRecorderMaxFileSizeBytes()>
<ohos.utils.PlainBooleanArray: int indexOfValue(boolean)>
<ohos.global.icu.util.IndianCalendar: java.lang.String getType()>
<java.util.Spliterators: java.util.PrimitiveIterator.OfInt iterator(java.util.Spliterator.OfInt)>
<ohos.global.icu.text.Transliterator: ohos.global.icu.text.UnicodeFilter getFilter()>
<java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>
<ohos.agp.components.DatePicker: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.aafwk.ability.DataAbilityResult: void <init>(ohos.utils.net.Uri)>
<java.security.cert.Extension: java.lang.String getId()>
<ohos.media.common.sessioncore.AVSessionCallback: void onRewind()>
<java.util.logging.FileHandler: void publish(java.util.logging.LogRecord)>
<ohos.aafwk.ability.IAbilityContinuation: void onFailedContinuation(int)>
<ohos.miscservices.pasteboard.PasteData: java.util.List getMimeTypes()>
<ohos.location.RequestParam: void <init>(int,int,int)>
<java.time.LocalDateTime: java.time.OffsetDateTime atOffset(java.time.ZoneOffset)>
<ohos.agp.components.TimePicker: boolean isMinuteEnabled()>
<ohos.data.distributed.common.KvStore: void rollback()>
<java.security.GeneralSecurityException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.Scanner: void <init>(java.lang.Readable)>
<java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock: boolean tryLock()>
<ohos.agp.render.render3d.RenderLoop.FrameListener: void onFrameEnd(ohos.agp.render.render3d.Engine.Time)>
<java.util.PriorityQueue: void <init>(int)>
<javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<java.io.CharArrayWriter: java.io.CharArrayWriter append(java.lang.CharSequence,int,int)>
<ohos.agp.window.dialog.BaseDialog: void <init>(ohos.app.Context)>
<ohos.javax.xml.stream.events.StartElement: ohos.javax.xml.namespace.QName getName()>
<java.nio.file.spi.FileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>
<java.net.URL: java.lang.Object getContent()>
<ohos.agp.render.opengl.GLES31: void glVertexAttribIFormat(int,int,int,int)>
<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>
<java.util.TreeSet: boolean contains(java.lang.Object)>
<ohos.utils.Sequenceable: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.sysappcomponents.contact.entity.Name: void setNamePrefix(java.lang.String)>
<ohos.utils.zson.ZSONArray: byte getByteValue(int)>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: java.lang.String getTitle()>
<java.sql.Connection: java.sql.Statement createStatement(int,int,int)>
<ohos.agp.components.Picker: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThanOrEqualTo(java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glDepthFunc(int)>
<ohos.bundle.OnPermissionChangedCallback: void <init>()>
<java.lang.Math: long min(long,long)>
<java.util.Arrays: java.util.Spliterator spliterator(java.lang.Object[],int,int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThan(java.lang.String,float)>
<ohos.global.icu.util.ULocale.Category: ohos.global.icu.util.ULocale.Category[] values()>
<ohos.media.audio.AudioStreamInfo.ChannelMask: ohos.media.audio.AudioStreamInfo.ChannelMask[] values()>
<java.util.Random: void <init>()>
<ohos.agp.render.opengl.GLES20: void glClear(int)>
<ohos.global.i18n.text.MeasureOptions.Unit: ohos.global.i18n.text.MeasureOptions.Unit valueOf(java.lang.String)>
<javax.sql.RowSet: void setNull(java.lang.String,int,java.lang.String)>
<java.sql.SQLTransientConnectionException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<java.security.cert.X509CertSelector: java.lang.Object clone()>
<ohos.bluetooth.ble.GattService: boolean addCharacteristic(ohos.bluetooth.ble.GattCharacteristic)>
<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>
<java.lang.Boolean: int hashCode()>
<ohos.global.resource.solidxml.TypedAttribute.AttrData: void <init>(java.lang.String,java.lang.String)>
<java.sql.Statement: void setFetchSize(int)>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster ofDateAdjuster(java.util.function.UnaryOperator)>
<ohos.agp.utils.RectFloat: boolean setIntersect(ohos.agp.utils.RectFloat,ohos.agp.utils.RectFloat)>
<java.text.DateFormatSymbols: java.lang.String[][] getZoneStrings()>
<ohos.utils.net.Uri: int hashCode()>
<java.lang.Integer: void <init>(int)>
<ohos.media.player.Player: boolean stop()>
<ohos.global.icu.text.MessagePattern: ohos.global.icu.text.MessagePattern cloneAsThawed()>
<ohos.location.GeoAddress: void <init>(java.util.Locale)>
<java.sql.Statement: int executeUpdate(java.lang.String)>
<ohos.org.xml.sax.AttributeList: java.lang.String getType(java.lang.String)>
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.sql.SQLXML: java.io.Reader getCharacterStream()>
<java.util.Arrays: void parallelSort(short[])>
<java.lang.UnsupportedClassVersionError: void <init>()>
<ohos.global.icu.util.Calendar: int[][][] getFieldResolutionTable()>
<ohos.miscservices.inputmethodability.TextInputClient: boolean sendKeyFunction(int)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.String format(ohos.global.icu.text.TimeZoneFormat.Style,ohos.global.icu.util.TimeZone,long,ohos.global.icu.util.Output)>
<ohos.media.common.sessioncore.AVSessionCallback: void onPrepareToPlay()>
<java.sql.CallableStatement: java.lang.Object getObject(int,java.util.Map)>
<ohos.utils.Parcel: ohos.utils.Sequenceable createSequenceable()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<ohos.wifi.p2p.WifiP2pCallback: void <init>()>
<java.util.stream.LongStream: java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)>
<ohos.agp.render.render3d.Engine.RenderNodeGraph: boolean isValid(ohos.agp.render.render3d.Engine.RenderNodeGraph)>
<ohos.utils.geo.RectFloat: java.lang.String convertRectToSignedValue()>
<ohos.hiviewdfx.Debug: int getProcessSwappablePss(ohos.hiviewdfx.Debug.MemType)>
<ohos.sysappcomponents.contact.ContactAttributes: void add(ohos.sysappcomponents.contact.ContactAttributes.Attribute)>
<ohos.accessibility.ability.AccessibilityInfo: void setMaximumLength(int)>
<ohos.agp.render.opengl.EGL: void <clinit>()>
<ohos.utils.Parcel: void readLongArray(long[])>
<ohos.aafwk.ability.PathMatcher: void <init>()>
<java.util.concurrent.ForkJoinPool: boolean awaitQuiescence(long,java.util.concurrent.TimeUnit)>
<javax.net.ssl.SSLServerSocket: void setUseClientMode(boolean)>
<ohos.aafwk.ability.Ability: boolean stopAbility(ohos.aafwk.content.Intent)>
<java.sql.SQLNonTransientConnectionException: void <init>(java.lang.String,java.lang.String,int)>
<ohos.agp.render.opengl.GLES20: void glValidateProgram(int)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder inheritIO()>
<java.security.KeyPairGenerator: java.security.Provider getProvider()>
<java.net.Proxy.Type: java.net.Proxy.Type valueOf(java.lang.String)>
<ohos.data.DatabaseFileSecurityLevel: java.lang.String getValue()>
<ohos.agp.render.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object[] toArray(java.lang.Object[])>
<ohos.sensor.data.SensorData: int getSensorDataDim()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture applyToEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Function)>
<ohos.global.icu.math.MathContext: void <clinit>()>
<ohos.global.icu.lang.UCharacter: boolean isPrintable(int)>
<java.time.chrono.ChronoLocalDate: int lengthOfYear()>
<ohos.usb.USBCore: long usbFunctionsFromString(java.lang.String)>
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getCrtCoefficient()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notBetween(java.lang.String,double,double)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withResolverFields(java.util.Set)>
<java.util.List: void replaceAll(java.util.function.UnaryOperator)>
<java.util.NavigableSet: java.lang.Object lower(java.lang.Object)>
<ohos.global.icu.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>
<java.sql.Statement: boolean isPoolable()>
<java.util.logging.StreamHandler: boolean isLoggable(java.util.logging.LogRecord)>
<ohos.data.orm.OrmContext: ohos.data.resultset.ResultSet query(ohos.data.orm.OrmPredicates,java.lang.String[])>
<java.util.TreeMap: void <init>(java.util.SortedMap)>
<ohos.agp.render.render3d.components.SkinComponent: void setHandle(ohos.agp.render.render3d.resources.ResourceHandle)>
<java.time.Period: java.time.Period ofWeeks(int)>
<ohos.agp.components.ScrollView: void addScrollPausePositionY(int)>
<ohos.hiviewdfx.Caution: void <init>(ohos.hiviewdfx.HiChecker.Rule,java.lang.String)>
<ohos.event.notification.IAdvancedNotificationManager: ohos.event.notification.NotificationSortingMap getCurrentAppSorting(java.lang.String)>
<java.sql.CallableStatement: java.sql.Time getTime(java.lang.String)>
<ohos.data.orm.Clob: void truncate(long)>
<java.util.concurrent.DelayQueue: java.lang.Object[] toArray()>
<java.time.OffsetTime: boolean isSupported(java.time.temporal.TemporalUnit)>
<java.io.DataInputStream: void <init>(java.io.InputStream)>
<java.util.stream.Collectors: java.util.stream.Collector groupingByConcurrent(java.util.function.Function,java.util.function.Supplier,java.util.stream.Collector)>
<ohos.ai.cv.text.Text: java.util.List getBlocks()>
<ohos.ai.cv.docrefine.DocCoordinates: ohos.ai.cv.common.CvPoint getBottomRight()>
<ohos.agp.components.ScrollHelper: void startScroll(int,int,int,int)>
<ohos.sysappcomponents.contact.entity.Holder: void <init>(long)>
<java.util.concurrent.ConcurrentNavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean writeDescriptor(ohos.bluetooth.ble.GattDescriptor)>
<java.lang.Double: java.lang.String toString(double)>
<ohos.accessibility.ability.AccessibleAbility: ohos.accessibility.ability.DisplayResizeController getDisplayResizeController()>
<java.util.prefs.Preferences: void remove(java.lang.String)>
<javax.crypto.AEADBadTagException: void <init>(java.lang.String)>
<ohos.bundle.LauncherService: boolean isBundleEnabled(java.lang.String)>
<javax.sql.RowSet: void setTimestamp(int,java.sql.Timestamp,java.util.Calendar)>
<ohos.media.codec.CodecDescriptionList: boolean isDecoderSupportedByFormat(ohos.media.common.Format)>
<java.util.function.DoublePredicate: java.util.function.DoublePredicate negate()>
<java.io.PushbackInputStream: void reset()>
<java.lang.reflect.Array: float getFloat(java.lang.Object,int)>
<java.io.PrintWriter: void <init>(java.lang.String)>
<java.time.temporal.ValueRange: int hashCode()>
<java.util.Hashtable: void forEach(java.util.function.BiConsumer)>
<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getModulus()>
<java.util.concurrent.ThreadPoolExecutor: boolean isTerminated()>
<ohos.agp.animation.Animator: void setCurveInternal(ohos.agp.animation.Animator.TimelineCurve)>
<java.util.UUID: java.util.UUID randomUUID()>
<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence)>
<ohos.sysappcomponents.contact.entity.NickName: java.lang.String getNickName()>
<ohos.media.photokit.metadata.AVMetadataHelper: byte[] resolveImage()>
<java.util.BitSet: boolean intersects(java.util.BitSet)>
<ohos.agp.utils.Matrix: void translate(float,float)>
<ohos.rpc.MessageParcel: java.io.FileDescriptor dupFileDescriptor(java.io.FileDescriptor)>
<java.net.Socket: void setSocketImplFactory(java.net.SocketImplFactory)>
<java.util.Arrays: java.util.Spliterator.OfLong spliterator(long[])>
<java.util.Calendar: int get(int)>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 cross(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<ohos.agp.components.ProgressBar: int getOrientation()>
<ohos.javax.xml.stream.XMLStreamReader: boolean isWhiteSpace()>
<ohos.agp.render.opengl.GLES20: void glBindFramebuffer(int,int)>
<ohos.global.i18n.LocaleHelperUtils: java.util.ArrayList getBlockedRegions(ohos.app.Context,java.util.Locale)>
<ohos.global.icu.text.RuleBasedCollator: int getDecomposition()>
<java.lang.Integer: java.lang.Integer decode(java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glBindBufferBase(int,int,int)>
<ohos.data.search.model.ChangedIndexContent: java.util.List getInsertedItems()>
<javax.tools.ForwardingJavaFileManager: java.lang.String inferBinaryName(javax.tools.JavaFileManager.Location,javax.tools.JavaFileObject)>
<ohos.global.icu.text.DecimalFormatSymbols: void <init>()>
<java.sql.CallableStatement: java.sql.Date getDate(int)>
<ohos.global.icu.util.Currency: java.lang.String getSymbol(java.util.Locale)>
<java.util.EnumSet: java.util.EnumSet range(java.lang.Enum,java.lang.Enum)>
<ohos.aafwk.content.IntentParams: boolean hasParam(java.lang.String)>
<ohos.media.audio.AudioCapturer.State: int getValue()>
<ohos.wifi.WifiSecurity.EapMethod: void <clinit>()>
<ohos.agp.components.Picker: ohos.agp.components.Picker.ElementFormatter getElementFormatter()>
<ohos.agp.components.Clock: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.time.LocalTime: int getMinute()>
<ohos.global.icu.text.MessageFormat: java.lang.Object clone()>
<ohos.miscservices.download.DownloadSession.DownloadInfo: java.lang.String getFileName()>
<ohos.utils.LruBuffer: void afterRemoval(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>
<ohos.app.AbilityContext: void setTheme(int)>
<ohos.global.icu.util.LocaleData: ohos.global.icu.util.LocaleData.MeasurementSystem getMeasurementSystem(ohos.global.icu.util.ULocale)>
<ohos.media.audio.AudioManager: int getVersion()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object reduceKeys(long,java.util.function.Function,java.util.function.BiFunction)>
<java.security.cert.X509CertSelector: void setSubject(javax.security.auth.x500.X500Principal)>
<java.util.StringTokenizer: java.lang.Object nextElement()>
<ohos.agp.graphics.Surface: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.window.service.ComponentPadding: ohos.agp.window.service.ComponentPadding useDisplayNotch()>
<ohos.agp.render.Region: boolean isComplex()>
<ohos.global.resource.solidxml.TypedAttribute: ohos.global.resource.ResourceManager getResourceManager()>
<java.time.ZoneOffset: java.lang.String toString()>
<ohos.telephony.RadioInfoManager: void addObserver(ohos.telephony.RadioStateObserver,int)>
<java.math.BigDecimal: void <init>(char[],int,int)>
<java.lang.Byte: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>
<ohos.ai.nlu.ResponseResult: java.lang.String getMessage()>
<java.util.concurrent.CompletionService: java.util.concurrent.Future take()>
<java.security.NoSuchAlgorithmException: void <init>(java.lang.Throwable)>
<ohos.media.common.sessioncore.AVQueueElement: void <init>(ohos.media.common.AVDescription,long)>
<ohos.agp.utils.Color: boolean equals(java.lang.Object)>
<java.lang.AssertionError: void <init>(double)>
<java.net.URL: int hashCode()>
<ohos.data.resultset.TableResultSet: boolean goToRow(int)>
<java.nio.file.attribute.AclEntry.Builder: java.nio.file.attribute.AclEntry.Builder setPrincipal(java.nio.file.attribute.UserPrincipal)>
<ohos.ai.asr.AsrListener: void onAudioEnd()>
<java.text.ParsePosition: int getErrorIndex()>
<java.util.concurrent.ConcurrentLinkedDeque: void <init>(java.util.Collection)>
<ohos.workscheduler.WorkInfo: boolean marshalling(ohos.utils.Parcel)>
<javax.lang.model.AnnotatedConstruct: java.util.List getAnnotationMirrors()>
<java.util.concurrent.locks.StampedLock: long tryConvertToReadLock(long)>
<ohos.global.icu.text.SimpleDateFormat: void applyPattern(java.lang.String)>
<javax.net.ssl.SSLServerSocket: javax.net.ssl.SSLParameters getSSLParameters()>
<java.io.StreamTokenizer: void slashSlashComments(boolean)>
<java.io.ByteArrayInputStream: void <init>(byte[])>
<ohos.agp.components.TickTimer: void <init>(ohos.app.Context)>
<ohos.bluetooth.ble.BleAdvertiseSettings.Builder: ohos.bluetooth.ble.BleAdvertiseSettings.Builder setInterval(int)>
<ohos.aafwk.ability.SystemMemoryInfo: long getThreshold()>
<ohos.media.image.common.ColorSpace: void <clinit>()>
<ohos.aafwk.ability.DataAbilityOperation: int getType()>
<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>
<java.util.Collection: int size()>
<java.security.cert.CertificateNotYetValidException: void <init>()>
<ohos.sysappcomponents.contact.ContactsHelper: ohos.sysappcomponents.contact.ContactsCollection queryContacts(ohos.sysappcomponents.contact.entity.Holder,ohos.sysappcomponents.contact.ContactAttributes)>
<ohos.account.app.AppAccountAbility: boolean unsubscribeAccountEvent(ohos.account.app.IAppAccountSubscriber)>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getMonths(int,int)>
<ohos.media.muxer.Muxer: void <init>(java.lang.String,int)>
<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>
<ohos.event.notification.NotificationSlotGroup: void <init>(java.lang.String,java.lang.String)>
<ohos.agp.components.PositionLayout: void <init>(ohos.app.Context)>
<ohos.global.icu.util.TimeZone.SystemTimeZoneType: ohos.global.icu.util.TimeZone.SystemTimeZoneType[] values()>
<ohos.global.icu.util.ULocale.Category: void <clinit>()>
<ohos.agp.components.Clock: boolean is24HourMode()>
<ohos.javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.Exception)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenAcceptAsync(java.util.function.Consumer,java.util.concurrent.Executor)>
<ohos.media.audio.AudioDeviceDescriptor: void setAddress(java.lang.String)>
<ohos.org.xml.sax.Parser: void parse(java.lang.String)>
<java.io.File: boolean canExecute()>
<java.net.Socket: int getLocalPort()>
<ohos.org.xml.sax.helpers.DefaultHandler: void fatalError(ohos.org.xml.sax.SAXParseException)>
<java.sql.SQLNonTransientConnectionException: void <init>(java.lang.String)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage applyToEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Function)>
<java.security.UnresolvedPermission: java.lang.String getUnresolvedActions()>
<ohos.sysappcomponents.contact.entity.PostalAddress: void setPobox(java.lang.String)>
<java.util.concurrent.atomic.AtomicReference: void <init>()>
<javax.tools.SimpleJavaFileObject: void <init>(java.net.URI,javax.tools.JavaFileObject.Kind)>
<ohos.utils.net.UrlQueryFilter: void registerParameterFilter(java.lang.String,ohos.utils.net.UrlQueryFilter.ValueFilter)>
<java.util.Calendar: void <init>()>
<ohos.event.commonevent.CommonEventData: void <init>()>
<java.sql.ResultSet: float getFloat(java.lang.String)>
<ohos.data.search.schema.ContactItem: ohos.data.search.schema.ContactItem setBirthDate(java.lang.Long)>
<java.util.concurrent.RejectedExecutionException: void <init>()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThanOrEqualTo(java.lang.String,java.sql.Time)>
<ohos.data.resultset.TableResultSet.RowBuilder: ohos.data.resultset.TableResultSet.RowBuilder setColumnValue(java.lang.String,java.lang.Object)>
<java.sql.PreparedStatement: void setAsciiStream(int,java.io.InputStream,int)>
<ohos.net.HttpResponseCache: long getSize()>
<javax.security.auth.x500.X500Principal: java.lang.String toString()>
<ohos.agp.utils.Matrix: void setScale(float,float)>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate date(int,int,int)>
<java.nio.CharBuffer: java.nio.CharBuffer put(char[])>
<java.text.DecimalFormat: int getMinimumFractionDigits()>
<ohos.media.image.ImagePacker: java.util.HashSet getSupportedFormats()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableSet navigableKeySet()>
<ohos.security.seoperator.SEOperatorAbs: int setEnable(java.lang.String,java.lang.String,boolean)>
<ohos.event.notification.NotificationRequest: ohos.media.image.PixelMap getLittleIcon()>
<ohos.agp.components.BaseItemProvider: void <init>()>
<ohos.agp.utils.TextAlignment: void <init>()>
<java.sql.ResultSet: void cancelRowUpdates()>
<java.time.Instant: java.time.Instant parse(java.lang.CharSequence)>
<ohos.agp.render.opengl.GLES30: void glFramebufferTextureLayer(int,int,int,int,int)>
<ohos.data.rdb.DataObservable: void remove(ohos.data.rdb.DataObserver)>
<java.time.OffsetTime: java.time.OffsetTime of(java.time.LocalTime,java.time.ZoneOffset)>
<java.util.concurrent.Exchanger: void <init>()>
<java.time.format.FormatStyle: void <clinit>()>
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance()>
<ohos.agp.window.service.Display: void getSize(ohos.agp.utils.Point)>
<ohos.agp.components.webengine.Navigator: boolean canGoForward()>
<ohos.aafwk.ability.AbilitySlice: ohos.aafwk.ability.Ability getAbility()>
<ohos.aafwk.ability.DataAbilityOperation: boolean isUpdateOperation()>
<java.util.concurrent.Semaphore: java.util.Collection getQueuedThreads()>
<ohos.aafwk.ability.AbilitySlice: void presentForResult(ohos.aafwk.ability.AbilitySlice,ohos.aafwk.content.Intent,int)>
<ohos.media.audio.AudioManager: ohos.media.audio.AudioDeviceDescriptor[] getDevices(ohos.media.audio.AudioDeviceDescriptor.DeviceFlag)>
<ohos.data.search.schema.ContactItem: ohos.data.search.schema.ContactItem setAddress(java.lang.String)>
<java.sql.DriverManager: void setLogWriter(java.io.PrintWriter)>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate dateNow()>
<java.time.chrono.ThaiBuddhistDate: int hashCode()>
<java.lang.SecurityManager: java.lang.Object getSecurityContext()>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getEras()>
<javax.tools.JavaCompiler: javax.tools.JavaCompiler.CompilationTask getTask(java.io.Writer,javax.tools.JavaFileManager,javax.tools.DiagnosticListener,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)>
<ohos.media.common.VideoProperty.Builder: ohos.media.common.VideoProperty.Builder setRecorderWidth(int)>
<java.security.AlgorithmParameterGenerator: void init(int)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate plus(long,java.time.temporal.TemporalUnit)>
<java.util.concurrent.ThreadLocalRandom: double nextDouble(double,double)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withResolverStyle(java.time.format.ResolverStyle)>
<ohos.agp.components.AttrHelper: int fp2px(float,float,float)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.global.icu.text.Transliterator: int transliterate(ohos.global.icu.text.Replaceable,int,int)>
<java.lang.reflect.Array: void setBoolean(java.lang.Object,int,boolean)>
<javax.security.auth.callback.PasswordCallback: boolean isEchoOn()>
<ohos.agp.components.Component.TouchEventListener: boolean onTouchEvent(ohos.agp.components.Component,ohos.multimodalinput.event.TouchEvent)>
<ohos.global.icu.text.SimpleDateFormat: void setContext(ohos.global.icu.text.DisplayContext)>
<ohos.telephony.ShortMessage: ohos.telephony.ShortMessage.ShortMessageClass getMessageClass()>
<ohos.media.audio.AudioCapturer.State: void <clinit>()>
<java.io.ObjectOutputStream: void writeByte(int)>
<ohos.bundle.ShortcutInfo: void setIntents(java.util.List)>
<ohos.media.audio.AudioRenderer: int getPosition()>
<ohos.agp.components.ToggleButton: java.lang.String getStateOnText()>
<ohos.agp.components.RadioContainer: ohos.agp.components.RadioContainer.CheckedStateChangedListener getMarkChangedListener()>
<java.util.prefs.AbstractPreferences: void removeNodeSpi()>
<javax.lang.model.util.ElementKindVisitor7: java.lang.Object visitVariableAsResourceVariable(javax.lang.model.element.VariableElement,java.lang.Object)>
<java.security.Provider: java.util.Enumeration elements()>
<ohos.agp.components.Clock: void setTimeZone(java.lang.String)>
<ohos.nfc.tag.MifareUltralightTag: int getMifareType()>
<ohos.utils.IntArray: void append(ohos.utils.IntArray)>
<ohos.bundle.ApplicationInfo: java.util.List getPermissions()>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.text.RuleBasedCollator cloneAsThawed()>
<java.util.concurrent.ThreadPoolExecutor: void beforeExecute(java.lang.Thread,java.lang.Runnable)>
<ohos.sysappcomponents.contact.entity.Website: void setWebsite(java.lang.String)>
<ohos.sysappcomponents.calendar.entity.Events: void setDuration(java.lang.String)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getInstanceForSkeleton(java.lang.String,ohos.global.icu.util.ULocale)>
<java.util.stream.LongStream: java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)>
<java.util.stream.LongStream: java.util.stream.LongStream peek(java.util.function.LongConsumer)>
<java.util.ArrayDeque: java.lang.Object element()>
<java.text.DecimalFormat: java.lang.String getNegativePrefix()>
<ohos.media.camera.device.CameraInfo: boolean equals(java.lang.Object)>
<ohos.agp.components.webengine.CookieStore: void removeCookies(boolean,ohos.agp.components.webengine.AsyncCallback)>
<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>
<ohos.global.icu.text.TimeZoneNames: java.lang.String getReferenceZoneID(java.lang.String,java.lang.String)>
<java.nio.file.Files: java.nio.file.Path createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
<java.time.YearMonth: boolean isSupported(java.time.temporal.TemporalField)>
<java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<ohos.agp.render.opengl.GLES20: void glClearDepthf(float)>
<ohos.event.commonevent.CommonEventPublishInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.UnicodeSetIterator: void <init>()>
<ohos.utils.geo.RectFloat: boolean setIntersect(ohos.utils.geo.RectFloat,ohos.utils.geo.RectFloat)>
<java.util.logging.LogManager: java.util.logging.Logger getLogger(java.lang.String)>
<ohos.event.notification.NotificationSubscribeInfo: java.lang.String toString()>
<ohos.global.icu.text.UnicodeSet: int hashCode()>
<java.util.logging.LogRecord: void setSequenceNumber(long)>
<java.io.PrintStream: void println(char)>
<java.net.Authenticator.RequestorType: void <clinit>()>
<java.time.format.DateTimeFormatter: java.util.Locale getLocale()>
<java.util.concurrent.DelayQueue: java.util.concurrent.Delayed take()>
<ohos.data.orm.OrmContext: boolean isInTransaction()>
<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>
<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>
<java.util.jar.Pack200.Packer: void addPropertyChangeListener(java.beans.PropertyChangeListener)>
<ohos.utils.PacMap: void putShortValue(java.lang.String,short)>
<ohos.agp.render.render3d.Entity: int getId()>
<ohos.utils.PacMap: java.util.Optional getPacMap(java.lang.String)>
<ohos.global.icu.util.TimeZone: java.util.Set getAvailableIDs(ohos.global.icu.util.TimeZone.SystemTimeZoneType,java.lang.String,java.lang.Integer)>
<ohos.nfc.tag.IsoDepTag: byte[] getHiLayerResponse()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void invokeAbilityOnStop(ohos.aafwk.ability.Ability)>
<ohos.app.Context: java.io.File getPreferencesDir()>
<ohos.vibrator.bean.VibrationPattern.EffectFlagType: void <clinit>()>
<ohos.net.ConnectionProperties: boolean marshalling(ohos.utils.Parcel)>
<java.lang.Runtime: long maxMemory()>
<java.security.SignatureException: void <init>(java.lang.String)>
<ohos.media.image.PropertyFilter: long applyToSource(ohos.media.image.ImageSource)>
<ohos.usb.USBRequest: void setClientData(java.lang.Object)>
<ohos.utils.BasePacMap: char[] getCharArray(java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,double)>
<ohos.miscservices.wallpaper.WallpaperController: int getMinWidth()>
<java.security.Principal: boolean equals(java.lang.Object)>
<java.io.OutputStream: void write(byte[])>
<ohos.location.Location: double getLongitude()>
<ohos.global.icu.number.LocalizedNumberFormatter: ohos.global.icu.number.FormattedNumber format(double)>
<java.util.concurrent.atomic.AtomicStampedReference: java.lang.Object get(int[])>
<ohos.javax.xml.stream.XMLInputFactory: void <init>()>
<ohos.agp.components.Component.LayoutDirection: void <clinit>()>
<java.sql.ResultSet: java.sql.Time getTime(java.lang.String,java.util.Calendar)>
<ohos.workscheduler.WorkInfo: boolean isRequestCharging()>
<ohos.global.icu.util.Currency: java.lang.String getSymbol()>
<ohos.security.asset.AssetOperatorAbs: ohos.security.asset.AssetResult assetSelect(ohos.aafwk.ability.Ability,ohos.aafwk.content.IntentParams)>
<java.util.stream.IntStream: java.util.stream.IntStream limit(long)>
<javax.tools.SimpleJavaFileObject: java.io.Reader openReader(boolean)>
<java.nio.file.attribute.BasicFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>
<java.util.concurrent.ConcurrentSkipListSet: java.lang.Object floor(java.lang.Object)>
<java.lang.StrictMath: int addExact(int,int)>
<ohos.accessibility.ability.AccessibilityInfo: boolean isCheckable()>
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getQ()>
<java.security.cert.X509CertSelector: java.util.Date getPrivateKeyValid()>
<java.time.OffsetDateTime: java.time.OffsetDateTime plusSeconds(long)>
<java.util.Spliterators: java.util.Spliterator.OfInt spliterator(java.util.PrimitiveIterator.OfInt,long,int)>
<ohos.agp.components.Component: void setComponentDescription(java.lang.CharSequence)>
<java.nio.channels.spi.AsynchronousChannelProvider: java.nio.channels.AsynchronousServerSocketChannel openAsynchronousServerSocketChannel(java.nio.channels.AsynchronousChannelGroup)>
<ohos.global.icu.text.DateFormatSymbols: ohos.global.icu.text.DateFormatSymbols getInstance(ohos.global.icu.util.ULocale)>
<ohos.nfc.oma.Channel: boolean isClosed()>
<ohos.utils.Parcel: short[] readShortArray()>
<ohos.utils.Scope: ohos.utils.Scope expand(java.lang.Comparable)>
<java.security.Provider: java.util.Set entrySet()>
<java.util.Spliterator.OfInt: java.util.Spliterator.OfPrimitive trySplit()>
<ohos.event.notification.NotificationHelper: void addNotificationSlots(java.util.List)>
<java.net.URL: java.lang.String getRef()>
<ohos.wifi.p2p.WifiP2pConfig: boolean unmarshalling(ohos.utils.Parcel)>
<java.sql.CallableStatement: void setTime(java.lang.String,java.sql.Time,java.util.Calendar)>
<ohos.accessibility.AccessibilityAbilityInfo: ohos.bundle.AbilityInfo getAbilityInfo()>
<java.util.ListIterator: int nextIndex()>
<java.time.zone.ZoneRules: java.time.ZoneOffset getOffset(java.time.LocalDateTime)>
<ohos.agp.components.Text: void setAutoFontSize(boolean,boolean)>
<java.security.cert.CertificateRevokedException: java.util.Date getRevocationDate()>
<ohos.aafwk.ability.LifecycleObserver: void onBackground()>
<ohos.security.asset.AssetResult: java.util.List getResultInfo()>
<ohos.agp.components.LayoutManager: void <init>()>
<java.sql.Connection: java.sql.Clob createClob()>
<java.text.DecimalFormatSymbols: java.lang.String getNaN()>
<ohos.event.notification.ReminderRequest: java.lang.String toString()>
<ohos.agp.components.PageSliderIndicator: int getSelected()>
<ohos.utils.geo.Rect.RotationEnum: ohos.utils.geo.Rect.RotationEnum[] values()>
<ohos.global.icu.text.Transliterator: java.util.Enumeration getAvailableTargets(java.lang.String)>
<ohos.media.muxer.Muxer: boolean writeBuffer(int,java.nio.ByteBuffer,ohos.media.common.BufferInfo)>
<ohos.agp.utils.Line: boolean isVertical(ohos.agp.utils.Line)>
<java.util.Collections: java.util.Collection synchronizedCollection(java.util.Collection)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates in(java.lang.String,java.sql.Timestamp[])>
<ohos.global.icu.text.SearchIterator: int last()>
<ohos.event.notification.NotificationSlot: int getLevel()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setLittleIcon(ohos.media.image.PixelMap)>
<javax.crypto.MacSpi: int engineGetMacLength()>
<ohos.global.icu.text.UCharacterIterator: ohos.global.icu.text.UCharacterIterator getInstance(char[])>
<java.security.PermissionCollection: void <init>()>
<javax.crypto.ExemptionMechanism: int getOutputSize(int)>
<java.lang.Float: int intValue()>
<ohos.bundle.ShortcutInfo: void setIntent(ohos.bundle.ShortcutIntent)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder encodedPath(java.lang.String)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.util.List)>
<javax.lang.model.util.SimpleElementVisitor7: void <init>(java.lang.Object)>
<java.time.temporal.WeekFields: java.lang.String toString()>
<ohos.global.icu.text.DateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>
<java.security.interfaces.DSAPrivateKey: java.math.BigInteger getX()>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle findGetter(java.lang.Class,java.lang.String,java.lang.Class)>
<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String,int,int)>
<java.util.concurrent.TimeUnit: void timedJoin(java.lang.Thread,long)>
<java.security.UnrecoverableKeyException: void <init>()>
<java.security.cert.X509CRL: void <init>()>
<ohos.app.AbilityContext: java.io.File getExternalFilesDir(java.lang.String)>
<java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<java.lang.Runtime: void load(java.lang.String)>
<java.nio.channels.MulticastChannel: java.nio.channels.MembershipKey join(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)>
<java.util.Random: boolean nextBoolean()>
<java.util.concurrent.atomic.AtomicLong: long getAndUpdate(java.util.function.LongUnaryOperator)>
<java.util.regex.Matcher: java.util.regex.Matcher reset()>
<ohos.interwork.eventhandler.CourierEx: boolean marshalling(ohos.utils.Parcel)>
<ohos.aafwk.ability.Ability: boolean updateForm(int,ohos.aafwk.ability.FormBindingData)>
<java.lang.reflect.Field: float getFloat(java.lang.Object)>
<ohos.nfc.oma.SEService: void shutdown()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture handleAsync(java.util.function.BiFunction,java.util.concurrent.Executor)>
<java.util.logging.XMLFormatter: void <init>()>
<javax.security.auth.login.LoginException: void <init>()>
<ohos.agp.graphics.Surface.PixelFormat: ohos.agp.graphics.Surface.PixelFormat valueOf(java.lang.String)>
<ohos.data.search.model.IndexForm: void setStore(boolean)>
<ohos.telephony.NrSignalInformation: int getSignalLevel()>
<java.lang.Thread: boolean isAlive()>
<java.nio.channels.Selector: int selectNow()>
<ohos.aafwk.ability.Form: ohos.aafwk.ability.Form createFromParcel(ohos.utils.Parcel)>
<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>
<ohos.agp.components.PageFlipper: void removeComponentAt(int)>
<ohos.bluetooth.BluetoothDeviceClass: int getMajorMinorClass()>
<ohos.agp.components.ComponentTreeObserver.WindowBoundListener: void onWindowBound()>
<javax.crypto.BadPaddingException: void <init>(java.lang.String)>
<java.net.HttpCookie: boolean getSecure()>
<java.util.ArrayList: boolean addAll(int,java.util.Collection)>
<ohos.global.icu.util.ULocale: java.lang.String getBaseName()>
<ohos.agp.components.AttrHelper: boolean convertValueToBoolean(java.lang.String,boolean)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates in(java.lang.String,long[])>
<java.util.concurrent.atomic.AtomicIntegerArray: void <init>(int)>
<ohos.agp.render.Path: boolean isOval(ohos.agp.utils.RectFloat)>
<ohos.data.rdb.RdbBusyException: void <init>(java.lang.String)>
<javax.crypto.CipherSpi: int engineDoFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<ohos.event.notification.MessageUser: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.components.ComponentTransition: void setTransitionTypeDuration(int,int)>
<java.util.function.BiPredicate: java.util.function.BiPredicate or(java.util.function.BiPredicate)>
<ohos.agp.components.Component: void setLayoutConfig(ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.agp.render.render3d.components.SceneComponent: ohos.agp.render.render3d.math.Vector3[] getIrradianceCoefficients()>
<ohos.data.search.schema.NoticeItem: ohos.data.search.schema.NoticeItem setRepeatStatus(java.lang.String)>
<javax.sql.RowSet: void setURL(int,java.net.URL)>
<ohos.org.xml.sax.InputSource: void setByteStream(java.io.InputStream)>
<ohos.aafwk.ability.Form: int getFormId()>
<java.time.format.TextStyle: boolean isStandalone()>
<java.lang.reflect.AnnotatedElement: boolean isAnnotationPresent(java.lang.Class)>
<java.sql.SQLRecoverableException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.components.Component: float getContentPositionY()>
<ohos.nfc.oma.Channel: boolean isBasicChannel()>
<ohos.utils.PlainBooleanArray: boolean valueAt(int)>
<java.net.NetworkInterface: boolean isVirtual()>
<ohos.aafwk.ability.Ability: java.lang.String getType(ohos.utils.net.Uri)>
<javax.sql.RowSet: void setTimestamp(int,java.sql.Timestamp)>
<javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext)>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<java.lang.StringBuffer: int indexOf(java.lang.String,int)>
<java.util.zip.InflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Inflater,int)>
<ohos.net.ConnectionProperties: java.lang.String getPrivateDnsServerName()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat setBooleanAttribute(ohos.global.icu.text.DateFormat.BooleanAttribute,boolean)>
<java.util.Calendar: int getMinimalDaysInFirstWeek()>
<java.util.concurrent.BlockingDeque: java.lang.Object peek()>
<java.text.DecimalFormat: void setNegativeSuffix(java.lang.String)>
<ohos.miscservices.inputmethodability.InputMethodAbility: void onStart(ohos.aafwk.content.Intent)>
<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>
<ohos.data.search.SearchAbility: java.util.List getIndexForm(java.lang.String)>
<ohos.miscservices.download.DownloadConfig: boolean marshalling(ohos.utils.Parcel)>
<ohos.utils.LongPlainArray: void <init>(int)>
<ohos.agp.components.PageSliderIndicator: ohos.agp.components.element.Element getItemSelectedElement()>
<ohos.javax.xml.stream.events.XMLEvent: ohos.javax.xml.stream.events.Characters asCharacters()>
<ohos.wifi.p2p.WifiP2pController: void cancelConnect(ohos.wifi.p2p.WifiP2pCallback)>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getEntity(java.lang.String,int)>
<java.lang.String: boolean startsWith(java.lang.String)>
<ohos.accessibility.AccessibilityStateEvent: void <init>()>
<java.lang.StrictMath: double log(double)>
<ohos.telephony.RadioInfoManager: int getPrimarySlotId()>
<ohos.aafwk.ability.AbilityLifecycleExecutor.LifecycleState: int getValue()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThanOrEqualTo(java.lang.String,double)>
<ohos.event.commonevent.AsyncCommonEventResult: void abortCommonEvent()>
<ohos.telephony.WcdmaSignalInformation: boolean equals(java.lang.Object)>
<ohos.agp.animation.Animator: void pause()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates isNull(java.lang.String)>
<ohos.sysappcomponents.contact.entity.Contact: void setNickName(ohos.sysappcomponents.contact.entity.NickName)>
<javax.tools.StandardLocation: boolean isOutputLocation()>
<java.lang.Compiler: boolean compileClasses(java.lang.String)>
<java.util.Calendar.Builder: java.util.Calendar.Builder setInstant(java.util.Date)>
<java.lang.Math: long floorMod(long,long)>
<java.io.ObjectOutputStream: void writeBytes(java.lang.String)>
<ohos.agp.components.Component: void setAlpha(float)>
<java.util.stream.Collector: java.util.function.Function finisher()>
<ohos.global.icu.util.BuddhistCalendar: int handleComputeMonthStart(int,int,boolean)>
<java.util.zip.Deflater: void <init>(int)>
<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>
<ohos.agp.utils.Matrix: void setSinCos(float,float)>
<ohos.data.resultset.SharedBlock: java.lang.String getString(int,int)>
<ohos.agp.render.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,float[])>
<ohos.utils.zson.ZSONArray: short getShortValue(int)>
<java.security.KeyStore.TrustedCertificateEntry: void <init>(java.security.cert.Certificate)>
<ohos.agp.components.ComponentParent: void removeComponent(ohos.agp.components.Component)>
<ohos.global.icu.text.ConstrainedFieldPosition: void constrainClass(java.lang.Class)>
<java.nio.file.attribute.FileTime: int hashCode()>
<java.lang.Thread.State: java.lang.Thread.State valueOf(java.lang.String)>
<java.util.function.DoubleConsumer: void accept(double)>
<ohos.media.audio.AudioRendererInfo.Builder: ohos.media.audio.AudioRendererInfo.Builder audioStreamInfo(ohos.media.audio.AudioStreamInfo)>
<java.util.ResourceBundle: void clearCache()>
<java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.text.BreakIterator: java.lang.Object clone()>
<javax.crypto.CipherSpi: int engineUpdate(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<ohos.agp.render.opengl.GLES20: void glHint(int,int)>
<java.time.Period: java.time.Period ofDays(int)>
<ohos.data.preferences.Preferences: void unregisterObserver(ohos.data.preferences.Preferences.PreferencesObserver)>
<ohos.agp.render.Canvas: boolean getLocalClipBounds(ohos.agp.utils.Rect)>
<ohos.global.icu.util.TimeZone: java.lang.String getRegion(java.lang.String)>
<java.util.concurrent.atomic.AtomicStampedReference: int getStamp()>
<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>
<ohos.agp.render.PdfDisplay: ohos.agp.render.PdfDisplay.Page openPage(int)>
<java.security.Identity: void addCertificate(java.security.Certificate)>
<ohos.utils.geo.Point: boolean isInRect(ohos.utils.geo.Rect)>
<java.util.AbstractMap.SimpleEntry: java.lang.Object getValue()>
<ohos.global.config.ConfigManager: void <init>()>
<ohos.javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.Exception,java.lang.String)>
<ohos.location.GeoConvert: boolean isGeoAvailable()>
<java.net.DatagramPacket: java.net.InetAddress getAddress()>
<ohos.media.audio.AudioDeviceDescriptor: void setType(ohos.media.audio.AudioDeviceDescriptor.DeviceType)>
<ohos.agp.components.DatePicker: void setSelectedNormalTextMarginRatio(float)>
<java.lang.StrictMath: float ulp(float)>
<ohos.agp.text.RichTextLayout: float calculateTextWidth(ohos.agp.text.RichText)>
<java.lang.StringBuffer: java.lang.Appendable append(java.lang.CharSequence,int,int)>
<java.util.Spliterators.AbstractLongSpliterator: java.util.Spliterator trySplit()>
<ohos.global.icu.util.JapaneseCalendar: int handleGetExtendedYear()>
<ohos.global.resource.solidxml.Theme: int getColorValue(java.lang.String)>
<java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock: boolean tryLock()>
<java.net.URI: java.lang.String getRawPath()>
<java.net.URL: java.lang.String getProtocol()>
<ohos.media.photokit.support.AlbumListInfo: java.lang.String getMimeType()>
<java.awt.font.NumericShaper.Range: java.awt.font.NumericShaper.Range valueOf(java.lang.String)>
<ohos.agp.components.MagicLayout.LayoutConfig: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.window.dialog.ListDialog: void <init>(ohos.app.Context,int)>
<java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<ohos.agp.window.service.ComponentPadding: void <init>()>
<java.util.LinkedList: void <init>()>
<ohos.app.Context: java.io.File getDir(java.lang.String,int)>
<ohos.agp.components.Text: void setLeftBubbleSize(int,int)>
<java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],java.net.NetworkInterface)>
<ohos.utils.LruBuffer: java.lang.String toString()>
<ohos.ai.cv.text.TextConfiguration.TextShape: ohos.ai.cv.text.TextConfiguration.TextShape[] values()>
<java.lang.Class: java.lang.Package getPackage()>
<java.security.spec.EncodedKeySpec: java.lang.String getFormat()>
<ohos.hiviewdfx.ResourceTag: ohos.hiviewdfx.ResourceTag get()>
<ohos.agp.components.webengine.Navigator: void goForward()>
<ohos.global.icu.text.CollationElementIterator: int previous()>
<ohos.agp.render.render3d.math.Matrix4x4: ohos.agp.render.render3d.math.Quaternion extractQuaternion()>
<ohos.agp.components.Component: int[] getHorizontalPosition()>
<ohos.app.AbilityContext: boolean isDeviceEncryptedStorage()>
<java.nio.charset.MalformedInputException: void <init>(int)>
<ohos.bundleactive.BundleActiveInfosMgr: ohos.bundleactive.BundleActiveStates queryBundleActiveStates(long,long)>
<ohos.distributedschedule.interwork.DeviceInfo: void setDeviceInfo(java.lang.String,java.lang.String)>
<ohos.aafwk.ability.DataAbilityOperation.Builder: ohos.aafwk.ability.DataAbilityOperation.Builder withPredicatesBackReference(int,int)>
<ohos.agp.render.render3d.math.Matrix4x4: void extractRotation(ohos.agp.render.render3d.math.Matrix4x4)>
<ohos.data.resultset.ResultSetWrapper: int getColumnIndexForName(java.lang.String)>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int,long)>
<java.util.concurrent.LinkedTransferQueue: boolean offer(java.lang.Object)>
<ohos.agp.utils.Matrix: boolean preRotate(float,float,float)>
<ohos.media.audio.AudioInterrupt: void setStreamInfo(ohos.media.audio.AudioStreamInfo)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat multiplicationAll(float)>
<java.text.DateFormatSymbols: void setShortMonths(java.lang.String[])>
<ohos.global.icu.text.DecimalFormatSymbols: void setPercentString(java.lang.String)>
<java.util.concurrent.LinkedBlockingDeque: java.util.Iterator descendingIterator()>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.DoubleStream doubles()>
<ohos.hiviewdfx.Debug: void functionTraceBegin(java.lang.String)>
<ohos.media.camera.device.CameraAbility: int[] getSupportedFlashMode()>
<java.time.ZonedDateTime: java.time.ZonedDateTime plusWeeks(long)>
<ohos.agp.components.Text: void setText(int)>
<javax.net.ssl.SSLSessionContext: java.util.Enumeration getIds()>
<java.util.SimpleTimeZone: void setStartRule(int,int,int)>
<ohos.global.icu.text.DateFormat: void setLenient(boolean)>
<java.sql.SQLClientInfoException: void <init>(java.lang.String,java.lang.String,java.util.Map,java.lang.Throwable)>
<java.net.ServerSocket: java.net.Socket accept()>
<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>
<ohos.sysappcomponents.calendar.entity.Participants: void setEventId(int)>
<java.io.SerializablePermission: void <init>(java.lang.String,java.lang.String)>
<java.io.ObjectOutputStream: void write(byte[],int,int)>
<ohos.agp.utils.Matrix: boolean mapRect(ohos.agp.utils.RectFloat)>
<java.util.concurrent.BlockingDeque: java.lang.Object remove()>
<ohos.media.image.Image: ohos.media.image.common.Rect getClipRect()>
<java.sql.Statement: void setMaxRows(int)>
<ohos.agp.utils.Matrix: boolean setRectToRect(ohos.agp.utils.RectFloat,ohos.agp.utils.RectFloat,ohos.agp.utils.Matrix.ScaleToFit)>
<ohos.agp.render.SweepShader: float getShaderYCoordinate()>
<ohos.javax.xml.validation.ValidatorHandler: boolean getFeature(java.lang.String)>
<java.lang.Process: java.io.InputStream getErrorStream()>
<java.time.ZonedDateTime: java.time.ZonedDateTime of(java.time.LocalDateTime,java.time.ZoneId)>
<ohos.aafwk.ability.Ability: void terminateAbility()>
<ohos.media.common.StorageProperty: int getRecorderMaxDurationMs()>
<ohos.accessibility.AccessibilityEventInfo: void addRecord(ohos.accessibility.AccessibilityEventInfo)>
<ohos.aafwk.abilityjet.activedata.ActiveData: void addObserver(ohos.aafwk.abilityjet.activedata.DataObserver,boolean)>
<ohos.ai.cv.docrefine.IDocRefine: int docDetect(ohos.ai.cv.common.VisionImage,ohos.ai.cv.docrefine.DocCoordinates,ohos.ai.cv.common.VisionCallback)>
<java.util.Scanner: java.lang.String next(java.util.regex.Pattern)>
<ohos.data.resultset.CombinedResultSet: double getDouble(int)>
<ohos.media.player.Player: boolean enableScreenOn(boolean)>
<java.text.DecimalFormatSymbols: void setMonetaryDecimalSeparator(char)>
<java.util.ArrayDeque: java.lang.Object peek()>
<ohos.agp.render.render3d.ViewHolder.BitmapListener: void onBitmapLoadError()>
<ohos.media.audio.AudioCapturer: int read(short[],int,int,boolean)>
<java.lang.StrictMath: int floorMod(int,int)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long accumulateAndGet(java.lang.Object,long,java.util.function.LongBinaryOperator)>
<ohos.agp.utils.Contour: void translate(int,int)>
<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean,java.util.Collection)>
<java.security.cert.CertPathValidatorException.BasicReason: java.security.cert.CertPathValidatorException.BasicReason valueOf(java.lang.String)>
<java.time.temporal.TemporalAccessor: long getLong(java.time.temporal.TemporalField)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateInstance(ohos.global.icu.util.Calendar,int,ohos.global.icu.util.ULocale)>
<java.util.concurrent.Executor: void execute(java.lang.Runnable)>
<ohos.telephony.RadioInfoManager: java.lang.String getTypeAllocationCode(int)>
<java.util.TimeZone: java.lang.String getID()>
<java.net.PasswordAuthentication: char[] getPassword()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: int reduceValuesToInt(long,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator)>
<ohos.agp.components.Component.MeasureSpec: void <init>()>
<java.net.Socket: void <init>(java.lang.String,int,java.net.InetAddress,int)>
<ohos.javax.xml.transform.Source: java.lang.String getSystemId()>
<java.net.SocketImpl: void create(boolean)>
<ohos.agp.components.DragEvent: ohos.agp.utils.MimeData getMimeData()>
<ohos.global.icu.text.MessagePattern.Part.Type: ohos.global.icu.text.MessagePattern.Part.Type[] values()>
<java.sql.Blob: int setBytes(long,byte[])>
<ohos.ai.tts.TtsParams: void <init>()>
<ohos.data.usage.Volume: boolean isPluggable()>
<ohos.agp.components.webengine.WebView: ohos.agp.components.webengine.WebConfig getWebConfig()>
<java.text.DateFormat: java.text.DateFormat getDateInstance(int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notBetween(java.lang.String,java.sql.Timestamp,java.sql.Timestamp)>
<ohos.global.icu.text.AlphabeticIndex: java.lang.String getInflowLabel()>
<java.security.KeyStore.Entry.Attribute: java.lang.String getValue()>
<ohos.aafwk.content.Intent: java.util.ArrayList getIntegerArrayListParam(java.lang.String)>
<ohos.miscservices.download.IDownloadListener: void onRemoved()>
<ohos.aafwk.ability.ViewsStatus: ohos.aafwk.content.Intent getStatusByComponentId(int)>
<java.sql.BatchUpdateException: int[] getUpdateCounts()>
<java.time.OffsetTime: int getNano()>
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>
<java.util.UUID: long getLeastSignificantBits()>
<java.io.InputStream: long skip(long)>
<java.sql.Clob: int setString(long,java.lang.String,int,int)>
<java.sql.DatabaseMetaData: boolean supportsOuterJoins()>
<ohos.bundle.ApplicationInfo: void <clinit>()>
<ohos.app.Context: java.io.File getExternalCacheDir()>
<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>
<ohos.aafwk.ability.Ability: void onUpdateForm(int)>
<javax.tools.JavaCompiler.CompilationTask: java.lang.Object call()>
<ohos.media.audio.AudioStreamInfo.StreamUsage: ohos.media.audio.AudioStreamInfo.StreamUsage[] values()>
<ohos.global.icu.lang.UCharacter: java.lang.String getName(java.lang.String,java.lang.String)>
<java.nio.channels.FileChannel: java.nio.channels.FileChannel open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>
<java.security.cert.PKIXParameters: void setCertPathCheckers(java.util.List)>
<java.util.concurrent.locks.LockSupport: void park(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: int drainTo(java.util.Collection)>
<ohos.global.icu.util.ULocale: java.lang.String getName(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object reduce(long,java.util.function.BiFunction,java.util.function.BiFunction)>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinPool commonPool()>
<ohos.agp.render.Canvas: void skew(float,float)>
<ohos.media.camera.params.PropertyKey.Key: boolean checkType(java.lang.Class)>
<ohos.data.distributed.common.SyncCallback: void syncCompleted(java.util.Map)>
<ohos.utils.FileWatcher: void addWatch(java.nio.file.Path,ohos.utils.FileWatcher.EventHandler,boolean,java.nio.file.WatchEvent.Kind[])>
<ohos.media.image.PropertyFilter: ohos.media.image.PropertyFilter setPropertyString(java.lang.String,java.lang.String)>
<java.lang.StringBuilder: int indexOf(java.lang.String,int)>
<java.lang.invoke.MethodType: boolean hasPrimitives()>
<java.lang.invoke.MethodType: java.lang.String toString()>
<java.util.concurrent.LinkedTransferQueue: boolean tryTransfer(java.lang.Object)>
<ohos.aafwk.ability.OnClickListener: void <init>()>
<ohos.utils.HalfFloat: long longValue()>
<ohos.agp.render.render3d.ViewHolder: void setOpaque(boolean)>
<java.sql.SQLOutput: void writeBytes(byte[])>
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>
<ohos.utils.LightweightSet: java.lang.Object removeAt(int)>
<ohos.javax.xml.stream.events.StartDocument: boolean isStandalone()>
<ohos.bluetooth.ble.BlePeripheralDevice: java.util.List getServices()>
<java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)>
<java.nio.CharBuffer: java.nio.CharBuffer duplicate()>
<java.io.PipedInputStream: void connect(java.io.PipedOutputStream)>
<java.sql.Wrapper: java.lang.Object unwrap(java.lang.Class)>
<ohos.app.AbilityContext: void setPattern(int)>
<ohos.agp.window.dialog.ListDialog: void destroy()>
<java.sql.ResultSet: void updateNClob(int,java.io.Reader,long)>
<ohos.media.audio.AudioRenderer: void setFrameIntervalObserver(ohos.media.audio.FrameIntervalObserver,int,ohos.eventhandler.EventHandler)>
<ohos.agp.components.ProgressBar: void setProgressHintTextAlignment(int)>
<ohos.utils.LightweightSet: java.lang.String toString()>
<ohos.agp.render.Paint: int getTextSize()>
<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>
<java.io.PushbackReader: int read(char[],int,int)>
<ohos.utils.LruBuffer: java.util.Optional remove(java.lang.Object)>
<java.time.temporal.TemporalAmount: java.util.List getUnits()>
<java.util.concurrent.locks.ReentrantReadWriteLock: boolean isFair()>
<ohos.javax.xml.stream.XMLStreamWriter: void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.colors.RgbColor: int asRgbaInt()>
<java.lang.Long: int hashCode(long)>
<ohos.bundle.BundleInfo: long getUpdateTime()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThanOrEqualTo(java.lang.String,int)>
<java.util.concurrent.CountDownLatch: long getCount()>
<java.lang.reflect.Field: void setByte(java.lang.Object,byte)>
<java.util.Vector: void setSize(int)>
<ohos.agp.render.Region: void <init>(ohos.agp.render.Region)>
<java.time.chrono.HijrahDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.components.DependentLayout.LayoutConfig: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.components.DependentLayout.LayoutConfig: void addRule(int,int)>
<ohos.media.audio.AudioWaver: int getMaxDataSize()>
<java.io.PipedReader: int read(char[],int,int)>
<java.util.concurrent.ForkJoinTask: boolean isCompletedNormally()>
<java.io.ObjectInputStream: java.lang.Object readObject()>
<ohos.event.notification.NotificationRequest.NotificationContent: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.multimodalinput.standard.TelephoneEventHandle: boolean onRefuse(ohos.multimodalinput.event.MultimodalEvent)>
<java.lang.StrictMath: double cosh(double)>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion subtract(ohos.agp.render.render3d.math.Quaternion,ohos.agp.render.render3d.math.Quaternion)>
<java.security.cert.PKIXReason: void <clinit>()>
<ohos.agp.render.render3d.systems.MorphingSystem: void setTargetWeights(long,float[])>
<javax.sql.RowSet: void setTimestamp(java.lang.String,java.sql.Timestamp,java.util.Calendar)>
<ohos.global.icu.text.UnicodeSet.ComparisonStyle: void <clinit>()>
<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>
<ohos.org.xml.sax.helpers.DefaultHandler: void error(ohos.org.xml.sax.SAXParseException)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendZoneRegionId()>
<ohos.utils.geo.Rect: void clear()>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.text.DateIntervalFormat getInstance(java.lang.String,ohos.global.icu.text.DateIntervalInfo)>
<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>
<java.util.concurrent.CountDownLatch: void countDown()>
<java.security.DigestInputStream: void on(boolean)>
<java.util.PriorityQueue: void clear()>
<java.io.InvalidClassException: void <init>(java.lang.String)>
<ohos.agp.components.Slider.ValueChangedListener: void onProgressUpdated(ohos.agp.components.Slider,int,boolean)>
<java.util.concurrent.ThreadPoolExecutor: void setCorePoolSize(int)>
<ohos.aafwk.ability.AbilitySlice: void continueAbilityReversibly(java.lang.String)>
<ohos.agp.components.ScrollView.ReboundEffectParams: void setRemainVisiblePercent(int)>
<java.lang.UnsupportedOperationException: void <init>()>
<ohos.javax.xml.stream.XMLStreamReader: int getEventType()>
<ohos.multimodalinput.event.KeyEvent: boolean isKeyDown()>
<ohos.media.sessioncore.AVController.PlayControls: void play()>
<java.security.UnresolvedPermission: boolean implies(java.security.Permission)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<ohos.agp.window.dialog.ToastDialog: void cancel()>
<ohos.global.icu.text.UCharacterIterator: ohos.global.icu.text.UCharacterIterator getInstance(ohos.global.icu.text.Replaceable)>
<ohos.global.icu.util.TimeZone: boolean isFrozen()>
<java.io.Console: char[] readPassword()>
<ohos.agp.render.Paint: int getTextAlign()>
<ohos.data.orm.BindUtils: java.lang.String clobToString(java.sql.Clob)>
<java.net.Socket: boolean getTcpNoDelay()>
<ohos.data.search.schema.PhotoItem: java.lang.Integer getWidth()>
<ohos.global.icu.lang.UScript: boolean breaksBetweenLetters(int)>
<ohos.global.icu.text.DecimalFormat: void setMaximumIntegerDigits(int)>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate dateNow(java.time.ZoneId)>
<java.util.Spliterators.AbstractDoubleSpliterator: java.util.Spliterator.OfDouble trySplit()>
<java.math.BigInteger: byte[] toByteArray()>
<javax.net.ssl.SSLEngine: void setSSLParameters(javax.net.ssl.SSLParameters)>
<ohos.utils.zson.ZSONArray: java.lang.Integer getInteger(int)>
<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<java.text.DecimalFormat: void <init>()>
<java.util.List: void clear()>
<ohos.account.DistributedInfo: java.lang.String getId()>
<ohos.global.icu.text.Transliterator: ohos.global.icu.text.UnicodeSet getSourceSet()>
<java.math.BigInteger: java.math.BigInteger probablePrime(int,java.util.Random)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,long)>
<ohos.net.LocalSocket: java.io.OutputStream getOutputStream()>
<java.lang.IllegalArgumentException: void <init>()>
<java.math.BigInteger: int compareTo(java.math.BigInteger)>
<java.util.PriorityQueue: void <init>(java.util.SortedSet)>
<ohos.global.icu.util.Output: java.lang.String toString()>
<ohos.agp.render.render3d.gltf.GltfData: int getSceneCount()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates in(java.lang.String,java.sql.Timestamp[])>
<ohos.utils.BasePacMap: void putStringArray(java.lang.String,java.lang.String[])>
<ohos.accessibility.ability.AccessibilityInfo: boolean isClickable()>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getScientificInstance(ohos.global.icu.util.ULocale)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThan(java.lang.String,java.util.Calendar)>
<ohos.workscheduler.WorkInfo: int getRequestChargeType()>
<ohos.miscservices.pasteboard.PasteData: java.lang.CharSequence getPrimaryText()>
<ohos.agp.animation.AnimatorScatter: ohos.agp.animation.Animator parse(int)>
<java.lang.Long: long parseLong(java.lang.String,int)>
<java.util.stream.LongStream: java.util.stream.LongStream range(long,long)>
<ohos.data.orm.AllChangeToTarget: void addToInsertList(ohos.data.orm.OrmObject)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,float)>
<ohos.data.distributed.common.SubscribeType: ohos.data.distributed.common.SubscribeType valueOf(java.lang.String)>
<ohos.aafwk.ability.DataUriUtils: ohos.utils.net.Uri deleteId(ohos.utils.net.Uri)>
<java.util.concurrent.atomic.AtomicInteger: int intValue()>
<ohos.bundle.BundleInfo.ReqPermissionDetail: void setUsedScene(ohos.bundle.BundleInfo.ReqPermissionDetail.UsedScene)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Map.Entry pollLastEntry()>
<ohos.global.icu.util.IslamicCalendar: void <init>(ohos.global.icu.util.TimeZone)>
<ohos.net.http.SslError: java.security.cert.X509Certificate getCertificate()>
<ohos.sysappcomponents.contact.entity.PostalAddress: java.lang.String getCity()>
<javax.crypto.ExemptionMechanism: void init(java.security.Key,java.security.AlgorithmParameters)>
<java.sql.DatabaseMetaData: int getDefaultTransactionIsolation()>
<java.time.ZonedDateTime: java.time.ZonedDateTime ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)>
<ohos.agp.render.render3d.gltf.GltfLoader: int getDefaultSceneImportFlags()>
<java.util.stream.BaseStream: boolean isParallel()>
<javax.lang.model.element.AnnotationValue: java.lang.Object accept(javax.lang.model.element.AnnotationValueVisitor,java.lang.Object)>
<ohos.global.icu.text.DecimalFormat: ohos.global.icu.util.Currency.CurrencyUsage getCurrencyUsage()>
<java.security.SecureRandom: void nextBytes(byte[])>
<ohos.multimodalinput.event.MouseEvent: ohos.multimodalinput.event.MmiPoint getCursor()>
<ohos.utils.BasePacMap: void putObjectValue(java.lang.String,java.lang.Object)>
<ohos.agp.components.BaseItemProvider: void notifyDataSetItemChanged(int)>
<ohos.utils.zson.ZSONArray: java.lang.Byte getByte(int)>
<ohos.media.image.common.Position: void <init>(int,int)>
<ohos.app.AbilityContext: ohos.app.Context getApplicationContext()>
<ohos.data.search.schema.PlaceItem: ohos.data.search.schema.PlaceItem setPostalCode(java.lang.Long)>
<ohos.global.i18n.text.DateFormatUtil: java.lang.String getTimeFormat_hm(java.util.Locale)>
<java.sql.DatabaseMetaData: boolean supportsLimitedOuterJoins()>
<java.sql.BatchUpdateException: void <init>(java.lang.String,java.lang.String,int[],java.lang.Throwable)>
<javax.security.cert.CertificateExpiredException: void <init>()>
<ohos.telephony.PhoneNumberFormattingTextObserver: java.lang.String getPhoneNumberAfterFormat()>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
<java.util.concurrent.CopyOnWriteArrayList: int size()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenCombineAsync(java.util.concurrent.CompletionStage,java.util.function.BiFunction)>
<ohos.aafwk.ability.fraction.FractionManager: java.util.Optional getFractionByTag(java.lang.String)>
<ohos.media.audio.SoundEffect.SoundEffectInfo: boolean equals(java.lang.Object)>
<ohos.media.image.PixelMap: int getBaseDensity()>
<javax.tools.ToolProvider: java.lang.ClassLoader getSystemToolClassLoader()>
<ohos.agp.render.opengl.GLES20: void glCullFace(int)>
<java.sql.SQLInput: java.lang.String readString()>
<java.lang.Float: byte byteValue()>
<ohos.global.icu.text.MessageFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>
<java.lang.Object: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingDeque: int drainTo(java.util.Collection,int)>
<ohos.org.xml.sax.Attributes: int getIndex(java.lang.String)>
<java.sql.Timestamp: int compareTo(java.sql.Timestamp)>
<java.nio.channels.NetworkChannel: java.nio.channels.NetworkChannel bind(java.net.SocketAddress)>
<javax.net.ssl.ExtendedSSLSession: java.lang.String[] getPeerSupportedSignatureAlgorithms()>
<ohos.agp.components.VelocityDetector: float getHorizontalVelocity()>
<ohos.global.icu.util.UniversalTimeScale: ohos.global.icu.math.BigDecimal toBigDecimal(ohos.global.icu.math.BigDecimal,int)>
<ohos.data.rdb.Statement: void setLong(int,long)>
<java.nio.ShortBuffer: java.nio.ByteOrder order()>
<java.util.NavigableMap: java.util.NavigableSet navigableKeySet()>
<ohos.agp.utils.Circle: float getCenterX()>
<ohos.bundle.LauncherService: java.util.Optional getShortcutInfos(java.lang.String)>
<ohos.net.RouteInfo: java.lang.String toString()>
<ohos.agp.components.RadioButton: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void shutdown()>
<ohos.data.DatabaseFileType: void <clinit>()>
<java.util.PrimitiveIterator.OfInt: java.lang.Integer next()>
<ohos.agp.components.Component.VoiceEvent: void addBadges(java.lang.String,java.lang.String)>
<ohos.utils.LightweightMap: int indexOfKey(java.lang.Object)>
<ohos.global.icu.math.BigDecimal: int signum()>
<ohos.org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>
<java.util.concurrent.ArrayBlockingQueue: java.lang.Object poll()>
<ohos.media.audio.SoundPlayer.AudioVolumes: void setFrontRightVolume(float)>
<ohos.agp.components.Component: void <init>(ohos.app.Context)>
<ohos.global.icu.util.HebrewCalendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<ohos.sysappcomponents.contact.entity.Contact: ohos.sysappcomponents.contact.entity.Note getNote()>
<java.sql.Connection: java.util.Properties getClientInfo()>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource createIncrementalSource(ohos.media.image.ImageSource.SourceOptions)>
<ohos.utils.geo.DimensFloat: void <init>(float,float)>
<ohos.global.icu.text.DateFormat: java.lang.StringBuffer format(ohos.global.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.agp.components.VelocityDetector: ohos.agp.components.VelocityDetector obtainInstance()>
<ohos.utils.zson.ZSONException: void <init>(java.lang.String)>
<ohos.global.icu.text.MessagePattern.ArgType: boolean hasPluralStyle()>
<ohos.agp.render.render3d.RenderLoop: int getVsyncCount()>
<javax.net.ssl.SSLSocketFactory: java.lang.String[] getDefaultCipherSuites()>
<ohos.aafwk.ability.OnClickListener: void onTouchEvent(ohos.aafwk.ability.AbilityForm,ohos.aafwk.ability.ViewsStatus)>
<java.util.prefs.BackingStoreException: void <init>(java.lang.String)>
<java.util.concurrent.ExecutorService: void shutdown()>
<ohos.aafwk.ability.DataAbilityHelper: ohos.aafwk.ability.DataAbilityHelper creator(ohos.app.Context)>
<ohos.utils.LightweightSet: java.lang.Object valueAt(int)>
<java.time.OffsetTime: boolean isBefore(java.time.OffsetTime)>
<javax.sql.RowSet: void setUsername(java.lang.String)>
<java.net.DatagramSocket: int getPort()>
<ohos.global.icu.text.DecimalFormatSymbols: void setInternationalCurrencySymbol(java.lang.String)>
<java.security.cert.PolicyQualifierInfo: java.lang.String toString()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.wifi.WifiDevice: java.util.Optional getLinkedInfo()>
<ohos.agp.render.render3d.SceneNode: void setParent(ohos.agp.render.render3d.SceneNode)>
<java.nio.channels.spi.SelectorProvider: java.nio.channels.Pipe openPipe()>
<ohos.agp.components.Picker: ohos.agp.utils.Color getShaderColor()>
<ohos.agp.transition.TransitionAlpha: void <init>()>
<ohos.utils.Parcel: byte[] getBytes()>
<ohos.aafwk.ability.Lifecycle.Event: ohos.aafwk.ability.Lifecycle.Event valueOf(java.lang.String)>
<java.io.FileInputStream: int available()>
<ohos.global.icu.text.Collator: java.lang.String[] getKeywords()>
<ohos.aafwk.ability.ProviderFormInfo: void mergeActions(ohos.agp.components.ComponentProvider)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query lessThan(java.lang.String,double)>
<ohos.data.distributed.common.Entry: ohos.data.distributed.common.Value getValue()>
<ohos.data.distributed.common.Value: ohos.data.distributed.common.Value get(float)>
<java.util.Map: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>
<ohos.global.icu.number.FormattedNumber: java.text.AttributedCharacterIterator toCharacterIterator()>
<ohos.media.audio.AudioRenderer: boolean pause()>
<java.net.InetAddress: boolean isMCLinkLocal()>
<java.util.Hashtable: int size()>
<javax.net.ssl.SSLSession: boolean isValid()>
<ohos.agp.render.render3d.components.NodeComponent: ohos.agp.render.render3d.Entity getParent()>
<java.lang.SecurityException: void <init>()>
<ohos.global.icu.text.Normalizer2.Mode: ohos.global.icu.text.Normalizer2.Mode valueOf(java.lang.String)>
<java.nio.file.FileSystem: boolean isOpen()>
<java.nio.file.spi.FileSystemProvider: void delete(java.nio.file.Path)>
<java.io.ByteArrayInputStream: int available()>
<java.security.cert.CertStoreSpi: void <init>(java.security.cert.CertStoreParameters)>
<ohos.global.i18n.text.MeasureFormatter: void <init>()>
<ohos.agp.components.TimePicker: ohos.agp.utils.Color getShaderColor()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap descendingMap()>
<ohos.data.rdb.StoreConfig: java.lang.String getName()>
<ohos.agp.components.ProgressBar: void setMaxWidth(int)>
<ohos.app.AbilityContext: int verifyPermission(java.lang.String,int,int)>
<ohos.data.resultset.ResultSetWrapper: short getShort(int)>
<ohos.ai.cv.common.VisionConfiguration: ohos.utils.PacMap getParam()>
<java.nio.file.StandardCopyOption: void <clinit>()>
<java.time.chrono.Chronology: int hashCode()>
<ohos.aafwk.ability.AbilityPackage: void onMemoryLevel(int)>
<ohos.agp.render.Path: boolean getLastPoint(ohos.agp.utils.Point)>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.Entity generateCube(java.lang.String,ohos.agp.render.render3d.resources.ResourceHandle,float,float,float)>
<ohos.interwork.utils.ParcelableEx: void marshallingEx(ohos.utils.Parcel)>
<java.lang.StringBuffer: java.lang.String substring(int)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getQueuedThreads()>
<ohos.tools.ByTrace: void <init>()>
<java.time.zone.ZoneOffsetTransitionRule: java.time.zone.ZoneOffsetTransition createTransition(int)>
<java.time.OffsetTime: java.time.OffsetTime plus(java.time.temporal.TemporalAmount)>
<java.lang.Short: byte byteValue()>
<ohos.org.xml.sax.Parser: void setDTDHandler(ohos.org.xml.sax.DTDHandler)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent makeMainAbility(ohos.bundle.ElementName)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: double reduceValuesToDouble(long,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator)>
<ohos.utils.Ashmem: boolean setProtection(int)>
<ohos.global.icu.text.DecimalFormat: boolean isScientificNotation()>
<ohos.data.orm.OrmContext: boolean restore(java.lang.String,byte[],byte[])>
<java.sql.ResultSet: java.sql.Time getTime(int)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>
<ohos.media.common.AudioProperty.Builder: ohos.media.common.AudioProperty.Builder setRecorderNumChannels(int)>
<java.util.Scanner: float nextFloat()>
<java.lang.invoke.ConstantCallSite: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle)>
<java.sql.Ref: java.lang.Object getObject()>
<java.util.function.DoubleUnaryOperator: java.util.function.DoubleUnaryOperator andThen(java.util.function.DoubleUnaryOperator)>
<ohos.global.icu.util.ChineseCalendar: void <init>(ohos.global.icu.util.ULocale)>
<java.lang.StrictMath: double exp(double)>
<java.sql.DriverManager: void println(java.lang.String)>
<java.net.UnknownHostException: void <init>(java.lang.String)>
<ohos.aafwk.ability.AbilityPackage: void unregisterCallbacks(ohos.aafwk.ability.AbilityLifecycleCallbacks,ohos.app.ElementsCallback)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty moveByX(float)>
<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror getSuperclass()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query beginGroup()>
<ohos.ai.tts.TtsClient: boolean setAudioType(ohos.media.audio.AudioManager.AudioVolumeType)>
<javax.net.ssl.SNIHostName: void <init>(java.lang.String)>
<ohos.global.icu.util.TimeZone: ohos.global.icu.util.TimeZone getDefault()>
<ohos.sensor.bean.SensorBase: java.lang.String getName()>
<java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.util.function.Supplier)>
<ohos.ai.cv.sr.SisrConfiguration: int getQuality()>
<ohos.media.common.Source: void <init>(java.lang.String)>
<ohos.agp.window.service.WindowManager: java.util.Optional getTopWindow()>
<java.util.AbstractList: int hashCode()>
<java.nio.file.Path: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind[])>
<java.util.Formatter.BigDecimalLayoutForm: java.util.Formatter.BigDecimalLayoutForm valueOf(java.lang.String)>
<javax.sql.RowSet: void setNCharacterStream(java.lang.String,java.io.Reader)>
<ohos.ai.asr.AsrListener: void onEnd()>
<ohos.agp.render.Paint: int getDisplayNumber(java.lang.String,boolean,float,float[])>
<ohos.app.AbilityContext: ohos.global.resource.ResourceManager getResourceManager()>
<javax.crypto.ShortBufferException: void <init>(java.lang.String)>
<ohos.javax.xml.stream.events.StartElement: ohos.javax.xml.stream.events.Attribute getAttributeByName(ohos.javax.xml.namespace.QName)>
<java.net.DatagramPacket: int getPort()>
<java.time.YearMonth: boolean isValidDay(int)>
<java.util.AbstractCollection: boolean retainAll(java.util.Collection)>
<java.util.stream.Stream: java.util.stream.LongStream mapToLong(java.util.function.ToLongFunction)>
<javax.lang.model.element.ElementVisitor: java.lang.Object visit(javax.lang.model.element.Element,java.lang.Object)>
<java.util.stream.LongStream: java.util.stream.LongStream skip(long)>
<javax.net.ssl.HttpsURLConnection: void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)>
<java.util.Deque: int size()>
<java.time.YearMonth: java.time.Month getMonth()>
<ohos.sysappcomponents.contact.entity.SipAddress: void setSipAddress(java.lang.String)>
<java.util.Scanner: java.lang.String findInLine(java.lang.String)>
<java.security.KeyStore: boolean isCertificateEntry(java.lang.String)>
<ohos.sysappcomponents.contact.ContactsHelper: java.lang.String queryKey(long,ohos.sysappcomponents.contact.entity.Holder)>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
<java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>
<ohos.event.notification.ReminderRequest: java.lang.String getSlotId()>
<ohos.agp.components.RadioContainer: void setMarkChangedListener(ohos.agp.components.RadioContainer.CheckedStateChangedListener)>
<java.sql.CallableStatement: java.lang.String getString(int)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.util.CurrencyAmount parseCurrency(java.lang.CharSequence,java.text.ParsePosition)>
<java.lang.AssertionError: void <init>(int)>
<java.io.File: java.lang.String getCanonicalPath()>
<ohos.utils.HalfFloat: int intValue()>
<ohos.global.icu.text.MessageFormat: void setFormats(java.text.Format[])>
<ohos.agp.render.Canvas: void clipPath(ohos.agp.render.Path,ohos.agp.render.Canvas.ClipOp)>
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.ai.cv.text.TextConfiguration: int getLanguage()>
<java.security.interfaces.RSAMultiPrimePrivateCrtKey: java.math.BigInteger getPrimeQ()>
<java.util.concurrent.Phaser: void <init>(java.util.concurrent.Phaser)>
<ohos.agp.render.Path.Direction: int value()>
<java.security.cert.CollectionCertStoreParameters: java.lang.String toString()>
<ohos.event.commonevent.CommonEventData: int getCode()>
<ohos.event.notification.NotificationRequest: java.lang.String getNotificationHashCode()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,boolean)>
<ohos.media.audio.SoundPlayer.AudioVolumes: void setRearLeftVolume(float)>
<ohos.data.distributed.common.FieldNode: void setType(ohos.data.distributed.common.FieldValueType)>
<ohos.event.commonevent.CommonEventSubscriber: java.lang.String toString()>
<javax.security.cert.X509Certificate: java.lang.String getSigAlgName()>
<java.net.Inet6Address: boolean isMCLinkLocal()>
<ohos.agp.components.ComponentContainer.LayoutConfig: void setMarginsTopAndBottom(int,int)>
<java.io.CharArrayReader: int read(char[],int,int)>
<java.math.BigDecimal: void <init>(java.math.BigInteger)>
<java.sql.ResultSet: void updateCharacterStream(java.lang.String,java.io.Reader)>
<ohos.sysappcomponents.contact.ContactsHelper: ohos.sysappcomponents.contact.HoldersCollection queryHolders()>
<java.util.stream.IntStream: boolean anyMatch(java.util.function.IntPredicate)>
<java.util.stream.DoubleStream: java.util.Iterator iterator()>
<ohos.agp.window.service.DisplayNotch: java.util.List getNotchRects()>
<ohos.bluetooth.ble.BleAdvertiseData: java.util.Map getServiceData()>
<java.util.OptionalLong: int hashCode()>
<ohos.aafwk.ability.AbilitySlice: boolean releaseForm(long)>
<java.nio.file.Path: int getNameCount()>
<ohos.media.common.StorageProperty.Builder: ohos.media.common.StorageProperty.Builder setRecorderFile(java.io.File)>
<java.time.YearMonth: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>
<ohos.agp.animation.Animator: void setPauseListenerInternal(ohos.agp.animation.Animator.StateChangedListener)>
<ohos.global.icu.text.MessageFormat: void setFormat(int,java.text.Format)>
<ohos.nfc.cardemulation.CardEmulation: void setListenMode(int)>
<java.nio.channels.AsynchronousChannelGroup: void <init>(java.nio.channels.spi.AsynchronousChannelProvider)>
<java.util.concurrent.ThreadPoolExecutor: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>
<ohos.global.icu.util.Calendar: java.lang.String toString()>
<ohos.global.icu.text.MessagePattern.ApostropheMode: void <clinit>()>
<java.time.LocalTime: java.time.LocalTime minus(long,java.time.temporal.TemporalUnit)>
<ohos.powermanager.PowerManager: ohos.powermanager.PowerManager.RunningLock createRunningLock(java.lang.String,ohos.powermanager.PowerManager.RunningLockType)>
<java.util.WeakHashMap: java.util.Collection values()>
<ohos.rpc.MessageOption: int getFlags()>
<java.nio.ByteBuffer: java.lang.String toString()>
<java.net.URLConnection: void <init>(java.net.URL)>
<java.nio.file.SimpleFileVisitor: java.nio.file.FileVisitResult visitFileFailed(java.lang.Object,java.io.IOException)>
<ohos.agp.components.TimePicker: void setSecond(int)>
<ohos.wifi.WifiDeviceConfig: void <init>()>
<ohos.agp.components.TimePicker: void set24Hour(boolean)>
<ohos.nfc.tag.IsoDepTag: java.util.Optional getInstance(ohos.nfc.tag.TagInfo)>
<ohos.bundle.IBundleManager: ohos.security.permission.PermissionDef getPermissionDef(java.lang.String)>
<java.time.OffsetTime: int compareTo(java.lang.Object)>
<java.sql.SQLInput: java.io.Reader readCharacterStream()>
<ohos.bluetooth.ble.BlePeripheralCallback: void characteristicWriteEvent(ohos.bluetooth.ble.GattCharacteristic,int)>
<ohos.media.common.Source: void setRecorderAudioSource(int)>
<ohos.aafwk.ability.delegation.IAbilityDelegatorArgs: java.lang.ClassLoader getTestClassLoader()>
<java.nio.ShortBuffer: java.nio.ShortBuffer put(int,short)>
<ohos.agp.components.SearchBar: ohos.agp.components.TextField getSearchText()>
<ohos.bundle.BundleInfo: java.lang.String getAppId()>
<ohos.telephony.CdmaSignalInformation: java.lang.String toString()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setAutoDeletedTime(long)>
<java.sql.RowIdLifetime: java.sql.RowIdLifetime valueOf(java.lang.String)>
<java.nio.channels.DatagramChannel: int write(java.nio.ByteBuffer)>
<ohos.app.Environment: void <init>()>
<ohos.media.audio.AudioStreamInfo.Builder: ohos.media.audio.AudioStreamInfo.Builder streamUsage(ohos.media.audio.AudioStreamInfo.StreamUsage)>
<javax.lang.model.util.Types: javax.lang.model.type.PrimitiveType unboxedType(javax.lang.model.type.TypeMirror)>
<ohos.data.search.schema.PhotoItem: java.lang.String getPhotoCategory()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setGroupOverview(boolean)>
<java.security.Principal: java.lang.String getName()>
<java.util.Set: boolean retainAll(java.util.Collection)>
<javax.lang.model.util.SimpleTypeVisitor6: java.lang.Object visitPrimitive(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<ohos.data.orm.OrmDatabase: void corruptionHandler(java.io.File)>
<java.time.OffsetDateTime: java.time.OffsetDateTime minusDays(long)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty alpha(float)>
<java.util.SplittableRandom: java.util.stream.LongStream longs(long)>
<ohos.data.distributed.file.DistFile: boolean isDistFile()>
<ohos.data.rdb.RdbStore: int getVersion()>
<java.util.Collections: java.util.NavigableMap checkedNavigableMap(java.util.NavigableMap,java.lang.Class,java.lang.Class)>
<java.lang.Class: boolean desiredAssertionStatus()>
<java.lang.ThreadGroup: void setMaxPriority(int)>
<java.util.SortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>
<ohos.agp.components.Rating: void setThumbElement(ohos.agp.components.element.Element)>
<ohos.agp.components.Text: void setBubbleElement(ohos.agp.components.element.Element)>
<ohos.data.resultset.ResultSetIndexOutOfRangeException: void <init>(java.lang.String)>
<ohos.bundle.IBundleManager: java.util.List getBundleInfos(int)>
<ohos.agp.components.PageSlider.ReboundEffectParams: int getOverscrollPercent()>
<ohos.data.search.model.Recommendation: void setField(java.lang.String)>
<ohos.global.icu.text.DecimalFormatSymbols: void setMinusSignString(java.lang.String)>
<ohos.ai.cv.docrefine.DocCoordinates: void setDocCoordinates(ohos.ai.cv.docrefine.DocCoordinates)>
<ohos.global.icu.text.DateTimePatternGenerator.PatternInfo: void <init>()>
<ohos.javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>
<ohos.utils.BasePacMap: ohos.utils.Dimension getDimension(java.lang.String)>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onCancel(ohos.multimodalinput.event.MultimodalEvent)>
<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>
<ohos.bundle.IBundleManager: int getUidByBundleName(java.lang.String,int)>
<ohos.bundle.BundleInfo: java.util.List getAbilityInfos()>
<java.sql.DatabaseMetaData: boolean supportsANSI92FullSQL()>
<ohos.utils.net.Uri: ohos.utils.net.Uri.Builder makeBuilder()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.SortedSet headSet(java.lang.Object)>
<java.time.zone.ZoneOffsetTransitionRule: java.time.ZoneOffset getStandardOffset()>
<java.sql.SQLWarning: void <init>(java.lang.String,java.lang.Throwable)>
<javax.crypto.spec.PSource.PSpecified: void <init>(byte[])>
<java.sql.DatabaseMetaData: boolean supportsOpenStatementsAcrossCommit()>
<ohos.global.icu.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: void awaitUninterruptibly()>
<ohos.ai.cv.common.CvPoint: void <init>(ohos.ai.cv.common.CvPoint)>
<ohos.app.dispatcher.task.TaskPriority: void <clinit>()>
<ohos.agp.components.Component: float getBoundaryFadeEffectBottomRate()>
<java.util.concurrent.ForkJoinTask: int getSurplusQueuedTaskCount()>
<ohos.global.icu.lang.UCharacter: boolean isUpperCase(int)>
<java.lang.Boolean: boolean logicalXor(boolean,boolean)>
<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getCause()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableMap descendingMap()>
<java.util.Collections: java.util.Queue asLifoQueue(java.util.Deque)>
<java.sql.CallableStatement: java.sql.SQLXML getSQLXML(java.lang.String)>
<java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock: boolean tryLock(long,java.util.concurrent.TimeUnit)>
<ohos.bundle.AbilityInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.data.search.model.IndexForm: java.lang.String toString()>
<java.util.AbstractMap.SimpleImmutableEntry: java.lang.Object getKey()>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getWordInstance(java.util.Locale)>
<ohos.global.icu.math.BigDecimal: char[] toCharArray()>
<java.lang.Character: int compareTo(java.lang.Object)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet retain(java.lang.CharSequence)>
<ohos.agp.components.Rating: void setRatingChangedListener(ohos.agp.components.Rating.RatingChangedListener)>
<java.util.concurrent.ConcurrentSkipListMap: void clear()>
<ohos.agp.components.AbsSlider: ohos.agp.components.element.Element getThumbElement()>
<ohos.agp.window.dialog.BaseDialog.DialogListener: boolean isTouchOutside()>
<java.net.SocketImpl: void connect(java.net.InetAddress,int)>
<java.sql.ResultSet: boolean last()>
<ohos.global.resource.Element: boolean getBoolean()>
<java.net.DatagramSocketImpl: void leave(java.net.InetAddress)>
<java.util.zip.ZipFile: void <init>(java.lang.String,java.nio.charset.Charset)>
<ohos.global.icu.text.PluralRules.PluralType: void <clinit>()>
<java.time.chrono.JapaneseDate: boolean isSupported(java.time.temporal.TemporalField)>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: void <init>()>
<ohos.javax.xml.stream.XMLInputFactory: java.lang.Object getProperty(java.lang.String)>
<ohos.global.icu.text.Edits: void addReplace(int,int)>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.text.DateIntervalFormat.FormattedDateInterval formatToValue(ohos.global.icu.util.Calendar,ohos.global.icu.util.Calendar)>
<ohos.global.icu.text.Bidi: int getRunStart(int)>
<ohos.agp.render.opengl.GLES30: void glGetSamplerParameterfv(int,int,float[])>
<java.security.cert.X509Extension: java.util.Set getNonCriticalExtensionOIDs()>
<java.util.PrimitiveIterator.OfInt: int nextInt()>
<javax.crypto.spec.RC5ParameterSpec: int hashCode()>
<ohos.global.icu.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
<ohos.global.icu.text.RuleBasedCollator: boolean isFrozen()>
<ohos.data.distributed.user.SingleKvStore: java.util.List getEntries(ohos.data.distributed.common.Query)>
<ohos.agp.render.Path.AddPathMode: void <clinit>()>
<java.lang.UnknownError: void <init>(java.lang.String)>
<ohos.agp.components.Text: float getAdditionalLineSpacing()>
<ohos.bluetooth.ble.BleScanResult: ohos.bluetooth.ble.BlePeripheralDevice getPeripheralDevice()>
<ohos.utils.Scope: boolean equals(java.lang.Object)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThanOrEqualTo(java.lang.String,int)>
<ohos.data.rdb.RdbOpenCallback: void onCreate(ohos.data.rdb.RdbStore)>
<ohos.global.icu.util.ULocale: java.lang.String getLanguage(java.lang.String)>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale acceptLanguage(java.lang.String,ohos.global.icu.util.ULocale[],boolean[])>
<ohos.global.icu.util.TimeZone: java.lang.String getDisplayName()>
<java.util.concurrent.ConcurrentLinkedDeque: void push(java.lang.Object)>
<java.util.concurrent.CountedCompleter: boolean compareAndSetPendingCount(int,int)>
<ohos.agp.colors.HsvColor: void <init>(float,float,float,int)>
<ohos.global.icu.text.SearchIterator: int handlePrevious(int)>
<java.nio.Buffer: java.nio.Buffer flip()>
<ohos.agp.components.TickTimer: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.time.ZoneId: void <clinit>()>
<java.util.logging.Formatter: java.lang.String getTail(java.util.logging.Handler)>
<java.util.concurrent.atomic.AtomicLongArray: boolean compareAndSet(int,long,long)>
<java.lang.Math: int round(float)>
<java.util.Calendar: void setTimeZone(java.util.TimeZone)>
<java.io.File: boolean isFile()>
<java.time.temporal.ChronoUnit: long between(java.time.temporal.Temporal,java.time.temporal.Temporal)>
<java.util.Locale: java.util.Locale getDefault()>
<java.lang.String: java.lang.String intern()>
<ohos.agp.utils.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>
<ohos.data.resultset.ResultSet: float getFloat(int)>
<java.lang.Error: void <init>(java.lang.String)>
<ohos.aafwk.content.IntentParams: boolean isEmpty()>
<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>
<ohos.aafwk.ability.delegation.IAbilityMonitor: ohos.aafwk.ability.Ability waitForAbility()>
<ohos.media.recorder.Recorder: void registerRecorderListener(ohos.media.recorder.Recorder.IRecorderListener)>
<ohos.global.resource.ResourceManager: ohos.global.resource.RawFileEntry getRawFileEntry(java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates orderByDesc(java.lang.String)>
<ohos.sensor.agent.CategoryOrientationAgent: ohos.sensor.bean.CategoryOrientation getSingleSensor(int)>
<java.sql.CallableStatement: int getInt(java.lang.String)>
<java.util.LongSummaryStatistics: double getAverage()>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofLocalizedDateTime(java.time.format.FormatStyle,java.time.format.FormatStyle)>
<ohos.global.icu.text.NumberFormat: java.lang.String format(ohos.global.icu.util.CurrencyAmount)>
<ohos.agp.render.Path: void addRoundRect(ohos.agp.utils.RectFloat,float,float,ohos.agp.render.Path.Direction)>
<ohos.data.rdb.RdbTooBigException: void <init>(java.lang.String)>
<ohos.data.search.schema.AppItem: java.lang.String getAppCategory()>
<ohos.org.xml.sax.SAXException: void <init>(java.lang.String)>
<ohos.agp.render.BlendMode: void <clinit>()>
<ohos.media.audio.AudioManager: boolean setMasterMute(boolean)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query limit(int,int)>
<ohos.global.icu.text.Normalizer2: java.lang.String normalize(java.lang.CharSequence)>
<ohos.telephony.ShortMessage: java.lang.String getScAddress()>
<java.util.Spliterator.OfInt: java.util.Spliterator.OfInt trySplit()>
<java.security.cert.LDAPCertStoreParameters: int getPort()>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat setSizeY(float)>
<ohos.net.ConnectionProperties: void <init>()>
<ohos.media.photokit.support.AlbumListInfo: java.lang.String getId()>
<ohos.event.notification.ReminderRequest: java.lang.String getExpiredContent()>
<ohos.global.icu.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>
<ohos.event.notification.NotificationHelper: ohos.event.notification.NotificationSlotGroup getNotificationSlotGroup(java.lang.String)>
<ohos.data.distributed.common.KvStore: java.lang.String getStoreId()>
<ohos.media.audio.AudioRenderer.State: void <clinit>()>
<ohos.wifi.p2p.WifiP2pConfig: void setGroupOwnerBand(int)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeStartDocument(java.lang.String)>
<java.io.File: boolean setExecutable(boolean,boolean)>
<java.time.ZonedDateTime: int getDayOfMonth()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterBoth(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.agp.components.PageFlipper: void showPrevious()>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate dateYearDay(java.time.chrono.Era,int,int)>
<ark.system.ClassLoaderHelper: void <init>()>
<ohos.agp.components.Component: void setVibrationEffectEnabled(boolean)>
<java.sql.ResultSet: boolean rowInserted()>
<ohos.bundle.CommonEventInfo: void <init>(ohos.bundle.CommonEventInfo)>
<ohos.accessibility.CaptionProperties: void <init>()>
<java.net.InetSocketAddress: java.lang.String toString()>
<ohos.agp.components.ListContainer: void addComponent(ohos.agp.components.Component,int,ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.lang.System: void loadLibrary(java.lang.String)>
<java.sql.CallableStatement: java.lang.Object getObject(java.lang.String)>
<ohos.media.audio.AudioEqualizer: boolean setFrequencyGain(short,short)>
<ohos.agp.render.opengl.GLES31: void glGenProgramPipelines(int,int[])>
<ohos.agp.components.IndexBar: int getIndexBarStatus()>
<java.io.CharArrayWriter: java.lang.Appendable append(char)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.util.TimeZone parse(ohos.global.icu.text.TimeZoneFormat.Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,ohos.global.icu.util.Output)>
<javax.tools.ForwardingJavaFileManager: boolean hasLocation(javax.tools.JavaFileManager.Location)>
<ohos.agp.components.ComponentTreeObserver.WindowFocusUpdatedListener: void onWindowFocusUpdated(boolean)>
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>
<java.util.concurrent.CopyOnWriteArraySet: boolean removeIf(java.util.function.Predicate)>
<java.io.PrintWriter: void write(char[],int,int)>
<java.lang.invoke.MethodType: int parameterCount()>
<ohos.data.distributed.common.KvStoreErrorCode: ohos.data.distributed.common.KvStoreErrorCode valueOf(java.lang.String)>
<ohos.data.search.SearchSession: java.util.List groupSearch(java.lang.String,int)>
<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>
<ohos.utils.PlainIntArray: void <init>()>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.math.Vector3 getSpecularFactor()>
<ohos.agp.colors.CmykColor: void setYellow(float)>
<ohos.miscservices.inputmethodability.InputMethodAbility: void <init>()>
<java.io.PipedReader: void <init>(java.io.PipedWriter)>
<ohos.aafwk.ability.AbilityLifecycleExecutor.LifecycleState: ohos.aafwk.ability.AbilityLifecycleExecutor.LifecycleState valueOf(java.lang.String)>
<ohos.global.icu.text.CollationElementIterator: void setText(java.lang.String)>
<ohos.global.icu.util.ICUUncheckedIOException: void <init>(java.lang.String)>
<ohos.utils.zson.ZSONObject: short getShortValue(java.lang.String)>
<javax.lang.model.type.MirroredTypesException: void <init>(java.util.List)>
<java.lang.StrictMath: float nextUp(float)>
<ohos.data.search.schema.Schema: java.lang.String getIdentifier()>
<java.lang.ClassLoader: boolean registerAsParallelCapable()>
<java.util.Timer: void schedule(java.util.TimerTask,java.util.Date,long)>
<ohos.aafwk.ability.DataAbilityOperation.Builder: ohos.aafwk.ability.DataAbilityOperation.Builder withPredicates(ohos.data.dataability.DataAbilityPredicates)>
<ohos.agp.components.PageFlipper: ohos.agp.animation.AnimatorProperty getOutgoingAnimation()>
<ohos.agp.render.render3d.math.Vector3: float length(float,float,float)>
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.String toString()>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate dateNow(java.time.ZoneId)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenAcceptAsync(java.util.function.Consumer)>
<ohos.bundle.AbilityInfo: ohos.bundle.AbilityInfo.DisplayOrientation getOrientation()>
<ohos.wifi.WifiDevice: boolean isFeatureSupported(long)>
<ohos.global.icu.util.ULocale: java.lang.String getScript(java.lang.String)>
<java.lang.invoke.MethodType: java.lang.Class returnType()>
<ohos.agp.components.PageSlider: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.security.cert.PKIXParameters: java.util.List getCertPathCheckers()>
<java.io.PipedOutputStream: void <init>(java.io.PipedInputStream)>
<ohos.agp.render.opengl.GLES32: void glTexStorage3DMultisample(int,int,int,int,int,int,boolean)>
<ohos.agp.components.webengine.CookieStore: void setCrossDomainCookieEnable(ohos.agp.components.webengine.WebView,boolean)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform4iv(int,int,int,int[])>
<ohos.bundle.HapModuleInfo: void <init>(ohos.bundle.HapModuleInfo)>
<ohos.agp.components.PageSlider: int getPageSwitchTime()>
<java.net.Socket: void setSendBufferSize(int)>
<java.util.Deque: java.lang.Object peekFirst()>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 min(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<ohos.utils.PacMap: void putString(java.lang.String,java.lang.String)>
<ohos.sensor.agent.CategoryEnvironmentAgent: ohos.sensor.bean.SensorBase getSingleSensor(int)>
<ohos.global.icu.text.LocaleDisplayNames.DialectHandling: ohos.global.icu.text.LocaleDisplayNames.DialectHandling valueOf(java.lang.String)>
<java.lang.String: int length()>
<ohos.data.async.JobParams.Builder: ohos.data.async.JobParams.Builder setToken(java.lang.Integer)>
<ohos.media.camera.device.CameraAbility: java.util.List getSupportedSizes(int)>
<ohos.global.icu.util.HebrewCalendar: void roll(int,int)>
<java.lang.String: java.lang.String valueOf(float)>
<java.lang.Iterable: java.util.Iterator iterator()>
<ohos.data.distributed.common.KvStoreResultSet: int getRowCount()>
<java.sql.SQLWarning: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,java.sql.Time)>
<ohos.utils.BasePacMap: void putAll(java.util.Map)>
<ohos.global.icu.text.NumberFormat: java.lang.String format(long)>
<ohos.app.IAbilityManager: boolean clearUpApplicationData()>
<java.lang.Boolean: boolean logicalAnd(boolean,boolean)>
<ohos.agp.components.Component: boolean executeLongClick()>
<ohos.data.resultset.SharedBlock: java.lang.String getName()>
<ohos.utils.BasePacMap: boolean hasKey(java.lang.String)>
<java.sql.ResultSet: void updateBinaryStream(java.lang.String,java.io.InputStream,long)>
<java.sql.DatabaseMetaData: int getDatabaseMinorVersion()>
<ohos.location.RequestParam: int getTimeInterval()>
<ohos.media.camera.params.ResultKey: void <clinit>()>
<java.lang.SecurityManager: void checkPropertiesAccess()>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle arrayElementGetter(java.lang.Class)>
<ohos.aafwk.ability.RunningProcessInfo: int getWeightReasonCode()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayLanguageWithDialect()>
<ohos.usb.USBInterface: java.lang.String getName()>
<java.nio.IntBuffer: int compareTo(java.lang.Object)>
<ohos.agp.window.dialog.PopupDialog: void <init>(ohos.app.Context,ohos.agp.components.Component)>
<ohos.miscservices.pasteboard.PasteData: ohos.miscservices.pasteboard.PasteData creatUriData(ohos.utils.net.Uri)>
<ohos.agp.components.InputAttribute: void <init>()>
<ohos.agp.components.Component: void setClickable(boolean)>
<javax.tools.SimpleJavaFileObject: java.lang.String getName()>
<ohos.data.orm.OrmContext: void close()>
<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: java.lang.String getAdditionalText()>
<javax.lang.model.util.TypeKindVisitor8: java.lang.Object visitIntersection(javax.lang.model.type.IntersectionType,java.lang.Object)>
<java.security.Provider: void load(java.io.InputStream)>
<ohos.sensor.agent.CategoryLightAgent: java.util.List getAllSensors()>
<java.util.prefs.Preferences: java.lang.String name()>
<ohos.agp.render.render3d.gltf.GltfExporter: boolean exportGltf(java.lang.String)>
<ohos.bundle.IBundleManager: java.lang.String getNameForUid(int)>
<ohos.global.icu.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>
<ohos.bundle.ApplicationInfo: void <init>(ohos.bundle.ApplicationInfo)>
<java.time.LocalDate: java.time.LocalDate ofYearDay(int,int)>
<java.time.LocalDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.render.Canvas: void drawPixelMapHolderRect(ohos.agp.render.PixelMapHolder,ohos.agp.utils.RectFloat,ohos.agp.utils.RectFloat,ohos.agp.render.Paint)>
<ohos.bluetooth.HandsFreeAudioGateway: int getScoState(ohos.bluetooth.BluetoothRemoteDevice)>
<ohos.rpc.IRemoteObject: void slowPathDump(java.io.FileDescriptor,java.lang.String[])>
<ohos.agp.transition.Transition: void <init>()>
<ohos.data.resultset.AbsResultSet: void setAffectedByUris(java.lang.Object,java.util.List)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>
<java.util.OptionalDouble: int hashCode()>
<ohos.bluetooth.BluetoothDeviceClass.MajorMinorClass: void <init>()>
<ohos.event.notification.NotificationHelper: void setNotificationAgent(java.lang.String)>
<ohos.media.audio.EchoCancelerEffect: ohos.media.audio.EchoCancelerEffect create(int,java.lang.String)>
<ohos.agp.utils.Rect: void set(int,int,int,int)>
<ohos.global.icu.text.Collator: ohos.global.icu.util.ULocale getFunctionalEquivalent(java.lang.String,ohos.global.icu.util.ULocale,boolean[])>
<ohos.agp.text.RichTextBuilder: ohos.agp.text.RichTextBuilder mergeForm(ohos.agp.text.TextForm)>
<ohos.event.notification.MessageUser: void <clinit>()>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale getDefault()>
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoPeriod until(java.time.chrono.ChronoLocalDate)>
<ohos.media.sessioncore.AVController.PlayControls: void pause()>
<java.lang.Enum: int compareTo(java.lang.Enum)>
<ohos.media.image.ImageSource.IncrementalSourceOptions: void <init>()>
<ohos.global.icu.text.UnicodeMatcher: boolean matchesIndexValue(int)>
<java.util.ArrayDeque: java.util.Iterator descendingIterator()>
<ohos.global.icu.util.GregorianCalendar: int getActualMaximum(int)>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer slice()>
<ohos.app.GeneralReceiver: boolean marshalling(ohos.utils.Parcel)>
<java.security.SecureClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>
<ohos.data.resultset.ResultSetWrapper: int getColumnCount()>
<ohos.org.xml.sax.helpers.DefaultHandler: void ignorableWhitespace(char[],int,int)>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitArray(java.util.List,java.lang.Object)>
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getKeywords(java.lang.String,int)>
<java.util.concurrent.LinkedBlockingDeque: java.util.Iterator iterator()>
<ohos.global.icu.util.ULocale: java.lang.String toUnicodeLocaleType(java.lang.String,java.lang.String)>
<java.sql.ResultSet: void updateBlob(int,java.io.InputStream)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>
<ohos.agp.components.ComponentContainer.LayoutConfig: void setMarginTop(int)>
<java.sql.Array: java.lang.String getBaseTypeName()>
<java.util.concurrent.CyclicBarrier: void <init>(int,java.lang.Runnable)>
<ohos.rpc.MessageParcel: boolean writeFileDescriptor(java.io.FileDescriptor)>
<java.awt.font.NumericShaper: void shape(char[],int,int,java.awt.font.NumericShaper.Range)>
<java.lang.Short: void <init>(java.lang.String)>
<ohos.data.async.RdbStoreAsyncHandler: void cancelJob(int)>
<java.net.URI: java.lang.String toString()>
<java.io.CharArrayWriter: java.lang.Appendable append(java.lang.CharSequence,int,int)>
<ohos.aafwk.content.Intent: java.util.Set getEntities()>
<java.util.Arrays: void fill(double[],int,int,double)>
<ohos.global.icu.text.DecimalFormat: void setNegativePrefix(java.lang.String)>
<ohos.global.icu.text.UnicodeMatcher: int matches(ohos.global.icu.text.Replaceable,int[],int,boolean)>
<java.util.concurrent.locks.StampedLock: boolean tryUnlockRead()>
<ohos.agp.render.GroupShader: void <init>(ohos.agp.render.Shader,ohos.agp.render.Shader,ohos.agp.render.BlendMode)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThanOrEqualTo(java.lang.String,long)>
<java.util.NavigableSet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)>
<ohos.eventhandler.EventHandler: void removeEvent(int,long)>
<java.util.Calendar: int getWeekYear()>
<ohos.global.icu.text.DateFormatSymbols: void setEraNames(java.lang.String[])>
<ohos.net.HttpResponseCache: int getHitCount()>
<java.math.BigInteger: java.math.BigInteger nextProbablePrime()>
<ohos.net.ConnectionProperties: java.lang.String getDomains()>
<ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder: ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder setSecKeyAccessibleAttr(int)>
<java.util.HashMap: java.lang.Object clone()>
<ohos.agp.utils.Point: void modify(ohos.agp.utils.Point)>
<java.io.OutputStreamWriter: void write(java.lang.String,int,int)>
<java.net.DatagramSocket: void setSoTimeout(int)>
<java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
<java.security.Certificate: void decode(java.io.InputStream)>
<java.nio.channels.FileLock: boolean isValid()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.IntentParams getParams()>
<java.time.ZonedDateTime: int hashCode()>
<ohos.agp.window.dialog.BaseDialog.DisplayCallback: void onDisplay(ohos.agp.window.dialog.IDialog)>
<java.lang.reflect.Constructor: java.lang.String toString()>
<java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<ohos.app.AbilityContext: void terminateAbility(int)>
<java.sql.Ref: java.lang.String getBaseTypeName()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,double[])>
<java.util.zip.InflaterOutputStream: void close()>
<java.time.chrono.MinguoDate: int hashCode()>
<ohos.global.resource.Element: java.lang.String getPluralString(int,java.lang.Object[])>
<javax.net.ssl.SSLSocket: void setUseClientMode(boolean)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: int getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject)>
<java.security.cert.X509Certificate: void checkValidity(java.util.Date)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet retainAll(java.lang.CharSequence)>
<ohos.agp.text.Layout: void drawText(ohos.agp.render.Canvas)>
<java.util.TreeMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>
<java.util.LinkedHashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<ohos.agp.render.render3d.Engine.RenderNodeGraphType: ohos.agp.render.render3d.Engine.RenderNodeGraphType[] values()>
<javax.sql.RowSet: void setAsciiStream(int,java.io.InputStream)>
<ohos.bluetooth.BluetoothHost: int getBtState()>
<java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>
<java.util.concurrent.ConcurrentNavigableMap: java.util.SortedMap tailMap(java.lang.Object)>
<ohos.agp.components.SearchBar: int getTextSize()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean owns(java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject)>
<ohos.system.TimeValGroup: ohos.system.TimeValGroup fromMillis(long)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture applyToEither(java.util.concurrent.CompletionStage,java.util.function.Function)>
<ohos.event.commonevent.CommonEventPublishInfo: void <clinit>()>
<ohos.agp.components.ComponentHolder: ohos.agp.components.Component show()>
<ohos.agp.render.opengl.GLES30: void glGetQueryiv(int,int,java.nio.IntBuffer)>
<javax.net.SocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>
<ohos.app.Context: ohos.app.dispatcher.TaskDispatcher createSerialTaskDispatcher(java.lang.String,ohos.app.dispatcher.task.TaskPriority)>
<ohos.global.icu.text.Replaceable: boolean hasMetaData()>
<ohos.media.audio.AudioCapturerConfig: java.lang.String getPackageName()>
<ohos.utils.net.Uri: boolean isOpaque()>
<ohos.hiviewdfx.Debug: int getProcessSwappedOutPssSum()>
<java.util.Spliterators: java.util.Spliterator.OfLong spliterator(java.util.PrimitiveIterator.OfLong,long,int)>
<javax.net.ssl.SSLSession: void removeValue(java.lang.String)>
<ohos.agp.utils.Line: void setEndPointY(float)>
<ohos.global.icu.text.DecimalFormat: int getMinimumSignificantDigits()>
<ohos.media.audio.AudioStreamInfo: boolean isValidEncodingFormat(ohos.media.audio.AudioStreamInfo.EncodingFormat)>
<ohos.global.icu.util.ULocale: java.lang.String canonicalize(java.lang.String)>
<ohos.global.icu.util.LocaleData: boolean getNoSubstitute()>
<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>
<java.util.prefs.Preferences: void addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThan(java.lang.String,double)>
<java.util.concurrent.ThreadLocalRandom: long nextLong()>
<ohos.javax.xml.stream.XMLEventReader: void close()>
<java.util.Date: int getSeconds()>
<java.io.PushbackReader: void unread(char[],int,int)>
<ohos.app.AbilityContext: java.io.File getDatabaseDir()>
<ohos.agp.components.element.Element: void <init>()>
<java.util.stream.Collector: java.util.Set characteristics()>
<java.io.PushbackReader: void close()>
<ohos.accessibility.AccessibilitySystemAbilityClient: boolean subscribeStateObserver(ohos.accessibility.AccessibilityStateObserver,int)>
<ohos.app.dispatcher.TaskDispatcher: void syncDispatchBarrier(java.lang.Runnable)>
<java.io.FileDescriptor: void <init>()>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visit(javax.lang.model.element.AnnotationValue,java.lang.Object)>
<java.lang.String: void <init>(byte[],int,int,int)>
<ohos.agp.components.ListContainer: int getContentStartOffset()>
<ohos.event.notification.ReminderHelper: void removeNotificationSlot(java.lang.String)>
<ohos.global.icu.text.UnicodeSetSpanner: java.lang.CharSequence trim(java.lang.CharSequence,ohos.global.icu.text.UnicodeSetSpanner.TrimOption,ohos.global.icu.text.UnicodeSet.SpanCondition)>
<ohos.global.icu.text.DecimalFormat: void setMathContextICU(ohos.global.icu.math.MathContext)>
<ohos.wifi.WifiLinkedInfo: java.lang.String getBssid()>
<ohos.aafwk.ability.AbilityLifecycleExecutor.LifecycleState: ohos.aafwk.ability.AbilityLifecycleExecutor.LifecycleState[] values()>
<ohos.accessibility.ability.AccessibilityInfo: int getChildCount()>
<java.nio.charset.CoderResult: boolean isMalformed()>
<ohos.aafwk.ability.DataAbilityHelper: ohos.aafwk.ability.DataAbilityResult[] executeBatch(ohos.utils.net.Uri,java.util.ArrayList)>
<ohos.app.AbilityContext: int getColor(int)>
<java.lang.StrictMath: float scalb(float,int)>
<ohos.data.resultset.SharedResultSet: void fillBlock(int,ohos.data.resultset.SharedBlock)>
<ohos.sensor.agent.CategoryLightAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase)>
<ohos.thermallistener.ThermalConnection.ThermalSeverityLevel: ohos.thermallistener.ThermalConnection.ThermalSeverityLevel[] values()>
<ohos.agp.render.render3d.util.BoundingBox: void <init>(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<ohos.bundle.ShortcutInfo: java.lang.String getIcon()>
<ohos.app.dispatcher.TaskDispatcher: void asyncDispatchBarrier(java.lang.Runnable)>
<java.util.Calendar: java.util.TimeZone getTimeZone()>
<ohos.javax.xml.parsers.SAXParserFactory: ohos.javax.xml.parsers.SAXParserFactory newInstance()>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>
<ohos.org.xml.sax.DocumentHandler: void startDocument()>
<java.lang.StrictMath: long min(long,long)>
<java.io.StringReader: long skip(long)>
<java.util.Spliterators: java.util.Spliterator.OfInt spliterator(int[],int)>
<java.lang.ThreadGroup: java.lang.String getName()>
<java.text.Collator: java.util.Locale[] getAvailableLocales()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,byte[])>
<java.sql.CallableStatement: void setCharacterStream(java.lang.String,java.io.Reader,long)>
<ohos.media.audio.AudioManager.CallState: ohos.media.audio.AudioManager.CallState[] values()>
<ohos.media.audio.AudioManager: ohos.media.audio.AudioManager.CallState getCallState()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateInstance(ohos.global.icu.util.Calendar,int,java.util.Locale)>
<java.lang.Thread: void yield()>
<java.sql.DatabaseMetaData: boolean supportsCatalogsInPrivilegeDefinitions()>
<ohos.ai.cv.common.ImageResult: void setPixelMap(ohos.media.image.PixelMap)>
<java.util.BitSet: java.util.BitSet valueOf(java.nio.LongBuffer)>
<ohos.global.icu.util.Calendar: ohos.global.icu.util.Calendar.WeekData getWeekData()>
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinPool getPool()>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getChatIntention(java.lang.String,int)>
<ohos.global.icu.text.DateFormatSymbols: ohos.global.icu.text.DateFormatSymbols getInstance(java.util.Locale)>
<ohos.agp.utils.Rect: void translateCenterTo(ohos.agp.utils.Point)>
<ohos.rpc.IRemoteObject: boolean isObjectDead()>
<java.lang.System: void <clinit>()>
<javax.lang.model.util.SimpleTypeVisitor6: java.lang.Object visitError(javax.lang.model.type.ErrorType,java.lang.Object)>
<ohos.media.sessioncore.AVController.PlayControls: void rewind()>
<java.lang.invoke.MethodType: boolean hasWrappers()>
<java.io.PrintStream: void print(double)>
<java.time.chrono.MinguoDate: boolean equals(java.lang.Object)>
<ohos.nfc.tag.NfcBTag: byte[] getRespAppData()>
<java.security.AllPermission: void <init>(java.lang.String,java.lang.String)>
<ohos.agp.render.render3d.Task: boolean onExecute()>
<java.nio.LongBuffer: java.nio.LongBuffer put(java.nio.LongBuffer)>
<ohos.global.icu.util.TimeZone: void setRawOffset(int)>
<ohos.global.icu.text.Bidi: void <init>(java.text.AttributedCharacterIterator)>
<ohos.global.resource.solidxml.Node: java.lang.String getStringValue()>
<java.util.Calendar: void set(int,int,int,int,int)>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.AlphabeticIndex clearRecords()>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[])>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenAcceptAsync(java.util.function.Consumer)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitAnnotation(javax.lang.model.element.AnnotationMirror,java.lang.Object)>
<ohos.bundle.HapModuleInfo: java.util.List getDeviceTypes()>
<ohos.media.player.Player: void finalize()>
<ohos.global.icu.text.CurrencyPluralInfo: void setPluralRules(java.lang.String)>
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinTask fork()>
<ohos.global.icu.text.PluralRules: double getUniqueKeywordValue(java.lang.String)>
<java.time.LocalDate: java.time.LocalDateTime atTime(java.time.LocalTime)>
<ohos.global.icu.util.ChineseCalendar: ohos.global.icu.text.DateFormat handleGetDateFormat(java.lang.String,java.lang.String,ohos.global.icu.util.ULocale)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>
<ohos.utils.geo.Rect: void fuse(ohos.utils.geo.Rect)>
<ohos.agp.components.Component: int getPaddingStart()>
<ohos.hiviewdfx.HiChecker: void addAllRules()>
<java.security.cert.CertificateRevokedException: java.util.Date getInvalidityDate()>
<ohos.data.search.schema.MessageItem: void <init>()>
<ohos.global.icu.util.Calendar: boolean isGregorianLeapYear(int)>
<ohos.javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.Exception)>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.Entity createLightDirectional(ohos.agp.render.render3d.math.Quaternion,boolean,ohos.agp.render.render3d.math.Vector3,float)>
<javax.crypto.ExemptionMechanism: byte[] genExemptionBlob()>
<ohos.data.orm.OrmContext: boolean restore(java.lang.String)>
<java.io.CharArrayWriter: void write(int)>
<java.sql.CallableStatement: void setBlob(java.lang.String,java.sql.Blob)>
<java.math.BigDecimal: java.math.BigDecimal abs(java.math.MathContext)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>
<ohos.org.xml.sax.Locator: int getLineNumber()>
<java.io.DataInput: boolean readBoolean()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void <init>()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,char[])>
<ohos.event.notification.NotificationHelper: void removeNotificationSlot(java.lang.String)>
<java.util.ListResourceBundle: java.lang.Object handleGetObject(java.lang.String)>
<ohos.miscservices.download.DownloadConfig: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.stream.DoubleStream.Builder: java.util.stream.DoubleStream build()>
<ohos.agp.render.render3d.Engine: void setDefaultTargetBuffer(ohos.agp.render.render3d.TargetBuffer)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet removeAll(java.lang.Iterable)>
<java.net.HttpCookie: void setSecure(boolean)>
<ohos.agp.render.opengl.GLES1X: void glColor4f(float,float,float,float)>
<java.util.logging.Formatter: java.lang.String formatMessage(java.util.logging.LogRecord)>
<ohos.sensor.agent.CategoryOrientationAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryOrientationDataCallback)>
<java.time.LocalTime: java.time.LocalTime withMinute(int)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.RejectedExecutionHandler)>
<ohos.global.icu.util.JapaneseCalendar: void <init>(ohos.global.icu.util.TimeZone)>
<ohos.media.codec.Codec: boolean setVideoSurface(ohos.agp.graphics.Surface)>
<ohos.org.xml.sax.HandlerBase: void error(ohos.org.xml.sax.SAXParseException)>
<ohos.nfc.tag.MessageRecord: void <init>(short,byte[],byte[],byte[])>
<ohos.agp.components.element.Element: void setStateColorList(int[][],int[])>
<ohos.agp.components.TableLayout: ohos.agp.components.TableLayout.Specification specification(int,int,float)>
<ohos.sensor.data.CategoryOrientationData: void <init>(ohos.sensor.bean.CategoryOrientation,int,long,int,float[])>
<java.util.Vector: java.lang.Object lastElement()>
<java.util.concurrent.atomic.AtomicIntegerArray: java.lang.String toString()>
<ohos.event.notification.NotificationConstant.DisturbMode: void <clinit>()>
<ohos.agp.render.ThreeDimView: void <init>()>
<javax.crypto.Mac: void init(java.security.Key)>
<ohos.agp.utils.Matrix: void setRotate(float,float,float)>
<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>
<java.nio.file.spi.FileSystemProvider: java.lang.String getScheme()>
<ohos.batterymanager.BatteryInfo: int getBatteryTemperature()>
<java.security.cert.CertificateNotYetValidException: void <init>(java.lang.String)>
<ohos.data.distributed.user.SingleKvStore: void sync(java.util.List,ohos.data.distributed.common.SyncMode,int)>
<ohos.agp.components.Component: float getBoundaryFadeEffectRightRate()>
<ohos.data.distributed.user.SingleKvStore: float getFloat(java.lang.String)>
<java.security.KeyStore.CallbackHandlerProtection: void <init>(javax.security.auth.callback.CallbackHandler)>
<ohos.agp.components.Component: void postLayout()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getProcedureColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.GregorianCalendar: void <init>(int,int,int,int,int,int)>
<java.lang.VirtualMachineError: void <init>(java.lang.Throwable)>
<ohos.agp.animation.AnimatorGroup: void runParallel(ohos.agp.animation.Animator[])>
<ohos.agp.render.render3d.util.MeshBuilder: void addPrimitive(ohos.agp.render.render3d.util.MeshBuilder.Primitive)>
<java.io.Externalizable: void writeExternal(java.io.ObjectOutput)>
<java.lang.SecurityManager: boolean getInCheck()>
<java.sql.DatabaseMetaData: int getDatabaseMajorVersion()>
<java.io.PushbackInputStream: int read(byte[],int,int)>
<java.util.Arrays: void sort(float[])>
<java.util.stream.Stream: java.util.stream.DoubleStream flatMapToDouble(java.util.function.Function)>
<java.text.DateFormat: java.text.DateFormat getDateInstance()>
<java.util.logging.Logger: void removeHandler(java.util.logging.Handler)>
<ohos.agp.utils.DimensFloat: int getSizeXToInt()>
<ohos.global.icu.lang.UScript.ScriptUsage: ohos.global.icu.lang.UScript.ScriptUsage[] values()>
<ohos.data.rdb.DataObserver: void onChange()>
<java.util.OptionalDouble: boolean isPresent()>
<java.time.ZonedDateTime: java.time.ZonedDateTime minusNanos(long)>
<ohos.app.Context: java.io.File getNoBackupFilesDir()>
<ohos.ai.tts.TtsClient: java.util.Optional getVersion()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,long)>
<java.security.Signer: void <init>(java.lang.String,java.security.IdentityScope)>
<java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock: void unlock()>
<ohos.aafwk.ability.DataAbilityHelper: void registerObserver(ohos.utils.net.Uri,ohos.aafwk.ability.IDataAbilityObserver)>
<java.io.ObjectInput: int available()>
<ohos.agp.components.TabList.Tab: ohos.agp.components.element.Element getIconElement()>
<ohos.global.icu.text.NumberFormat: java.util.Locale[] getAvailableLocales()>
<ohos.media.tubecore.AVTubeEx: void cmdIncVolume(int)>
<java.net.URL: java.lang.String getAuthority()>
<ohos.utils.geo.RectFloat: float getPivotXCoordinate()>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getAssistantIntention(java.lang.String,int,ohos.ai.nlu.OnResultListener)>
<ohos.systemrestore.SystemRestore: void <init>()>
<ohos.aafwk.ability.Ability: boolean updateForm(int,ohos.agp.components.ComponentProvider)>
<java.sql.SQLInvalidAuthorizationSpecException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<ohos.global.icu.util.Calendar: void prepareGetActual(int,boolean)>
<java.io.PrintStream: void println(double)>
<java.lang.Math: double nextDown(double)>
<ohos.agp.window.dialog.DisplayDialog: void showOnRemoteScreen(ohos.agp.window.dialog.DisplayDialog.DialogProvider)>
<java.time.ZonedDateTime: java.lang.String toString()>
<javax.crypto.Mac: void reset()>
<ohos.agp.render.opengl.GLES1X: java.lang.String glGetString(int)>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.text.MeasureFormat getCurrencyFormat()>
<java.nio.channels.AlreadyConnectedException: void <init>()>
<javax.net.ssl.SSLEngine: java.lang.String getPeerHost()>
<java.util.stream.Stream: java.util.stream.Stream peek(java.util.function.Consumer)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoPeriod period(int,int,int)>
<java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner)>
<ohos.global.icu.text.BidiRun: boolean isOddRun()>
<java.nio.channels.AsynchronousFileChannel: void force(boolean)>
<ohos.global.icu.text.MessageFormat: void applyPattern(java.lang.String)>
<ohos.agp.text.RichTextLayout: void <init>(ohos.agp.text.RichText,ohos.agp.render.Paint,ohos.agp.utils.Rect,int)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder clearQuery()>
<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>
<javax.net.ssl.SSLSocket: void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat subtractionAll(float)>
<ohos.agp.components.Component: void setPaddingRelative(int,int,int,int)>
<ohos.bundle.ApplicationInfo: boolean getSystemApp()>
<java.lang.String: java.lang.String[] split(java.lang.String)>
<ohos.wifi.p2p.WifiP2pConfig: java.lang.String getPassphrase()>
<ohos.agp.colors.HslColor: void setSaturation(float)>
<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator.Attribute[])>
<ohos.global.icu.text.UnicodeSet: java.lang.Object freeze()>
<java.io.UncheckedIOException: void <init>(java.lang.String,java.io.IOException)>
<ohos.app.AbilityContext: java.io.File getDistributedDir()>
<ohos.media.common.VideoProperty: int getRecorderDegrees()>
<java.util.Arrays: java.lang.String toString(long[])>
<java.io.ObjectOutputStream: void write(byte[])>
<java.time.chrono.MinguoChronology: java.time.chrono.Era eraOf(int)>
<java.util.Arrays: int binarySearch(char[],int,int,char)>
<java.util.concurrent.FutureTask: boolean runAndReset()>
<ohos.sysappcomponents.contact.ContactsHelper: ohos.sysappcomponents.contact.ContactsCollection queryContactsByEmail(java.lang.String,ohos.sysappcomponents.contact.entity.Holder,ohos.sysappcomponents.contact.ContactAttributes)>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoZonedDateTime plus(long,java.time.temporal.TemporalUnit)>
<java.security.Signature: void setParameter(java.security.spec.AlgorithmParameterSpec)>
<ohos.agp.components.Component: int getEstimatedWidth()>
<ohos.agp.components.Component.DoubleClickedListener: void onDoubleClick(ohos.agp.components.Component)>
<java.lang.IncompatibleClassChangeError: void <init>(java.lang.String)>
<java.io.FileDescriptor: void sync()>
<ohos.agp.utils.Matrix: boolean postConcat(ohos.agp.utils.Matrix)>
<java.util.logging.Logger: void warning(java.util.function.Supplier)>
<ohos.global.resource.ResourceManager: ohos.global.resource.Resource getResource(int)>
<java.util.jar.Pack200.Unpacker: void removePropertyChangeListener(java.beans.PropertyChangeListener)>
<ohos.agp.components.PageSlider: void setPageSwitchTime(int)>
<java.text.StringCharacterIterator: void <init>(java.lang.String)>
<ohos.global.resource.Element: float getFloat()>
<java.sql.SQLRecoverableException: void <init>()>
<ohos.utils.geo.RectFloat: java.lang.String toString()>
<ohos.bundle.IBundleManager: boolean isAbilityEnabled(ohos.bundle.AbilityInfo)>
<java.util.stream.BaseStream: java.util.Spliterator spliterator()>
<java.util.stream.IntStream: java.util.stream.IntStream map(java.util.function.IntUnaryOperator)>
<javax.tools.JavaFileManager: java.lang.String inferBinaryName(javax.tools.JavaFileManager.Location,javax.tools.JavaFileObject)>
<java.sql.Statement: int getResultSetHoldability()>
<java.time.ZonedDateTime: java.time.ZonedDateTime plus(java.time.temporal.TemporalAmount)>
<java.util.stream.Collectors: java.util.stream.Collector toCollection(java.util.function.Supplier)>
<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>
<java.lang.InstantiationError: void <init>(java.lang.String)>
<ohos.accessibility.ability.AccessibilityWindow: java.util.Optional getAnchor()>
<ohos.agp.components.ComponentContainer.LayoutConfig: java.lang.Object clone()>
<java.util.PrimitiveIterator.OfLong: void forEachRemaining(java.lang.Object)>
<ohos.global.icu.text.DecimalFormatSymbols: int hashCode()>
<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>
<java.util.Arrays: int[] copyOfRange(int[],int,int)>
<ohos.utils.geo.RectFloat: boolean isInclude(ohos.utils.geo.RectFloat)>
<javax.crypto.spec.PBEParameterSpec: java.security.spec.AlgorithmParameterSpec getParameterSpec()>
<java.util.concurrent.locks.ReentrantReadWriteLock: int getQueueLength()>
<ohos.usb.USBDevice: int getDeviceId(java.lang.String)>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<java.lang.String: java.lang.String toString()>
<java.util.Arrays: void fill(int[],int,int,int)>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.util.ResourceBundle.Control)>
<javax.net.ssl.X509KeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)>
<ohos.agp.components.BaseItemProvider: void addDataSubscriber(ohos.agp.database.DataSetSubscriber)>
<java.net.DatagramSocket: boolean getBroadcast()>
<java.nio.file.attribute.BasicFileAttributes: boolean isDirectory()>
<ohos.event.notification.NotificationRequest.NotificationContent: java.lang.Object getNotificationContent()>
<ohos.app.Context: ohos.app.dispatcher.TaskDispatcher createParallelTaskDispatcher(java.lang.String,ohos.app.dispatcher.task.TaskPriority)>
<ohos.agp.render.Texture.AlphaType: ohos.agp.render.Texture.AlphaType[] values()>
<java.math.BigDecimal: java.math.BigDecimal remainder(java.math.BigDecimal,java.math.MathContext)>
<ohos.global.icu.text.TimeZoneFormat.TimeType: void <clinit>()>
<java.security.AlgorithmParametersSpi: byte[] engineGetEncoded()>
<ohos.nfc.tag.IsoDepTag: byte[] getHistoricalBytes()>
<java.time.zone.ZoneRules: boolean isDaylightSavings(java.time.Instant)>
<ohos.global.resource.solidxml.TypedAttribute: float computeFloatValue(java.lang.String,ohos.global.configuration.Configuration,ohos.global.configuration.DeviceCapability)>
<java.sql.DatabaseMetaData: int getMaxConnections()>
<ohos.aafwk.ability.AbilitySlice: void onStop()>
<java.math.BigDecimal: int intValueExact()>
<ohos.rpc.RemoteProxy: void dump(java.io.FileDescriptor,java.lang.String[])>
<java.lang.Float: float floatValue()>
<java.io.DataOutput: void write(byte[])>
<ohos.aafwk.ability.DataAbilityHelper: int update(ohos.utils.net.Uri,ohos.data.rdb.ValuesBucket,ohos.data.dataability.DataAbilityPredicates)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query lessThanOrEqualTo(java.lang.String,long)>
<ohos.global.icu.util.Calendar: void validateFields()>
<ohos.bundle.LauncherShortcutInfo: java.lang.String getBundleName()>
<java.util.ResourceBundle.Control: java.util.ResourceBundle.Control getControl(java.util.List)>
<java.text.CharacterIterator: int getEndIndex()>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitPrimitiveAsInt(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<ohos.org.w3c.dom.ls.LSResourceResolver: ohos.org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.Spliterators: java.util.Spliterator spliterator(java.lang.Object[],int,int,int)>
<java.security.spec.EllipticCurve: boolean equals(java.lang.Object)>
<java.util.jar.Attributes: boolean isEmpty()>
<ohos.bundle.FormInfo.FormType: ohos.bundle.FormInfo.FormType valueOf(java.lang.String)>
<java.time.temporal.ValueRange: java.lang.String toString()>
<ohos.agp.window.dialog.ToastDialog: void onDestroy()>
<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>
<ohos.global.icu.text.DisplayContext: ohos.global.icu.text.DisplayContext.Type type()>
<java.util.Vector: java.util.ListIterator listIterator(int)>
<ohos.agp.utils.RectFloat: void rotateBy(ohos.agp.utils.RectFloat.RotationEnum)>
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asFixedArity()>
<java.util.concurrent.locks.StampedLock: long writeLockInterruptibly()>
<java.security.cert.X509CRLEntry: int hashCode()>
<ohos.agp.components.Component: int getVisibility()>
<ohos.agp.components.Text: void setTextSize(int,ohos.agp.components.Text.TextSizeType)>
<ohos.bundle.LauncherShortcutInfo: void <init>(ohos.app.Context,ohos.bundle.ShortcutInfo)>
<javax.lang.model.util.ElementScanner6: java.lang.Object visitPackage(javax.lang.model.element.PackageElement,java.lang.Object)>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean readCharacteristic(ohos.bluetooth.ble.GattCharacteristic)>
<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>
<ohos.utils.LongPlainArray: java.lang.String toString()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notIn(java.lang.String,double[])>
<ohos.global.icu.util.Calendar: ohos.global.icu.util.Calendar getInstance()>
<java.security.SecureClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>
<ohos.agp.render.Paint.FontMetrics: void <init>(float,float,float,float,float)>
<javax.sql.PooledConnection: java.sql.Connection getConnection()>
<java.util.stream.LongStream: java.util.stream.LongStream map(java.util.function.LongUnaryOperator)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setFloat(int,java.lang.String,float)>
<ohos.agp.render.render3d.Engine: boolean init(ohos.app.Context,ohos.agp.render.render3d.Engine.RenderBackend,java.util.Map,java.lang.String)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object removeLast()>
<ohos.global.icu.text.AlphabeticIndex: int getRecordCount()>
<ohos.utils.zson.ZSONArray: java.math.BigInteger getBigInteger(int)>
<ohos.media.player.Player: int getCurrentTime()>
<ohos.bluetooth.ble.BleAdvertiseSettings.Builder: void <init>()>
<ohos.global.i18n.text.DateFormatUtil: java.lang.String[] getLongStandAloneWeekdayNames(java.util.Locale)>
<java.util.Arrays: boolean equals(double[],double[])>
<ohos.agp.colors.CmykColor: void setCyan(float)>
<ohos.data.orm.Blob: java.io.OutputStream setBinaryStream(long)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: ohos.event.notification.MessageUser getMessageUser()>
<ohos.global.i18n.utils.TextRecognitionUtils: void <init>()>
<ohos.utils.PacMap: void <init>(int)>
<java.time.LocalDateTime: boolean isAfter(java.time.chrono.ChronoLocalDateTime)>
<ohos.event.notification.MessageUser: ohos.event.notification.MessageUser setUserAsImportant(boolean)>
<ohos.data.distributed.common.FieldNode: java.util.List getChildren()>
<ohos.agp.utils.RectFloat: float getPivotYCoordinate()>
<javax.lang.model.type.DeclaredType: javax.lang.model.type.TypeMirror getEnclosingType()>
<ohos.global.icu.text.Collator: java.lang.String getDisplayName(ohos.global.icu.util.ULocale)>
<ohos.global.icu.text.RuleBasedCollator: void setDecompositionDefault()>
<java.util.Scanner: boolean hasNextByte(int)>
<java.io.StringBufferInputStream: void reset()>
<ohos.app.AbilityContext: java.lang.ClassLoader getClassloader()>
<ohos.data.usage.Volume: java.lang.String getVolUuid()>
<ohos.global.icu.text.Collator: ohos.global.icu.util.VersionInfo getVersion()>
<ohos.miscservices.download.DownloadConfig.Builder: ohos.miscservices.download.DownloadConfig.Builder setTitle(java.lang.String)>
<java.time.chrono.ChronoZonedDateTime: java.time.LocalTime toLocalTime()>
<java.util.logging.XMLFormatter: java.lang.String format(java.util.logging.LogRecord)>
<ohos.aafwk.ability.Ability: void onEventNotify(java.util.Map)>
<ohos.agp.render.opengl.GLES20: void glSampleCoverage(float,boolean)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage applyToEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Function)>
<ohos.agp.components.Clock: long getTime()>
<java.util.logging.Logger: void severe(java.util.function.Supplier)>
<ohos.agp.components.TimePicker: boolean isMinuteShown()>
<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()>
<java.util.SplittableRandom: java.util.stream.IntStream ints()>
<javax.sql.RowSet: void setNClob(int,java.sql.NClob)>
<java.net.MulticastSocket: void leaveGroup(java.net.InetAddress)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThanOrEqualTo(java.lang.String,int)>
<java.security.DigestException: void <init>(java.lang.String)>
<ohos.agp.components.ScrollHelper: void setFriction(float)>
<java.nio.ShortBuffer: boolean hasArray()>
<java.nio.file.attribute.FileAttribute: java.lang.String name()>
<ohos.data.resultset.SharedBlock: void <init>(java.lang.String)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void invokeAbilityOnStart(ohos.aafwk.ability.Ability)>
<java.security.Identity: java.security.PublicKey getPublicKey()>
<ohos.javax.xml.stream.XMLStreamReader: ohos.javax.xml.namespace.QName getName()>
<ohos.event.notification.NotificationActionButton: java.util.List getUserInputs()>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion angleAxis(float,ohos.agp.render.render3d.math.Vector3)>
<ohos.global.icu.text.Collator: ohos.global.icu.util.VersionInfo getUCAVersion()>
<ohos.global.icu.text.LocaleDisplayNames: java.lang.String scriptDisplayName(int)>
<ohos.app.AbilityContext: ohos.app.dispatcher.TaskDispatcher createSerialTaskDispatcher(java.lang.String,ohos.app.dispatcher.task.TaskPriority)>
<ohos.global.icu.text.UCharacterIterator: int previous()>
<java.util.Arrays: java.util.stream.DoubleStream stream(double[],int,int)>
<ohos.accessibility.AccessibilityAbilityInfo: java.lang.String getPackageName()>
<java.time.chrono.ChronoPeriod: long get(java.time.temporal.TemporalUnit)>
<java.security.cert.Extension: byte[] getValue()>
<ohos.data.orm.Blob: long length()>
<ohos.data.search.schema.ContactItem: java.util.List getContactSchema()>
<ohos.media.common.sessioncore.AVSessionCallback: void onSkipToAVQueueElement(long)>
<java.util.logging.Handler: java.util.logging.ErrorManager getErrorManager()>
<java.io.InputStream: void close()>
<java.sql.PreparedStatement: void setBinaryStream(int,java.io.InputStream,int)>
<ohos.aafwk.ability.Ability: void setVolumeTypeAdjustedByKey(int)>
<ohos.data.distributed.common.UserInfo: void <init>()>
<ohos.global.icu.text.SelectFormat: int hashCode()>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo build()>
<java.net.NetworkInterface: byte[] getHardwareAddress()>
<java.util.concurrent.locks.ReentrantReadWriteLock: boolean hasWaiters(java.util.concurrent.locks.Condition)>
<ohos.agp.render.render3d.RenderLoop: void pause()>
<ohos.org.xml.sax.ContentHandler: void setDocumentLocator(ohos.org.xml.sax.Locator)>
<ohos.ai.cv.common.BoundingBox: void <init>(int,int,int,int)>
<ohos.media.audio.AudioManager.CallState: void <clinit>()>
<java.time.ZoneId: java.time.ZoneId normalized()>
<java.util.Dictionary: java.lang.Object remove(java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableSet keySet()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setBadgeIconStyle(int)>
<java.lang.String: java.lang.String copyValueOf(char[])>
<java.text.DecimalFormatSymbols: void setPerMill(char)>
<ohos.agp.components.CornerMark: ohos.agp.components.element.ShapeElement getElement()>
<ohos.telephony.GsmSignalInformation: boolean equals(java.lang.Object)>
<java.io.LineNumberInputStream: void mark(int)>
<ohos.bundle.AbilityInfo.DisplayOrientation: ohos.bundle.AbilityInfo.DisplayOrientation valueOf(java.lang.String)>
<ohos.agp.render.render3d.Task.State: void <clinit>()>
<java.time.ZonedDateTime: java.time.ZonedDateTime minus(java.time.temporal.TemporalAmount)>
<ohos.event.notification.NotificationUserInput: boolean isMimeTypeOnly()>
<ohos.agp.components.SearchBar: void setQuery(java.lang.String,boolean)>
<java.time.chrono.ChronoLocalDate: int lengthOfMonth()>
<ohos.ai.cv.common.CvRect: int height()>
<ohos.global.icu.text.MessageFormat.Field: java.lang.Object readResolve()>
<ohos.agp.graphics.TextureHolder: void <init>(int)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenCombine(java.util.concurrent.CompletionStage,java.util.function.BiFunction)>
<ohos.agp.components.ComponentParent: void removeComponents(int,int)>
<java.lang.Math: int toIntExact(long)>
<ohos.aafwk.ability.Ability: void onDisconnect(ohos.aafwk.content.Intent)>
<ohos.global.icu.text.PluralRules: int hashCode()>
<ohos.utils.PacMap: void <init>()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: int getAbilityState(ohos.aafwk.ability.Ability)>
<ohos.agp.render.opengl.GLES32: void glGetSamplerParameterIuiv(int,int,int[])>
<ohos.javax.xml.stream.XMLStreamReader: boolean isCharacters()>
<ohos.org.xml.sax.Parser: void setEntityResolver(ohos.org.xml.sax.EntityResolver)>
<ohos.media.audio.AudioRendererInfo.Builder: ohos.media.audio.AudioRendererInfo build()>
<java.time.Period: java.time.Period of(int,int,int)>
<ohos.global.icu.util.MeasureUnit: java.util.Set getAvailable()>
<ohos.sensor.agent.CategoryEnvironmentAgent: ohos.sensor.bean.CategoryEnvironment getSingleSensor(int)>
<ohos.event.notification.NotificationHelper: void setNotificationBadgeNum(int)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri build()>
<java.lang.Float: short shortValue()>
<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult valueOf(java.lang.String)>
<ohos.utils.geo.DimensFloat: int getQuotientCeilInt()>
<java.util.concurrent.DelayQueue: boolean offer(java.lang.Object)>
<ohos.agp.render.opengl.GLES20: void glBlendEquation(int)>
<java.nio.file.Files: java.nio.file.Path createSymbolicLink(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
<ohos.media.common.AVMetadata: void <clinit>()>
<java.sql.Clob: void free()>
<ohos.agp.components.webengine.WebConfig: void setLoadsImagesPermit(boolean)>
<java.io.ObjectOutputStream: java.io.ObjectOutputStream.PutField putFields()>
<java.nio.channels.AsynchronousChannelGroup: void shutdown()>
<java.security.cert.Certificate: java.lang.Object writeReplace()>
<ohos.aafwk.ability.fraction.FractionAbility: void onForeground(ohos.aafwk.content.Intent)>
<ohos.data.orm.OrmPredicates: java.lang.String getEntityName()>
<java.math.BigDecimal: void <init>(long)>
<java.sql.ResultSet: void updateBlob(int,java.sql.Blob)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>
<ohos.bluetooth.BluetoothHost: boolean startBtDiscovery()>
<ohos.aafwk.ability.continuation.ExtraParams: void setDescription(java.lang.String)>
<java.nio.file.Files: boolean deleteIfExists(java.nio.file.Path)>
<ohos.agp.render.opengl.GLES31: java.lang.String glGetProgramResourceName(int,int,int)>
<ohos.global.icu.text.StringSearch: void <init>(java.lang.String,java.text.CharacterIterator,java.util.Locale)>
<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger)>
<java.sql.CallableStatement: void setNClob(java.lang.String,java.sql.NClob)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query equalTo(java.lang.String,java.lang.String)>
<ohos.utils.PacMap: void putStringList(java.lang.String,java.util.ArrayList)>
<java.util.concurrent.ConcurrentNavigableMap: java.util.concurrent.ConcurrentNavigableMap tailMap(java.lang.Object,boolean)>
<ohos.data.rdb.RdbStore: long replaceOrThrowException(java.lang.String,ohos.data.rdb.ValuesBucket)>
<ohos.global.resource.AccessDeniedException: void <init>(java.lang.String)>
<ohos.agp.render.opengl.EGL: int eglGetError()>
<ohos.agp.render.opengl.GLES20: java.lang.String glGetString(int)>
<ohos.agp.components.PageSliderProvider: int getCount()>
<java.util.Dictionary: boolean isEmpty()>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction: java.lang.String toString()>
<ohos.agp.components.Image: void setImageAndDecodeBounds(int)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate date(java.time.chrono.Era,int,int,int)>
<javax.crypto.ExemptionMechanism: boolean isCryptoAllowed(java.security.Key)>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle unreflectSetter(java.lang.reflect.Field)>
<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal getIssuer()>
<ohos.rpc.IPCSkeleton: java.lang.String resetCallingIdentity()>
<java.io.StringBufferInputStream: void <init>(java.lang.String)>
<java.lang.Void: void <clinit>()>
<javax.net.ssl.HostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>
<java.util.IdentityHashMap: void replaceAll(java.util.function.BiFunction)>
<java.security.Provider: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat setSizeX(float)>
<ohos.ai.cv.docrefine.IDocRefine: void setVisionConfiguration(ohos.ai.cv.docrefine.DocRefineConfiguration)>
<ohos.hiviewdfx.Debug.MemType: ohos.hiviewdfx.Debug.MemType[] values()>
<ohos.utils.zson.ZSONArray: int getIntValue(int)>
<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>
<java.util.concurrent.atomic.LongAccumulator: float floatValue()>
<ohos.global.icu.text.Bidi: ohos.global.icu.text.Bidi createLineBidi(int,int)>
<ohos.global.icu.text.SearchIterator: void setOverlapping(boolean)>
<java.io.BufferedReader: void reset()>
<ohos.event.notification.MessageUser: ohos.event.notification.MessageUser setPixelMap(ohos.media.image.PixelMap)>
<java.util.concurrent.ConcurrentSkipListSet: boolean remove(java.lang.Object)>
<java.util.Hashtable: void clear()>
<ohos.rpc.MessageOption: void <init>(int,int)>
<java.lang.EnumConstantNotPresentException: java.lang.Class enumType()>
<java.util.concurrent.locks.ReentrantLock: int getQueueLength()>
<ohos.agp.components.BaseItemProvider: int getComponentTypeCount()>
<ohos.sysappcomponents.calendar.support.TableSupport: ohos.sysappcomponents.calendar.support.Rule getRule()>
<ohos.event.notification.NotificationRequest: java.lang.String getClassification()>
<ohos.security.keystore.KeyStoreProtectionParameter.Builder: ohos.security.keystore.KeyStoreProtectionParameter.Builder setSecKeyAccessibleAttr(int)>
<java.util.function.BiConsumer: java.util.function.BiConsumer andThen(java.util.function.BiConsumer)>
<ohos.utils.zson.ZSONObject: java.util.Set keySet()>
<ohos.global.icu.text.SearchIterator: int preceding(int)>
<ohos.wifi.IpInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.utils.BasePacMap: long getLongValue(java.lang.String)>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setLocation(ohos.location.Location)>
<ohos.miscservices.pasteboard.PasteData: java.lang.String getPrimaryMimeType()>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: int[] getShownActions()>
<ohos.global.icu.text.PluralRules: ohos.global.icu.text.PluralRules forLocale(java.util.Locale,ohos.global.icu.text.PluralRules.PluralType)>
<ohos.accessibility.ability.GesturePathPositionDefine: void <init>()>
<ohos.agp.render.render3d.math.Vector2: void <init>(float,float)>
<ohos.ai.cv.text.Text: ohos.ai.cv.common.CvPoint[] getCornerPoints()>
<java.io.PipedInputStream: void <init>(java.io.PipedOutputStream)>
<java.time.OffsetDateTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.nio.channels.SelectionKey: boolean isWritable()>
<javax.lang.model.util.Types: javax.lang.model.type.NoType getNoType(javax.lang.model.type.TypeKind)>
<ohos.agp.animation.AnimatorGroup: void <init>()>
<java.util.concurrent.atomic.LongAccumulator: int intValue()>
<ohos.sysappcomponents.contact.entity.Group: void setGroupId(int)>
<java.io.FileNotFoundException: void <init>(java.lang.String)>
<java.sql.BatchUpdateException: void <init>(java.lang.String,int[],java.lang.Throwable)>
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndAccumulate(int,int,java.util.function.IntBinaryOperator)>
<java.util.concurrent.SynchronousQueue: java.util.Iterator iterator()>
<ohos.global.icu.text.DecimalFormat: void setRoundingIncrement(ohos.global.icu.math.BigDecimal)>
<ohos.utils.LightweightSet: java.lang.Object[] toArray()>
<ohos.bundle.ShortcutInfo: java.lang.String getId()>
<ohos.data.search.model.IndexData: void put(java.lang.String,java.lang.String)>
<ohos.global.icu.text.AlphabeticIndex: java.lang.String getUnderflowLabel()>
<java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>
<ohos.global.icu.util.Measure: java.lang.String toString()>
<java.sql.Statement: void setMaxFieldSize(int)>
<ohos.agp.components.element.ShapeElement: ohos.agp.colors.RgbColor[] getRgbColors()>
<ohos.media.common.Format: java.util.HashMap getFormatMap()>
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder replaceWith(java.lang.String)>
<ohos.agp.render.render3d.math.Quaternion: float dot(ohos.agp.render.render3d.math.Quaternion,ohos.agp.render.render3d.math.Quaternion)>
<ohos.event.notification.NotificationSlot: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.util.Calendar: boolean isLenient()>
<ohos.data.orm.Clob: void <init>(java.lang.String)>
<ohos.global.icu.text.DateIntervalInfo: java.lang.Object clone()>
<ohos.agp.utils.Matrix: float getPerspX()>
<java.io.DataOutput: void writeByte(int)>
<java.time.Duration: java.time.Duration ofNanos(long)>
<ohos.agp.render.opengl.GLES32: void glGetnUniformfv(int,int,int,float[])>
<java.sql.DatabaseMetaData: int getSQLStateType()>
<ohos.agp.components.DependentLayout: int getAlignment()>
<java.nio.Buffer: java.nio.Buffer reset()>
<java.security.spec.ECPublicKeySpec: void <init>(java.security.spec.ECPoint,java.security.spec.ECParameterSpec)>
<ohos.sysappcomponents.contact.ContactsCollection: ohos.sysappcomponents.contact.entity.Contact next()>
<java.time.Instant: java.time.Instant minusNanos(long)>
<ohos.event.notification.NotificationSubscriber: void onDisConnect()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas(java.lang.String,java.lang.String)>
<ohos.agp.render.render3d.Engine: void release()>
<ohos.agp.window.service.DisplayNotch: void <init>()>
<ohos.agp.components.DependentLayout.LayoutConfig: void <init>(ohos.agp.components.DependentLayout.LayoutConfig)>
<ohos.miscservices.wallpaper.WallpaperController: int getId(int)>
<ohos.agp.components.TimePicker: void setNormalTextColor(ohos.agp.utils.Color)>
<java.io.Writer: void write(char[],int,int)>
<java.util.function.DoubleToLongFunction: long applyAsLong(double)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder decodedFragment(java.lang.String)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: void signalAll()>
<ohos.media.tubecore.AVTubeEx: void setTubeName(java.lang.String)>
<ohos.agp.render.render3d.Task: void <init>()>
<java.util.AbstractSequentialList: boolean addAll(int,java.util.Collection)>
<java.io.Externalizable: void readExternal(java.io.ObjectInput)>
<ohos.event.commonevent.MatchingSkills: boolean marshalling(ohos.utils.Parcel)>
<javax.net.ssl.SSLEngine: boolean getWantClientAuth()>
<java.net.NetPermission: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glAlphaFunc(int,float)>
<ohos.telephony.TdscdmaSignalInformation: void <init>()>
<ohos.aafwk.ability.Ability: void setIsAmbientMode(boolean)>
<ohos.accessibility.AccessibilityStateObserver: void onStateChanged(ohos.accessibility.AccessibilityStateEvent)>
<ohos.agp.render.render3d.gltf.GltfImportData: java.util.List getImages()>
<ohos.agp.window.service.ComponentPadding: int getSystemComponentPaddingBottom()>
<ohos.sensor.agent.CategoryMotionAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback)>
<ohos.hiviewdfx.HiChecker: java.util.EnumSet removeCheckFileWriteRule()>
<java.io.DataOutput: void writeChar(int)>
<ohos.usb.USBDevice: int getDeviceProtocol()>
<java.util.logging.LogRecord: void setSourceClassName(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glDeleteProgram(int)>
<java.lang.StringBuilder: int codePointBefore(int)>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.util.VersionInfo getUCAVersion()>
<javax.net.ssl.SNIHostName: int hashCode()>
<java.sql.ResultSet: void updateNCharacterStream(int,java.io.Reader)>
<java.security.cert.X509CRLSelector: java.security.cert.X509Certificate getCertificateChecking()>
<ohos.distributedhardware.devicemanager.DeviceManager.DeviceManagerCallback: void onGet(ohos.distributedhardware.devicemanager.DeviceManager)>
<ohos.event.commonevent.MatchingSkills: void setIntentParams(ohos.aafwk.content.IntentParams)>
<ohos.media.camera.params.ResultKey.Key: void <init>(java.lang.String,java.lang.Class)>
<ohos.global.resource.solidxml.Theme: java.util.HashMap getThemeHash()>
<ohos.sysappcomponents.contact.entity.Organization: void setName(java.lang.String)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLInputFactory newInstance(java.lang.String,java.lang.ClassLoader)>
<java.time.LocalDateTime: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates endsWith(java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES32: boolean glIsEnabledi(int,int)>
<ohos.global.icu.text.SelectFormat: boolean equals(java.lang.Object)>
<ohos.agp.render.opengl.GLES1X: void glLightxv(int,int,java.nio.IntBuffer)>
<java.nio.IntBuffer: java.nio.IntBuffer wrap(int[])>
<java.util.Collections: java.util.NavigableSet synchronizedNavigableSet(java.util.NavigableSet)>
<java.util.function.IntUnaryOperator: java.util.function.IntUnaryOperator compose(java.util.function.IntUnaryOperator)>
<ohos.global.icu.util.ChineseCalendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<java.awt.font.TextAttribute: void <clinit>()>
<ohos.sysappcomponents.contact.entity.Contact: long getId()>
<ohos.aafwk.content.Intent: void removeParam(java.lang.String)>
<ohos.utils.LightweightSet: int size()>
<java.time.chrono.IsoChronology: java.time.LocalDate dateEpochDay(long)>
<ohos.telephony.NrSignalInformation: java.lang.String toString()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap clone()>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>
<ohos.batterymanager.BatteryInfo.BatteryLevel: ohos.batterymanager.BatteryInfo.BatteryLevel valueOf(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glUniform1iv(int,int,int[])>
<java.io.DataInput: int readUnsignedByte()>
<ohos.global.icu.lang.UCharacter: boolean isIdentifierIgnorable(int)>
<java.security.cert.CertPathBuilderResult: java.security.cert.CertPath getCertPath()>
<java.security.spec.RSAKeyGenParameterSpec: void <clinit>()>
<ohos.agp.render.render3d.resources.AnimationPlayback: int getRepeatCount()>
<java.util.Arrays: void fill(long[],long)>
<ohos.agp.render.render3d.resources.ResourceManager: java.util.List getImages()>
<ohos.agp.components.Component: void setComponentMinSize(int,int)>
<ohos.agp.render.opengl.GLES20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)>
<ohos.agp.components.webengine.WebConfig: boolean isJavaScriptPermitted()>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate dateNow()>
<ohos.global.icu.text.PluralRules: boolean equals(ohos.global.icu.text.PluralRules)>
<java.util.logging.Logger: void log(java.util.logging.Level,java.util.function.Supplier)>
<java.nio.channels.AsynchronousSocketChannel: java.net.SocketAddress getRemoteAddress()>
<java.util.stream.LongStream.Builder: java.util.stream.LongStream.Builder add(long)>
<java.text.DateFormat: int hashCode()>
<ohos.global.i18n.text.DateFormatUtil: java.lang.String[] getShortStandAloneWeekdayNames(java.util.Locale)>
<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>
<java.time.Period: java.time.chrono.Chronology getChronology()>
<ohos.agp.components.Slider: ohos.agp.components.element.Element[] getAdjustButtonsElements()>
<ohos.agp.render.opengl.GLES20: void glStencilOpSeparate(int,int,int,int)>
<ohos.bundle.LauncherAbilityInfo: java.lang.String getName()>
<ohos.bluetooth.BluetoothDeviceClass: boolean equals(java.lang.Object)>
<java.util.function.Function: java.util.function.Function compose(java.util.function.Function)>
<java.io.PrintStream: void write(byte[],int,int)>
<java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()>
<java.io.ObjectStreamField: boolean isPrimitive()>
<ohos.app.Context: boolean canRequestPermission(java.lang.String)>
<java.util.SplittableRandom: java.util.stream.DoubleStream doubles()>
<ohos.ai.cv.text.TextConfiguration.Builder: void <init>()>
<java.nio.file.Path: java.lang.String toString()>
<ohos.app.AbilityContext: int getColorMode()>
<ohos.account.AccountAbility: ohos.account.OsAccount queryCurrentOsAccount()>
<ohos.wifi.IpInfo: int getServerIp()>
<ohos.agp.render.opengl.Utils: boolean greatOrEqual(float,float)>
<ohos.app.AbilityContext: void startAbility(ohos.aafwk.content.Intent,ohos.aafwk.ability.startsetting.AbilityStartSetting,ohos.aafwk.ability.IAbilityStartCallback)>
<ohos.security.seckeychain.SecKeyChain: java.security.PrivateKey getSecPrivateKey(ohos.app.AbilityContext,java.lang.String)>
<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<ohos.aafwk.ability.Ability: void onUpdateForm(long)>
<ohos.agp.components.Component.ComponentStateChangedListener: void onComponentStateChanged(ohos.agp.components.Component,int)>
<ohos.agp.utils.Color: int argb(int,int,int,int)>
<ohos.media.sessioncore.AVBrowserService: void notifyAVElementListUpdated(java.lang.String)>
<ohos.utils.net.Uri: int compareTo(ohos.utils.net.Uri)>
<ohos.media.common.StorageProperty.Builder: ohos.media.common.StorageProperty.Builder setRecorderMaxFileSizeBytes(long)>
<ohos.global.icu.text.UCharacterIterator: ohos.global.icu.text.UCharacterIterator getInstance(char[],int,int)>
<ohos.utils.PacMap: void putDoubleValue(java.lang.String,double)>
<ohos.global.icu.text.DecimalFormat: void setExponentSignAlwaysShown(boolean)>
<ohos.global.icu.text.MessagePattern.Part: int getIndex()>
<ohos.accessibility.ability.AccessibilityInfo: boolean isScrollable()>
<java.time.zone.ZoneOffsetTransitionRule: int hashCode()>
<ohos.event.notification.ReminderRequest: java.lang.String getSnoozeContent()>
<java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
<java.util.logging.Logger: void config(java.lang.String)>
<ohos.global.icu.text.Edits: int numberOfChanges()>
<java.time.LocalDate: int getMonthValue()>
<java.util.Date: int getYear()>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitUnion(javax.lang.model.type.UnionType,java.lang.Object)>
<ohos.location.GeoAddress: java.lang.String toString()>
<ohos.javax.xml.stream.XMLStreamWriter: void writeEmptyElement(java.lang.String)>
<java.util.stream.IntStream: java.util.stream.IntStream concat(java.util.stream.IntStream,java.util.stream.IntStream)>
<ohos.agp.components.Image: void setCornerRadius(float)>
<java.lang.StrictMath: float min(float,float)>
<ohos.agp.components.Component.FadeEffectEnum: ohos.agp.components.Component.FadeEffectEnum getByInt(int)>
<java.security.KeyStore.LoadStoreParameter: java.security.KeyStore.ProtectionParameter getProtectionParameter()>
<java.sql.BatchUpdateException: void <init>(java.lang.String,java.lang.String,int[])>
<ohos.agp.components.ProgressBar: void setProgressHintTextSize(int)>
<java.lang.Long: double doubleValue()>
<ohos.event.notification.NotificationRequest: java.lang.String getSettingsText()>
<java.util.GregorianCalendar: int getActualMaximum(int)>
<ohos.event.notification.NotificationSorting: int getImportance()>
<ohos.utils.LongPlainArray: int indexOfKey(long)>
<java.lang.String: int compareTo(java.lang.Object)>
<ohos.global.icu.text.MessagePattern: int getPatternIndex(int)>
<ohos.agp.components.Component: ohos.agp.animation.AnimatorProperty createAnimatorProperty()>
<javax.tools.JavaFileManager.Location: boolean isOutputLocation()>
<ohos.agp.components.ComponentTreeObserver.WindowBoundListener: void onWindowUnbound()>
<ohos.media.photokit.metadata.AVThumbnailUtils: ohos.media.image.PixelMap createImageThumbnail(java.io.File,ohos.media.image.common.Size)>
<java.sql.SQLTransientConnectionException: void <init>()>
<ohos.data.resultset.ResultSetWrapper: boolean goToLastRow()>
<ohos.bluetooth.ble.BleCentralManagerCallback: void scanFailedEvent(int)>
<java.util.zip.Deflater: int getTotalIn()>
<ohos.global.icu.text.Normalizer2: ohos.global.icu.text.Normalizer2 getInstance(java.io.InputStream,java.lang.String,ohos.global.icu.text.Normalizer2.Mode)>
<java.beans.PropertyChangeSupport: boolean hasListeners(java.lang.String)>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object element()>
<ohos.agp.components.Component: void setFocusBorderRadius(float)>
<ohos.agp.components.TabList: void addTab(ohos.agp.components.TabList.Tab,int,boolean)>
<java.util.TimeZone: java.lang.String[] getAvailableIDs(int)>
<ohos.agp.components.ScrollView: void setReboundEffectParams(int,float,int)>
<java.lang.Math: float nextAfter(float,double)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap headMap(java.lang.Object)>
<ohos.agp.components.TabList: void removeAllComponents()>
<java.nio.ShortBuffer: int compareTo(java.lang.Object)>
<java.time.YearMonth: java.time.LocalDate atEndOfMonth()>
<ohos.aafwk.ability.Ability: void setAVController(java.lang.Object)>
<ohos.data.rdb.TransactionObserver: void onBegin()>
<ohos.global.resource.solidxml.Node: ohos.global.resource.solidxml.Node getSibling()>
<java.nio.FloatBuffer: java.nio.FloatBuffer put(float)>
<javax.net.ssl.SSLException: void <init>(java.lang.Throwable)>
<ohos.data.orm.Clob: java.lang.String toString()>
<ohos.agp.components.ScrollView.ReboundEffectParams: void setOverscrollRate(float)>
<ohos.sensor.data.CategoryLightData: void <init>(ohos.sensor.bean.CategoryLight,int,long,int,float[])>
<java.util.Map.Entry: java.util.Comparator comparingByKey()>
<ohos.media.image.ImagePacker: boolean addImage(ohos.media.image.PixelMap)>
<ohos.utils.BasePacMap: void putAll(ohos.utils.BasePacMap)>
<ohos.global.resource.RawFileDescriptor: long getStartPosition()>
<ohos.media.audio.AudioRenderer: ohos.media.audio.AudioRendererInfo getRendererInfo()>
<ohos.global.icu.text.DateFormatSymbols: void <init>(ohos.global.icu.util.Calendar,java.util.Locale)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream concat(java.util.stream.DoubleStream,java.util.stream.DoubleStream)>
<javax.sql.RowSetInternal: void setMetaData(javax.sql.RowSetMetaData)>
<ohos.agp.colors.HsvColor: int toColor(int,float,float,float)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle exactInvoker(java.lang.invoke.MethodType)>
<ohos.agp.components.ScrollView: void doFlingY(int)>
<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>
<ohos.utils.geo.Rect: int getCenterX()>
<ohos.global.icu.text.CaseMap.Title: ohos.global.icu.text.CaseMap.Title wholeString()>
<ohos.media.audio.AudioDeviceDescriptor.DeviceType: int getValue()>
<java.net.InterfaceAddress: boolean equals(java.lang.Object)>
<ohos.data.distributed.common.KvManager: ohos.data.distributed.device.DeviceInfo getLocalDeviceInfo()>
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>
<ohos.eventhandler.InnerEvent: ohos.eventhandler.InnerEvent get(int,long)>
<java.nio.file.Files: java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[])>
<ohos.aafwk.ability.DataAbilityResult: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.wifi.WifiScanInfo: java.lang.String getBssid()>
<java.util.TreeMap: void <init>(java.util.Map)>
<ohos.agp.render.ThreeDimView: void rotateY(float)>
<ohos.utils.Parcel: byte readByte()>
<java.sql.Date: int getSeconds()>
<ohos.agp.render.RadialShader: float getShaderRadius()>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal setScale(int)>
<java.io.ObjectStreamClass: java.lang.Class forClass()>
<ohos.agp.window.dialog.CommonDialog: boolean setSwipeToDismiss(boolean)>
<java.net.URLConnection: boolean getUseCaches()>
<ohos.multimodalinput.event.ManipulationEvent: int getPointerCount()>
<java.lang.Thread: void setPriority(int)>
<java.nio.CharBuffer: char[] array()>
<ohos.utils.geo.Rect: float getPreciseHorizontalCenter()>
<ohos.data.orm.EntityHelper: void bindValue(ohos.data.rdb.Statement,java.lang.Object,long)>
<ohos.agp.components.ProgressBar: void setProgressHintTextColor(ohos.agp.utils.Color)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThan(java.lang.String,java.util.Calendar)>
<ohos.agp.components.ComponentTreeObserver: void removeTreeLayoutChangedListener(ohos.agp.components.ComponentTreeObserver.GlobalLayoutListener)>
<java.text.DecimalFormat: int getMinimumIntegerDigits()>
<ohos.utils.PacMap: void putAll(java.util.Map)>
<ohos.wifi.p2p.WifiP2pGroup: void <init>()>
<java.sql.ResultSet: void afterLast()>
<ohos.agp.components.surfaceprovider.SurfaceProvider: java.util.Optional getSurfaceOps()>
<ohos.agp.render.render3d.resources.AnimationPlayback.State: void <clinit>()>
<java.util.concurrent.atomic.DoubleAccumulator: void accumulate(double)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.security.spec.RSAOtherPrimeInfo[])>
<ohos.media.audio.AudioManager: void unregisterAudioCapturerCallback(ohos.media.audio.AudioCapturerCallback)>
<java.security.Signature: boolean verify(byte[])>
<ohos.aafwk.ability.RunningProcessInfo: int getWeight()>
<ohos.aafwk.ability.RunningProcessInfo: int getUid()>
<java.sql.SQLOutput: void writeShort(short)>
<ohos.aafwk.ability.DataAbilityOperation: ohos.aafwk.ability.DataAbilityOperation.Builder newInsertBuilder(ohos.utils.net.Uri)>
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<ohos.data.rdb.ValuesBucket: void <init>(ohos.utils.Parcel)>
<java.util.Locale: void setDefault(java.util.Locale.Category,java.util.Locale)>
<ohos.utils.Parcel: java.util.Map readSequenceableMap(java.lang.Class)>
<ohos.accessibility.ability.SoftKeyBoardController: void <init>(int,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: int hashCode()>
<ohos.ai.cv.sr.ITxtImageSuperResolution: int doSuperResolution(ohos.ai.cv.common.VisionImage,ohos.ai.cv.common.ImageResult,ohos.ai.cv.common.VisionCallback)>
<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Object[])>
<ohos.agp.render.Path.ArcSize: void <clinit>()>
<java.util.BitSet: void set(int,int)>
<ohos.agp.components.ComponentContainer: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.render.Canvas: void <init>(ohos.agp.render.Texture)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.agp.components.webengine.WebView: void load(java.lang.String,java.lang.String,boolean)>
<java.security.UnresolvedPermission: java.lang.String getActions()>
<java.text.DecimalFormat: boolean isParseBigDecimal()>
<ohos.usb.USBInterface: int getId()>
<ohos.agp.database.DataSetSubscriber: void onItemRangeRemoved(int,int)>
<java.util.Random: java.util.stream.DoubleStream doubles(double,double)>
<ohos.org.xml.sax.Parser: void setLocale(java.util.Locale)>
<ohos.media.image.ImagePacker: long finalizePacking()>
<ohos.data.search.model.IndexForm: boolean isStore()>
<java.net.URISyntaxException: java.lang.String getReason()>
<ohos.org.xml.sax.ErrorHandler: void fatalError(ohos.org.xml.sax.SAXParseException)>
<java.nio.channels.WritePendingException: void <init>()>
<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>
<ohos.agp.render.opengl.GLES20: void <init>()>
<javax.sql.PooledConnection: void removeConnectionEventListener(javax.sql.ConnectionEventListener)>
<ohos.global.icu.lang.UCharacter: ohos.global.icu.util.VersionInfo getUnicodeVersion()>
<ohos.security.asset.AssetResult: void <init>(int,java.util.List)>
<ohos.agp.components.Picker: int getCompoundElementPadding()>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 add(ohos.agp.render.render3d.math.Vector2,ohos.agp.render.render3d.math.Vector2)>
<ohos.global.icu.text.LocaleDisplayNames: java.util.List getUiList(java.util.Set,boolean,java.util.Comparator)>
<java.io.ByteArrayInputStream: void mark(int)>
<java.util.logging.LogManager: void readConfiguration()>
<ohos.utils.LightweightMap: void <init>(int,boolean)>
<javax.net.ssl.SSLServerSocket: void <init>(int)>
<java.sql.DatabaseMetaData: boolean supportsUnion()>
<java.util.BitSet: void clear()>
<ohos.global.icu.text.Edits.Iterator: int replacementIndex()>
<ohos.media.codec.Codec.ICodecListener: void onError(int,int,int)>
<java.security.AlgorithmParameterGenerator: void init(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<java.time.temporal.TemporalField: boolean isSupportedBy(java.time.temporal.TemporalAccessor)>
<ohos.agp.components.Component: java.lang.CharSequence getComponentDescription()>
<ohos.media.recorder.Recorder: boolean setAudioProperty(ohos.media.common.AudioProperty)>
<java.io.StringBufferInputStream: int read()>
<ohos.global.icu.text.LocaleDisplayNames: java.lang.String keyDisplayName(java.lang.String)>
<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>
<java.nio.file.FileSystemAlreadyExistsException: void <init>(java.lang.String)>
<java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)>
<javax.crypto.KeyGenerator: void init(java.security.SecureRandom)>
<ohos.media.image.common.ScaleMode: int getValue()>
<ohos.utils.Scope: java.lang.Comparable clamp(java.lang.Comparable)>
<java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)>
<ohos.data.search.schema.NoticeItem: java.lang.String getNoticeCategory()>
<ohos.utils.SequenceUuid: ohos.utils.SequenceUuid uuidFromString(java.lang.String)>
<java.sql.CallableStatement: java.io.Reader getNCharacterStream(java.lang.String)>
<ohos.nfc.tag.NdefMessage: void <init>(byte[])>
<java.text.NumberFormat: java.lang.String format(double)>
<ohos.media.camera.device.CameraAbility: java.util.List getSupportedProperties()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture acceptEither(java.util.concurrent.CompletionStage,java.util.function.Consumer)>
<ohos.data.distributed.user.SingleKvStore: void unRegisterSyncCallback()>
<ohos.data.search.schema.ContactItem: ohos.data.search.schema.ContactItem setWorkLocation(java.lang.String)>
<java.lang.InternalError: void <init>()>
<ohos.bluetooth.ble.BlePeripheralManager: void <init>(ohos.app.Context,ohos.bluetooth.ble.BlePeripheralManagerCallback,int)>
<java.sql.Time: int getMonth()>
<java.util.zip.GZIPOutputStream: void finish()>
<ohos.location.GeoAddress: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.NumberFormat: boolean isParseStrict()>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster previousOrSame(java.time.DayOfWeek)>
<ohos.agp.render.opengl.GLES1X: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<ohos.miscservices.wallpaper.WallpaperController: ohos.miscservices.wallpaper.WallpaperColorsCollection getColors(int)>
<java.io.PrintWriter: void print(int)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLInputFactory newInstance()>
<ohos.agp.window.service.Window: void setWindowLayout(int,int)>
<java.net.ServerSocket: int getLocalPort()>
<java.nio.channels.AsynchronousSocketChannel: void write(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)>
<ohos.data.distributed.common.ChangeNotification: java.util.List getInsertEntries()>
<java.time.temporal.ValueRange: long getLargestMinimum()>
<java.util.jar.Pack200.Packer: java.util.SortedMap properties()>
<ohos.global.icu.lang.UCharacter: boolean isSurrogatePair(char,char)>
<ohos.agp.render.opengl.GLES32: void glBlendBarrier()>
<java.text.MessageFormat.Field: java.lang.Object readResolve()>
<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>
<ohos.javax.xml.stream.events.XMLEvent: boolean isEntityReference()>
<ohos.global.icu.lang.UCharacter: ohos.global.icu.util.ValueIterator getNameIterator()>
<ohos.aafwk.content.IntentParams: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.DateFormatSymbols: void initializeData(ohos.global.icu.util.ULocale,java.lang.String)>
<ohos.agp.components.TickTimer: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,java.lang.String)>
<ohos.media.audio.AudioCapturer: ohos.media.audio.AudioDeviceDescriptor getCurrentDevice()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,java.sql.Timestamp)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.util.List)>
<ohos.accessibility.ability.AccessibleAbility: boolean onGesture(int)>
<ohos.hiviewdfx.Debug: int getProcessSharedClean(ohos.hiviewdfx.Debug.MemType)>
<java.time.chrono.HijrahDate: java.time.chrono.Chronology getChronology()>
<java.util.concurrent.atomic.AtomicLongArray: void set(int,long)>
<ohos.agp.graphics.Surface.PixelFormat: ohos.agp.graphics.Surface.PixelFormat[] values()>
<ohos.agp.render.opengl.GLES1X: void glFramebufferTexture2DOES(int,int,int,int,int)>
<ohos.eventhandler.InnerEvent: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.components.webengine.WebView: void setBrowserAgent(ohos.agp.components.webengine.BrowserAgent)>
<java.nio.channels.Selector: int select()>
<java.util.concurrent.Semaphore: int getQueueLength()>
<java.sql.ResultSet: void updateBinaryStream(int,java.io.InputStream)>
<ohos.agp.utils.Point: float getPointX()>
<java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: java.lang.String toString()>
<ohos.data.resultset.SharedBlock: float getFloat(int,int)>
<ohos.global.icu.util.ULocale: java.lang.String getLineOrientation()>
<java.util.concurrent.ConcurrentHashMap: long reduceToLong(long,java.util.function.ToLongBiFunction,long,java.util.function.LongBinaryOperator)>
<ohos.global.icu.util.Calendar: void computeGregorianFields(int)>
<ohos.wifi.p2p.WifiP2pConfig: void setDeviceAddress(java.lang.String)>
<java.time.chrono.IsoChronology: java.time.LocalDate dateNow()>
<ohos.agp.components.TableLayoutManager: void setColumnCount(int)>
<ohos.system.TimeValGroup: int hashCode()>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>
<ohos.media.audio.ToneDescriptor: double getLowFrequency()>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.temporal.TemporalAccessor)>
<ohos.aafwk.ability.Ability: boolean onTouchEvent(ohos.multimodalinput.event.TouchEvent)>
<java.util.TimerTask: void <init>()>
<javax.tools.ForwardingJavaFileObject: boolean isNameCompatible(java.lang.String,javax.tools.JavaFileObject.Kind)>
<ohos.agp.render.opengl.GLES30: void glUniform1ui(int,int)>
<java.time.Month: java.time.Month plus(long)>
<ohos.agp.utils.RectFloat.RotationEnum: void <clinit>()>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setCountry(java.lang.String)>
<ohos.sysappcomponents.calendar.CalendarDataHelper: int delete(ohos.data.dataability.DataAbilityPredicates)>
<java.sql.ResultSet: void updateFloat(java.lang.String,float)>
<ohos.distributedschedule.interwork.IDeviceStateCallback: void onDeviceOnline(java.lang.String,int)>
<java.util.Collections: java.util.Collection checkedCollection(java.util.Collection,java.lang.Class)>
<ohos.agp.render.Path: void lineTo(ohos.agp.utils.Point)>
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeExponentQ()>
<java.util.OptionalDouble: boolean equals(java.lang.Object)>
<java.sql.DatabaseMetaData: java.lang.String getURL()>
<ohos.agp.components.Picker: void setSelectedNormalTextMarginRatio(float)>
<java.io.PrintWriter: void <init>(java.io.Writer)>
<java.lang.SecurityManager: void checkExit(int)>
<java.net.Authenticator: java.lang.String getRequestingPrompt()>
<ohos.net.NetCapabilities: boolean marshalling(ohos.utils.Parcel)>
<java.util.ArrayDeque: boolean isEmpty()>
<java.text.CollationKey: int compareTo(java.text.CollationKey)>
<java.sql.SQLIntegrityConstraintViolationException: void <init>(java.lang.String,java.lang.String,int)>
<java.time.Instant: int compareTo(java.lang.Object)>
<java.security.Timestamp: boolean equals(java.lang.Object)>
<ohos.aafwk.abilityjet.databinding.DataBinding: void initComponent(ohos.agp.components.ComponentContainer)>
<java.security.cert.CertPath: void <init>(java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notIn(java.lang.String,double[])>
<java.net.CookieStore: java.util.List get(java.net.URI)>
<java.util.concurrent.ForkJoinTask: void completeExceptionally(java.lang.Throwable)>
<java.util.AbstractQueue: java.lang.Object element()>
<ohos.agp.window.dialog.IDialog: void hide()>
<ohos.agp.utils.RectFloat: boolean verifyRectFloat()>
<java.sql.DatabaseMetaData: int getMaxColumnNameLength()>
<javax.lang.model.util.Elements: java.lang.String getDocComment(javax.lang.model.element.Element)>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.Future submit(java.util.concurrent.Callable)>
<ohos.global.resource.ResourceManager: ohos.global.resource.solidxml.Pattern createPattern(java.util.List)>
<java.util.concurrent.ThreadPoolExecutor: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)>
<ohos.agp.render.render3d.components.WorldMatrixComponent: void <init>()>
<ohos.aafwk.ability.Ability: void cancelBackgroundRunning()>
<ohos.nfc.cardemulation.HostService: void sendResponse(byte[])>
<ohos.agp.components.Component: void setBoundaryFadeEffectEnable(boolean)>
<ohos.agp.components.TableLayout.LayoutConfig: void <init>(ohos.agp.components.TableLayout.Specification,ohos.agp.components.TableLayout.Specification)>
<ohos.agp.render.render3d.resources.AnimationPlayback.State: ohos.agp.render.render3d.resources.AnimationPlayback.State[] values()>
<ohos.global.icu.text.DateIntervalInfo.PatternInfo: void <init>(java.lang.String,java.lang.String,boolean)>
<ohos.aafwk.content.Intent: ohos.utils.Sequenceable getSequenceableParam(java.lang.String)>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setSuperscript(boolean)>
<java.lang.Character: boolean isSurrogate(char)>
<ohos.media.image.common.Rect: boolean cropRect(int,int,int,int)>
<ohos.global.icu.text.NumberFormat: java.lang.StringBuffer format(ohos.global.icu.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition)>
<java.lang.Integer: int numberOfLeadingZeros(int)>
<java.security.SignatureSpi: byte[] engineSign()>
<java.sql.DatabaseMetaData: java.lang.String getNumericFunctions()>
<java.nio.CharBuffer: java.lang.CharSequence subSequence(int,int)>
<ohos.global.icu.text.UnicodeSetSpanner.TrimOption: ohos.global.icu.text.UnicodeSetSpanner.TrimOption[] values()>
<ohos.media.audio.AudioManager: boolean setDeviceActive(int,boolean)>
<java.nio.file.WatchEvent: int count()>
<java.lang.StringBuilder: void getChars(int,int,char[],int)>
<ohos.agp.window.dialog.CommonDialog: boolean dealTouchEvent(ohos.multimodalinput.event.TouchEvent)>
<ohos.media.audio.AudioRendererCallback: void onRendererConfigChanged(java.util.List)>
<ohos.agp.utils.Line: void setEndPoint(ohos.agp.utils.Point)>
<java.util.UnknownFormatConversionException: java.lang.String getConversion()>
<ohos.bundle.BundleInfo: int getUid()>
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>
<java.util.stream.Stream.Builder: java.util.stream.Stream.Builder add(java.lang.Object)>
<java.math.BigInteger: boolean equals(java.lang.Object)>
<ohos.agp.render.render3d.resources.MaterialDesc: float getClearCoatFactor()>
<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object[])>
<java.sql.Array: java.lang.Object getArray(java.util.Map)>
<java.time.LocalDate: boolean isSupported(java.time.temporal.TemporalField)>
<java.nio.FloatBuffer: java.lang.Object array()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage whenComplete(java.util.function.BiConsumer)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream iterate(double,java.util.function.DoubleUnaryOperator)>
<ohos.utils.net.UrlQueryFilter: ohos.utils.net.UrlQueryFilter.ValueFilter getParameterFilter(java.lang.String)>
<ohos.global.icu.text.BreakIterator: int current()>
<java.sql.BatchUpdateException: void <init>(int[])>
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getP()>
<ohos.aafwk.ability.AbilitySlice: void onStart(ohos.aafwk.content.Intent)>
<ohos.bundle.ApplicationInfo: void setFlags(int)>
<ohos.data.search.schema.Schema: java.lang.Object setAlternateName(java.lang.String)>
<ohos.media.camera.device.FrameConfig.Builder: int getAfTrigger()>
<ohos.miscservices.inputmethod.EditorAttribute: void setInputPattern(int)>
<javax.lang.model.util.SimpleElementVisitor8: void <init>(java.lang.Object)>
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>
<java.util.Currency: java.util.Currency getInstance(java.lang.String)>
<ohos.data.rdb.RdbAbortException: void <init>()>
<java.time.chrono.ChronoLocalDate: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.nio.file.spi.FileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)>
<ohos.agp.components.ScrollView: boolean isMatchViewport()>
<ohos.app.AbilityContext: int getDisplayOrientation()>
<ohos.global.icu.util.IslamicCalendar: int handleComputeMonthStart(int,int,boolean)>
<ohos.location.GeoAddress: boolean hasLatitude()>
<ohos.security.permission.PermissionLevel: ohos.security.permission.PermissionGrantMode grantMode()>
<java.time.LocalTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.util.zip.Deflater: boolean finished()>
<java.security.cert.X509CRLEntry: void <init>()>
<ohos.data.search.schema.DocumentItem: java.lang.String getAuthor()>
<ohos.hiviewdfx.Debug: void functionTraceSamplingBegin(java.lang.String,int,int)>
<java.security.KeyPairGeneratorSpi: void <init>()>
<java.time.Instant: long getEpochSecond()>
<java.util.concurrent.ConcurrentHashMap.KeySetView: boolean contains(java.lang.Object)>
<ohos.aafwk.ability.FormBindingData: void <clinit>()>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)>
<javax.net.ssl.SSLSession: javax.security.cert.X509Certificate[] getPeerCertificateChain()>
<ohos.org.xml.sax.ContentHandler: void startDocument()>
<javax.lang.model.element.PackageElement: boolean isUnnamed()>
<java.net.Socket: java.lang.String toString()>
<ohos.agp.components.Component: int[] getVerticalPosition()>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setZoom(float)>
<ohos.sysappcomponents.calendar.CalendarCollection: boolean hasNext()>
<ohos.global.icu.text.MessageFormat: ohos.global.icu.text.MessagePattern.ApostropheMode getApostropheMode()>
<ohos.multimodalinput.event.ManipulationEvent: void <init>()>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object takeLast()>
<java.util.jar.Manifest: void write(java.io.OutputStream)>
<ohos.aafwk.ability.Ability: ohos.data.dataability.DataAbilityPredicates parsePredictionArgsReference(ohos.aafwk.ability.DataAbilityResult[],ohos.aafwk.ability.DataAbilityOperation,int)>
<ohos.agp.components.Component: void removeScrolledListener(ohos.agp.components.Component.ScrolledListener)>
<ohos.ai.cv.common.BoundingBox: void setHeight(int)>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 max(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<java.time.zone.ZoneRulesException: void <init>(java.lang.String)>
<ohos.global.icu.text.Edits.Iterator: boolean next()>
<java.util.concurrent.atomic.AtomicLong: long getAndDecrement()>
<ohos.data.search.schema.IndexSchemaType: java.lang.String getSchemaType()>
<ohos.sysappcomponents.calendar.CalendarDataHelper: ohos.sysappcomponents.calendar.CalendarDataHelper creator(ohos.app.Context,java.lang.Class)>
<ohos.media.audio.SoundPlayer: boolean setOnCreateCompleteListener(ohos.media.audio.SoundPlayer.OnCreateCompleteListener)>
<javax.lang.model.SourceVersion: boolean isIdentifier(java.lang.CharSequence)>
<java.lang.Thread: void setDaemon(boolean)>
<java.security.KeyStore.PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[])>
<ohos.wifi.IpInfo: int getSecondDns()>
<java.net.InetAddress: java.net.InetAddress getLocalHost()>
<ohos.bluetooth.HandsFreeAudioGateway: int getDeviceState(ohos.bluetooth.BluetoothRemoteDevice)>
<java.sql.DatabaseMetaData: java.lang.String getDatabaseProductVersion()>
<ohos.bluetooth.ble.BleAdvertiseCallback: void <init>()>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLEventReader createFilteredReader(ohos.javax.xml.stream.XMLEventReader,ohos.javax.xml.stream.EventFilter)>
<ohos.location.Location: java.lang.String toString()>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitExecutableAsInstanceInit(javax.lang.model.element.ExecutableElement,java.lang.Object)>
<ohos.global.icu.text.DateFormat: boolean isCalendarLenient()>
<java.util.stream.Collector.Characteristics: void <clinit>()>
<ohos.location.GeoAddress: void setAdministrativeArea(java.lang.String)>
<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setExpiredContent(java.lang.String)>
<java.sql.DatabaseMetaData: boolean supportsDifferentTableCorrelationNames()>
<java.util.IdentityHashMap: void clear()>
<ohos.bundle.HapModuleInfo: boolean isInstallationFreeSupported()>
<java.text.ChoiceFormat: double[] getLimits()>
<ohos.global.icu.text.BreakIterator: int first()>
<java.io.DataInputStream: long readLong()>
<ohos.data.rdb.Statement: void setBlob(int,byte[])>
<ohos.ai.tts.TtsParams: void setSpeaker(int)>
<java.time.LocalDateTime: java.time.LocalDateTime withSecond(int)>
<javax.sql.RowSet: void setObject(java.lang.String,java.lang.Object)>
<ohos.global.resource.ResourceManager: ohos.global.config.ConfigManager getConfigManager()>
<ohos.global.icu.text.UnicodeSetSpanner: java.lang.CharSequence trim(java.lang.CharSequence)>
<java.sql.ResultSetMetaData: java.lang.String getSchemaName(int)>
<ohos.agp.render.render3d.gltf.GltfImportData: java.util.List getTextures()>
<ohos.location.GeoAddress: java.lang.String getSubLocality()>
<ohos.multimodalinput.standard.TouchEventHandle: boolean onTouch(ohos.multimodalinput.event.TouchEvent)>
<ohos.global.icu.text.StringSearch: java.lang.String getPattern()>
<ohos.utils.geo.RectFloat: void shrink(float,float)>
<java.security.DigestInputStream: int read(byte[],int,int)>
<ohos.global.icu.util.Calendar: long internalGetTimeInMillis()>
<ohos.hiviewdfx.Debug.IpcType: ohos.hiviewdfx.Debug.IpcType valueOf(java.lang.String)>
<ohos.data.resultset.TableResultSet: byte[] getBlob(int)>
<java.time.chrono.ChronoLocalDateTime: boolean isSupported(java.time.temporal.TemporalUnit)>
<java.net.URLClassLoader: void close()>
<ohos.agp.components.ScrollHelper: int getHorizontalBeginPosition()>
<ohos.agp.render.render3d.SceneNode: java.util.Optional lookupNodeByName(java.lang.String)>
<ohos.app.Context: java.io.File getDistributedDir()>
<ohos.global.icu.text.Bidi: ohos.global.icu.text.BidiRun getVisualRun(int)>
<ohos.utils.IntArray: int lastIndexOf(int)>
<java.util.prefs.AbstractPreferences: void putInt(java.lang.String,int)>
<java.nio.file.attribute.FileAttribute: java.lang.Object value()>
<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>
<ohos.agp.render.opengl.GLES1X: void glGenTextures(int,int[])>
<java.util.prefs.Preferences: void putBoolean(java.lang.String,boolean)>
<ohos.media.common.VideoProperty.Builder: ohos.media.common.VideoProperty build()>
<ohos.global.icu.util.Calendar: int hashCode()>
<ohos.agp.components.Component: void setComponentSize(int,int)>
<ohos.agp.components.element.Element: void skipAnimation()>
<java.time.Period: java.time.Period normalized()>
<ohos.agp.components.element.StateElement: int findStateElementIndex(int[])>
<ohos.data.rdb.StoreConfig.Builder: ohos.data.rdb.StoreConfig.Builder setEncryptKey(byte[])>
<ohos.interwork.ui.RemoteViewEx: void <init>(ohos.app.Context,ohos.agp.components.ComponentProvider)>
<ohos.sysappcomponents.calendar.entity.Events: void setRecurDate(java.lang.String)>
<java.util.prefs.NodeChangeListener: void childAdded(java.util.prefs.NodeChangeEvent)>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate date(java.time.chrono.Era,int,int,int)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,ohos.aafwk.content.IntentParams)>
<java.security.AuthProvider: void logout()>
<java.util.SimpleTimeZone: int getDSTSavings()>
<java.util.concurrent.ThreadPoolExecutor: void shutdown()>
<ohos.agp.components.Text: void setHintColor(ohos.agp.utils.Color)>
<ohos.data.search.schema.MessageItem: java.lang.String getRecipientName()>
<ohos.sensor.agent.CategoryMotionAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,long,long)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform2ui(int,int,int,int)>
<ohos.light.agent.LightAgent: boolean turnOn(int,ohos.light.bean.LightEffect)>
<ohos.utils.IntArray: void deleteIndex(int)>
<java.util.Arrays: java.util.Spliterator.OfLong spliterator(long[],int,int)>
<java.util.IntSummaryStatistics: int getMin()>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onUndo(ohos.multimodalinput.event.MultimodalEvent)>
<java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int)>
<ohos.javax.xml.stream.Location: int getCharacterOffset()>
<ohos.media.image.ImageReceiver: ohos.media.image.common.Size getImageSize()>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.text.MeasureFormat getInstance(ohos.global.icu.util.ULocale,ohos.global.icu.text.MeasureFormat.FormatWidth,ohos.global.icu.text.NumberFormat)>
<ohos.global.icu.lang.UCharacter: boolean isWhitespace(int)>
<java.util.logging.Logger: void log(java.util.logging.LogRecord)>
<ohos.agp.components.DatePicker: void setWheelModeEnabled(boolean)>
<java.sql.CallableStatement: void setTimestamp(java.lang.String,java.sql.Timestamp)>
<ohos.sensor.listener.ISensorDataCallback: void onCommandCompleted(ohos.sensor.bean.SensorBase)>
<ohos.org.w3c.dom.ls.LSInput: void setByteStream(java.io.InputStream)>
<javax.sql.RowSetListener: void rowSetChanged(javax.sql.RowSetEvent)>
<ohos.global.icu.text.PluralRules: ohos.global.icu.text.PluralRules createRules(java.lang.String)>
<ohos.utils.LightweightMap: boolean containsKey(java.lang.Object)>
<java.security.AlgorithmParameters: java.lang.String toString()>
<ohos.batterymanager.BatteryInfo.BatteryHealthState: ohos.batterymanager.BatteryInfo.BatteryHealthState[] values()>
<ohos.agp.render.render3d.resources.AnimationPlayback: float getWeight()>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>
<java.nio.file.Files: java.nio.file.Path createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<ohos.event.intentagent.IntentAgentHelper: ohos.event.intentagent.IntentAgent getIntentAgent(ohos.app.Context,ohos.event.intentagent.IntentAgentInfo)>
<ohos.global.icu.text.NumberingSystem: ohos.global.icu.text.NumberingSystem getInstance()>
<ohos.accessibility.ability.GesturePathDefine: ohos.accessibility.ability.GesturePathPositionDefine getEndPosition()>
<ohos.batterymanager.BatteryInfo.BatteryLevel: ohos.batterymanager.BatteryInfo.BatteryLevel[] values()>
<javax.tools.Diagnostic: java.lang.String getMessage(java.util.Locale)>
<java.util.Random: java.util.stream.IntStream ints(int,int)>
<javax.crypto.ExemptionMechanism: int genExemptionBlob(byte[],int)>
<java.util.HashSet: java.lang.Object clone()>
<java.sql.Connection: void setClientInfo(java.lang.String,java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: int remainingCapacity()>
<ohos.ai.cv.common.VisionImage: ohos.media.image.PixelMap getPixelMap()>
<ohos.global.configuration.Configuration: void setLocaleProfile(ohos.global.configuration.LocaleProfile)>
<ohos.data.distributed.device.DeviceKvStore: ohos.data.distributed.common.KvStoreResultSet getResultSet(ohos.data.distributed.common.Query)>
<ohos.utils.BasePacMap: boolean getBooleanValue(java.lang.String)>
<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.io.InputStream,java.lang.String)>
<java.util.regex.Matcher: int start()>
<java.nio.charset.IllegalCharsetNameException: java.lang.String getCharsetName()>
<ohos.agp.render.render3d.resources.ResourceManager.ResourceInfo: java.lang.String getName()>
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>
<java.util.Arrays: void sort(double[])>
<java.net.SocketImpl: void close()>
<ohos.media.audio.AudioDeviceDescriptor.DeviceFlag: ohos.media.audio.AudioDeviceDescriptor.DeviceFlag valueOf(int)>
<ohos.event.notification.NotificationSlot: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet add(java.lang.Iterable)>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onPaste(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.bundle.BundleInfo.ReqPermissionDetail: java.lang.String getName()>
<ohos.distributedschedule.interwork.DeviceInfo: ohos.distributedschedule.interwork.DeviceInfo.DeviceState getDeviceState()>
<java.util.concurrent.CancellationException: void <init>()>
<java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<ohos.accessibility.ability.AccessibilityInfo: java.util.Optional gainNextFocus(int)>
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>
<java.util.Comparator: java.util.Comparator nullsFirst(java.util.Comparator)>
<ohos.ai.tts.TtsParams: void setPitch(int)>
<ohos.workscheduler.WorkScheduler: void onWorkStop(ohos.workscheduler.WorkInfo)>
<javax.lang.model.util.SimpleElementVisitor7: void <init>()>
<ohos.aafwk.ability.IAbilityContinuation: boolean onStartContinuation()>
<ohos.sysappcomponents.calendar.support.TableSupport: ohos.utils.net.Uri getSyncUri(java.lang.String,java.lang.String)>
<ohos.aafwk.ability.AbilitySlice: boolean acquireAbilityFormAsync(ohos.aafwk.content.Intent,ohos.aafwk.ability.AbilityForm.OnAcquiredCallback)>
<ohos.aafwk.content.Intent: boolean[] getBooleanArrayParam(java.lang.String)>
<ohos.accessibility.ability.AccessibilityInfo: boolean isFocused()>
<ohos.javax.xml.stream.XMLEventWriter: void setPrefix(java.lang.String,java.lang.String)>
<ohos.aafwk.ability.ProcessErrorInfo: int getCondition()>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean weakCompareAndSet(java.lang.Object,int,int)>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.resources.GpuResourceHandle getSampler()>
<java.lang.reflect.Field: int hashCode()>
<ohos.aafwk.ability.continuation.IContinuationRegisterManager: void register(java.lang.String,ohos.aafwk.ability.continuation.ExtraParams,ohos.aafwk.ability.continuation.IContinuationDeviceCallback,ohos.aafwk.ability.continuation.RequestCallback)>
<ohos.global.icu.util.LocaleData.PaperSize: int getWidth()>
<java.text.AttributedCharacterIterator.Attribute: boolean equals(java.lang.Object)>
<java.time.Instant: java.time.ZonedDateTime atZone(java.time.ZoneId)>
<ohos.data.distributed.common.KvStoreServiceDeathRecipient: void onRemoteDied()>
<java.util.Spliterator.OfInt: void forEachRemaining(java.util.function.Consumer)>
<ohos.agp.components.BaseItemProvider: void notifyDataSetItemRangeInserted(int,int)>
<java.io.PrintStream: java.lang.Appendable append(java.lang.CharSequence,int,int)>
<java.security.cert.Certificate.CertificateRep: java.lang.Object readResolve()>
<java.util.TreeMap: java.util.Map.Entry pollFirstEntry()>
<ohos.ai.cv.text.TextConfiguration.Builder: ohos.ai.cv.text.TextConfiguration.Builder setLanguage(int)>
<java.net.URLConnection: void connect()>
<java.text.FieldPosition: boolean equals(java.lang.Object)>
<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<ohos.media.audio.Timestamp.Timebase: ohos.media.audio.Timestamp.Timebase[] values()>
<java.lang.Character: boolean isISOControl(char)>
<java.util.concurrent.atomic.AtomicReference: void lazySet(java.lang.Object)>
<ohos.data.search.schema.VideoItem: java.lang.String getActor()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notBetween(java.lang.String,long,long)>
<ohos.agp.render.render3d.math.Vector2: java.lang.String toString()>
<ohos.data.search.schema.Schema: java.lang.Object setReserved2(java.lang.String)>
<ohos.account.AccountAbility: ohos.account.AccountAbility getAccountAbility()>
<ohos.bundle.CommonEventInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.render.Canvas: void drawTextOnPath(ohos.agp.render.Paint,java.lang.String,ohos.agp.render.Path,float,float)>
<java.sql.ResultSet: void updateClob(int,java.io.Reader,long)>
<ohos.aafwk.ability.IAbilityContinuation: void onCompleteContinuation(int)>
<java.nio.file.attribute.AclEntryFlag: void <clinit>()>
<java.io.ObjectOutputStream: void writeLong(long)>
<java.time.chrono.MinguoDate: java.time.chrono.Era getEra()>
<java.util.stream.IntStream: java.util.stream.Stream boxed()>
<java.util.Set: boolean contains(java.lang.Object)>
<ohos.data.search.model.IndexData: java.lang.Object get(java.lang.String)>
<ohos.agp.render.Paint: ohos.agp.render.PathEffect getPathEffect()>
<ohos.agp.render.render3d.resources.ResourceHandle: boolean isValid()>
<java.lang.String: java.lang.String valueOf(boolean)>
<java.security.cert.PKIXReason: java.security.cert.PKIXReason valueOf(java.lang.String)>
<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>
<ohos.agp.components.Component: boolean isBoundToWindow()>
<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>
<ohos.utils.PacMap: boolean unmarshalling(ohos.utils.Parcel)>
<java.nio.file.WatchEvent.Kind: java.lang.Class type()>
<ohos.distributedhardware.devicemanager.DeviceManager: ohos.distributedhardware.devicemanager.DeviceInfo getLocalDeviceInfo()>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean readRemoteRssiValue()>
<ohos.utils.Parcel: void reclaim()>
<ohos.global.i18n.text.DateFormatUtil: java.lang.String getTimeFormat_Hm(java.util.Locale)>
<ohos.global.icu.util.Calendar: void set(int,int,int)>
<ohos.light.bean.LightEffect: void setLightBrightness(ohos.light.bean.LightBrightness)>
<ohos.aafwk.ability.AbilitySliceAnimator: ohos.aafwk.ability.AbilitySliceAnimator setRepeatCount(int)>
<ohos.aafwk.ability.fraction.FractionAbility: void onInactive()>
<ohos.data.distributed.common.KvStore: void enableSync(boolean)>
<java.lang.Double: int compareTo(java.lang.Double)>
<java.util.Set: void clear()>
<javax.security.auth.Destroyable: void destroy()>
<ohos.location.Location: void setAltitude(double)>
<ohos.agp.render.render3d.gltf.GltfLoader: int getDefaultResourceImportFlags()>
<java.nio.channels.Pipe.SourceChannel: int validOps()>
<ohos.aafwk.ability.Ability: boolean supportHighPerformanceUI()>
<ohos.agp.render.render3d.resources.ResourceManager: void setMaterialDesc(ohos.agp.render.render3d.resources.ResourceHandle,ohos.agp.render.render3d.resources.MaterialDesc)>
<ohos.aafwk.ability.RunningProcessInfo: void <init>()>
<ohos.bluetooth.ble.GattService: boolean isPrimary()>
<ohos.data.distributed.device.DeviceKvStore: ohos.data.distributed.common.KvStoreResultSet getResultSet(java.lang.String,ohos.data.distributed.common.Query)>
<java.time.OffsetTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>
<ohos.accessibility.ability.GestureResultListener: void onCancelled()>
<java.util.concurrent.DelayQueue: int remainingCapacity()>
<ohos.media.photokit.metadata.AVMetadataHelper: ohos.media.image.PixelMap fetchImagePrimaryPixelMap(ohos.media.photokit.common.PixelMapConfigs)>
<java.util.AbstractCollection: boolean add(java.lang.Object)>
<ohos.ai.tts.TtsListener: void onSpeechStart(java.lang.String)>
<java.net.URI: boolean isOpaque()>
<ohos.agp.components.ProgressBar: ohos.agp.components.element.Element getViceProgressElement()>
<ohos.global.icu.text.SearchIterator: void <init>(java.text.CharacterIterator,ohos.global.icu.text.BreakIterator)>
<ohos.light.agent.LightAgent: void <init>()>
<ohos.media.image.Image: void release()>
<ohos.media.camera.device.CameraInfo: int hashCode()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: java.lang.String getBriefText()>
<ohos.agp.graphics.TextureHolder: void freeTextureImage()>
<ohos.global.icu.lang.UCharacter: java.lang.String foldCase(java.lang.String,int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThan(java.lang.String,java.util.Date)>
<java.lang.NegativeArraySizeException: void <init>()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<java.io.CharArrayReader: void <init>(char[])>
<ohos.agp.components.Component.DrawTask: void onDraw(ohos.agp.components.Component,ohos.agp.render.Canvas)>
<ohos.aafwk.ability.Ability: ohos.aafwk.ability.Lifecycle getLifecycle()>
<ohos.data.search.model.Recommendation: java.lang.String getField()>
<java.util.LinkedHashMap: java.util.Set keySet()>
<ohos.javax.xml.stream.XMLStreamWriter: void writeEmptyElement(java.lang.String,java.lang.String)>
<java.sql.ResultSet: void updateNString(java.lang.String,java.lang.String)>
<ohos.agp.render.render3d.Engine: void setRenderMode(ohos.agp.render.render3d.Engine.RenderMode)>
<ohos.media.image.PixelMap: boolean isEditable()>
<java.nio.ByteBuffer: char getChar(int)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean isHeldExclusively()>
<ohos.media.photokit.metadata.AVMetadataHelper: boolean setSource(java.lang.String,java.util.Map)>
<java.security.cert.CertificateRevokedException: java.security.cert.CRLReason getRevocationReason()>
<java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<java.math.MathContext: boolean equals(java.lang.Object)>
<ohos.usb.USBEndpoint: int getAddress()>
<ohos.utils.Parcel: void flushBuffer()>
<ohos.agp.utils.Color: int hashCode()>
<java.lang.reflect.Array: int getInt(java.lang.Object,int)>
<java.util.concurrent.atomic.LongAccumulator: long get()>
<ohos.sensor.bean.CategoryMotion: void <init>(int,java.lang.String,java.lang.String,int,float,float,int,int,long,long)>
<java.lang.Math: double random()>
<java.util.concurrent.CountedCompleter: java.lang.Object getRawResult()>
<javax.lang.model.util.AbstractAnnotationValueVisitor6: void <init>()>
<java.security.cert.X509CRLSelector: java.math.BigInteger getMinCRL()>
<ohos.agp.utils.Line: boolean equals(java.lang.Object)>
<ohos.agp.window.dialog.BaseDialog: ohos.agp.window.dialog.BaseDialog setOffset(int,int)>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object[] toArray()>
<ohos.agp.render.Paint.StrokeCap: int value()>
<java.util.Collections: java.util.Comparator reverseOrder()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void invokeAbilityOnForeground(ohos.aafwk.ability.Ability)>
<java.util.concurrent.ThreadLocalRandom: void setSeed(long)>
<ohos.agp.components.MagicLayout: int getFoldAlignment()>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat subtraction(float,float)>
<java.time.format.DecimalStyle: char getNegativeSign()>
<java.util.Scanner: boolean nextBoolean()>
<java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock: java.lang.String toString()>
<java.io.PrintStream: java.lang.Appendable append(char)>
<java.nio.channels.ServerSocketChannel: java.nio.channels.SocketChannel accept()>
<java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>
<ohos.agp.render.Canvas: void drawVertices(ohos.agp.render.Canvas.VertexMode,ohos.agp.render.Vertices,ohos.agp.render.Paint)>
<java.io.PrintStream: void println(long)>
<java.text.DecimalFormat: java.lang.String getNegativeSuffix()>
<ohos.ai.cv.docrefine.DocRefineConfiguration.Builder: ohos.ai.cv.docrefine.DocRefineConfiguration build()>
<ohos.aafwk.content.Intent: int hashCode()>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster firstDayOfYear()>
<ohos.agp.colors.CmykColor: float getYellow()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent formatUri(ohos.utils.net.Uri)>
<java.util.IntSummaryStatistics: void combine(java.util.IntSummaryStatistics)>
<java.util.logging.Level: boolean equals(java.lang.Object)>
<java.util.concurrent.Executors: java.util.concurrent.Callable privilegedCallable(java.util.concurrent.Callable)>
<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>
<java.util.zip.CheckedInputStream: int read()>
<java.net.InetAddress: boolean equals(java.lang.Object)>
<java.util.function.LongFunction: java.lang.Object apply(long)>
<java.sql.Statement: void setQueryTimeout(int)>
<ohos.global.icu.math.BigDecimal: void <init>(long)>
<ohos.global.icu.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.global.icu.text.DecimalFormat: void setDecimalFormatSymbols(ohos.global.icu.text.DecimalFormatSymbols)>
<javax.sql.RowSet: void setInt(java.lang.String,int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates or()>
<ohos.global.icu.util.TimeZone: java.lang.String getTZDataVersion()>
<ohos.javax.xml.namespace.QName: boolean equals(java.lang.Object)>
<java.security.cert.X509CertSelector: java.lang.String toString()>
<ohos.media.audio.AudioCapturerInfo.AudioInputSource: int getValue()>
<ohos.global.icu.util.HebrewCalendar: void <init>(java.util.Locale)>
<ohos.media.extractor.Extractor: int getTotalStreams()>
<ohos.agp.render.render3d.components.SceneComponent: void setEnvironmentSpecularColor(ohos.agp.render.render3d.math.Vector3)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform3ui(int,int,int,int,int)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>
<java.util.Comparator: java.util.Comparator thenComparing(java.util.function.Function,java.util.Comparator)>
<ohos.event.notification.NotificationHelper: void removeNotificationSlotGroup(java.lang.String)>
<ohos.media.camera.device.CameraStateCallback: void onCreateFailed(java.lang.String,int)>
<java.nio.channels.FileChannel: void <init>()>
<java.sql.DatabaseMetaData: java.sql.Connection getConnection()>
<java.math.BigDecimal: boolean equals(java.lang.Object)>
<java.nio.file.attribute.AclEntry.Builder: java.nio.file.attribute.AclEntry.Builder setPermissions(java.nio.file.attribute.AclEntryPermission[])>
<ohos.media.audio.AudioManager.AudioRingMode: ohos.media.audio.AudioManager.AudioRingMode valueOf(java.lang.String)>
<ohos.data.async.JobParams: java.lang.Object getCookie()>
<ohos.global.icu.lang.UCharacter: java.lang.String toTitleCase(java.util.Locale,java.lang.String,ohos.global.icu.text.BreakIterator)>
<java.math.BigDecimal: java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal)>
<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance(java.util.Locale)>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion getConjugate()>
<java.sql.SQLTransientException: void <init>()>
<ohos.event.notification.ReminderRequestAlarm: boolean unmarshalling(ohos.utils.Parcel)>
<java.lang.invoke.CallSite: java.lang.invoke.MethodHandle dynamicInvoker()>
<java.util.logging.LogRecord: java.lang.Throwable getThrown()>
<java.lang.StringBuilder: java.lang.String substring(int)>
<ohos.agp.window.service.Window: boolean isMovable()>
<ohos.global.icu.text.UCharacterIterator: int getText(char[])>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()>
<ohos.nfc.cardemulation.CardEmulation: ohos.nfc.cardemulation.CardEmulation getInstance(ohos.nfc.NfcController)>
<ohos.media.photokit.support.FetchResult: void close()>
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<ohos.global.icu.text.AlphabeticIndex.Bucket: java.lang.String getLabel()>
<java.lang.reflect.Executable: boolean isSynthetic()>
<java.lang.Package: boolean isCompatibleWith(java.lang.String)>
<java.sql.Time: int getDay()>
<java.util.stream.Stream: java.util.stream.Stream.Builder builder()>
<ohos.aafwk.ability.DataAbilityHelper: ohos.utils.PacMap call(ohos.utils.net.Uri,java.lang.String,java.lang.String,ohos.utils.PacMap)>
<java.lang.Class: boolean isSynthetic()>
<ohos.agp.components.DatePicker: void setDayFixed(boolean)>
<ohos.agp.render.opengl.GLES30: void glGetVertexAttribIuiv(int,int,int[])>
<java.util.ArrayList: java.lang.Object[] toArray()>
<ohos.agp.components.IndexBar: int getMaxCount()>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.AlphabeticIndex setUnderflowLabel(java.lang.String)>
<ohos.data.resultset.AbsResultSet: boolean isEnded()>
<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>
<java.util.concurrent.ConcurrentLinkedDeque: boolean offer(java.lang.Object)>
<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
<java.sql.DatabaseMetaData: boolean supportsMultipleOpenResults()>
<ohos.media.audio.AudioStreamInfo.Builder: void <init>()>
<ohos.media.audio.AudioManager: boolean disconnectBluetoothSco()>
<ohos.utils.Parcel: ohos.utils.Sequenceable createSequenceable(java.lang.ClassLoader)>
<ohos.utils.zson.ZSONArray: int indexOf(java.lang.Object)>
<java.sql.CallableStatement: byte[] getBytes(java.lang.String)>
<java.nio.charset.Charset: java.util.Set aliases()>
<ohos.wifi.WifiSecurity: void <init>()>
<ohos.global.resource.solidxml.TypedAttribute: int getResId()>
<ohos.javax.xml.stream.XMLEventWriter: void add(ohos.javax.xml.stream.events.XMLEvent)>
<java.nio.file.FileSystem: java.util.Set supportedFileAttributeViews()>
<java.lang.ClassLoader: void <init>()>
<ohos.aafwk.ability.DataAbilityResult: java.lang.Integer getCount()>
<ohos.agp.transition.TransitionMove: void <init>()>
<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
<java.text.DecimalFormatSymbols: java.util.Currency getCurrency()>
<ohos.sysappcomponents.calendar.entity.Events: void setWholeDay(boolean)>
<ohos.agp.utils.Matrix: boolean equalsMatrixValue(ohos.agp.utils.Matrix)>
<java.net.ServerSocket: boolean isBound()>
<ohos.agp.utils.Circle: void setRadius(float)>
<ohos.agp.components.webengine.ResourceResponse: java.lang.String getCharset()>
<ohos.agp.components.webengine.ResourceResponse: void setHeaders(java.util.Map)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates between(java.lang.String,java.util.Calendar,java.util.Calendar)>
<ohos.agp.components.ListContainer: void removeComponentAt(int)>
<java.util.ResourceBundle: void setParent(java.util.ResourceBundle)>
<ohos.nfc.NfcController.ReaderModeCallbackStub: void <init>(ohos.nfc.NfcController,ohos.nfc.NfcController.ReaderModeCallback)>
<java.lang.Class: java.lang.Object cast(java.lang.Object)>
<java.time.Year: int getValue()>
<ohos.bundle.BundleInfo.ReqPermissionDetail: java.lang.String getReason()>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getCurrencySymbol()>
<ohos.aafwk.ability.ProcessErrorInfo: java.lang.String getShortMsg()>
<ohos.agp.render.render3d.util.MeshBuilder: void allocate()>
<ohos.utils.Dimension: boolean equals(java.lang.Object)>
<java.sql.ResultSetMetaData: int getPrecision(int)>
<ohos.accessibility.ability.DisplayResizeController: boolean setCenter(float,float,boolean)>
<java.util.stream.Collectors: java.util.stream.Collector partitioningBy(java.util.function.Predicate)>
<java.security.spec.ECFieldF2m: int hashCode()>
<ohos.data.resultset.ResultSet: boolean goToPreviousRow()>
<ohos.location.GeoAddress: void setLongitude(double)>
<ohos.media.audio.AudioManager: void registerAudioRendererCallback(ohos.media.audio.AudioRendererCallback)>
<java.util.concurrent.FutureTask: void set(java.lang.Object)>
<ohos.aafwk.ability.Ability: void onBackPressed()>
<java.security.spec.DSAParameterSpec: java.math.BigInteger getP()>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setStrikethrough(boolean)>
<java.nio.file.Files: java.util.stream.Stream lines(java.nio.file.Path,java.nio.charset.Charset)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setNormalScale(float)>
<java.time.LocalDateTime: int getHour()>
<java.net.MulticastSocket: void leaveGroup(java.net.SocketAddress,java.net.NetworkInterface)>
<ohos.global.icu.lang.UCharacter: java.lang.String toTitleCase(java.util.Locale,java.lang.String,ohos.global.icu.text.BreakIterator,int)>
<ohos.agp.render.render3d.resources.MaterialDesc: float getRoughnessFactor()>
<java.util.concurrent.BlockingDeque: boolean add(java.lang.Object)>
<ohos.data.resultset.ResultSet: int getColumnIndexForName(java.lang.String)>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndSet(java.lang.Object,long)>
<ohos.media.audio.AudioCapturerInfo.Builder: ohos.media.audio.AudioCapturerInfo.Builder bufferSizeInBytes(long)>
<java.util.concurrent.DelayQueue: java.lang.Object take()>
<ohos.agp.animation.AnimatorProperty: void setCurve(ohos.agp.animation.Animator.TimelineCurve)>
<java.security.IdentityScope: void <init>(java.lang.String)>
<java.time.Duration: java.time.Duration minusHours(long)>
<ohos.global.icu.text.Normalizer: int compare(int,java.lang.String,int)>
<ohos.global.icu.lang.UCharacter: int codePointBefore(char[],int,int)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
<java.lang.Math: double toRadians(double)>
<ohos.agp.components.IndexBar: int getMinCount()>
<java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock: java.util.concurrent.locks.Condition newCondition()>
<ohos.agp.render.opengl.GLES31: void glProgramUniform2iv(int,int,int,int[])>
<java.io.RandomAccessFile: java.lang.String readLine()>
<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>
<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>
<ohos.agp.utils.Point: int getPointXToInt()>
<ohos.agp.render.opengl.GLES1X: void glVertexPointer(int,int,int,java.nio.Buffer)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getInstanceForSkeleton(ohos.global.icu.util.Calendar,java.lang.String,ohos.global.icu.util.ULocale)>
<java.text.AttributedCharacterIterator.Attribute: java.lang.String toString()>
<ohos.agp.components.element.FrameAnimationElement: void <init>(ohos.app.Context,int)>
<ohos.agp.components.SearchBar: boolean isSearchButtonEnable()>
<java.security.KeyStore.Builder: java.security.KeyStore getKeyStore()>
<ohos.media.photokit.common.PixelMapConfigs: ohos.media.image.common.PixelFormat getActualConfig()>
<java.util.zip.ZipOutputStream: void setMethod(int)>
<java.util.concurrent.CopyOnWriteArraySet: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.regex.MatchResult: int end(int)>
<ohos.agp.animation.Animator: void setDelayInternal(long)>
<ohos.agp.components.ScrollView: void fluentScrollTo(int,int)>
<java.security.KeyFactorySpi: void <init>()>
<ohos.bluetooth.ble.BlePeripheralDevice: java.util.Optional getDeviceName()>
<java.time.YearMonth: int compareTo(java.lang.Object)>
<java.util.prefs.Preferences: java.util.prefs.Preferences userRoot()>
<java.util.function.Predicate: java.util.function.Predicate isEqual(java.lang.Object)>
<ohos.usb.USBDevice: java.lang.String getProductName()>
<java.io.PushbackReader: void <init>(java.io.Reader)>
<ohos.media.image.common.AllocatorType: ohos.media.image.common.AllocatorType[] values()>
<java.time.ZoneOffset: int compareTo(java.time.ZoneOffset)>
<ohos.agp.render.render3d.components.MorphComponent: void setMorphTargets(long)>
<ohos.system.DeviceInfo: java.lang.String getName()>
<ohos.agp.render.Canvas: void drawOval(ohos.agp.utils.RectFloat,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<ohos.event.intentagent.TriggerInfo: void <init>(ohos.event.intentagent.TriggerInfo)>
<ohos.media.image.common.MemoryUsagePreference: void <clinit>()>
<java.util.stream.DoubleStream: long count()>
<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.render.opengl.GLES1X: void glPopMatrix()>
<java.util.ListIterator: java.lang.Object next()>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.text.DateIntervalFormat getInstance(java.lang.String,java.util.Locale,ohos.global.icu.text.DateIntervalInfo)>
<ohos.bundleactive.BundleActiveStates: boolean queryNextState(ohos.bundleactive.BundleActiveStates.State)>
<ohos.workscheduler.WorkInfo: java.lang.String getBundleName()>
<ohos.utils.LruBuffer: boolean contains(java.lang.Object)>
<java.nio.file.FileVisitor: java.nio.file.FileVisitResult visitFileFailed(java.lang.Object,java.io.IOException)>
<ohos.agp.database.Publisher: void unregisterSubscriber(java.lang.Object)>
<java.net.JarURLConnection: java.security.cert.Certificate[] getCertificates()>
<java.security.cert.X509CertSelector: java.util.Collection getSubjectAlternativeNames()>
<ohos.aafwk.ability.continuation.IContinuationRegisterManager: void showDeviceList(int,ohos.aafwk.ability.continuation.ExtraParams,ohos.aafwk.ability.continuation.RequestCallback)>
<java.util.jar.Manifest: void <init>()>
<ohos.aafwk.ability.AbilitySlice: boolean onHotkeyTriggered(int,ohos.multimodalinput.event.KeyEvent)>
<ohos.media.audio.AudioRenderer: boolean release()>
<java.io.CharArrayWriter: void reset()>
<ohos.global.configuration.LocaleProfile: int hashCode()>
<ohos.powermanager.PowerManager.PowerState: ohos.powermanager.PowerManager.PowerState[] values()>
<java.time.Period: java.time.Period plus(java.time.temporal.TemporalAmount)>
<java.util.function.ToDoubleBiFunction: double applyAsDouble(java.lang.Object,java.lang.Object)>
<java.time.YearMonth: int compareTo(java.time.YearMonth)>
<ohos.utils.geo.Rect: void translate(int,int)>
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>
<java.util.stream.LongStream: java.util.OptionalLong min()>
<ohos.rpc.RemoteProxy: ohos.rpc.IRemoteBroker queryLocalInterface(java.lang.String)>
<java.nio.file.FileSystem: java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()>
<ohos.sysappcomponents.contact.entity.PhoneNumber: java.lang.String getLabelName()>
<ohos.aafwk.ability.Ability: void disconnectAbility(ohos.aafwk.ability.IAbilityConnection)>
<java.util.logging.Logger: void setUseParentHandlers(boolean)>
<java.io.InvalidClassException: void <init>(java.lang.String,java.lang.String)>
<java.io.CharArrayWriter: void flush()>
<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>
<ohos.nfc.oma.Session: byte[] getATR()>
<ohos.media.camera.device.CameraInfo: java.lang.String getLogicalId()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Map.Entry floorEntry(java.lang.Object)>
<javax.sql.StatementEvent: void <init>(javax.sql.PooledConnection,java.sql.PreparedStatement,java.sql.SQLException)>
<ohos.telephony.RadioStateObserver: void <init>(int)>
<java.util.AbstractQueue: boolean addAll(java.util.Collection)>
<java.io.RandomAccessFile: void setLength(long)>
<ohos.utils.Parcel: boolean writeString(java.lang.String)>
<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>
<ohos.event.notification.NotificationUserInput: int getEditType()>
<ohos.account.DistributedInfo: void <init>()>
<ohos.global.icu.text.Normalizer: int compare(int,int,int)>
<ohos.global.icu.util.EthiopicCalendar: void <init>(int,int,int)>
<ohos.eventhandler.EventHandler: void <init>(ohos.eventhandler.EventRunner)>
<java.net.Inet4Address: boolean isLinkLocalAddress()>
<ohos.media.common.Source: int getFileType()>
<ohos.global.resource.solidxml.Theme: boolean getBooleanValue(java.lang.String,boolean)>
<java.lang.NoSuchFieldError: void <init>(java.lang.String)>
<java.sql.DatabaseMetaData: java.lang.String getExtraNameCharacters()>
<ohos.rpc.MessageParcel: void readException()>
<java.lang.reflect.Array: void setByte(java.lang.Object,int,byte)>
<ohos.media.sessioncore.AVSession: ohos.media.sessioncore.AVController getAVController()>
<java.lang.StrictMath: double cos(double)>
<ohos.agp.render.opengl.GLES1X: void glMatrixMode(int)>
<java.lang.Process: boolean isAlive()>
<java.lang.Character: int codePointAt(char[],int,int)>
<ohos.data.orm.OrmContext: void beginTransaction()>
<ohos.media.camera.device.CameraStateCallback: void <init>()>
<java.util.Stack: java.lang.Object push(java.lang.Object)>
<java.net.NetworkInterface: java.util.Enumeration getSubInterfaces()>
<java.util.Base64: java.util.Base64.Decoder getUrlDecoder()>
<ohos.agp.render.Region: boolean quickContains(ohos.agp.utils.Rect)>
<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>
<java.util.DoubleSummaryStatistics: void accept(double)>
<java.text.ChoiceFormat: double previousDouble(double)>
<java.sql.DatabaseMetaData: boolean deletesAreDetected(int)>
<ohos.utils.Parcel: long readLong()>
<ohos.javax.xml.stream.XMLStreamException: ohos.javax.xml.stream.Location getLocation()>
<ohos.aafwk.ability.ProviderFormInfo: boolean isJsForm()>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock writeLock()>
<ohos.media.recorder.RecorderProfile: boolean isProfile(int,int)>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>
<ohos.agp.components.AttrHelper: int convertValueToInt(java.lang.String,int)>
<ohos.agp.utils.Rect: void recordParcel(ohos.utils.Parcel)>
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getExecuteExistingDelayedTasksAfterShutdownPolicy()>
<ohos.media.tubecore.AVTubeManager.TubeObserver: void onTubeExitWorkingState(ohos.media.tubecore.AVTubeManager,ohos.media.tubecore.AVTube,int)>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean disconnect()>
<java.time.temporal.ValueRange: java.time.temporal.ValueRange of(long,long,long,long)>
<ohos.agp.render.render3d.resources.MaterialDesc: void <init>()>
<ohos.data.distributed.user.SingleKvStore: void sync(java.util.List,ohos.data.distributed.common.SyncMode)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getInstance(java.util.Locale)>
<ohos.agp.components.ProgressBar: boolean isInfiniteMode()>
<ohos.utils.LruBuffer: int getCreateCount()>
<ohos.data.search.model.ChangedIndexContent: java.util.List getDeletedItems()>
<ohos.app.AbilityContext: java.lang.String getString(int)>
<ohos.data.search.model.IndexForm: void setSearch(boolean)>
<ohos.sysappcomponents.calendar.entity.Events: void setEventStartTime(long)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream map(java.util.function.DoubleUnaryOperator)>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitVariableAsEnumConstant(javax.lang.model.element.VariableElement,java.lang.Object)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneFormat setGMTOffsetDigits(java.lang.String)>
<ohos.agp.render.Paint.ShaderType: ohos.agp.render.Paint.ShaderType[] values()>
<javax.crypto.Mac: java.lang.String getAlgorithm()>
<ohos.agp.components.Slider: void setDecreaseButtonClickedListener(ohos.agp.components.Component.ClickedListener)>
<ohos.data.orm.OrmContext: java.lang.Long count(ohos.data.orm.OrmPredicates)>
<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])>
<java.lang.ThreadGroup: int enumerate(java.lang.Thread[])>
<javax.sql.CommonDataSource: int getLoginTimeout()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>
<ohos.aafwk.ability.AbilitySlice: void setIsAmbientMode(boolean)>
<ohos.wifi.WifiDevice: boolean removeUntrustedConfig(ohos.wifi.WifiDeviceConfig)>
<ohos.agp.animation.AnimatorValue: void setDelay(long)>
<ohos.nfc.NfcController: ohos.nfc.NfcController getInstance(ohos.app.Context)>
<ohos.media.audio.SoundPlayer: boolean release()>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster lastDayOfYear()>
<ohos.aafwk.ability.Ability.LayoutParamsHelper: ohos.aafwk.ability.Ability.LayoutParamsHelper setFlags(int,int)>
<ohos.data.resultset.AbsResultSet: boolean goToNextRow()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query notEqualTo(java.lang.String,double)>
<java.lang.reflect.Array: short getShort(java.lang.Object,int)>
<ohos.agp.components.Component: void scrollTo(int,int)>
<ohos.agp.components.ListContainer: void setItemClickedListener(ohos.agp.components.ListContainer.ItemClickedListener)>
<java.io.DataInputStream: void readFully(byte[])>
<java.util.Spliterator.OfPrimitive: boolean tryAdvance(java.lang.Object)>
<ohos.aafwk.ability.LifecycleStateObserver: void onStateChanged(ohos.aafwk.ability.Lifecycle.Event,ohos.aafwk.content.Intent)>
<java.time.OffsetTime: java.time.OffsetTime minus(java.time.temporal.TemporalAmount)>
<java.security.AlgorithmParametersSpi: byte[] engineGetEncoded(java.lang.String)>
<java.util.Arrays: void sort(java.lang.Object[],int,int)>
<java.lang.Boolean: boolean logicalOr(boolean,boolean)>
<ohos.global.icu.text.CollationKey: int compareTo(ohos.global.icu.text.CollationKey)>
<java.util.concurrent.atomic.AtomicInteger: long longValue()>
<ohos.data.resultset.AbsSharedResultSet: boolean hasBlock()>
<ohos.agp.components.ScrollHelper: int getCurrValue(int)>
<ohos.data.search.schema.VideoItem: java.lang.Integer getSize()>
<javax.net.ssl.SSLSession: java.lang.Object getValue(java.lang.String)>
<java.util.AbstractList: java.util.List subList(int,int)>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitTypeAsClass(javax.lang.model.element.TypeElement,java.lang.Object)>
<java.util.concurrent.ForkJoinPool: void shutdown()>
<java.util.OptionalLong: void ifPresent(java.util.function.LongConsumer)>
<java.util.concurrent.locks.StampedLock: boolean tryUnlockWrite()>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.DoubleStream doubles(double,double)>
<java.util.concurrent.atomic.AtomicMarkableReference: boolean weakCompareAndSet(java.lang.Object,java.lang.Object,boolean,boolean)>
<ohos.global.icu.text.DecimalFormat: void setMinimumIntegerDigits(int)>
<ohos.app.AbilityContext: void init()>
<ohos.aafwk.ability.MemoryInfo: int getNativeSharedDirty()>
<ohos.agp.components.element.Element: void setBounds(int,int,int,int)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform3i(int,int,int,int,int)>
<ohos.system.version.SystemVersion: int getBuildVersion()>
<ohos.accessibility.ability.AccessibilityInfo: void setFocused(boolean)>
<ohos.bundle.IBundleManager: int checkPermission(java.lang.String,java.lang.String)>
<java.lang.Character: int compare(char,char)>
<ohos.data.distributed.device.DeviceKvStore: int getResultSize(java.lang.String,ohos.data.distributed.common.Query)>
<ohos.data.resultset.AbsResultSet: java.lang.String[] getAllColumnNames()>
<java.lang.Thread: int countStackFrames()>
<ohos.global.icu.lang.UCharacter: java.lang.String toTitleCase(java.lang.String,ohos.global.icu.text.BreakIterator)>
<java.io.WriteAbortedException: void <init>(java.lang.String,java.lang.Exception)>
<ohos.agp.components.element.ElementContainer.ElementState: int addChildElement(ohos.agp.components.element.Element)>
<java.net.URL: java.lang.String getPath()>
<java.text.NumberFormat: void setCurrency(java.util.Currency)>
<java.util.concurrent.ArrayBlockingQueue: void clear()>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 subtract(ohos.agp.render.render3d.math.Vector4,float)>
<ohos.bundle.IBundleManager: boolean isSafeMode()>
<java.util.concurrent.ForkJoinTask: void helpQuiesce()>
<ohos.agp.components.Text: void removeTextObserver(ohos.agp.components.Text.TextObserver)>
<ohos.media.audio.AudioDeviceChangeObserver: void onAudioDeviceChange(int,ohos.media.audio.AudioDeviceDescriptor[])>
<ohos.utils.zson.ZSONWriter: void writeBoolean(boolean)>
<ohos.wifi.p2p.WifiP2pGroup: java.lang.String getOwnerIpAddress()>
<java.util.concurrent.CancellationException: void <init>(java.lang.String)>
<ohos.agp.components.IndexBar: float getIndexRadius()>
<ohos.utils.RationalNumber: int getCommonDivisor(int,int)>
<ohos.sysappcomponents.settings.AppSettings: boolean canShowFloating(ohos.app.Context)>
<ohos.global.icu.text.ListFormatter: ohos.global.icu.text.ListFormatter getInstance(java.util.Locale)>
<ohos.app.ProcessInfo: int getPid()>
<java.lang.ref.ReferenceQueue: void <init>()>
<ohos.telephony.TelephoneNumberUtils: boolean isVoiceMailNumber(java.lang.String,int)>
<ohos.global.icu.util.LocaleData: ohos.global.icu.util.LocaleData.PaperSize getPaperSize(ohos.global.icu.util.ULocale)>
<ohos.ace.ability.AceAbility: void <init>()>
<ohos.location.GeoAddress: java.lang.String getCountryCode()>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitType(javax.lang.model.type.TypeMirror,java.lang.Object)>
<ohos.global.icu.text.RuleBasedCollator: int[] getReorderCodes()>
<ohos.media.player.Player.DeviceInfo: void <init>(java.lang.String,int)>
<ohos.utils.zson.ZSONObject: java.math.BigDecimal getBigDecimal(java.lang.String)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: void <init>()>
<ohos.data.rdb.RdbUtils.OperationType: java.lang.String getValue()>
<java.text.FieldPosition: int getField()>
<java.util.stream.StreamSupport: java.util.stream.LongStream longStream(java.util.Spliterator.OfLong,boolean)>
<ohos.global.icu.util.TimeZone: java.lang.Object clone()>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandleInfo revealDirect(java.lang.invoke.MethodHandle)>
<ohos.agp.components.Text: boolean isMultipleLine()>
<java.security.Key: java.lang.String getFormat()>
<java.time.Instant: java.time.Instant plusNanos(long)>
<java.time.OffsetTime: java.lang.String format(java.time.format.DateTimeFormatter)>
<ohos.event.notification.NotificationSlotGroup: void setDescription(java.lang.String)>
<java.util.TreeSet: java.lang.Object lower(java.lang.Object)>
<ohos.global.icu.text.AlphabeticIndex.Bucket: int size()>
<ohos.utils.PersistablePacMap: boolean isValidValueType(java.lang.Object)>
<java.io.File: boolean setExecutable(boolean)>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int)>
<java.lang.SecurityManager: boolean inClassLoader()>
<ohos.media.player.Player: boolean pause()>
<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.util.function.Supplier)>
<java.io.IOError: void <init>(java.lang.Throwable)>
<ohos.agp.render.opengl.GLESExt: void <init>()>
<ohos.agp.render.opengl.EGL: boolean eglSwapBuffers(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLSurface)>
<java.security.PermissionCollection: void add(java.security.Permission)>
<ohos.accessibility.ability.GesturePathDefine: int getMaxStrokeDuration()>
<ohos.bundle.BundleInfo: void <init>()>
<ohos.event.notification.NotificationSortingMap: void <init>()>
<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>
<java.io.RandomAccessFile: void write(byte[],int,int)>
<ohos.event.notification.NotificationSlot: void <init>(java.lang.String,java.lang.String,int)>
<java.time.Instant: java.time.Instant truncatedTo(java.time.temporal.TemporalUnit)>
<ohos.system.DeviceInfo: java.lang.String getDeviceType()>
<ohos.global.icu.util.MeasureUnit: boolean equals(java.lang.Object)>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>
<ohos.aafwk.content.Intent: java.lang.String getScheme()>
<java.security.AlgorithmParameters: byte[] getEncoded()>
<javax.crypto.Cipher: byte[] getIV()>
<ohos.utils.Ashmem: void finalize()>
<javax.sql.RowSet: void setRowId(int,java.sql.RowId)>
<ohos.global.icu.text.UnicodeSet: void <init>(java.lang.String,boolean)>
<ohos.agp.render.Canvas: void <init>(long)>
<java.util.TreeSet: java.lang.Object floor(java.lang.Object)>
<ohos.agp.text.SimpleTextLayout: void <init>(java.lang.String,ohos.agp.render.Paint,ohos.agp.utils.Rect,int,boolean)>
<ohos.agp.components.Image.ScaleMode: void <clinit>()>
<java.security.cert.CRL: void <init>(java.lang.String)>
<java.util.concurrent.locks.StampedLock: void unlockWrite(long)>
<ohos.media.audio.AudioWaver: void <init>(int,java.lang.String)>
<java.sql.DatabaseMetaData: int getMaxStatementLength()>
<java.util.concurrent.Semaphore: void <init>(int)>
<java.time.LocalDate: java.time.chrono.Era getEra()>
<ohos.agp.components.Component: void setLeft(int)>
<ohos.utils.LightweightMap: java.util.Set keySet()>
<ohos.security.fileprotect.ISfpPolicyManager: int setLabel(ohos.app.Context,java.lang.String,java.lang.String,java.lang.String,int)>
<ohos.global.icu.text.PluralRules: java.util.Collection getSamples(java.lang.String)>
<java.sql.Connection: void setTypeMap(java.util.Map)>
<java.util.BitSet: boolean get(int)>
<java.io.SequenceInputStream: void <init>(java.util.Enumeration)>
<java.nio.CharBuffer: java.nio.ByteOrder order()>
<java.math.BigDecimal: java.math.BigInteger toBigInteger()>
<ohos.multimodalinput.event.SpeechEvent: int getInputDeviceId()>
<ohos.agp.components.TableLayout.CellSpan: int size()>
<java.util.concurrent.ThreadPoolExecutor.AbortPolicy: void <init>()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int tryAcquireShared(int)>
<java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>
<ohos.sensor.bean.SensorBase: java.lang.String getVendor()>
<ohos.event.notification.NotificationConstant.DisturbMode: ohos.event.notification.NotificationConstant.DisturbMode[] values()>
<java.util.Arrays: java.util.Spliterator.OfInt spliterator(int[],int,int)>
<java.net.MulticastSocket: void <init>(java.net.SocketAddress)>
<javax.crypto.ExemptionMechanism: void init(java.security.Key)>
<ohos.ace.ability.LocalParticleAbility.Callback: void reply(java.lang.Object)>
<java.net.ResponseCache: java.net.ResponseCache getDefault()>
<java.time.chrono.MinguoDate: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.nio.LongBuffer: java.nio.LongBuffer get(long[],int,int)>
<java.util.TimeZone: void setRawOffset(int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notIn(java.lang.String,int[])>
<ohos.bundle.FormInfo: boolean getFormVisibleNotify()>
<java.net.Socket: java.net.InetAddress getInetAddress()>
<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>
<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>
<ohos.global.icu.text.DateIntervalInfo: ohos.global.icu.text.DateIntervalInfo.PatternInfo getIntervalPattern(java.lang.String,int)>
<ohos.app.dispatcher.TaskDispatcher: void syncDispatch(java.lang.Runnable)>
<ohos.sysappcomponents.contact.entity.Relation: boolean equals(java.lang.Object)>
<ohos.global.icu.text.CaseMap.Fold: java.lang.String apply(java.lang.CharSequence)>
<java.util.jar.JarInputStream: java.util.zip.ZipEntry createZipEntry(java.lang.String)>
<ohos.data.resultset.TableResultSet: java.lang.String[] getAllColumnNames()>
<ohos.global.icu.text.NumberFormat: java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: void setVertexCount(int)>
<java.sql.CallableStatement: void setTimestamp(java.lang.String,java.sql.Timestamp,java.util.Calendar)>
<java.time.MonthDay: int compareTo(java.lang.Object)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent createSelectIntent(ohos.aafwk.content.Intent,java.lang.CharSequence)>
<ohos.biometrics.authentication.BiometricAuthentication.AuthType: ohos.biometrics.authentication.BiometricAuthentication.AuthType valueOf(java.lang.String)>
<ohos.data.distributed.common.KvStore: void putBoolean(java.lang.String,boolean)>
<ohos.utils.Parcel: boolean writeStringArray(java.lang.String[])>
<ohos.global.icu.text.UnicodeSet: void <init>(java.lang.String,int)>
<java.util.concurrent.atomic.AtomicBoolean: boolean weakCompareAndSet(boolean,boolean)>
<java.util.logging.LogRecord: java.lang.String getResourceBundleName()>
<ohos.utils.FloatDimension: boolean equals(java.lang.Object)>
<ohos.aafwk.ability.DataAbilityHelper: void unregisterObserver(ohos.utils.net.Uri,ohos.aafwk.ability.IDataAbilityObserver)>
<java.nio.channels.InterruptibleChannel: void close()>
<java.security.cert.X509Extension: boolean hasUnsupportedCriticalExtension()>
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture handle(java.util.function.BiFunction)>
<ohos.agp.components.TabList: int getSelectedTabIndicatorColor()>
<ohos.agp.components.Clock: void set24HourModeEnabled(boolean)>
<java.io.OutputStream: void <init>()>
<ohos.accessibility.ability.AccessibleOperation: boolean equals(java.lang.Object)>
<ohos.location.SwitchCallback: void onSwitchChange(int)>
<ohos.agp.components.ComponentContainer.LayoutConfig: ohos.agp.components.Component.LayoutDirection getLayoutDirection()>
<ohos.agp.components.PageSliderIndicator: void addOnSelectionChangedListener(ohos.agp.components.PageSlider.PageChangedListener)>
<java.sql.SQLOutput: void writeBoolean(boolean)>
<java.util.zip.DeflaterInputStream: boolean markSupported()>
<ohos.nfc.tag.TagInfo: boolean marshalling(ohos.utils.Parcel)>
<java.net.HttpCookie: java.lang.String getPath()>
<java.util.Calendar.Builder: java.util.Calendar.Builder setTimeOfDay(int,int,int,int)>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getYearNames(int,int)>
<ohos.batterymanager.BatteryInfo.BatteryPluggedType: ohos.batterymanager.BatteryInfo.BatteryPluggedType valueOf(java.lang.String)>
<ohos.data.search.schema.EventItem: java.util.List getEventSchema()>
<ohos.data.DatabaseHelper: ohos.data.rdb.RdbStore getRdbStore(ohos.data.rdb.StoreConfig,int,ohos.data.rdb.RdbOpenCallback)>
<ohos.sysappcomponents.contact.entity.ImAddress: void <init>(java.lang.String,java.lang.String)>
<ohos.data.distributed.device.DeviceKvStore: void sync(java.util.List,ohos.data.distributed.common.SyncMode)>
<java.util.Spliterator: int characteristics()>
<ohos.utils.IntArray: void clear()>
<ohos.media.audio.AudioRendererCallback: void <init>()>
<java.util.Calendar.Builder: java.util.Calendar.Builder setDate(int,int,int)>
<ohos.security.permission.PermissionAvailableScope: ohos.security.permission.PermissionAvailableScope[] values()>
<ohos.javax.xml.stream.FactoryConfigurationError: java.lang.Throwable getCause()>
<java.io.PrintStream: java.io.PrintStream append(java.lang.CharSequence,int,int)>
<java.net.Authenticator: void <init>()>
<java.util.logging.Logger: void entering(java.lang.String,java.lang.String)>
<java.sql.SQLTransientConnectionException: void <init>(java.lang.String,java.lang.String,int)>
<java.nio.file.FileVisitResult: void <clinit>()>
<ohos.data.rdb.StoreConfig: ohos.data.rdb.StoreConfig newDefaultConfig(java.lang.String)>
<ohos.global.icu.text.Collator: int getVariableTop()>
<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>
<ohos.ai.asr.AsrIntent.AsrEngineType: ohos.ai.asr.AsrIntent.AsrEngineType valueOf(java.lang.String)>
<ohos.nfc.tag.NdefTag: boolean setReadOnly()>
<ohos.global.icu.text.DecimalFormat: void setParseMaxDigits(int)>
<java.time.ZoneId: java.time.ZoneId systemDefault()>
<ohos.accessibility.ability.AccessibilityWindow: ohos.agp.utils.Rect getRectInScreen()>
<java.util.function.LongPredicate: java.util.function.LongPredicate and(java.util.function.LongPredicate)>
<ohos.global.icu.util.Calendar: java.lang.String getType()>
<ohos.global.icu.text.DateIntervalInfo.PatternInfo: boolean equals(java.lang.Object)>
<java.time.MonthDay: boolean equals(java.lang.Object)>
<ohos.agp.components.PageSlider: void addPageChangedListener(ohos.agp.components.PageSlider.PageChangedListener)>
<java.util.logging.LoggingMXBean: java.util.List getLoggerNames()>
<ohos.telephony.TelephoneNumberUtils: boolean isNotSeparator(char)>
<java.net.NetworkInterface: int getIndex()>
<ohos.agp.components.Text: int getFadeEffectBoundaryWidth()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: void <init>(ohos.event.notification.MessageUser)>
<java.io.ByteArrayOutputStream: void <init>()>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedReaderThreads()>
<java.io.ObjectInputStream.GetField: java.io.ObjectStreamClass getObjectStreamClass()>
<java.util.logging.Level: int intValue()>
<ohos.nfc.tag.MessageRecord: byte[] getType()>
<ohos.agp.text.Layout: int getCharIndexByCoordinate(int,float)>
<ohos.global.icu.text.RelativeDateTimeFormatter.Field: java.lang.Object readResolve()>
<ohos.data.rdb.ValuesBucket: java.lang.Float getFloat(java.lang.String)>
<java.util.zip.ZipFile: void <init>(java.io.File,java.nio.charset.Charset)>
<java.util.concurrent.RejectedExecutionHandler: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query notEqualTo(java.lang.String,long)>
<ohos.global.icu.text.LocaleDisplayNames: ohos.global.icu.text.LocaleDisplayNames.DialectHandling getDialectHandling()>
<ohos.utils.IntArray: void sortIns()>
<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra of(int)>
<ohos.data.search.schema.PlaceItem: ohos.data.search.schema.PlaceItem setLatitude(java.lang.Double)>
<ohos.accessibility.ability.AccessibilityInfo: long getAccessibilityId()>
<java.lang.Package: java.lang.String getSpecificationVendor()>
<ohos.global.icu.text.MessagePattern: double getPluralOffset(int)>
<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
<java.util.Random: java.util.stream.IntStream ints(long,int,int)>
<javax.sql.CommonDataSource: java.util.logging.Logger getParentLogger()>
<ohos.agp.components.SlideDrawer: boolean open()>
<java.util.concurrent.atomic.DoubleAdder: float floatValue()>
<ohos.agp.colors.ColorConverter: ohos.agp.colors.RgbColor toRgb(ohos.agp.colors.Color)>
<java.util.concurrent.locks.Condition: void awaitUninterruptibly()>
<ohos.utils.PacMap: java.util.Optional getSequenceable(java.lang.String)>
<ohos.sysappcomponents.contact.entity.PostalAddress: void <init>(ohos.app.Context,java.lang.String,int)>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster firstDayOfNextMonth()>
<ohos.media.camera.device.CameraConfig.Builder: ohos.media.camera.device.CameraConfig.Builder addSurface(ohos.agp.graphics.Surface)>
<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>
<ohos.data.resultset.CombinedResultSet: java.lang.String[] getAllColumnNames()>
<ohos.agp.components.PageSlider.ReboundEffectParams: void setOverscrollRate(float)>
<java.security.PKCS12Attribute: java.lang.String getValue()>
<ohos.aafwk.ability.continuation.IContinuationDeviceCallback: void onDisconnected(java.lang.String)>
<ohos.utils.PlainBooleanArray: java.util.Optional get(int)>
<java.sql.ResultSetMetaData: boolean isWritable(int)>
<java.io.FileReader: void <init>(java.io.File)>
<java.time.LocalDateTime: java.time.LocalDateTime minusDays(long)>
<java.time.LocalTime: java.time.LocalTime minusNanos(long)>
<java.util.Calendar.Builder: java.util.Calendar.Builder setInstant(long)>
<ohos.telephony.CellularDataInfoManager: int getCellularDataState(int)>
<ohos.bundle.ApplicationInfo: void dump(java.lang.String,java.io.PrintWriter)>
<java.io.PrintWriter: void print(boolean)>
<java.io.ByteArrayInputStream: long skip(long)>
<java.security.cert.X509CertSelector: java.util.Collection getPathToNames()>
<ohos.media.common.VideoProperty.Builder: ohos.media.common.VideoProperty.Builder setRecorderVideoEncoder(int)>
<ohos.utils.SequenceUuid: int hashCode()>
<ohos.account.app.AppAccount: boolean equals(java.lang.Object)>
<ohos.utils.zson.ZSONReader: void endArray()>
<ohos.media.sessioncore.AVController.PlayControls: void sendAVPlaybackCustomAction(ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction,ohos.utils.PacMap)>
<java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>
<javax.net.ServerSocketFactory: javax.net.ServerSocketFactory getDefault()>
<ohos.global.icu.text.SimpleDateFormat: ohos.global.icu.text.NumberFormat getNumberFormat(char)>
<ohos.utils.net.UrlQueryFilter.ValueFilter: void <init>(int)>
<ohos.global.icu.text.Normalizer2: java.lang.StringBuilder normalize(java.lang.CharSequence,java.lang.StringBuilder)>
<java.lang.ThreadLocal: java.lang.ThreadLocal withInitial(java.util.function.Supplier)>
<ohos.dcall.DistributedCallManager: boolean isVideoCallingEnabled()>
<ohos.miscservices.wallpaper.WallpaperController: ohos.agp.components.element.Element getDefaultElement(int,int,boolean,float,float,int)>
<java.lang.StringBuffer: int indexOf(java.lang.String)>
<ohos.global.icu.text.SimpleDateFormat: void setDateFormatSymbols(ohos.global.icu.text.DateFormatSymbols)>
<java.security.cert.X509CRLSelector: void setMinCRLNumber(java.math.BigInteger)>
<ohos.global.icu.text.DecimalFormat: void setFormatWidth(int)>
<ohos.miscservices.inputmethod.RichContent: ohos.utils.net.Uri getLinkUri()>
<ohos.data.resultset.AbsSharedResultSet: long getLong(int)>
<java.text.StringCharacterIterator: void setText(java.lang.String)>
<ohos.global.icu.text.DateFormat.Field: void <init>(java.lang.String,int)>
<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<ohos.utils.geo.Rect: void rotateBy(ohos.utils.geo.Rect.RotationEnum)>
<java.util.logging.LogManager: java.util.Enumeration getLoggerNames()>
<ohos.media.camera.device.FrameConfig.Builder: ohos.agp.graphics.Surface getCoordinateSurface()>
<ohos.security.seoperator.SEOperatorAbs: int createSSD(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.LinkedList: boolean contains(java.lang.Object)>
<ohos.miscservices.inputmethod.EditingText: void setChangedEnd(int)>
<java.net.Inet4Address: boolean isMCOrgLocal()>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: ohos.event.notification.NotificationRequest.NotificationLongTextContent setBriefText(java.lang.String)>
<ohos.ai.cv.text.TextElement: void setCornerPoints(ohos.ai.cv.common.CvPoint[])>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates between(java.lang.String,float,float)>
<ohos.data.distributed.file.DistFile: java.lang.String getGroup()>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newWorkStealingPool(int)>
<ohos.app.AbilityContext: void <init>()>
<ohos.data.preferences.PreferencesFileBrokenException: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)>
<ohos.agp.components.PageSliderIndicator: int getPageChangedListenerCount()>
<java.time.Year: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.global.icu.text.SimpleDateFormat: void setNumberFormat(java.lang.String,ohos.global.icu.text.NumberFormat)>
<ohos.agp.components.Component: boolean simulateClick()>
<java.util.concurrent.Callable: java.lang.Object call()>
<java.util.Arrays: java.util.Spliterator.OfInt spliterator(int[])>
<ohos.agp.components.ListContainer: void setExtraItemsNumber(int)>
<java.util.EnumMap: java.util.Collection values()>
<ohos.agp.components.Component: int getMinWidth()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet add(int,int)>
<javax.tools.StandardJavaFileManager: void setLocation(javax.tools.JavaFileManager.Location,java.lang.Iterable)>
<java.security.InvalidKeyException: void <init>()>
<ohos.bluetooth.BluetoothRemoteDevice: int hashCode()>
<ohos.event.notification.NotificationSlot: void enableBadge(boolean)>
<java.util.concurrent.atomic.AtomicLong: long accumulateAndGet(long,java.util.function.LongBinaryOperator)>
<ohos.media.common.sessioncore.AVCallerUserInfo: int hashCode()>
<java.lang.Object: void notifyAll()>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>
<java.time.LocalDate: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<ohos.tools.ByTrace: void countTrace(java.lang.String,int)>
<ohos.accessibility.ability.AccessibilityInfo: ohos.agp.utils.Rect getRectInScreen()>
<java.net.ServerSocket: void bind(java.net.SocketAddress)>
<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>
<ohos.event.notification.NotificationActionButton: int getSemanticActionButton()>
<ohos.agp.components.TimePicker: void showMinute(boolean)>
<ohos.interwork.event.intentagent.IntentAgentEx: void marshallingEx(ohos.utils.Parcel)>
<ohos.sysappcomponents.calendar.CalendarCollection: java.util.Optional next()>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<java.util.zip.Deflater: void setInput(byte[])>
<java.util.Calendar: void computeFields()>
<ohos.media.audio.AudioRenderer: boolean setVolume(float)>
<java.util.Locale: java.util.List filter(java.util.List,java.util.Collection)>
<ohos.global.icu.util.TimeZone: void <clinit>()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notBetween(java.lang.String,java.lang.String,java.lang.String)>
<ohos.org.xml.sax.helpers.DefaultHandler: void endDocument()>
<ohos.agp.utils.TextTool: void subCharArray(java.lang.CharSequence,int,int,char[],int)>
<java.sql.PreparedStatement: void setDate(int,java.sql.Date,java.util.Calendar)>
<ohos.global.icu.lang.UCharacter: boolean isDigit(int)>
<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>
<java.util.Calendar: int hashCode()>
<java.util.UnknownFormatFlagsException: java.lang.String getFlags()>
<ohos.data.rdb.ValuesBucket: java.lang.Integer getInteger(java.lang.String)>
<java.util.Scanner: long nextLong(int)>
<ohos.utils.HalfFloat: double doubleValue()>
<ohos.utils.net.Uri: java.util.Set getQueryParamNames()>
<java.util.TimeZone: java.lang.String[] getAvailableIDs()>
<ohos.biometrics.authentication.BiometricAuthentication.SecureLevel: void <clinit>()>
<ohos.os.ProcessManager: int getThreadPriority(int)>
<java.util.ServiceLoader: java.util.Iterator iterator()>
<ohos.utils.PlainLongArray: void put(int,long)>
<java.lang.Integer: void <init>(java.lang.String)>
<java.nio.file.attribute.DosFileAttributes: boolean isReadOnly()>
<ohos.media.common.sessioncore.AVBrowserRoot: void <init>(java.lang.String,ohos.utils.PacMap)>
<java.time.ZoneId: java.time.ZoneId ofOffset(java.lang.String,java.time.ZoneOffset)>
<java.nio.CharBuffer: java.nio.CharBuffer append(java.lang.CharSequence)>
<ohos.global.icu.text.Bidi: ohos.global.icu.text.BidiRun getLogicalRun(int)>
<ohos.usb.USBDevice: ohos.usb.USBConfig getConfiguration(int)>
<java.util.concurrent.CopyOnWriteArrayList: void <init>(java.lang.Object[])>
<java.util.stream.IntStream.Builder: java.util.stream.IntStream build()>
<java.util.stream.Collector: java.util.stream.Collector of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.function.Function,java.util.stream.Collector.Characteristics[])>
<java.nio.LongBuffer: long[] array()>
<java.time.format.SignStyle: java.time.format.SignStyle valueOf(java.lang.String)>
<ohos.org.xml.sax.SAXParseException: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.Exception)>
<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer,long)>
<ohos.agp.components.SlideDrawer: boolean toggle(ohos.agp.components.SlideDrawer.SlideDirection)>
<ohos.agp.transition.TransitionScheduler: void <init>()>
<ohos.usb.USBDevice: void <init>(java.lang.String,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.bundle.ShortcutInfo: boolean unmarshalling(ohos.utils.Parcel)>
<java.lang.Integer: int intValue()>
<java.util.EnumMap: java.util.EnumMap clone()>
<java.sql.ParameterMetaData: java.lang.String getParameterTypeName(int)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenAcceptBoth(java.util.concurrent.CompletionStage,java.util.function.BiConsumer)>
<ohos.data.distributed.common.UserType: ohos.data.distributed.common.UserType valueOf(java.lang.String)>
<ohos.net.NetManager: int getBackgroundPolicy()>
<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.util.List)>
<java.security.cert.CertificateFactory: java.security.Provider getProvider()>
<java.lang.Thread: void join()>
<ohos.agp.components.webengine.PickFilesParams: java.lang.CharSequence getTitle()>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat subtractionAll(int)>
<ohos.multimodalinput.event.KeyBoardEvent: boolean isHandledByIme()>
<ohos.rpc.MessageParcel: java.io.FileDescriptor readFileDescriptor()>
<java.sql.ResultSet: java.sql.Blob getBlob(int)>
<ohos.media.audio.AudioManager: int getMaxVolume(ohos.media.audio.AudioManager.AudioVolumeType)>
<java.net.URLConnection: void setAllowUserInteraction(boolean)>
<java.util.LinkedList: java.lang.Object peekLast()>
<ohos.aafwk.ability.Ability: ohos.aafwk.ability.AbilityForm onCreateForm()>
<ohos.agp.render.Paint: ohos.agp.utils.Point getPosition()>
<java.time.temporal.JulianFields: void <clinit>()>
<java.io.SequenceInputStream: void <init>(java.io.InputStream,java.io.InputStream)>
<java.util.GregorianCalendar: void setWeekDate(int,int,int)>
<ohos.sysappcomponents.contact.entity.Contact: void <init>()>
<ohos.agp.render.Region.Op: ohos.agp.render.Region.Op[] values()>
<ohos.bundleactive.BundleActiveInfosMgr: ohos.bundleactive.BundleActiveStates queryCurrentBundleActiveStates(long,long)>
<java.lang.ClassNotFoundException: java.lang.Throwable getCause()>
<ohos.global.icu.util.CopticCalendar: int handleComputeMonthStart(int,int,boolean)>
<java.time.Month: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.media.tubecore.AVTube: int usageScenes()>
<ohos.agp.components.AbsSlider: ohos.agp.components.AbsSlider.Formatter getFormatter()>
<java.security.cert.X509CRL: java.util.Date getNextUpdate()>
<java.math.BigInteger: void <init>(int,java.util.Random)>
<ohos.global.icu.text.RuleBasedCollator: int hashCode()>
<ohos.batterymanager.BatteryInfo.BatteryChargeState: ohos.batterymanager.BatteryInfo.BatteryChargeState valueOf(java.lang.String)>
<java.sql.DatabaseMetaData: int getMaxTablesInSelect()>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoZonedDateTime plus(java.time.temporal.TemporalAmount)>
<java.nio.file.attribute.UserPrincipalLookupService: java.nio.file.attribute.GroupPrincipal lookupPrincipalByGroupName(java.lang.String)>
<java.util.concurrent.Semaphore: void acquireUninterruptibly(int)>
<ohos.event.notification.NotificationSorting: java.lang.String toString()>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object pop()>
<java.util.Spliterators.AbstractIntSpliterator: void <init>(long,int)>
<ohos.agp.render.render3d.math.Matrix4x4: ohos.agp.render.render3d.math.Matrix4x4 identity()>
<java.io.FileWriter: void <init>(java.io.File)>
<ohos.aafwk.content.Intent: float[] getFloatArrayParam(java.lang.String)>
<ohos.media.player.Player.DeviceInfo: void <init>(java.lang.String)>
<ohos.aafwk.ability.Ability.WindowAttributeHelper: ohos.aafwk.ability.Ability.WindowAttributeHelper setRightPadding(int)>
<ohos.data.distributed.common.KvStore: void delete(java.lang.String)>
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getShaper(int)>
<java.util.Spliterator.OfLong: boolean tryAdvance(java.util.function.Consumer)>
<ohos.agp.components.TableLayout.Specification: int getMinSpan()>
<ohos.global.icu.util.GregorianCalendar: void <init>(int,int,int,int,int)>
<ohos.agp.render.opengl.GLES1X: void glColor4x(int,int,int,int)>
<ohos.utils.net.Uri: boolean isRelative()>
<ohos.agp.components.webengine.CookieStore: java.lang.String getCookie(java.lang.String)>
<ohos.eventhandler.EventHandler: ohos.eventhandler.EventHandler current()>
<ohos.event.notification.NotificationUserInput: ohos.utils.PacMap getInputsFromIntent(ohos.aafwk.content.Intent)>
<ohos.agp.render.ColorMatrix: void reset()>
<ohos.utils.PlainIntArray: int indexOfValue(int)>
<java.util.zip.CRC32: void update(byte[],int,int)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendOffset(java.lang.String,java.lang.String)>
<java.util.concurrent.TimeUnit: long toHours(long)>
<ohos.media.image.PixelMap: void writePixels(int[],int,int,ohos.media.image.common.Rect)>
<ohos.global.icu.text.Collator: int getDecomposition()>
<java.time.chrono.JapaneseChronology: boolean isLeapYear(long)>
<java.util.LinkedHashMap: void <init>(int,float,boolean)>
<ohos.global.icu.text.StringPrepParseException: void <init>(java.lang.String,int,java.lang.String,int)>
<java.net.ContentHandler: void <init>()>
<ohos.agp.utils.Rect: ohos.agp.utils.Rect obtainIntersectRect(int,int,int,int)>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.text.DateIntervalFormat getInstance(java.lang.String)>
<ohos.utils.ObjectAttribute: java.lang.Class getAttrType()>
<ohos.global.icu.text.StringSearch: void <init>(java.lang.String,java.text.CharacterIterator,ohos.global.icu.text.RuleBasedCollator)>
<java.security.KeyException: void <init>()>
<ohos.bluetooth.ble.GattCharacteristic: void <init>(java.util.UUID,int,int)>
<ohos.data.rdb.StoreConfig.JournalMode: java.lang.String getValue()>
<java.lang.Throwable: void <init>(java.lang.String)>
<java.util.PrimitiveIterator: void forEachRemaining(java.lang.Object)>
<ohos.agp.components.SlideDrawer.SlideDisable: boolean shouldDisableSlide(ohos.agp.components.SlideDrawer,ohos.agp.components.SlideDrawer.SlideDirection,ohos.agp.components.DragInfo)>
<java.time.Month: int get(java.time.temporal.TemporalField)>
<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>
<java.io.ObjectOutputStream: void writeChars(java.lang.String)>
<java.lang.System: void setSecurityManager(java.lang.SecurityManager)>
<ohos.media.sessioncore.AVController: boolean setControllerForAbility(ohos.aafwk.ability.Ability,ohos.media.sessioncore.AVController)>
<ohos.global.icu.text.Edits: void addUnchanged(int)>
<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>
<java.util.jar.Pack200.Unpacker: java.util.SortedMap properties()>
<java.math.MathContext: java.lang.String toString()>
<ohos.aafwk.ability.fraction.FractionAbility: void onSaveAbilityState(ohos.utils.PacMap)>
<ohos.media.camera.device.FrameStateCallback: void onFrameStarted(ohos.media.camera.device.Camera,ohos.media.camera.device.FrameConfig,long,long)>
<java.io.StringReader: void <init>(java.lang.String)>
<java.lang.ProcessBuilder: void <init>(java.lang.String[])>
<java.sql.SQLWarning: void <init>(java.lang.String,java.lang.String)>
<ohos.aafwk.ability.DataAbilityOperation: java.lang.String toString()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,double)>
<ohos.multimodalinput.event.TouchEvent: ohos.multimodalinput.event.MultimodalEvent getMultimodalEvent()>
<java.nio.charset.CharsetDecoder: void implOnMalformedInput(java.nio.charset.CodingErrorAction)>
<java.util.jar.Pack200.Unpacker: void unpack(java.io.InputStream,java.util.jar.JarOutputStream)>
<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSocket getSocket()>
<javax.crypto.KeyAgreementSpi: void engineInit(java.security.Key,java.security.SecureRandom)>
<ohos.event.commonevent.AsyncCommonEventResult: void setCodeAndData(int,java.lang.String)>
<ohos.agp.utils.RectFloat: void translateTo(float,float)>
<ohos.utils.zson.ZSONObject: ohos.utils.zson.ZSONObject getZSONObject(java.lang.String)>
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer)>
<ohos.workscheduler.WorkInfo: int getRequestStorageType()>
<ohos.agp.text.Layout: int getEndCharIndex(int)>
<ohos.global.icu.text.LocaleDisplayNames: java.lang.String regionDisplayName(java.lang.String)>
<java.time.Month: java.time.Month minus(long)>
<java.sql.PreparedStatement: void setBinaryStream(int,java.io.InputStream,long)>
<ohos.net.NetManager: ohos.net.HttpProxy getDefaultHttpProxy()>
<java.security.BasicPermission: boolean implies(java.security.Permission)>
<ohos.interwork.event.intentagent.IntentAgentEx: boolean marshalling(ohos.utils.Parcel)>
<ohos.media.image.PropertyFilter: ohos.media.image.PropertyFilter rollbackProperty(java.lang.String)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>
<ohos.agp.utils.Rect: boolean contains(int,int,int,int)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateTimeInstance(ohos.global.icu.util.Calendar,int,int,ohos.global.icu.util.ULocale)>
<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>
<ohos.utils.BasePacMap: boolean hasFileDescriptor()>
<javax.crypto.KeyAgreement: byte[] generateSecret()>
<ohos.data.resultset.SharedResultSet: boolean onGo(int,int)>
<java.util.EnumSet: java.util.EnumSet clone()>
<ohos.bundle.ApplicationInfo: java.lang.String getDescription()>
<ohos.agp.render.RadialShader: void <init>()>
<java.security.Guard: void checkGuard(java.lang.Object)>
<ohos.app.Context: void setDisplayOrientation(ohos.bundle.AbilityInfo.DisplayOrientation)>
<java.util.StringTokenizer: boolean hasMoreElements()>
<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable,boolean,boolean)>
<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>
<java.time.LocalTime: boolean isSupported(java.time.temporal.TemporalField)>
<java.util.IntSummaryStatistics: double getAverage()>
<ohos.aafwk.ability.Ability: boolean hasWindowFocus()>
<ohos.data.orm.OrmDatabase: void <init>()>
<java.time.chrono.JapaneseChronology: int prolepticYear(java.time.chrono.Era,int)>
<ohos.global.icu.text.MessagePattern: ohos.global.icu.text.MessagePattern.ApostropheMode getApostropheMode()>
<ohos.data.orm.OrmContext: void commit()>
<ohos.bundle.FormInfo: ohos.bundle.FormInfo.FormType getType()>
<java.util.concurrent.ForkJoinTask: short getForkJoinTaskTag()>
<ohos.agp.components.ProgressBar: void setViceProgressElement(ohos.agp.components.element.Element)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setComponentContainerLayoutConfig(int,ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.agp.components.SlideDrawer: boolean close(ohos.agp.components.SlideDrawer.SlideDirection)>
<ohos.miscservices.download.DownloadConfig.Builder: ohos.miscservices.download.DownloadConfig.Builder setNetworkRestriction(int)>
<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>
<ohos.app.Context: void compelVerifyPermission(java.lang.String,java.lang.String)>
<java.io.FileOutputStream: void write(byte[],int,int)>
<ohos.sysappcomponents.contact.entity.PostalAddress: int hashCode()>
<ohos.agp.utils.Matrix.ScaleToFit: ohos.agp.utils.Matrix.ScaleToFit[] values()>
<ohos.agp.utils.Matrix: boolean mapRect(ohos.agp.utils.RectFloat,ohos.agp.utils.RectFloat)>
<java.text.DateFormatSymbols: java.util.Locale[] getAvailableLocales()>
<ohos.agp.components.Component: ohos.agp.utils.Point getPivot()>
<java.util.TimeZone: void <init>()>
<ohos.bundle.IBundleManager: void setAbilityEnabled(ohos.bundle.AbilityInfo,boolean)>
<ohos.sysappcomponents.contact.entity.PhoneNumber: boolean equals(java.lang.Object)>
<ohos.data.resultset.ResultSetWrapper: ohos.data.resultset.ResultSet getResultSet()>
<ohos.data.search.schema.Schema: java.lang.Object setDescription(java.lang.String)>
<ohos.agp.components.Component: int getFocusBorderPadding()>
<ohos.agp.components.Text: void onRtlChanged(ohos.agp.components.Component.LayoutDirection)>
<java.text.DecimalFormat: void setRoundingMode(java.math.RoundingMode)>
<java.net.ProtocolFamily: java.lang.String name()>
<java.time.temporal.ChronoField: boolean isDateBased()>
<ohos.agp.utils.Matrix: boolean preservesRightAngles()>
<ohos.global.configuration.Configuration: int getSystemColorMode()>
<java.lang.ThreadGroup: boolean isDaemon()>
<ohos.eventhandler.Courier: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.prefs.BackingStoreException: void <init>(java.lang.Throwable)>
<ohos.event.notification.NotificationConstant.InputEditType: ohos.event.notification.NotificationConstant.InputEditType valueOf(java.lang.String)>
<java.sql.Connection: void setHoldability(int)>
<ohos.agp.components.Component: boolean executeDoubleClick()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenAcceptBoth(java.util.concurrent.CompletionStage,java.util.function.BiConsumer)>
<java.util.stream.IntStream: java.util.stream.IntStream skip(long)>
<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>
<ohos.media.image.common.ImageInfo: void <init>()>
<ohos.global.icu.math.BigDecimal: void <init>(java.math.BigDecimal)>
<ohos.agp.components.IndexBar: java.lang.String[] getIndexString()>
<ohos.agp.render.render3d.util.MeshBuilder: void release()>
<ohos.utils.Parcel: void readStringArray(java.lang.String[])>
<java.security.interfaces.ECKey: java.security.spec.ECParameterSpec getParams()>
<java.text.DecimalFormatSymbols: char getZeroDigit()>
<ohos.usb.USBDevice: int getDeviceSubclass()>
<ohos.data.distributed.common.SyncMode: ohos.data.distributed.common.SyncMode valueOf(java.lang.String)>
<ohos.agp.window.dialog.CommonDialog: void dealBackKeyDown()>
<ohos.data.search.schema.ContactItem: ohos.data.search.schema.ContactItem setPhone(java.lang.String)>
<ohos.biometrics.authentication.BiometricAuthentication.SecureLevel: ohos.biometrics.authentication.BiometricAuthentication.SecureLevel[] values()>
<ohos.org.xml.sax.InputSource: void <init>(java.io.InputStream)>
<java.util.stream.Stream: long count()>
<java.util.prefs.AbstractPreferences: java.lang.String[] keysSpi()>
<java.util.Locale.Builder: java.util.Locale.Builder clear()>
<java.util.Vector: java.util.List subList(int,int)>
<ohos.utils.BasePacMap: short[] getShortValueArray(java.lang.String)>
<ohos.agp.utils.Rect: boolean isIntersect(ohos.agp.utils.Rect,ohos.agp.utils.Rect)>
<ohos.data.orm.Blob: java.io.InputStream getBinaryStream()>
<java.security.cert.CertificateException: void <init>()>
<ohos.utils.LruBuffer: boolean isEmpty()>
<ohos.global.icu.text.DateFormat.BooleanAttribute: ohos.global.icu.text.DateFormat.BooleanAttribute[] values()>
<java.lang.Class: java.lang.String toGenericString()>
<java.nio.file.DirectoryStream: java.util.Iterator iterator()>
<java.sql.ResultSet: java.net.URL getURL(int)>
<java.nio.file.attribute.AclEntry.Builder: java.nio.file.attribute.AclEntry.Builder setPermissions(java.util.Set)>
<ohos.sysappcomponents.contact.entity.Relation: int hashCode()>
<ohos.agp.components.Text: void insert(java.lang.String,int)>
<java.util.function.IntBinaryOperator: int applyAsInt(int,int)>
<ohos.javax.xml.validation.Validator: void setErrorHandler(ohos.org.xml.sax.ErrorHandler)>
<ohos.agp.render.opengl.EGL: java.lang.String eglQueryString(ohos.agp.render.opengl.EGLDisplay,int)>
<ohos.hiviewdfx.xcollie.XCollie: void cancelTimeout(int)>
<java.lang.Process: java.io.InputStream getInputStream()>
<java.nio.channels.FileLock: java.lang.String toString()>
<ohos.aafwk.abilityjet.activedata.ActiveData: void setData(java.lang.Object)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates between(java.lang.String,float,float)>
<java.nio.CharBuffer: char charAt(int)>
<java.util.Calendar: int getLeastMaximum(int)>
<java.net.Socket: void setOOBInline(boolean)>
<ohos.agp.render.opengl.GLES1X: void glDrawElements(int,int,int,java.nio.Buffer)>
<ohos.global.icu.text.DateIntervalInfo: void <init>(ohos.global.icu.util.ULocale)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal remainder(ohos.global.icu.math.BigDecimal,ohos.global.icu.math.MathContext)>
<java.math.BigDecimal: double doubleValue()>
<java.net.InetAddress: boolean isMCNodeLocal()>
<ohos.app.dispatcher.task.Revocable: boolean revoke()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notIn(java.lang.String,java.lang.String[])>
<java.security.cert.X509CertSelector: java.util.Set getPolicy()>
<java.time.MonthDay: java.time.MonthDay now()>
<java.security.cert.X509CRLEntry: java.security.cert.CRLReason getRevocationReason()>
<java.util.concurrent.CopyOnWriteArraySet: void clear()>
<java.nio.channels.Selector: java.nio.channels.spi.SelectorProvider provider()>
<ohos.global.icu.text.MeasureFormat: java.lang.String getUnitDisplayName(ohos.global.icu.util.MeasureUnit)>
<ohos.powermanager.PowerManager: void rebootDevice(java.lang.String)>
<java.util.concurrent.ArrayBlockingQueue: boolean offer(java.lang.Object)>
<java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<java.util.Arrays: void parallelSort(int[])>
<ohos.data.search.schema.VideoItem: ohos.data.search.schema.VideoItem setWatchDuration(java.lang.Integer)>
<ohos.global.icu.text.DecimalFormat: void setDecimalSeparatorAlwaysShown(boolean)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLStreamReader createXMLStreamReader(ohos.javax.xml.transform.Source)>
<ohos.miscservices.timeutility.Time: long setTime(ohos.app.Context,java.util.Date)>
<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale getDefault(ohos.global.icu.util.ULocale.Category)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeEndDocument()>
<java.nio.ByteBuffer: int compareTo(java.nio.ByteBuffer)>
<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>
<java.util.AbstractList: java.util.ListIterator listIterator()>
<java.util.zip.InflaterOutputStream: void flush()>
<ohos.aafwk.content.Intent: ohos.utils.Sequenceable getParcelableParam(java.lang.String)>
<java.util.Locale.Category: java.util.Locale.Category[] values()>
<java.util.HashSet: java.util.Spliterator spliterator()>
<ohos.aafwk.ability.Ability: ohos.utils.net.Uri denormalizeUri(ohos.utils.net.Uri)>
<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>
<ohos.agp.components.SlideDrawer: boolean openSmoothly()>
<java.nio.channels.AsynchronousFileChannel: java.util.concurrent.Future lock()>
<ohos.media.audio.AudioManager: boolean activateAudioInterrupt(ohos.media.audio.AudioInterrupt)>
<java.util.Map.Entry: java.util.Comparator comparingByValue(java.util.Comparator)>
<java.util.zip.Inflater: void end()>
<ohos.global.icu.util.TimeZone: int getOffset(int,int,int,int,int,int)>
<ohos.dcall.DistributedCallManager: void removeObserver(ohos.dcall.CallStateObserver)>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory getFactory()>
<ohos.data.resultset.CombinedResultSet: void unregisterObserver(ohos.data.rdb.DataObserver)>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setCoordinateSurface(ohos.agp.graphics.Surface)>
<ohos.sysappcomponents.contact.entity.Organization: java.lang.String getName()>
<java.net.HttpURLConnection: void <init>(java.net.URL)>
<ohos.utils.PacMap: void putCharArray(java.lang.String,char[])>
<java.text.ChoiceFormat: java.lang.Object[] getFormats()>
<java.lang.Thread: boolean isDaemon()>
<ohos.global.resource.Entry.Type: ohos.global.resource.Entry.Type valueOf(java.lang.String)>
<java.nio.file.attribute.UserPrincipalLookupService: void <init>()>
<ohos.agp.components.ComponentParent: int getChildIndex(ohos.agp.components.Component)>
<java.lang.System: void setOut(java.io.PrintStream)>
<ohos.agp.utils.Matrix44: void setConcat(ohos.agp.utils.Matrix44,ohos.agp.utils.Matrix44)>
<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>
<ohos.accessibility.AccessibilityEventInfo: void setTriggerAction(int)>
<ohos.agp.render.opengl.GLES20: boolean glIsProgram(int)>
<java.util.AbstractMap: java.lang.Object clone()>
<ohos.agp.components.Switch: int getThumbHorizontalPadding()>
<ohos.data.orm.Blob: byte[] getBytes(long,int)>
<ohos.app.AbilityContext: ohos.app.dispatcher.TaskDispatcher getGlobalTaskDispatcher(ohos.app.dispatcher.task.TaskPriority)>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>
<java.sql.SQLTimeoutException: void <init>(java.lang.Throwable)>
<java.lang.CharSequence: java.util.stream.IntStream codePoints()>
<java.text.CollationElementIterator: short secondaryOrder(int)>
<ohos.agp.components.Text: void setAutoFontSizeRule(int,int,int)>
<ohos.data.resultset.AbsSharedResultSet: boolean goToRow(int)>
<ohos.agp.render.opengl.GLES32: void glGetTexParameterIiv(int,int,int[])>
<ohos.org.xml.sax.DocumentHandler: void ignorableWhitespace(char[],int,int)>
<java.net.SocketException: void <init>()>
<ohos.agp.utils.Rect: void translateTo(int,int)>
<java.nio.channels.FileLock: void <init>(java.nio.channels.AsynchronousFileChannel,long,long,boolean)>
<ohos.agp.render.opengl.GLES20: void glGenBuffers(int,java.nio.IntBuffer)>
<ohos.global.icu.text.SimpleDateFormat: ohos.global.icu.text.DateFormatSymbols getDateFormatSymbols()>
<ohos.global.icu.text.AlphabeticIndex: java.lang.String getOverflowLabel()>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: ohos.event.notification.NotificationRequest.NotificationMultiLineContent addSingleLine(java.lang.String)>
<java.security.Policy: java.security.Policy getInstance(java.lang.String,java.security.Policy.Parameters,java.security.Provider)>
<java.util.Observable: int countObservers()>
<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>
<ohos.global.icu.text.DateFormatSymbols: void <init>(java.lang.Class,java.util.Locale)>
<ohos.global.icu.text.RuleBasedCollator: int getStrength()>
<javax.sql.RowSetMetaData: void setCaseSensitive(int,boolean)>
<ohos.data.search.schema.PhotoItem: java.util.List getPhotoSchema()>
<java.io.RandomAccessFile: void write(int)>
<ohos.agp.components.PageSliderIndicator: ohos.agp.components.element.Element getItemNormalElement()>
<java.util.WeakHashMap: void replaceAll(java.util.function.BiFunction)>
<ohos.global.icu.text.NumberFormat: java.lang.Object clone()>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object pollLast()>
<javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>
<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>
<ohos.agp.render.opengl.GLES20: void glRenderbufferStorage(int,int,int,int)>
<java.time.OffsetDateTime: int getMonthValue()>
<java.time.temporal.TemporalUnit: java.time.temporal.Temporal addTo(java.time.temporal.Temporal,long)>
<ohos.bundle.ElementName: boolean marshalling(ohos.utils.Parcel)>
<java.time.zone.ZoneRules: boolean isValidOffset(java.time.LocalDateTime,java.time.ZoneOffset)>
<java.util.concurrent.atomic.AtomicReference: boolean weakCompareAndSet(java.lang.Object,java.lang.Object)>
<ohos.miscservices.pasteboard.PasteData.DataProperty: long getTimestamp()>
<java.util.concurrent.ConcurrentNavigableMap: java.util.NavigableSet descendingKeySet()>
<ohos.event.intentagent.IntentAgentInfo: void <init>(int,ohos.event.intentagent.IntentAgentConstant.OperationType,ohos.event.intentagent.IntentAgentConstant.Flags,java.util.List,ohos.aafwk.content.IntentParams)>
<ohos.agp.utils.Line: void translate(float,float)>
<ohos.eventhandler.EventHandler: void sendSyncEvent(ohos.eventhandler.InnerEvent)>
<ohos.media.common.Format: java.lang.Object getObjectValue(java.lang.String)>
<ohos.global.icu.text.NumberFormat: void setMinimumFractionDigits(int)>
<java.util.Date: void setMonth(int)>
<java.security.cert.LDAPCertStoreParameters: void <init>(java.lang.String)>
<ohos.location.GeoConvert: void <init>()>
<ohos.agp.render.render3d.systems.MorphingSystem: int getTargetCount(long)>
<ohos.event.notification.INotificationSubscriber: void onNotificationPosted(ohos.event.notification.NotificationRequest,ohos.event.notification.NotificationSortingMap)>
<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>
<ohos.agp.components.element.Element: void setAlpha(int)>
<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>
<ohos.agp.components.MagicLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.util.Calendar: int compareTo(java.lang.Object)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>
<ohos.storageinfomgr.StorageInfoManager: long getFreeSize(java.util.UUID)>
<java.util.concurrent.LinkedBlockingDeque: void putFirst(java.lang.Object)>
<ohos.agp.components.SlideDrawer: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.light.bean.LightEffect: void setOffDuration(int)>
<java.util.function.Function: java.util.function.Function identity()>
<ohos.agp.components.SlideDrawer: boolean toggleSmoothly(int)>
<java.security.ProviderException: void <init>(java.lang.String)>
<ohos.wifi.WifiScanInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.data.preferences.PreferencesFileReadException: void <init>(java.lang.String)>
<ohos.utils.geo.RectFloat: boolean isInclude(float,float,float,float)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates between(java.lang.String,double,double)>
<java.time.Year: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<ohos.global.icu.text.BreakIterator: int next()>
<ohos.miscservices.inputmethodability.TextInputClient: boolean sendKeyEvent(ohos.multimodalinput.event.KeyEvent)>
<ohos.rpc.IPCSkeleton: int getCallingPid()>
<java.time.LocalDateTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean release(long)>
<ohos.utils.ConditionHelper: boolean await(long)>
<ohos.sensor.agent.CategoryLightAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,long,long)>
<ohos.nfc.NfcController: void setReaderMode(ohos.aafwk.ability.Ability,ohos.nfc.NfcController.ReaderModeCallback,int,ohos.interwork.utils.PacMapEx)>
<java.util.Comparator: java.util.Comparator comparingLong(java.util.function.ToLongFunction)>
<ohos.app.Context: java.io.File getFilesDir()>
<ohos.net.HttpProxy: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.util.VersionInfo getVersion()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<ohos.media.audio.AudioCapturer: java.util.Set getSoundEffects()>
<ohos.agp.components.TableLayout: int getRowCount()>
<java.io.ObjectInputStream: java.lang.String readLine()>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitTypeParameter(javax.lang.model.element.TypeParameterElement,java.lang.Object)>
<java.util.concurrent.atomic.AtomicMarkableReference: boolean compareAndSet(java.lang.Object,java.lang.Object,boolean,boolean)>
<java.util.regex.Pattern: java.lang.String quote(java.lang.String)>
<ohos.security.NetworkSecurityPolicy: boolean isPlaintextAccessAllowed(java.lang.String)>
<ohos.agp.components.AdaptiveBoxLayout: ohos.agp.components.ComponentContainer.LayoutConfig verifyLayoutConfig(ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>
<java.time.LocalDate: java.lang.String format(java.time.format.DateTimeFormatter)>
<ohos.aafwk.ability.ProviderFormInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.media.tubecore.AVTube: int curVolume()>
<java.util.function.ObjDoubleConsumer: void accept(java.lang.Object,double)>
<ohos.agp.components.Component: ohos.global.resource.ResourceManager getResourceManager()>
<java.util.concurrent.CountedCompleter: boolean onExceptionalCompletion(java.lang.Throwable,java.util.concurrent.CountedCompleter)>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>
<ohos.agp.components.Slider: void setDecreaseButtonElement(ohos.agp.components.element.Element)>
<java.sql.DatabaseMetaData: boolean supportsTableCorrelationNames()>
<java.security.KeyStore.PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>
<ohos.agp.render.Paint: ohos.agp.render.BlendMode setBlendMode(ohos.agp.render.BlendMode)>
<java.util.Arrays: java.lang.String toString(short[])>
<ohos.utils.LruBuffer: java.lang.Object createDefault(java.lang.Object)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenRun(java.lang.Runnable)>
<ohos.data.resultset.ResultSet: boolean isColumnNull(int)>
<ohos.global.icu.lang.UCharacter: int getMirror(int)>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.AlphabeticIndex addRecord(java.lang.CharSequence,java.lang.Object)>
<ohos.global.icu.text.SearchIterator: int first()>
<java.lang.Float: float min(float,float)>
<java.lang.StrictMath: double sinh(double)>
<java.security.Provider: java.util.Collection values()>
<ohos.multimodalinput.event.MouseEvent: int getPressedButtons()>
<ohos.agp.components.webengine.ResourceError: java.lang.CharSequence getInfo()>
<java.nio.channels.Selector: void <init>()>
<ohos.global.icu.text.AlphabeticIndex.Record: java.lang.String toString()>
<ohos.agp.components.Picker: void setValueChangedListener(ohos.agp.components.Picker.ValueChangedListener)>
<java.util.LinkedList: java.lang.Object remove(int)>
<java.util.concurrent.CountedCompleter: void complete(java.lang.Object)>
<java.util.concurrent.TransferQueue: void transfer(java.lang.Object)>
<javax.lang.model.util.SimpleAnnotationValueVisitor8: void <init>(java.lang.Object)>
<java.time.chrono.ThaiBuddhistChronology: int prolepticYear(java.time.chrono.Era,int)>
<ohos.agp.components.element.ShapeElement: ohos.agp.components.element.ShapeElement.Orientation getOrientation()>
<javax.lang.model.util.SimpleTypeVisitor6: void <init>()>
<ohos.media.audio.AudioManager: boolean setRingerMode(ohos.media.audio.AudioManager.AudioRingMode)>
<ohos.utils.Pair: java.lang.String toString()>
<ohos.media.audio.AudioDeviceDescriptor.DeviceRole: int getValue()>
<java.util.TreeMap: java.util.SortedMap tailMap(java.lang.Object)>
<ohos.media.audio.AudioCapturerInfo.AudioInputSource: ohos.media.audio.AudioCapturerInfo.AudioInputSource[] values()>
<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>
<java.util.prefs.Preferences: byte[] getByteArray(java.lang.String,byte[])>
<ohos.utils.zson.ZSONObject: java.util.Collection values()>
<java.time.DateTimeException: void <init>(java.lang.String)>
<java.util.TreeMap: java.lang.Object firstKey()>
<javax.net.ssl.SNIMatcher: int getType()>
<java.io.StreamTokenizer: void whitespaceChars(int,int)>
<javax.lang.model.SourceVersion: void <clinit>()>
<ohos.accessibility.AccessibilityEventInfo: void <init>(ohos.accessibility.AccessibilityEventInfo)>
<java.util.stream.Collectors: java.util.stream.Collector reducing(java.util.function.BinaryOperator)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates endWrap()>
<ohos.data.rdb.RdbOpenCallback: void onUpgrade(ohos.data.rdb.RdbStore,int,int)>
<ohos.multimodalinput.event.TouchEvent: void <init>()>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.text.DateFormat getDateFormat()>
<java.util.stream.Collectors: java.util.stream.Collector summingDouble(java.util.function.ToDoubleFunction)>
<ohos.data.resultset.ResultSetWrapper: boolean isColumnNull(int)>
<ohos.agp.render.Shader: void <init>(ohos.agp.utils.Color[],ohos.agp.render.Shader.TileMode)>
<java.util.PropertyResourceBundle: java.util.Set handleKeySet()>
<ohos.media.recorder.Recorder: boolean setStorageProperty(ohos.media.common.StorageProperty)>
<java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String)>
<ohos.event.notification.NotificationRequest: java.lang.String getShortcutId()>
<ohos.agp.render.render3d.resources.ResourceManager: java.util.List getSkins()>
<ohos.agp.components.Picker: void setNormalTextSize(int)>
<ohos.miscservices.inputmethod.EditingText: int getSelectionStart()>
<ohos.location.GeoConvert: void <init>(java.util.Locale)>
<ohos.utils.Parcel: boolean writeFloatArray(float[])>
<ohos.biometrics.authentication.IFaceAuthentication.FaceAuthTipsCode: void <init>()>
<ohos.agp.render.opengl.GLES1X: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<java.net.NetworkInterface: boolean isPointToPoint()>
<ohos.agp.components.TabList: int getOrientation()>
<java.security.cert.CertStore: void <init>(java.security.cert.CertStoreSpi,java.security.Provider,java.lang.String,java.security.cert.CertStoreParameters)>
<ohos.media.image.common.PropertyKey.GIF: void <init>()>
<ohos.agp.render.render3d.math.Matrix4x4: void set(float[],int)>
<ohos.rpc.MessageParcel: ohos.rpc.MessageParcel create()>
<java.io.NotActiveException: void <init>(java.lang.String)>
<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String)>
<java.net.URI: java.lang.String getRawFragment()>
<ohos.sysappcomponents.calendar.entity.Instances: long getInstanceEnd()>
<ohos.agp.components.Switch: void setThumbWidth(int)>
<java.io.CharArrayWriter: void <init>(int)>
<java.time.Year: int length()>
<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>
<ohos.agp.components.Component.FadeEffectEnum: void <clinit>()>
<java.util.Spliterators: java.util.Iterator iterator(java.util.Spliterator)>
<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>
<java.util.Collections: void rotate(java.util.List,int)>
<ohos.agp.components.Picker: void setMaxValue(int)>
<javax.crypto.KeyGenerator: void init(int)>
<java.util.concurrent.ConcurrentSkipListSet: java.lang.Object higher(java.lang.Object)>
<java.time.MonthDay: java.time.MonthDay of(java.time.Month,int)>
<ohos.utils.Scope: int hashCode()>
<ohos.net.LinkAddress: void <init>(java.net.InetAddress,int,int,int)>
<java.util.OptionalLong: java.util.OptionalLong empty()>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitString(java.lang.String,java.lang.Object)>
<ohos.agp.components.TimePicker: java.lang.String getPmString()>
<ohos.media.audio.AudioManager: void <init>()>
<ohos.media.audio.SoundPlayer.SoundPlayerParameters: int getPriority()>
<ohos.miscservices.pasteboard.PasteData.Record: ohos.miscservices.pasteboard.PasteData.Record createHtmlTextRecord(java.lang.String)>
<ohos.agp.components.ScaleInfo: void <init>(ohos.agp.utils.Point,ohos.agp.utils.Point,double,double,double,double,double,double)>
<java.time.chrono.AbstractChronology: java.lang.String toString()>
<ohos.data.rdb.ValuesBucket: void delete(java.lang.String)>
<ohos.media.audio.AudioCapturer: int read(java.nio.ByteBuffer,int,boolean)>
<java.lang.StringBuffer: int lastIndexOf(java.lang.String)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateTimeInstance(ohos.global.icu.util.Calendar,int,int)>
<ohos.agp.components.Text: void setAutoFontSize(boolean)>
<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>
<java.time.LocalDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
<ohos.global.icu.text.PluralRules: java.lang.String toString()>
<ohos.global.icu.util.MeasureUnit: java.lang.String getType()>
<ohos.media.photokit.metadata.AVStorage: java.lang.String fetchVersion(ohos.app.Context,java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glPushMatrix()>
<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: void <init>(java.lang.Object)>
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>
<ohos.utils.Parcel: void readCharArray(char[])>
<ohos.agp.components.webengine.WebView: void setWebViewBackground(ohos.agp.colors.RgbColor)>
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getG()>
<ohos.agp.components.PageSliderProvider: void removeDataSubscriber(ohos.agp.database.DataSetSubscriber)>
<ohos.agp.utils.Rect: boolean isInclude(int,int)>
<ohos.agp.utils.RectFloat: boolean isInclude(ohos.agp.utils.Point)>
<ohos.agp.components.ComponentTreeObserver: void removeWindowBoundListener(ohos.agp.components.ComponentTreeObserver.WindowBoundListener)>
<java.util.concurrent.TimeUnit: long toMinutes(long)>
<javax.net.ssl.SSLSocket: void setEnabledCipherSuites(java.lang.String[])>
<javax.sql.PooledConnection: void removeStatementEventListener(javax.sql.StatementEventListener)>
<ohos.agp.components.Component: int getUserNextFocus(int)>
<java.time.chrono.ChronoZonedDateTime: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>
<ohos.event.notification.NotificationSubscribeInfo: ohos.event.notification.NotificationSubscribeInfo addAppName(java.lang.String)>
<ohos.media.photokit.metadata.AVMetadataHelper: java.util.List fetchVideoPixelMapsByIndex(int,int,ohos.media.photokit.common.PixelMapConfigs)>
<ohos.agp.utils.Circle: void translate(float,float)>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getCharacterInstance(ohos.global.icu.util.ULocale)>
<ohos.aafwk.ability.startsetting.AbilityStartSetting: ohos.aafwk.ability.startsetting.AbilityStartSetting getEmptySetting()>
<java.security.cert.CertificateFactorySpi: java.security.cert.CertPath engineGenerateCertPath(java.util.List)>
<ohos.aafwk.ability.fraction.FractionScheduler: void <init>()>
<java.nio.channels.AsynchronousChannelGroup: java.nio.channels.spi.AsynchronousChannelProvider provider()>
<java.lang.StringBuffer: int offsetByCodePoints(int,int)>
<ohos.global.icu.util.TimeZone: int getDSTSavings()>
<java.util.Random: long nextLong()>
<java.io.DataInputStream: int skipBytes(int)>
<ohos.rpc.ReliableFileDescriptor: ohos.rpc.ReliableFileDescriptor[] createReliablePipe()>
<ohos.org.xml.sax.SAXParseException: java.lang.String getSystemId()>
<ohos.agp.window.dialog.CommonDialog: void onShow()>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder removeSurface(ohos.agp.graphics.Surface)>
<ohos.data.search.schema.EmailItem: java.lang.String getToName()>
<javax.lang.model.util.ElementScanner6: java.lang.Object scan(javax.lang.model.element.Element)>
<ohos.media.image.PixelMap: ohos.media.image.PixelMap create(int[],int,int,ohos.media.image.PixelMap.InitializationOptions)>
<ohos.global.configuration.LocaleProfile: void <init>(java.util.Locale[])>
<java.sql.Statement: int executeUpdate(java.lang.String,int[])>
<ohos.accessibility.ability.AccessibleOperation: int getOperationType()>
<ohos.agp.render.render3d.math.Quaternion: boolean equals(java.lang.Object)>
<java.util.Spliterator.OfLong: void forEachRemaining(java.util.function.Consumer)>
<ohos.agp.components.Text: java.lang.String getEditableString()>
<java.time.chrono.ChronoPeriod: java.util.List getUnits()>
<ohos.agp.render.opengl.GLES20: void glGetBooleanv(int,boolean[])>
<ohos.data.preferences.Preferences: boolean getBoolean(java.lang.String,boolean)>
<ohos.bundle.HapModuleInfo: void <init>()>
<java.nio.BufferUnderflowException: void <init>()>
<javax.sql.RowSet: void setBytes(int,byte[])>
<java.security.spec.RSAOtherPrimeInfo: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>
<java.lang.StringBuffer: int lastIndexOf(java.lang.String,int)>
<java.util.Arrays: java.util.Spliterator.OfDouble spliterator(double[])>
<java.util.concurrent.ConcurrentLinkedDeque: boolean offerLast(java.lang.Object)>
<java.math.BigDecimal: java.lang.String toEngineeringString()>
<javax.tools.FileObject: java.io.Reader openReader(boolean)>
<ohos.agp.animation.timelinecurves.SpringCurve: long getDuration()>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getMonetaryDecimalSeparatorString()>
<javax.lang.model.util.Types: javax.lang.model.type.DeclaredType getDeclaredType(javax.lang.model.element.TypeElement,javax.lang.model.type.TypeMirror[])>
<java.text.BreakIterator: java.text.BreakIterator getSentenceInstance()>
<java.security.BasicPermission: java.lang.String getActions()>
<java.util.concurrent.Exchanger: java.lang.Object exchange(java.lang.Object)>
<javax.sql.RowSet: int getMaxFieldSize()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayScript()>
<ohos.eventhandler.InnerEvent: ohos.eventhandler.InnerEvent get(int)>
<java.util.BitSet: void or(java.util.BitSet)>
<ohos.aafwk.ability.AbilityMissionInfo: ohos.bundle.ElementName getAbilityTopBundleName()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setBundle(java.lang.String)>
<javax.net.ssl.SSLContext: java.lang.String getProtocol()>
<java.nio.file.attribute.AttributeView: java.lang.String name()>
<javax.security.auth.Subject: java.util.Set getPrincipals(java.lang.Class)>
<ohos.agp.render.layoutboost.LayoutBoost: void <init>()>
<ohos.javax.xml.stream.events.Characters: boolean isCData()>
<ohos.agp.animation.Animator: void resume()>
<java.time.chrono.ChronoZonedDateTime: long getLong(java.time.temporal.TemporalField)>
<java.text.DateFormatSymbols: void <init>()>
<java.util.logging.LogRecord: void setLevel(java.util.logging.Level)>
<ohos.event.notification.NotificationRequest: ohos.event.intentagent.IntentAgent getRemovalIntentAgent()>
<java.time.LocalDateTime: java.time.LocalDateTime minus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.render.PathMeasure: boolean getPosTan(float,float[],float[])>
<ohos.bluetooth.BluetoothDeviceClass.Service: void <init>()>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>
<java.time.chrono.HijrahDate: long toEpochDay()>
<java.security.AlgorithmParametersSpi: java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class)>
<ohos.global.icu.util.ChineseCalendar: java.lang.String getType()>
<ohos.aafwk.ability.AbilityForm: void <init>(int,ohos.app.Context)>
<java.util.MissingFormatWidthException: java.lang.String getFormatSpecifier()>
<ohos.media.photokit.support.AlbumListInfo: java.lang.String getLongitude()>
<java.net.URI: boolean isAbsolute()>
<java.util.zip.Deflater: void setDictionary(byte[])>
<java.lang.reflect.Parameter: java.lang.String toString()>
<ohos.agp.components.DatePicker: void setNormalTextSize(int)>
<ohos.agp.components.ScrollView.ReboundEffectParams: int getOverscrollPercent()>
<javax.net.ssl.SSLSocket: void setNeedClientAuth(boolean)>
<java.util.ResourceBundle: java.lang.Object getObject(java.lang.String)>
<ohos.aafwk.ability.continuation.ContinuationDeviceInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.components.TimePicker: void setOperatedTextBackground(ohos.agp.components.element.Element)>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<java.time.format.DecimalStyle: int hashCode()>
<ohos.agp.render.opengl.GLES32: void glCopyImageSubData(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>
<java.nio.channels.AsynchronousByteChannel: java.util.concurrent.Future read(java.nio.ByteBuffer)>
<java.nio.file.Files: java.io.BufferedWriter newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])>
<java.security.KeyStore.TrustedCertificateEntry: java.lang.String toString()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setOnlyLocal(boolean)>
<java.io.WriteAbortedException: java.lang.Throwable getCause()>
<java.util.HashSet: java.util.Iterator iterator()>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndUpdate(java.lang.Object,java.util.function.LongUnaryOperator)>
<ohos.bundle.BackupBundleInfo: int hashCode()>
<java.io.PrintStream: void print(java.lang.Object)>
<java.time.LocalDate: java.time.LocalDate parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
<java.lang.Byte: long longValue()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenApply(java.util.function.Function)>
<ohos.utils.net.Uri: java.lang.String getEncodedHost()>
<java.time.LocalDateTime: java.time.chrono.ChronoLocalDateTime minus(java.time.temporal.TemporalAmount)>
<ohos.multimodalinput.event.RotationEvent: void <init>()>
<java.util.Collections: java.util.List checkedList(java.util.List,java.lang.Class)>
<ohos.event.commonevent.CommonEventPublishInfo: void <init>()>
<ohos.aafwk.content.Intent: boolean getBooleanParam(java.lang.String,boolean)>
<ohos.utils.BasePacMap: void putCharArray(java.lang.String,char[])>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle spreadInvoker(java.lang.invoke.MethodType,int)>
<java.util.concurrent.BlockingDeque: java.lang.Object element()>
<java.sql.Struct: java.lang.String getSQLTypeName()>
<java.sql.Date: java.sql.Date valueOf(java.lang.String)>
<ohos.net.LinkAddress: int getScope()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThan(java.lang.String,java.lang.String)>
<ohos.system.OsHelper: boolean checkFilePermission(java.lang.String,int)>
<java.time.DayOfWeek: boolean isSupported(java.time.temporal.TemporalField)>
<java.util.concurrent.atomic.AtomicInteger: int getAndDecrement()>
<ohos.global.icu.text.Replaceable: int char32At(int)>
<java.time.OffsetTime: java.time.OffsetTime minusMinutes(long)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: java.util.Collection getWaitingThreads()>
<ohos.global.icu.util.IndianCalendar: void <init>(ohos.global.icu.util.TimeZone)>
<ohos.utils.PlainLongArray: void <init>(int)>
<java.util.Scanner: boolean hasNextLine()>
<ohos.wifi.p2p.WifiP2pConfig: void <init>(java.lang.String,java.lang.String)>
<java.security.cert.CertPath: java.util.Iterator getEncodings()>
<ohos.eventhandler.EventHandler.Priority: ohos.eventhandler.EventHandler.Priority valueOf(java.lang.String)>
<ohos.global.icu.text.CompactDecimalFormat: ohos.global.icu.util.CurrencyAmount parseCurrency(java.lang.CharSequence,java.text.ParsePosition)>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setTimeInterval(long)>
<java.security.Provider.Service: java.security.Provider getProvider()>
<ohos.data.distributed.user.SingleKvStore: void closeResultSet(ohos.data.distributed.common.KvStoreResultSet)>
<ohos.miscservices.download.DownloadSession.DownloadInfo: long getDownloadedBytes()>
<ohos.rpc.MessageParcel: void updateDataVersion(ohos.rpc.IRemoteObject)>
<javax.lang.model.util.Elements: void printElements(java.io.Writer,javax.lang.model.element.Element[])>
<ohos.agp.components.DatePicker: void setDisplayedLinesElements(ohos.agp.components.element.Element,ohos.agp.components.element.Element)>
<ohos.agp.render.opengl.EGL: boolean eglMakeCurrent(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLSurface,ohos.agp.render.opengl.EGLSurface,ohos.agp.render.opengl.EGLContext)>
<ohos.security.keystore.KeyStoreProtectionParameter: int getSecKeyAuthDuration()>
<ohos.agp.components.Component: void disableFadeEffect(ohos.agp.components.Component.FadeEffectEnum)>
<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>
<java.util.Date: int compareTo(java.lang.Object)>
<java.security.MessageDigest: void update(byte[])>
<ohos.telephony.TelephoneNumberUtils: boolean isUriPhoneNumber(java.lang.String)>
<ohos.global.icu.text.RelativeDateTimeFormatter.AbsoluteUnit: ohos.global.icu.text.RelativeDateTimeFormatter.AbsoluteUnit[] values()>
<java.sql.Connection: java.sql.Statement createStatement(int,int)>
<java.text.CollationElementIterator: int getOffset()>
<java.util.concurrent.ConcurrentMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>
<java.util.concurrent.PriorityBlockingQueue: java.util.Iterator iterator()>
<ohos.media.sessioncore.AVController: boolean releaseAVControllerCallback(ohos.media.common.sessioncore.AVControllerCallback)>
<ohos.agp.components.ListContainer.ReboundEffectParams: int getOverscrollPercent()>
<ohos.global.icu.text.Collator: int hashCode()>
<java.util.prefs.Preferences: void importPreferences(java.io.InputStream)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: boolean await(long,java.util.concurrent.TimeUnit)>
<java.security.Security: java.security.Provider[] getProviders()>
<ohos.global.icu.text.SimpleDateFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<ohos.event.notification.NotificationSubscriber: void onConsumed(ohos.event.notification.NotificationRequest,ohos.event.notification.NotificationSortingMap)>
<java.sql.CallableStatement: void setNClob(java.lang.String,java.io.Reader)>
<ohos.agp.window.dialog.CommonDialog: void create()>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getNarrowEras()>
<ohos.agp.colors.HsvColor: float getHue()>
<java.sql.DatabaseMetaData: int getMaxBinaryLiteralLength()>
<ohos.aafwk.ability.continuation.IContinuationRegisterManager: void updateConnectStatus(int,java.lang.String,int,ohos.aafwk.ability.continuation.RequestCallback)>
<ohos.agp.render.opengl.GLES20: void glGenFramebuffers(int,int[])>
<ohos.agp.render.render3d.components.TransformComponent: void setScale(ohos.agp.render.render3d.math.Vector3)>
<ohos.media.common.AudioProperty.Builder: ohos.media.common.AudioProperty.Builder setRecorderSamplingRate(int)>
<ohos.sysappcomponents.contact.ContactsCollection: boolean isEmpty()>
<java.util.GregorianCalendar: java.time.ZonedDateTime toZonedDateTime()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean isQueued(java.lang.Thread)>
<ohos.telephony.TelephoneNumberUtils: boolean isDialTwelveKey(char)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>
<ohos.agp.window.service.ComponentPadding: ohos.agp.window.service.ComponentPadding useUnchangedPadding()>
<java.lang.Byte: float floatValue()>
<ohos.multimodalinput.event.MouseEvent: void <init>()>
<ohos.data.resultset.AbsResultSet: short getShort(int)>
<ohos.agp.render.opengl.GLES20: void glUniform4f(int,float,float,float,float)>
<ohos.agp.render.Canvas: int getSaveCount()>
<ohos.accessibility.ability.AccessibilityInfo: void setAccessibleFocusStatus(boolean)>
<java.time.ZonedDateTime: java.time.chrono.ChronoZonedDateTime plus(long,java.time.temporal.TemporalUnit)>
<java.util.concurrent.ConcurrentLinkedQueue: java.util.Spliterator spliterator()>
<ohos.distributedhardware.devicemanager.DeviceInfo: void <init>(java.lang.String,java.lang.String,ohos.distributedhardware.devicemanager.DeviceInfo.DeviceType)>
<java.time.ZonedDateTime: java.time.chrono.ChronoLocalDate toLocalDate()>
<ohos.wifi.WifiDevice: boolean scan()>
<ohos.agp.animation.Animator.StateChangedListener: void onStop(ohos.agp.animation.Animator)>
<java.security.cert.X509Certificate: void checkValidity()>
<ohos.global.icu.text.DecimalFormatSymbols: void setDecimalSeparator(char)>
<java.security.cert.X509CRL: java.util.Date getThisUpdate()>
<ohos.event.notification.NotificationRequest: int getGroupAlertType()>
<java.sql.SQLTransactionRollbackException: void <init>()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean hasQueuedThreads()>
<ohos.media.audio.AudioDeviceDescriptor.DeviceType: ohos.media.audio.AudioDeviceDescriptor.DeviceType valueOf(java.lang.String)>
<ohos.media.camera.device.Camera: int triggerLoopingCapture(ohos.media.camera.device.FrameConfig)>
<javax.lang.model.util.SimpleElementVisitor6: java.lang.Object visitType(javax.lang.model.element.TypeElement,java.lang.Object)>
<java.time.ZonedDateTime: java.time.ZonedDateTime withMonth(int)>
<ohos.global.icu.text.DecimalFormat: java.lang.String toLocalizedPattern()>
<java.sql.Connection: void rollback()>
<ohos.media.player.Player: void specifyStream(int)>
<ohos.usb.USBEndpoint: java.lang.String toString()>
<ohos.agp.render.render3d.Engine: ohos.agp.render.render3d.Scene getScene()>
<ohos.javax.xml.stream.XMLStreamException: void <init>()>
<ohos.data.search.schema.AppItem: ohos.data.search.schema.AppItem setDownloadCount(java.lang.Long)>
<java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>
<java.util.stream.LongStream: java.util.stream.LongStream generate(java.util.function.LongSupplier)>
<ohos.data.distributed.common.KvStore: void putFloat(java.lang.String,float)>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter getInstance(java.util.Locale,ohos.global.icu.text.NumberFormat)>
<ohos.location.Location: void <init>(double,double)>
<ohos.hiviewdfx.FaultLogger.FaultLogInfo: void <init>()>
<ohos.sensor.agent.CategoryOrientationAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryOrientationDataCallback,ohos.sensor.bean.CategoryOrientation,int,long)>
<java.time.Duration: int hashCode()>
<ohos.global.icu.util.ChineseCalendar: void <init>(int,int,int,int,int)>
<ohos.miscservices.wallpaper.WallpaperController: java.io.FileDescriptor getFile(int)>
<ohos.agp.colors.ColorConverter: ohos.agp.colors.HsvColor toHsv(ohos.agp.colors.Color)>
<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>
<ohos.agp.utils.Matrix44: void preTranslate(float,float,float)>
<java.lang.Short: float floatValue()>
<java.time.OffsetDateTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.global.icu.util.IndianCalendar: void <init>(int,int,int,int,int,int)>
<java.nio.file.ProviderNotFoundException: void <init>()>
<ohos.utils.Parcel: void readShortArray(short[])>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal abs(ohos.global.icu.math.MathContext)>
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>
<java.util.Calendar.Builder: java.util.Calendar.Builder setWeekDefinition(int,int)>
<ohos.media.audio.AudioDeviceDescriptor.DeviceType: ohos.media.audio.AudioDeviceDescriptor.DeviceType valueOf(int)>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getWordSegment(java.lang.String,int,ohos.ai.nlu.OnResultListener)>
<ohos.agp.window.service.Window: void setInputPanelDisplayType(int)>
<java.util.AbstractMap: java.util.Set keySet()>
<ohos.app.Context: void setPattern(int)>
<ohos.media.recorder.Recorder: boolean reset()>
<ohos.agp.components.ScrollHelper: int getFlingVelocityX()>
<ohos.data.rdb.StoreConfig: ohos.data.DatabaseFileSecurityLevel getDatabaseFileSecurityLevel()>
<ohos.agp.components.DatePicker: ohos.agp.utils.Color getNormalTextColor()>
<javax.tools.ForwardingJavaFileManager: boolean handleOption(java.lang.String,java.util.Iterator)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent parseUri(java.lang.String)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,java.lang.String)>
<ohos.event.commonevent.ICommonEventSubscriber: void onReceive(ohos.event.commonevent.CommonEventData)>
<ohos.agp.render.opengl.GLES32: void glGetTexParameterIuiv(int,int,int[])>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDate dateEpochDay(long)>
<ohos.app.AbilityContext: void printDrawnCompleted()>
<ohos.agp.components.SlideDrawer.LayoutConfig: void <init>(int,int,ohos.agp.components.SlideDrawer.SlideDirection)>
<ohos.agp.transition.TransitionScheduler: void setTransition(ohos.agp.transition.Transition)>
<ohos.aafwk.ability.FormException.FormError: ohos.aafwk.ability.FormException.FormError[] values()>
<ohos.data.resultset.ResultSetWrapper: boolean isAtFirstRow()>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle findStaticSetter(java.lang.Class,java.lang.String,java.lang.Class)>
<java.net.URI: java.net.URI normalize()>
<ohos.agp.components.element.ShapeElement: void setGradientOrientation(ohos.agp.components.element.ShapeElement.Orientation)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder.Redirect redirectInput()>
<ohos.utils.geo.Rect: ohos.utils.geo.Rect obtainIntersectRect(int,int,int,int)>
<ohos.global.icu.lang.UScript: java.lang.String getShortName(int)>
<ohos.agp.components.Component: void setEnabled(boolean)>
<javax.lang.model.util.ElementKindVisitor6: void <clinit>()>
<ohos.aafwk.ability.FormBindingData: void <init>(ohos.utils.zson.ZSONObject)>
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<ohos.agp.render.opengl.GLES32: void glDebugMessageInsert(int,int,int,int,int,java.lang.String)>
<ohos.telephony.GsmSignalInformation: int getSignalLevel()>
<ohos.wifi.WifiSecurity.EapMethod: ohos.wifi.WifiSecurity.EapMethod[] values()>
<java.io.ObjectStreamField: int compareTo(java.lang.Object)>
<java.sql.CallableStatement: long getLong(java.lang.String)>
<java.text.MessageFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<java.util.GregorianCalendar: int getActualMinimum(int)>
<java.util.SplittableRandom: java.util.stream.LongStream longs(long,long)>
<ohos.aafwk.ability.ProviderFormInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.SimpleDateFormat: void parse(java.lang.String,ohos.global.icu.util.Calendar,java.text.ParsePosition)>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat multiplicationAll(int)>
<ohos.media.sessioncore.AVBrowserService: void onLoadAVElement(java.lang.String,ohos.media.common.sessioncore.AVBrowserResult)>
<ohos.tools.ByTrace: void finishTrace(java.lang.String)>
<java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[])>
<ohos.aafwk.ability.AbilitySlice: boolean releaseForm(int)>
<java.text.Collator: int compare(java.lang.String,java.lang.String)>
<java.util.prefs.AbstractPreferences: void clear()>
<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult.HandshakeStatus getHandshakeStatus()>
<ohos.agp.render.RadialShader: float[] getShaderStops()>
<java.util.concurrent.ThreadLocalRandom: long nextLong(long,long)>
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>
<ohos.sysappcomponents.contact.entity.Contact: java.util.List getImAddresses()>
<ohos.global.icu.text.StringSearch: void setCollator(ohos.global.icu.text.RuleBasedCollator)>
<java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<java.sql.ResultSet: java.sql.NClob getNClob(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<java.util.Formattable: void formatTo(java.util.Formatter,int,int,int)>
<java.util.concurrent.locks.LockSupport: void parkNanos(java.lang.Object,long)>
<ohos.miscservices.pasteboard.PasteData: boolean removeRecordAt(int)>
<java.security.cert.X509CRLEntry: java.math.BigInteger getSerialNumber()>
<java.time.chrono.HijrahDate: int lengthOfYear()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notIn(java.lang.String,double[])>
<ohos.utils.zson.ZSONObject: java.math.BigInteger getBigInteger(java.lang.String)>
<java.util.TreeMap: java.util.Map.Entry lowerEntry(java.lang.Object)>
<ohos.batterymanager.BatteryInfo: int getVoltage()>
<ohos.utils.Parcel: boolean writeByte(byte)>
<ohos.agp.window.dialog.BaseDialog: ohos.agp.components.Component obtainComponentViaId(int)>
<ohos.data.usage.DataUsage: java.util.Optional getVolume(ohos.app.Context,ohos.utils.net.Uri)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest addActionButton(ohos.event.notification.NotificationActionButton)>
<ohos.utils.RationalNumber: int getDenominator()>
<ohos.utils.net.Uri: java.lang.String getEncodedQuery()>
<ohos.global.icu.lang.UCharacter: java.lang.String toUpperCase(ohos.global.icu.util.ULocale,java.lang.String)>
<ohos.data.usage.CachePolicy: void removeCacheDeleteXattr(java.io.File)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneFormat setDefaultParseOptions(java.util.EnumSet)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate minus(java.time.temporal.TemporalAmount)>
<java.util.stream.LongStream: java.util.stream.IntStream mapToInt(java.util.function.LongToIntFunction)>
<ohos.data.search.model.IndexData: void put(java.lang.String,java.lang.Long)>
<java.util.zip.ZipEntry: long getCompressedSize()>
<ohos.agp.render.Paint.MaskType: ohos.agp.render.Paint.MaskType valueOf(java.lang.String)>
<ohos.multimodalinput.event.SpeechEvent: int getAction()>
<ohos.agp.components.DependentLayout: int getGravity()>
<ohos.global.resource.solidxml.TypedAttribute: int computePixelValue(java.lang.String,ohos.global.configuration.Configuration,ohos.global.configuration.DeviceCapability,boolean)>
<java.util.MissingFormatWidthException: void <init>(java.lang.String)>
<javax.net.ssl.X509ExtendedKeyManager: java.lang.String chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine)>
<ohos.aafwk.ability.continuation.DeviceConnectState: int getState()>
<java.lang.reflect.MalformedParametersException: void <init>()>
<java.nio.FloatBuffer: java.nio.FloatBuffer allocate(int)>
<java.time.ZoneId: java.time.zone.ZoneRules getRules()>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,float[])>
<ohos.agp.components.LayoutManager: void setOrientation(int)>
<ohos.global.icu.text.IDNA: java.lang.StringBuilder nameToUnicode(java.lang.CharSequence,java.lang.StringBuilder,ohos.global.icu.text.IDNA.Info)>
<javax.tools.JavaFileObject: javax.lang.model.element.NestingKind getNestingKind()>
<java.util.Arrays: void parallelSort(short[],int,int)>
<java.util.concurrent.atomic.AtomicMarkableReference: java.lang.Object getReference()>
<ohos.event.notification.ReminderRequestTimer: ohos.event.notification.ReminderRequest setTimeInterval(long)>
<java.sql.CallableStatement: void registerOutParameter(java.lang.String,int)>
<ohos.ace.ability.LocalParticleAbility: void register(ohos.ace.ability.AceAbility)>
<ohos.agp.components.Switch: int getThumbVerticalPadding()>
<java.time.chrono.ChronoPeriod: java.time.chrono.ChronoPeriod plus(java.time.temporal.TemporalAmount)>
<ohos.data.resultset.ResultSet: boolean isClosed()>
<ohos.light.bean.LightEffect: int getOnDuration()>
<java.lang.Long: java.lang.Long valueOf(long)>
<ohos.bundle.FormInfo.FormType: void <clinit>()>
<java.net.CookiePolicy: void <clinit>()>
<ohos.agp.components.Component: int getFocusable()>
<java.util.Collection: java.util.stream.Stream stream()>
<ohos.data.rdb.ValuesBucket: void putLong(java.lang.String,java.lang.Long)>
<ohos.media.common.sessioncore.AVElement: ohos.media.common.AVDescription getAVDescription()>
<ohos.data.rdb.StoreConfig: ohos.data.rdb.StoreConfig.StorageMode getStorageMode()>
<java.io.PrintWriter: void setError()>
<ohos.agp.render.Paint: void setDashPathEffectPhase(float)>
<java.io.ObjectInputStream.GetField: boolean defaulted(java.lang.String)>
<ohos.data.search.schema.NotepadItem: java.lang.String getContent()>
<java.lang.Long: long max(long,long)>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<ohos.javax.xml.stream.XMLEventWriter: void add(ohos.javax.xml.stream.XMLEventReader)>
<ohos.agp.utils.Rect: java.lang.String convertRectToValue()>
<ohos.aafwk.content.Intent: char getCharParam(java.lang.String,char)>
<java.nio.FloatBuffer: boolean hasArray()>
<java.security.cert.X509CertSelector: java.security.cert.X509Certificate getCertificate()>
<ohos.agp.components.Clock: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.awt.font.NumericShaper: java.util.Set getRangeSet()>
<java.util.Deque: java.lang.Object poll()>
<java.lang.Enum: boolean equals(java.lang.Object)>
<java.util.prefs.AbstractPreferences: void remove(java.lang.String)>
<java.net.ServerSocket: boolean getReuseAddress()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>
<ohos.agp.render.render3d.components.RenderMeshComponent: ohos.agp.render.render3d.resources.ResourceHandle getMesh()>
<java.lang.String: int lastIndexOf(int)>
<java.time.chrono.IsoChronology: java.lang.String getCalendarType()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notBetween(java.lang.String,java.util.Date,java.util.Date)>
<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>
<ohos.javax.xml.namespace.NamespaceContext: java.util.Iterator getPrefixes(java.lang.String)>
<ohos.utils.Parcel: int getCapacity()>
<ohos.agp.render.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<javax.net.ssl.SSLServerSocketFactory: java.lang.String[] getDefaultCipherSuites()>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setOcrText(java.lang.String)>
<ohos.sensor.data.CategoryOtherData: void <init>(ohos.sensor.bean.CategoryOther,int,long,int,float[])>
<ohos.data.distributed.device.DeviceKvStore: java.util.List getEntries(java.lang.String,java.lang.String)>
<java.util.function.IntToLongFunction: long applyAsLong(int)>
<ohos.data.search.schema.VideoItem: ohos.data.search.schema.VideoItem setRating(java.lang.Double)>
<java.util.jar.JarEntry: void <init>(java.util.jar.JarEntry)>
<ohos.agp.render.Canvas: void concat(ohos.agp.utils.Matrix)>
<javax.net.ssl.SNIServerName: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<ohos.global.icu.text.MessagePattern: void <init>(ohos.global.icu.text.MessagePattern.ApostropheMode)>
<java.util.Calendar: java.lang.Object clone()>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.light.bean.LightEffect: void <init>(ohos.light.bean.LightBrightness,int,int)>
<ohos.bundle.ElementName: ohos.bundle.ElementName createRelative(java.lang.String,java.lang.String,java.lang.String)>
<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>
<ohos.event.notification.NotificationSlot: java.lang.String toString()>
<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
<ohos.utils.geo.Rect: boolean equals(java.lang.Object)>
<java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<ohos.media.camera.device.CameraDeviceCallback: void <init>()>
<ohos.hiviewdfx.HiChecker.OnCautionListener: void onCautionFound(ohos.hiviewdfx.Caution)>
<ohos.global.icu.text.UnicodeSet: boolean contains(int)>
<java.nio.file.spi.FileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>
<java.util.concurrent.atomic.AtomicIntegerArray: int accumulateAndGet(int,int,java.util.function.IntBinaryOperator)>
<ohos.bundle.AbilityInfo: java.lang.String getIconPath()>
<ohos.media.sessioncore.AVSession: void setAVPlaybackState(ohos.media.common.sessioncore.AVPlaybackState)>
<ohos.media.audio.AudioStreamInfo: java.lang.String toString()>
<java.io.FilterInputStream: int read(byte[],int,int)>
<ohos.bundle.ElementName: void <clinit>()>
<ohos.javax.xml.validation.ValidatorHandler: ohos.org.w3c.dom.ls.LSResourceResolver getResourceResolver()>
<java.net.CookieManager: void setCookiePolicy(java.net.CookiePolicy)>
<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String)>
<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>
<ohos.event.notification.NotificationHelper: java.util.List getNotificationSlots()>
<ohos.agp.components.ComponentTreeObserver: void addScrolledListener(ohos.agp.components.ComponentTreeObserver.ScrollChangedListener)>
<java.time.temporal.WeekFields: java.time.temporal.TemporalField weekOfMonth()>
<ohos.data.search.schema.NoticeItem: java.lang.String getRepeatStatus()>
<ohos.global.icu.text.MessageFormat: boolean equals(java.lang.Object)>
<ohos.utils.zson.ZSONArray: boolean containsAll(java.util.Collection)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence)>
<java.util.function.BiPredicate: boolean test(java.lang.Object,java.lang.Object)>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitTypeAsInterface(javax.lang.model.element.TypeElement,java.lang.Object)>
<ohos.agp.components.surfaceprovider.SurfaceProvider: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.bundle.IBundleManager: java.util.Optional getPermissionDefByGroup(java.lang.String)>
<java.time.Period: long get(java.time.temporal.TemporalUnit)>
<ohos.global.icu.text.RuleBasedCollator: boolean isAlternateHandlingShifted()>
<java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition)>
<java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>
<ohos.global.icu.text.NumberFormat: java.lang.String format(java.math.BigDecimal)>
<ohos.global.icu.text.DecimalFormatSymbols: void setMonetaryDecimalSeparator(char)>
<javax.net.ssl.SSLParameters: java.lang.String[] getCipherSuites()>
<ohos.media.audio.ToneDescriptor.ToneType: ohos.media.audio.ToneDescriptor.ToneType[] values()>
<ohos.global.icu.util.IslamicCalendar: java.lang.String getType()>
<javax.tools.DocumentationTool.Location: void <clinit>()>
<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra valueOf(java.lang.String)>
<ohos.bluetooth.ble.BlePeripheralManagerCallback: void connectionStateChangeEvent(ohos.bluetooth.ble.BlePeripheralDevice,int,int,int,int)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>
<javax.net.ssl.SSLParameters: java.util.List getServerNames()>
<java.util.stream.LongStream: java.util.stream.LongStream distinct()>
<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()>
<ohos.agp.colors.UserDefinedColor: void <init>()>
<java.sql.ResultSet: void updateAsciiStream(java.lang.String,java.io.InputStream,int)>
<java.sql.SQLClientInfoException: void <init>(java.util.Map)>
<java.nio.channels.MembershipKey: boolean isValid()>
<ohos.global.icu.util.Calendar: void clear()>
<ohos.agp.components.Component: ohos.agp.components.Component.ClickedListener getClickedListener()>
<java.sql.PreparedStatement: void setNClob(int,java.io.Reader,long)>
<ohos.app.GeneralReceiver: void <clinit>()>
<ohos.utils.Dimension: int hashCode()>
<ohos.batterymanager.BatteryInfo: int getCapacity()>
<java.util.ArrayDeque: java.util.ArrayDeque clone()>
<ohos.app.Context: void compelVerifyUriPermission(ohos.utils.net.Uri,int,java.lang.String)>
<java.beans.PropertyChangeEvent: void setPropagationId(java.lang.Object)>
<ohos.media.camera.CameraKit: void createCamera(java.lang.String,ohos.media.camera.device.CameraStateCallback,ohos.eventhandler.EventHandler)>
<ohos.rpc.IPCSkeleton: int getCallingUid()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet complement()>
<ohos.utils.geo.Rect: boolean getIntersectRect(ohos.utils.geo.Rect)>
<java.lang.Character: int codePointCount(char[],int,int)>
<java.security.cert.X509CertSelector: boolean match(java.security.cert.Certificate)>
<ohos.media.image.Image.Component: int read()>
<java.util.FormatFlagsConversionMismatchException: void <init>(java.lang.String,char)>
<ohos.agp.components.SlideDrawer: boolean closeSmoothly()>
<java.util.concurrent.ExecutorCompletionService: void <init>(java.util.concurrent.Executor)>
<ohos.aafwk.ability.DeviceConfigInfo: boolean marshalling(ohos.utils.Parcel)>
<java.sql.Array: java.sql.ResultSet getResultSet(long,int,java.util.Map)>
<java.util.zip.Deflater: void setLevel(int)>
<ohos.agp.components.DatePicker: void setOperatedTextColor(ohos.agp.utils.Color)>
<ohos.wifi.WifiSecurity.Phase2Method: ohos.wifi.WifiSecurity.Phase2Method valueOf(java.lang.String)>
<java.nio.channels.AsynchronousSocketChannel: void write(java.nio.ByteBuffer,java.lang.Object,java.nio.channels.CompletionHandler)>
<java.util.LinkedList: java.lang.Object getLast()>
<ohos.data.rdb.RdbStore: int updateWithConflictResolution(ohos.data.rdb.ValuesBucket,ohos.data.rdb.AbsRdbPredicates,ohos.data.rdb.RdbStore.ConflictResolution)>
<java.lang.StrictMath: double toRadians(double)>
<ohos.data.resultset.ResultSet: int getRowCount()>
<javax.tools.StandardLocation: javax.tools.StandardLocation[] values()>
<ohos.global.icu.text.CaseMap.Upper: ohos.global.icu.text.CaseMap omitUnchangedText()>
<java.io.BufferedReader: long skip(long)>
<ohos.agp.colors.HsvColor: boolean equals(java.lang.Object)>
<ohos.media.audio.SoundPlayer.SoundPlayerParameters: ohos.media.audio.SoundPlayer.AudioVolumes getAudioVolumes()>
<ohos.agp.components.TabList: boolean isFixedMode()>
<java.util.ResourceBundle: void clearCache(java.lang.ClassLoader)>
<ohos.agp.components.element.ShapeElement.Orientation: ohos.agp.components.element.ShapeElement.Orientation[] values()>
<ohos.nfc.tag.NfcATag: byte[] getAtqa()>
<ohos.aafwk.content.Intent: java.lang.CharSequence getCharSequenceParam(java.lang.String)>
<java.time.Clock: java.time.Clock tickMinutes(java.time.ZoneId)>
<ohos.accessibility.ability.AccessibilityInfo: void setPassword(boolean)>
<ohos.sysappcomponents.calendar.entity.Reminders: void setRemindType(int)>
<java.util.TreeMap: java.util.NavigableMap descendingMap()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<java.io.DataInputStream: byte readByte()>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle findStaticGetter(java.lang.Class,java.lang.String,java.lang.Class)>
<java.nio.charset.spi.CharsetProvider: java.nio.charset.Charset charsetForName(java.lang.String)>
<ohos.data.async.RdbStoreAsyncHandler: void addInsertJob(ohos.data.async.JobParams,java.lang.String,ohos.data.rdb.ValuesBucket,ohos.data.async.InsertCallback)>
<java.nio.FloatBuffer: int hashCode()>
<java.text.BreakIterator: java.text.CharacterIterator getText()>
<ohos.media.muxer.Muxer: boolean setMediaOrientation(int)>
<ohos.agp.components.AttrHelper: int vp2px(float,float)>
<ohos.agp.render.opengl.Utils: boolean lessOrEqual(float,float)>
<java.util.PrimitiveIterator.OfDouble: java.lang.Double next()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates in(java.lang.String,float[])>
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>
<java.time.chrono.ChronoZonedDateTime: java.lang.String format(java.time.format.DateTimeFormatter)>
<ohos.agp.render.Texture.AlphaType: void <clinit>()>
<ohos.agp.utils.Color: int getValue()>
<ohos.os.ProcessManager: void kill(int)>
<ohos.account.AccountAbility: ohos.account.DistributedInfo queryOsAccountDistributedInfo()>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 min(ohos.agp.render.render3d.math.Vector2,ohos.agp.render.render3d.math.Vector2)>
<java.security.AccessControlContext: java.security.DomainCombiner getDomainCombiner()>
<ohos.agp.render.Paint: boolean getDither()>
<ohos.systemrestore.SystemRestore: void rebootAndInstallUpgradePackage(ohos.app.Context,java.io.File)>
<ohos.utils.PacMap: double getDoubleValue(java.lang.String)>
<java.security.acl.Group: boolean removeMember(java.security.Principal)>
<java.io.PrintWriter: void print(java.lang.Object)>
<java.sql.CallableStatement: java.sql.Timestamp getTimestamp(java.lang.String)>
<ohos.eventhandler.EventRunner: ohos.eventhandler.EventRunner create()>
<ohos.agp.render.render3d.components.LightComponent: void setLightType(ohos.agp.render.render3d.components.LightComponent.LightType)>
<ohos.aafwk.ability.fraction.Fraction: ohos.aafwk.ability.fraction.FractionAbility getFractionAbility()>
<ohos.data.search.SearchAbility: boolean connect(ohos.data.search.connect.ServiceConnectCallback)>
<java.util.logging.LogManager: void <init>()>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.Chronology getChronology()>
<java.util.concurrent.CopyOnWriteArrayList: boolean retainAll(java.util.Collection)>
<java.util.Collection: int hashCode()>
<ohos.security.seckeychain.SecKeyChain: void <init>()>
<javax.security.auth.AuthPermission: void <init>(java.lang.String)>
<ohos.data.rdb.RdbStore: boolean backup(java.lang.String)>
<java.security.SecureRandom: void <init>(java.security.SecureRandomSpi,java.security.Provider)>
<ohos.agp.components.Text: void setRightBubbleSize(int,int)>
<ohos.agp.window.dialog.PopupDialog: void setBackColor(ohos.agp.utils.Color)>
<java.nio.ByteOrder: void <clinit>()>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getVersion()>
<ohos.agp.components.ScrollHelper: void startScrollY(int,int)>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: ohos.event.notification.NotificationRequest.NotificationLongTextContent setTitle(java.lang.String)>
<java.util.Arrays: int binarySearch(double[],int,int,double)>
<java.util.Locale.LanguageRange: void <init>(java.lang.String)>
<ohos.media.common.BufferInfo: void <init>()>
<ohos.data.rdb.RdbFileLockedException: void <init>(java.lang.String)>
<java.io.StreamTokenizer: void <init>(java.io.Reader)>
<javax.tools.FileObject: java.io.Writer openWriter()>
<ohos.agp.components.TextField: ohos.agp.components.element.Element getBasement()>
<ohos.event.notification.IAdvancedNotificationManager: ohos.event.notification.NotificationSlot getNotificationSlot(java.lang.String,java.lang.String)>
<ohos.powermanager.PowerManager: ohos.powermanager.DevicePowerStatusInfo getCurrentPowerStatusInfo()>
<java.util.logging.Logger: void fine(java.util.function.Supplier)>
<java.sql.SQLInput: java.sql.Date readDate()>
<ohos.media.image.common.Filter: ohos.media.image.common.Filter restore()>
<ohos.data.usage.DataUsage: ohos.data.usage.MountState getDiskMountedStatus()>
<ohos.media.audio.AudioRendererInfo.Builder: ohos.media.audio.AudioRendererInfo.Builder isOffload(boolean)>
<ohos.miscservices.wallpaper.IWallpaperColorsChangedListener: void onWallpaperColorsChanged(ohos.miscservices.wallpaper.WallpaperColorsCollection,int)>
<java.nio.file.FileStore: boolean supportsFileAttributeView(java.lang.String)>
<java.lang.ProcessBuilder: boolean redirectErrorStream()>
<ohos.agp.render.render3d.gltf.GltfImportData: java.util.List getMaterials()>
<java.io.PrintWriter: java.io.PrintWriter append(char)>
<ohos.data.file.FileAbility: void <init>()>
<ohos.hiviewdfx.HiChecker: void addDefaultRules()>
<ohos.agp.components.SlideDrawer: void removeSlideListener(ohos.agp.components.SlideDrawer.SlideListener)>
<java.security.IdentityScope: java.security.Identity getIdentity(java.security.PublicKey)>
<java.util.concurrent.locks.StampedLock: int getReadLockCount()>
<java.lang.Thread.UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>
<java.util.Spliterator.OfLong: java.util.Spliterator.OfLong trySplit()>
<java.util.regex.Matcher: java.util.regex.Matcher useAnchoringBounds(boolean)>
<ohos.agp.utils.Line: float getEndPointX()>
<ohos.agp.components.element.Element: boolean isInheritDirection()>
<ohos.eventhandler.Dumper: java.lang.String getTag()>
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream,int,boolean)>
<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<ohos.aafwk.ability.ProviderFormInfo: void <init>(int,ohos.app.Context)>
<javax.tools.StandardLocation: javax.tools.JavaFileManager.Location locationFor(java.lang.String)>
<java.util.BitSet: void flip(int)>
<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)>
<java.util.IllegalFormatPrecisionException: int getPrecision()>
<ohos.utils.Stopwatch: void reset()>
<ohos.agp.render.render3d.Scene: void destroyNode(ohos.agp.render.render3d.SceneNode)>
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinTask pollTask()>
<java.util.Locale.LanguageRange: boolean equals(java.lang.Object)>
<java.util.Arrays: void fill(float[],float)>
<ohos.data.rdb.ValuesBucket: void <init>(int)>
<ohos.miscservices.pasteboard.PasteData.DataProperty: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.app.AbilityContext: int verifyCallingPermission(java.lang.String)>
<ohos.media.image.Image: int getFormat()>
<ohos.agp.render.Region: void clear()>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getWordInstance()>
<java.util.concurrent.ConcurrentSkipListSet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)>
<java.time.MonthDay: boolean isValidYear(int)>
<ohos.agp.components.Picker: ohos.agp.components.Picker.ValueChangedListener getValueChangedListener()>
<java.util.Locale.Builder: void <init>()>
<java.util.stream.IntStream: java.util.stream.LongStream mapToLong(java.util.function.IntToLongFunction)>
<ohos.accessibility.ability.AccessibilityWindow: boolean isAccessibilityFocused()>
<java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)>
<ohos.agp.components.PageFlipper: int getFlipInterval()>
<ohos.event.notification.NotificationActionButton.Builder: ohos.event.notification.NotificationActionButton.Builder setSemanticActionButton(ohos.event.notification.NotificationConstant.SemanticActionButton)>
<ohos.agp.components.element.ElementContainer.ElementState: void <init>()>
<ohos.data.distributed.device.DeviceStatus: ohos.data.distributed.device.DeviceStatus valueOf(java.lang.String)>
<java.lang.SecurityManager: void checkDelete(java.lang.String)>
<java.util.stream.LongStream: java.util.OptionalLong max()>
<java.sql.PreparedStatement: void setNClob(int,java.sql.NClob)>
<ohos.agp.render.opengl.GLES1X: void glMultiTexCoord4f(int,float,float,float,float)>
<java.util.zip.ZipEntry: java.lang.String getComment()>
<ohos.sensor.data.SensorData: int getAccuracy()>
<java.util.concurrent.DelayQueue: java.util.concurrent.Delayed poll(long,java.util.concurrent.TimeUnit)>
<ohos.agp.components.Component.EstimateSizeListener: boolean onEstimateSize(int,int)>
<javax.lang.model.SourceVersion: boolean isKeyword(java.lang.CharSequence)>
<ohos.miscservices.inputmethod.EditingText: int getChangedStart()>
<ohos.agp.components.TimePicker: boolean isSecondEnabled()>
<ohos.backgroundtaskmgr.ExpiredCallback: void <init>()>
<ohos.utils.PlainLongArray: java.util.Optional removeAt(int)>
<javax.crypto.spec.DESedeKeySpec: byte[] getKey()>
<ohos.data.search.schema.DocumentItem: ohos.data.search.schema.DocumentItem setDocumentCategory(java.lang.String)>
<ohos.accessibility.AccessibilityEventInfo: int getTextMoveStep()>
<java.security.ProtectionDomain: java.lang.ClassLoader getClassLoader()>
<javax.crypto.spec.PSource: java.lang.String getAlgorithm()>
<java.nio.channels.DatagramChannel: long read(java.nio.ByteBuffer[],int,int)>
<ohos.org.xml.sax.HandlerBase: void processingInstruction(java.lang.String,java.lang.String)>
<java.util.Arrays: int hashCode(int[])>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean discoverServices()>
<ohos.agp.render.Paint: ohos.agp.render.MaskFilter getMaskFilter()>
<ohos.agp.components.Picker: void setShaderColor(ohos.agp.utils.Color)>
<java.lang.StringIndexOutOfBoundsException: void <init>()>
<ohos.media.audio.SoundPlayer: int createSound(ohos.global.resource.BaseFileDescriptor)>
<java.sql.PreparedStatement: void setInt(int,int)>
<javax.lang.model.util.Elements: java.lang.String getConstantExpression(java.lang.Object)>
<ohos.media.audio.AudioDeviceDescriptor: int[] getChannelMasks()>
<javax.lang.model.util.AbstractElementVisitor8: void <init>()>
<ohos.bluetooth.BluetoothDeviceClass: int getMajorClass()>
<ohos.agp.render.Paint.ShaderType: void <clinit>()>
<ohos.agp.utils.Matrix: boolean preTranslate(float,float)>
<ohos.app.AbilityContext: java.lang.String getCallingBundle()>
<ohos.media.audio.AudioManager: boolean setMicrophoneMute(boolean)>
<java.sql.DataTruncation: boolean getParameter()>
<ohos.global.icu.text.Bidi: char[] getText()>
<java.time.OffsetDateTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.util.concurrent.BlockingDeque: java.lang.Object takeFirst()>
<java.util.jar.JarEntry: void <init>(java.lang.String)>
<ohos.biometrics.authentication.BiometricAuthentication: javax.crypto.Cipher getSecureObjectCipher()>
<ohos.agp.window.service.ComponentPadding: ohos.agp.utils.Rect getGestureRect()>
<java.time.temporal.WeekFields: java.time.temporal.TemporalField weekOfWeekBasedYear()>
<ohos.aafwk.ability.DataAbilityHelper: boolean release()>
<ohos.global.icu.util.IslamicCalendar: void handleComputeFields(int)>
<ohos.utils.LightweightMap: java.util.Collection values()>
<ohos.data.search.schema.ActionItem: java.lang.String getActionName()>
<ohos.agp.animation.AnimatorGroup: void setCurveType(int)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal divideInteger(ohos.global.icu.math.BigDecimal,ohos.global.icu.math.MathContext)>
<ohos.data.distributed.file.DistFile: ohos.data.distributed.file.DistFile[] listFiles()>
<ohos.agp.window.service.Window: void setTransparent(boolean)>
<ohos.javax.xml.parsers.SAXParserFactory: ohos.javax.xml.parsers.SAXParserFactory newInstance(java.lang.String,java.lang.ClassLoader)>
<java.time.OffsetTime: java.time.OffsetTime withHour(int)>
<ohos.global.icu.lang.UCharacter: boolean isLetterOrDigit(int)>
<ohos.agp.utils.Rect: ohos.agp.utils.Point getPivot()>
<java.util.Scanner: boolean hasNextDouble()>
<java.util.concurrent.atomic.AtomicInteger: int getAndAccumulate(int,java.util.function.IntBinaryOperator)>
<ohos.org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>
<ohos.global.icu.text.LocaleDisplayNames: java.lang.String variantDisplayName(java.lang.String)>
<java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<ohos.media.camera.device.FrameConfig: int getAfTrigger()>
<java.util.concurrent.CopyOnWriteArrayList: void clear()>
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance()>
<ohos.global.icu.text.Transliterator.Position: void <init>()>
<java.lang.Long: short shortValue()>
<java.util.concurrent.LinkedBlockingDeque: boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform1ui(int,int,int)>
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle bindTo(java.lang.Object)>
<ohos.agp.components.TimePicker.TimeChangedListener: void onTimeChanged(ohos.agp.components.TimePicker,int,int,int)>
<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>
<ohos.agp.components.Component: void setLongClickedListener(ohos.agp.components.Component.LongClickedListener)>
<java.io.File: java.io.File getCanonicalFile()>
<ohos.agp.components.Picker.Formatter: java.lang.String format(int)>
<ohos.miscservices.inputmethod.EditingCapability: boolean marshalling(ohos.utils.Parcel)>
<java.text.Normalizer.Form: java.text.Normalizer.Form valueOf(java.lang.String)>
<ohos.agp.components.element.Element: void setStateColorMode(ohos.agp.render.BlendMode)>
<ohos.utils.geo.Rect: boolean marshalling(ohos.utils.Parcel)>
<java.util.concurrent.DelayQueue: void clear()>
<ohos.ai.tts.TtsParams: int getSpeed()>
<ohos.bluetooth.HandsFreeAudioGateway: boolean connectSco()>
<ohos.app.Context: ohos.utils.net.Uri getCaller()>
<ohos.utils.PlainLongArray: long valueAt(int)>
<ohos.net.NetHandle: void bindSocket(java.net.Socket)>
<ohos.usb.USBDevice: int getConfigurationCount()>
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>
<ohos.event.notification.MessageUser: boolean isUserImportant()>
<ohos.bluetooth.ble.BlePeripheralCallback: void characteristicReadEvent(ohos.bluetooth.ble.GattCharacteristic,int)>
<ohos.agp.components.ComponentContainer.LayoutConfig: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.render.Texture.AlphaType: ohos.agp.render.Texture.AlphaType valueOf(java.lang.String)>
<ohos.aafwk.ability.AbilityForm: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.i18n.utils.LocalesFallback: java.util.ArrayList findValidAndSort(java.lang.String,java.util.List)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(int)>
<java.util.IllegalFormatConversionException: java.lang.Class getArgumentClass()>
<ohos.media.recorder.Recorder: boolean setOutputFormat(int)>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,long,long)>
<ohos.utils.Parcel: ohos.interwork.utils.ParcelableEx readParcelableEx(java.lang.ClassLoader)>
<ohos.vibrator.agent.VibratorAgent: boolean startOnce(int)>
<java.util.logging.Logger: void throwing(java.lang.String,java.lang.String,java.lang.Throwable)>
<ohos.agp.window.dialog.DisplayDialog: void setContentComponent(ohos.agp.components.DirectionalLayout)>
<ohos.powermanager.DevicePowerStatusInfo: ohos.powermanager.PowerManager.PowerState getPowerState()>
<ohos.global.resource.solidxml.TypedAttribute: ohos.global.resource.solidxml.Pattern getPatternValue()>
<ohos.utils.RationalNumber: ohos.utils.RationalNumber createRationalFromString(java.lang.String)>
<ohos.agp.text.Font: int getWeight()>
<java.util.zip.DeflaterInputStream: void <init>(java.io.InputStream)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitType(javax.lang.model.type.TypeMirror,java.lang.Object)>
<java.util.logging.Logger: java.util.logging.Logger getGlobal()>
<ohos.bundle.IInstallerCallback: void onFinished(int,java.lang.String)>
<ohos.data.distributed.common.Value: int getInt()>
<ohos.data.preferences.Preferences: int getInt(java.lang.String,int)>
<ohos.miscservices.timeutility.Time: void <init>()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,java.util.Date)>
<java.util.Arrays: int binarySearch(java.lang.Object[],int,int,java.lang.Object)>
<java.io.FilterInputStream: int available()>
<ohos.usb.USBDevice: void setConfigurations(ohos.usb.USBConfig[])>
<java.time.Instant: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.temporal.ChronoUnit: boolean isTimeBased()>
<java.util.Locale: java.lang.String getDisplayCountry()>
<ohos.security.keystore.KeyStoreKeySpec: int getSecKeyAuthDuration()>
<ohos.agp.animation.AnimatorProperty: void <init>(ohos.agp.components.Component)>
<ohos.agp.components.BaseItemProvider: void notifyDataSetItemInserted(int)>
<ohos.global.icu.text.Collator: void setStrength(int)>
<ohos.org.xml.sax.SAXException: java.lang.Exception getException()>
<ohos.data.orm.AllChangeToTarget: void <init>()>
<ohos.data.search.schema.VideoItem: void <init>()>
<ohos.global.icu.util.EthiopicCalendar: int handleComputeMonthStart(int,int,boolean)>
<ohos.location.GeoAddress: java.lang.String getPremises()>
<ohos.multimodalinput.event.StylusEvent: int getButtons()>
<java.lang.Character: int digit(char,int)>
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLParameters engineGetSupportedSSLParameters()>
<java.time.LocalDate: java.time.LocalDate minusYears(long)>
<ohos.agp.components.element.ShapeElement: void setShaderType(int)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>
<ohos.agp.render.render3d.util.SceneUtil: void updateCameraViewport(ohos.agp.render.render3d.Entity,int,int)>
<ohos.media.recorder.Recorder.IRecorderListener: void onMessage(int,int)>
<ohos.aafwk.ability.AbilitySlice: void setUIContent(int)>
<ohos.miscservices.timeutility.Time: long getCurrentThreadTime()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenAcceptBothAsync(java.util.concurrent.CompletionStage,java.util.function.BiConsumer)>
<ohos.multimodalinput.event.ManipulationEvent: int getPointerId(int)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,int)>
<java.util.concurrent.atomic.AtomicStampedReference: void set(java.lang.Object,int)>
<java.text.SimpleDateFormat: java.util.Date get2DigitYearStart()>
<ohos.agp.colors.CmykColor: float getMagenta()>
<java.time.chrono.HijrahChronology: void <clinit>()>
<java.sql.Statement: boolean getMoreResults(int)>
<java.util.zip.ZipEntry: java.util.zip.ZipEntry setLastAccessTime(java.nio.file.attribute.FileTime)>
<java.util.concurrent.CopyOnWriteArrayList: void <init>()>
<ohos.agp.components.Component: boolean performScale()>
<ohos.interwork.utils.PacMapEx: void <init>(ohos.interwork.utils.PacMapEx,boolean)>
<javax.lang.model.element.Name: int hashCode()>
<ohos.eventhandler.EventHandler: void sendEvent(int)>
<java.util.concurrent.atomic.DoubleAccumulator: void <init>(java.util.function.DoubleBinaryOperator,double)>
<ohos.agp.render.Paint.MaskType: void <clinit>()>
<ohos.javax.xml.stream.events.XMLEvent: void writeAsEncodedUnicode(java.io.Writer)>
<ohos.agp.render.Canvas: ohos.agp.utils.Rect getLocalClipBounds()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: void acquireSharedInterruptibly(long)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty moveToX(float)>
<java.nio.ByteBuffer: float getFloat(int)>
<ohos.agp.render.Paint: void setStrokeWidth(float)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String,java.io.Reader)>
<java.util.zip.Inflater: void setInput(byte[])>
<ohos.agp.render.opengl.GLES30: void glGenQueries(int,java.nio.IntBuffer)>
<ohos.media.common.AVDescription.Builder: void <init>()>
<java.util.NavigableMap: java.lang.Object lowerKey(java.lang.Object)>
<ohos.usb.USBInterface: int getInterfaceClass()>
<ohos.aafwk.ability.SystemMemoryInfo: void <init>()>
<ohos.data.distributed.common.SecurityLevel: void <clinit>()>
<java.nio.file.Files: java.util.Set getPosixFilePermissions(java.nio.file.Path,java.nio.file.LinkOption[])>
<java.net.InetSocketAddress: int hashCode()>
<ohos.data.search.schema.Schema: java.lang.String getThumbnailUrl()>
<ohos.utils.LightweightSet: void <init>(int)>
<java.lang.EnumConstantNotPresentException: void <init>(java.lang.Class,java.lang.String)>
<ohos.org.xml.sax.HandlerBase: void endDocument()>
<java.security.spec.EllipticCurve: java.math.BigInteger getA()>
<ohos.agp.utils.Matrix: java.lang.String toString()>
<ohos.agp.components.TimePicker: ohos.agp.text.Font getSelectedTextFont()>
<ohos.agp.colors.CmykColor: void <init>(ohos.agp.colors.CmykColor)>
<ohos.agp.render.render3d.SceneNode: java.util.Optional lookupNodeByComponent(java.lang.Class)>
<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinTask adapt(java.util.concurrent.Callable)>
<ohos.javax.xml.parsers.FactoryConfigurationError: void <init>()>
<ohos.global.icu.text.UnicodeSet: int compareTo(ohos.global.icu.text.UnicodeSet,ohos.global.icu.text.UnicodeSet.ComparisonStyle)>
<ohos.accessibility.ability.AccessibilityInfo: void setSelected(boolean)>
<java.time.chrono.IsoChronology: java.time.chrono.Era eraOf(int)>
<ohos.agp.components.LayoutScatterException: void <init>(java.lang.String)>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: int getIndexCount()>
<ohos.aafwk.content.IntentParams: java.util.Set keySet()>
<ohos.media.sessioncore.AVController.PlayControls: void playBySearch(java.lang.String,ohos.utils.PacMap)>
<java.lang.SecurityManager: void checkMemberAccess(java.lang.Class,int)>
<java.sql.Clob: java.lang.String getSubString(long,int)>
<java.time.chrono.JapaneseDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<java.util.Deque: java.util.Iterator iterator()>
<javax.lang.model.type.IntersectionType: java.util.List getBounds()>
<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>
<java.io.StringBufferInputStream: int available()>
<java.net.Socket: boolean getReuseAddress()>
<java.io.Reader: long skip(long)>
<ohos.distributedschedule.interwork.IInitCallback: void onInitSuccess(java.lang.String)>
<java.security.cert.CertPath: java.lang.String toString()>
<ohos.agp.render.render3d.math.Vector3: int hashCode()>
<java.nio.channels.AsynchronousFileChannel: void read(java.nio.ByteBuffer,long,java.lang.Object,java.nio.channels.CompletionHandler)>
<ohos.agp.render.Path: void rConicTo(float,float,float,float,float)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal divide(ohos.global.icu.math.BigDecimal,ohos.global.icu.math.MathContext)>
<ohos.utils.net.Uri: java.lang.String getDecodedQuery()>
<ohos.dcall.DistributedCallManager: boolean hasCall()>
<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.media.camera.device.FrameConfig.Builder: int getAwbMode()>
<java.math.BigInteger: java.math.BigInteger clearBit(int)>
<java.net.IDN: java.lang.String toUnicode(java.lang.String,int)>
<java.security.Certificate: java.security.PublicKey getPublicKey()>
<java.text.MessageFormat: void setFormats(java.text.Format[])>
<ohos.agp.components.Component.VoiceEvent: void <init>(java.lang.String,int,boolean)>
<ohos.org.xml.sax.SAXException: java.lang.Throwable getCause()>
<ohos.data.search.schema.EventItem: void <init>()>
<ohos.data.rdb.StoreConfig.Builder: ohos.data.rdb.StoreConfig.Builder setJournalMode(ohos.data.rdb.StoreConfig.JournalMode)>
<ohos.data.resultset.CombinedResultSet: boolean isColumnNull(int)>
<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<ohos.accessibility.AccessibilityEventInfo: void setLastContent(java.lang.CharSequence)>
<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.io.ObjectInputStream: char readChar()>
<java.util.prefs.AbstractPreferences: java.lang.String get(java.lang.String,java.lang.String)>
<ohos.global.icu.text.MessagePattern: java.lang.String getSubstring(ohos.global.icu.text.MessagePattern.Part)>
<javax.lang.model.element.Modifier: void <clinit>()>
<ohos.agp.components.AbsButton: void setButtonElement(ohos.agp.components.element.Element)>
<ohos.utils.geo.Rect: void scale(float)>
<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.NetworkChannel bind(java.net.SocketAddress)>
<ohos.aafwk.ability.Ability: ohos.aafwk.ability.DataAbilityResult[] executeBatch(java.util.ArrayList)>
<java.util.Arrays: int binarySearch(short[],short)>
<java.util.HashSet: boolean contains(java.lang.Object)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object removeFirst()>
<ohos.aafwk.content.Intent: java.util.ArrayList getCharSequenceArrayListParam(java.lang.String)>
<java.time.LocalDateTime: int compareTo(java.lang.Object)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder replaceWith(byte[])>
<ohos.agp.components.element.PixelMapElement: void <init>(ohos.media.image.PixelMap)>
<ohos.hiviewdfx.Debug.IpcType: ohos.hiviewdfx.Debug.IpcType[] values()>
<java.util.concurrent.Phaser: boolean isTerminated()>
<java.time.ZonedDateTime: java.time.ZonedDateTime plusMonths(long)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Map.Entry lastEntry()>
<java.net.SecureCacheResponse: java.lang.String getCipherSuite()>
<java.time.chrono.HijrahDate: java.time.chrono.Era getEra()>
<java.util.concurrent.ConcurrentSkipListSet: boolean equals(java.lang.Object)>
<java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: long awaitNanos(long)>
<java.time.LocalDateTime: java.time.LocalDateTime plusYears(long)>
<java.util.SimpleTimeZone: java.lang.Object clone()>
<java.security.KeyPairGenerator: void initialize(int)>
<ohos.media.common.AVDescription: ohos.utils.net.Uri getIconUri()>
<java.sql.PreparedStatement: void setCharacterStream(int,java.io.Reader,long)>
<ohos.agp.animation.AnimatorScatterException: void <init>(java.lang.String,java.lang.Throwable)>
<java.io.PrintWriter: void println(char[])>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendPattern(java.lang.String)>
<java.lang.reflect.Modifier: void <init>()>
<java.sql.Connection: void close()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getTimeInstance(ohos.global.icu.util.Calendar,int,ohos.global.icu.util.ULocale)>
<ohos.agp.graphics.SurfaceOps: void addCallback(ohos.agp.graphics.SurfaceOps.Callback)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates using(java.lang.String[])>
<ohos.global.icu.util.ULocale: java.lang.String toLegacyKey(java.lang.String)>
<ohos.media.player.Player: boolean setVolume(float)>
<ohos.agp.components.DatePicker: void setSelectedTextColor(ohos.agp.utils.Color)>
<ohos.utils.PlainArray: java.lang.String toString()>
<ohos.data.search.schema.EventItem: ohos.data.search.schema.EventItem setStartDate(java.lang.Long)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<java.util.Locale.FilteringMode: java.util.Locale.FilteringMode[] values()>
<ohos.agp.utils.Rect: boolean unmarshalling(ohos.utils.Parcel)>
<java.lang.reflect.InvocationTargetException: void <init>()>
<java.security.cert.X509CRL: void verify(java.security.PublicKey)>
<java.util.Scanner: java.util.Scanner useRadix(int)>
<ohos.global.icu.util.Currency: ohos.global.icu.util.ULocale[] getAvailableULocales()>
<ohos.data.search.schema.Schema: java.lang.Object setThumbnailUrl(java.lang.String)>
<javax.security.cert.X509Certificate: byte[] getSigAlgParams()>
<java.security.KeyRep.Type: java.security.KeyRep.Type[] values()>
<javax.crypto.MacSpi: void <init>()>
<java.sql.Timestamp: boolean before(java.sql.Timestamp)>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 getNormalized()>
<java.util.Arrays: byte[] copyOf(byte[],int)>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setScaleX(float)>
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>
<ohos.global.icu.text.IDNA: ohos.global.icu.text.IDNA getUTS46Instance(int)>
<ohos.ai.nlu.ResponseResult: void <init>(int,java.lang.String)>
<ohos.bluetooth.BluetoothHost: boolean disableBt()>
<ohos.agp.components.BaseItemProvider: void removeDataSubscriber(ohos.agp.database.DataSetSubscriber)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
<java.util.BitSet: boolean equals(java.lang.Object)>
<ohos.javax.xml.stream.util.XMLEventAllocator: void allocate(ohos.javax.xml.stream.XMLStreamReader,ohos.javax.xml.stream.util.XMLEventConsumer)>
<java.util.concurrent.TimeUnit: long toMillis(long)>
<ohos.miscservices.inputmethod.EditingCapability: void setMaxChars(int)>
<ohos.sysappcomponents.calendar.entity.Events: void setAvailableStatus(int)>
<java.time.Duration: int compareTo(java.time.Duration)>
<ohos.agp.animation.AnimatorGroup.Builder: void <init>(ohos.agp.animation.AnimatorGroup)>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>
<java.net.HttpCookie: boolean isHttpOnly()>
<java.nio.ByteBuffer: int getInt()>
<java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel open()>
<ohos.data.rdb.RdbStore: void executeSql(java.lang.String)>
<java.time.ZonedDateTime: int get(java.time.temporal.TemporalField)>
<java.time.MonthDay: java.time.MonthDay of(int,int)>
<java.sql.CallableStatement: void setNString(java.lang.String,java.lang.String)>
<java.io.FileDescriptor: void <clinit>()>
<ohos.media.common.StorageProperty.Builder: void <init>()>
<ohos.media.camera.device.FrameConfig: int getAwbMode()>
<ohos.multimodalinput.event.MultimodalEvent: java.lang.String getDeviceId()>
<java.nio.CharBuffer: int arrayOffset()>
<ohos.distributedhardware.devicemanager.DeviceInfo: void <init>()>
<ohos.ai.asr.AsrIntent.AsrEngineType: ohos.ai.asr.AsrIntent.AsrEngineType[] values()>
<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>
<java.sql.DatabaseMetaData: java.lang.String getSearchStringEscape()>
<java.util.concurrent.ConcurrentHashMap.KeySetView: void clear()>
<ohos.agp.render.render3d.gltf.GltfLoader: ohos.agp.render.render3d.gltf.GltfImportData importGltf(ohos.agp.render.render3d.gltf.GltfData,int)>
<ohos.agp.components.MagicLayout.LayoutConfig: void <init>(ohos.agp.components.MagicLayout.LayoutConfig)>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: ohos.event.notification.NotificationRequest.NotificationLongTextContent setExpandedTitle(java.lang.String)>
<java.time.chrono.JapaneseEra: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>
<java.util.Locale: java.lang.String[] getISOLanguages()>
<ohos.net.RouteInfo: ohos.net.IpPrefix getDestination()>
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getContextualShaper(int,int)>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setAeMode(int,ohos.agp.utils.Rect)>
<ohos.global.icu.util.DateInterval: void <init>(long,long)>
<ohos.media.camera.params.FaceDetectionResult: java.util.Map getSmiles()>
<java.nio.file.FileStore: long getTotalSpace()>
<ohos.utils.geo.Rect: boolean isInclude(int,int)>
<javax.lang.model.util.AbstractAnnotationValueVisitor6: java.lang.Object visitUnknown(javax.lang.model.element.AnnotationValue,java.lang.Object)>
<ohos.data.distributed.device.DeviceFilterStrategy: ohos.data.distributed.device.DeviceFilterStrategy[] values()>
<ohos.agp.window.service.Window: void addWindowFlags(int)>
<ohos.global.resource.Entry.Type: ohos.global.resource.Entry.Type[] values()>
<ohos.wifi.p2p.WifiP2pGroup: java.lang.String getInterfaceName()>
<ohos.agp.render.render3d.components.RenderMeshComponent: void setMesh(ohos.agp.render.render3d.resources.ResourceHandle)>
<ohos.agp.render.opengl.GLES31: void glVertexAttribFormat(int,int,int,boolean,int)>
<java.io.StreamTokenizer: void <init>(java.io.InputStream)>
<java.util.concurrent.atomic.AtomicLong: int intValue()>
<java.sql.DatabaseMetaData: boolean supportsSubqueriesInExists()>
<ohos.aafwk.content.IntentParams: void <init>(ohos.aafwk.content.IntentParams)>
<java.sql.BatchUpdateException: void <init>(java.lang.Throwable)>
<ohos.event.notification.NotificationActionButton: ohos.media.image.PixelMap getIcon()>
<ohos.data.resultset.ResultSet: int getRowIndex()>
<ohos.global.icu.util.TimeZone: java.lang.String getCanonicalID(java.lang.String)>
<ohos.distributedschedule.interwork.IDeviceStateCallback: void onDeviceOffline(java.lang.String,int)>
<ohos.agp.render.render3d.math.Vector2: float lengthSquared(float,float)>
<java.time.chrono.JapaneseDate: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<ohos.global.icu.text.SearchIterator: int next()>
<ohos.account.app.AppAccount: void <init>(java.lang.String,java.lang.String)>
<java.io.PrintWriter: void flush()>
<java.sql.RowId: int hashCode()>
<ohos.agp.components.Text: int getBubbleHeight()>
<ohos.media.audio.AudioWaver: boolean setWaveDataObserver(ohos.media.audio.AudioWaver.WaveDataObserver,int)>
<ohos.agp.components.element.ShapeElement: void setCornerRadiiArray(float[])>
<java.text.MessageFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<ohos.media.sessioncore.AVController: void sendCustomCommand(java.lang.String,ohos.utils.PacMap,ohos.app.GeneralReceiver)>
<ohos.hiviewdfx.HiTraceId: void <init>(byte[])>
<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>
<java.io.CharConversionException: void <init>(java.lang.String)>
<ohos.agp.components.Picker.ElementFormatter: ohos.agp.components.element.Element rightElement(int)>
<java.util.Observable: void deleteObservers()>
<java.util.Stack: java.lang.Object pop()>
<java.lang.StrictMath: long round(double)>
<ohos.data.distributed.file.DistFile: boolean copyTo(ohos.data.distributed.file.DistFile)>
<ohos.security.asset.AssetOperatorAbs: void <init>()>
<ohos.global.icu.util.Calendar: int internalGet(int)>
<java.time.LocalDate: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<java.net.HttpURLConnection: boolean getInstanceFollowRedirects()>
<javax.sql.RowSetReader: void readData(javax.sql.RowSetInternal)>
<ark.system.HotFixClassLoader: void <init>()>
<java.net.HttpCookie: int getVersion()>
<java.util.Arrays: boolean equals(float[],float[])>
<ohos.data.resultset.ResultSet: short getShort(int)>
<ohos.org.w3c.dom.ls.LSInput: void setStringData(java.lang.String)>
<ohos.agp.components.DatePicker: void setDateOrder(int)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.Object getProperty(java.lang.String)>
<java.sql.ResultSet: void updateSQLXML(int,java.sql.SQLXML)>
<ohos.data.resultset.AbsResultSet: boolean isColumnNull(int)>
<java.lang.StringBuffer: int codePointAt(int)>
<ohos.agp.render.Paint: void setStrokeJoin(ohos.agp.render.Paint.Join)>
<java.time.ZonedDateTime: java.time.ZonedDateTime withLaterOffsetAtOverlap()>
<ohos.agp.components.Text: boolean getPaddingForText()>
<java.lang.Float: java.lang.Float valueOf(java.lang.String)>
<ohos.agp.components.Component: int getBottom()>
<javax.crypto.CipherInputStream: boolean markSupported()>
<ohos.net.NetHotspot: ohos.net.NetHotspot getInstance(ohos.app.Context)>
<ohos.media.audio.AudioCapturerInfo: int getSessionID()>
<java.io.PushbackReader: long skip(long)>
<ohos.agp.components.LayoutScatter: ohos.agp.components.LayoutScatter clone(ohos.app.Context,ohos.global.resource.ResourceManager)>
<ohos.agp.render.render3d.resources.MaterialDesc.MaterialType: ohos.agp.render.render3d.resources.MaterialDesc.MaterialType[] values()>
<java.util.stream.Stream: java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)>
<java.util.Calendar: boolean after(java.lang.Object)>
<java.lang.Thread: boolean interrupted()>
<java.nio.channels.Pipe: java.nio.channels.Pipe.SourceChannel source()>
<ohos.data.search.schema.PhotoItem: java.lang.String getCountry()>
<ohos.media.common.sessioncore.AVPlaybackState: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.data.resultset.SharedBlock: int getStartRowIndex()>
<ohos.media.camera.device.FrameStateCallback: void onFrameProgressed(ohos.media.camera.device.Camera,ohos.media.camera.device.FrameConfig,ohos.media.camera.device.FrameResult)>
<java.sql.ResultSet: void updateBoolean(java.lang.String,boolean)>
<ohos.agp.colors.HsvColor: void setSaturation(float)>
<java.util.Collections: java.util.Iterator emptyIterator()>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDate date(java.time.chrono.Era,int,int,int)>
<ohos.agp.components.SlideDrawer.DrawerState: ohos.agp.components.SlideDrawer.DrawerState[] values()>
<ohos.data.orm.OrmContext: java.lang.Double min(ohos.data.orm.OrmPredicates,java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThanOrEqualTo(java.lang.String,java.util.Calendar)>
<ohos.global.i18n.text.MeasureOptions.Style: ohos.global.i18n.text.MeasureOptions.Style valueOf(java.lang.String)>
<java.net.InetAddress: boolean isMulticastAddress()>
<java.util.concurrent.CountedCompleter: boolean exec()>
<ohos.sysappcomponents.contact.entity.ImAddress: java.lang.String getImAddress()>
<java.net.Authenticator: java.net.PasswordAuthentication getPasswordAuthentication()>
<ohos.global.icu.util.IslamicCalendar: void setCalculationType(ohos.global.icu.util.IslamicCalendar.CalculationType)>
<ohos.bundle.InstallParam: int getUserId()>
<java.text.CollationElementIterator: void setText(java.lang.String)>
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>
<ohos.agp.render.opengl.GLES1X: void glClearStencil(int)>
<ohos.bluetooth.BluetoothDeviceClass: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate dateYearDay(int,int)>
<ohos.data.distributed.user.SingleKvStore: ohos.data.distributed.common.KvStoreResultSet getResultSet(ohos.data.distributed.common.Query)>
<ohos.agp.render.render3d.resources.ResourceManager: ohos.agp.render.render3d.resources.GpuResourceHandle getEmptyGpuResourceHandle()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenRunAsync(java.lang.Runnable,java.util.concurrent.Executor)>
<java.lang.System: void runFinalizersOnExit(boolean)>
<ohos.utils.RationalNumber: float floatValue()>
<java.lang.Math: int getExponent(float)>
<java.util.LongSummaryStatistics: long getMin()>
<java.time.chrono.ChronoZonedDateTime: java.time.Instant toInstant()>
<ohos.media.audio.AudioCapturerCallback: void onCapturerConfigChanged(java.util.List)>
<java.nio.channels.ServerSocketChannel: java.nio.channels.NetworkChannel bind(java.net.SocketAddress)>
<ohos.media.audio.AudioDeviceDescriptor: ohos.media.audio.AudioDeviceDescriptor.DeviceType getType()>
<ohos.event.notification.NotificationSlot: java.lang.String getId()>
<java.lang.Double: boolean isInfinite(double)>
<ohos.global.icu.text.Bidi: void <init>(java.lang.String,int)>
<java.lang.ref.PhantomReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
<ohos.sysappcomponents.contact.entity.Name: java.lang.String getMiddleNamePhonetic()>
<ohos.agp.graphics.TextureHolder.OnNewFrameCallback: void onNewFrame(ohos.agp.graphics.TextureHolder)>
<ohos.utils.PlainLongArray: int locate(int)>
<ohos.sysappcomponents.contact.entity.Name: void setGivenNamePhonetic(java.lang.String)>
<java.util.Arrays: void setAll(long[],java.util.function.IntToLongFunction)>
<ohos.agp.render.opengl.GLES20: void glEnable(int)>
<javax.net.SocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
<java.sql.Connection: void rollback(java.sql.Savepoint)>
<ohos.agp.render.opengl.GLES20: void glGetUniformfv(int,int,java.nio.FloatBuffer)>
<ohos.interwork.utils.PacMapEx: void setCustomClassLoader(java.lang.ClassLoader)>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion multiply(ohos.agp.render.render3d.math.Quaternion,ohos.agp.render.render3d.math.Quaternion)>
<ohos.miscservices.inputmethodability.InputMethodAbility: void onEndInput()>
<java.math.BigDecimal: long longValue()>
<ohos.event.intentagent.IntentAgentInfo: void <init>(ohos.event.intentagent.IntentAgentInfo)>
<ohos.data.distributed.common.Schema: void <init>()>
<ohos.hiviewdfx.Debug: void functionTraceEnd()>
<java.io.PrintWriter: void print(float)>
<ohos.javax.xml.validation.ValidatorHandler: void setFeature(java.lang.String,boolean)>
<ohos.media.player.Player: boolean enableSingleLooping(boolean)>
<java.net.HttpCookie: boolean hasExpired()>
<ohos.global.icu.util.ULocale: java.lang.String getKeywordValue(java.lang.String,java.lang.String)>
<ohos.agp.components.TextField: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.ai.cv.common.BoundingBox: void setTop(int)>
<java.time.LocalTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.agp.components.LayoutScatter: ohos.agp.components.Component parse(int,ohos.agp.components.ComponentContainer,boolean)>
<ohos.event.notification.NotificationActionButton: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.event.notification.NotificationActionButton: ohos.event.intentagent.IntentAgent getIntentAgent()>
<java.nio.charset.Charset: boolean canEncode()>
<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)>
<ohos.utils.BasePacMap: void putShortValueArray(java.lang.String,short[])>
<java.time.LocalTime: java.time.LocalTime ofSecondOfDay(long)>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate dateEpochDay(long)>
<java.net.HttpURLConnection: boolean getFollowRedirects()>
<java.net.DatagramSocket: void setReceiveBufferSize(int)>
<java.sql.DatabaseMetaData: boolean ownInsertsAreVisible(int)>
<java.text.NumberFormat: java.text.NumberFormat getInstance()>
<ohos.telephony.CdmaSignalInformation: int hashCode()>
<ohos.agp.components.TabList: void setTabTextAlignment(int)>
<java.time.temporal.TemporalField: java.lang.String toString()>
<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>
<ohos.global.icu.text.TimeZoneNames: ohos.global.icu.text.TimeZoneNames getTZDBInstance(ohos.global.icu.util.ULocale)>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction.Builder: ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction.Builder setOptions(ohos.utils.PacMap)>
<javax.lang.model.element.PackageElement: java.util.List getEnclosedElements()>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<java.security.cert.CertStore: java.util.Collection getCRLs(java.security.cert.CRLSelector)>
<ohos.ai.cv.common.CvRect: boolean isEmpty()>
<java.util.Vector: java.lang.Object clone()>
<java.lang.UnsatisfiedLinkError: void <init>()>
<ohos.agp.utils.RectFloat: void clear()>
<java.sql.SQLInvalidAuthorizationSpecException: void <init>(java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glDeleteTextures(int,int[])>
<ohos.ai.tts.TtsListener: void onError(java.lang.String,java.lang.String)>
<ohos.media.common.sessioncore.AVSessionCallback: void onPlayFastForward()>
<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String,java.security.Provider)>
<java.time.zone.ZoneOffsetTransitionRule: java.time.zone.ZoneOffsetTransitionRule.TimeDefinition getTimeDefinition()>
<ohos.agp.components.ListContainer: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.aafwk.ability.fraction.FractionAbility: void onRestoreAbilityState(ohos.utils.PacMap)>
<java.sql.Driver: int getMinorVersion()>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>
<ohos.media.audio.AudioRenderer: ohos.media.audio.AudioStreamInfo.ChannelMask getAudioChannel()>
<ohos.media.extractor.Extractor: int getStreamId()>
<ohos.data.rdb.RdbStore: long replace(java.lang.String,ohos.data.rdb.ValuesBucket)>
<ohos.aafwk.ability.DataAbilityHelper: int batchInsert(ohos.utils.net.Uri,ohos.data.rdb.ValuesBucket[])>
<ohos.agp.components.Switch: int getThumbWidth()>
<ohos.agp.render.opengl.GLES1X: void glPixelStorei(int,int)>
<java.security.Identity: java.security.IdentityScope getScope()>
<java.util.stream.DoubleStream: java.util.stream.BaseStream parallel()>
<java.util.ResourceBundle: boolean containsKey(java.lang.String)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: void <init>()>
<javax.sql.RowSet: void setObject(java.lang.String,java.lang.Object,int)>
<java.lang.StackTraceElement: boolean isNativeMethod()>
<java.net.URL: int getDefaultPort()>
<java.net.URI: int compareTo(java.net.URI)>
<java.nio.channels.ScatteringByteChannel: long read(java.nio.ByteBuffer[])>
<java.lang.Process: int waitFor()>
<java.time.chrono.AbstractChronology: int compareTo(java.lang.Object)>
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<ohos.hiviewdfx.Debug: void emulatorTraceBegin()>
<java.sql.SQLInvalidAuthorizationSpecException: void <init>(java.lang.String,java.lang.String,int)>
<ohos.powermanager.PowerManager: boolean isRunningLockTypeSupported(ohos.powermanager.PowerManager.RunningLockType)>
<ohos.data.resultset.TableResultSet: int getRowCount()>
<ohos.aafwk.content.Intent: void setPicker(ohos.aafwk.content.Intent)>
<ohos.global.icu.lang.UCharacter: java.lang.String foldCase(java.lang.String,boolean)>
<ohos.agp.window.dialog.DisplayDialog.DialogProvider: void <init>(java.lang.String,int,int,int,int)>
<ohos.bluetooth.ble.BlePeripheralManagerCallback: void <init>()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query notEqualTo(java.lang.String,boolean)>
<java.sql.PreparedStatement: void setNCharacterStream(int,java.io.Reader,long)>
<java.time.chrono.ChronoLocalDateTime: java.time.chrono.Chronology getChronology()>
<ohos.global.icu.text.PluralFormat: void <init>(ohos.global.icu.text.PluralRules)>
<ohos.security.asset.AssetResult: int getResultNumber()>
<ohos.agp.components.TabList.Tab: int getPosition()>
<javax.security.cert.CertificateEncodingException: void <init>()>
<java.util.Map: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>
<javax.crypto.MacSpi: void engineUpdate(byte[],int,int)>
<ohos.utils.SequenceUuid: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.sysappcomponents.calendar.entity.Events: void setAttendeeInfo(boolean)>
<ohos.global.i18n.text.MeasureOptions.Usage: ohos.global.i18n.text.MeasureOptions.Usage[] values()>
<ohos.multimodalinput.event.KeyBoardEvent: void enableIme()>
<ohos.agp.components.ProgressBar: void setProgressColor(ohos.agp.utils.Color)>
<ohos.javax.xml.validation.TypeInfoProvider: boolean isSpecified(int)>
<java.util.stream.Collectors: java.util.stream.Collector minBy(java.util.Comparator)>
<java.time.chrono.HijrahDate: java.time.chrono.ChronoPeriod until(java.time.chrono.ChronoLocalDate)>
<ohos.event.notification.IAdvancedNotificationManager: void scheduleNotification(java.lang.String,java.lang.String,ohos.event.notification.NotificationRequest)>
<javax.net.ssl.SSLParameters: void setProtocols(java.lang.String[])>
<ohos.media.audio.AudioManager: int getMasterOutputFrameCount()>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>
<java.security.spec.InvalidKeySpecException: void <init>()>
<ohos.event.notification.NotificationConstant.InputEditType: ohos.event.notification.NotificationConstant.InputEditType[] values()>
<ohos.multimodalinput.event.KeyBoardEvent: void <init>()>
<java.io.NotSerializableException: void <init>()>
<java.util.concurrent.locks.StampedLock: long readLock()>
<ohos.agp.render.opengl.ETC1: int etc1PkmGetHeight(java.nio.Buffer)>
<ohos.media.common.AudioProperty.Builder: ohos.media.common.AudioProperty.Builder setRecorderBitRate(int)>
<java.util.concurrent.ConcurrentNavigableMap: java.util.concurrent.ConcurrentNavigableMap headMap(java.lang.Object)>
<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel bind(java.net.SocketAddress)>
<ohos.accessibility.AccessibilityEventInfo: int getAccessibilityEventType()>
<java.io.LineNumberReader: void <init>(java.io.Reader,int)>
<ohos.utils.net.Uri: java.util.List getQueryParamsByKey(java.lang.String)>
<java.net.DatagramSocket: java.net.SocketAddress getLocalSocketAddress()>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate now(java.time.ZoneId)>
<ohos.agp.components.DependentLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.render.opengl.GLES20: boolean glIsRenderbuffer(int)>
<java.time.temporal.TemporalUnit: boolean isDateBased()>
<ohos.data.distributed.common.KvStore: void startTransaction()>
<ohos.global.icu.util.ValueIterator: boolean next(ohos.global.icu.util.ValueIterator.Element)>
<java.util.concurrent.ConcurrentHashMap: java.lang.String toString()>
<ohos.media.audio.AudioCapturer.State: ohos.media.audio.AudioCapturer.State[] values()>
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields()>
<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>
<ohos.agp.render.render3d.ViewHolder: ohos.agp.components.Component getView()>
<java.net.URLConnection: long getIfModifiedSince()>
<ohos.data.distributed.common.KvManagerFactory: void registerKvStoreServiceDeathRecipient(ohos.data.distributed.common.KvStoreServiceDeathRecipient)>
<java.security.InvalidParameterException: void <init>()>
<ohos.ai.cv.common.BoundingBox: int getWidth()>
<ohos.agp.render.render3d.resources.MaterialDesc: void setType(ohos.agp.render.render3d.resources.MaterialDesc.MaterialType)>
<ohos.global.configuration.LocaleProfile: java.util.Locale[] getLocales()>
<java.text.RuleBasedCollator: int hashCode()>
<ohos.agp.components.Component: void setScrollbarSweepAngle(float)>
<java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel bind(java.net.SocketAddress)>
<java.util.regex.Matcher: boolean hitEnd()>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>
<ohos.data.search.schema.MusicItem: java.lang.Integer getSize()>
<java.util.concurrent.atomic.AtomicMarkableReference: boolean isMarked()>
<java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)>
<javax.lang.model.util.ElementFilter: java.util.List constructorsIn(java.lang.Iterable)>
<java.util.Locale.FilteringMode: void <clinit>()>
<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll(long,java.util.concurrent.TimeUnit)>
<java.util.Hashtable: java.util.Enumeration elements()>
<java.util.Objects: int hashCode(java.lang.Object)>
<ohos.bluetooth.BluetoothDeviceClass: boolean isServiceSupported(int)>
<ohos.sysappcomponents.contact.entity.ImAddress: void setCustomLabelName(java.lang.String)>
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getContinueExistingPeriodicTasksAfterShutdownPolicy()>
<ohos.miscservices.download.DownloadSession.DownloadInfo: int getStatus()>
<ohos.agp.components.SlideDrawer: void setDisplayMode(ohos.agp.components.SlideDrawer.DisplayMode,ohos.agp.components.SlideDrawer.DisplayMode,ohos.agp.components.SlideDrawer.DisplayMode,ohos.agp.components.SlideDrawer.DisplayMode)>
<ohos.accessibility.AccessibilityEventInfo: int getEndIndex()>
<ohos.utils.PacMap: java.util.Optional getSerializable(java.lang.String)>
<java.security.MessageDigest: java.lang.Object clone()>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)>
<java.net.Authenticator.RequestorType: java.net.Authenticator.RequestorType[] values()>
<ohos.agp.render.opengl.ETC1: void <init>()>
<ohos.data.orm.AllChangeToTarget: void addToUpdatedList(ohos.data.orm.OrmObject)>
<ohos.agp.components.Component: int[] getMarginsTopAndBottom()>
<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit valueOf(java.lang.String)>
<java.util.logging.LogRecord: void setMillis(long)>
<javax.sql.RowSetMetaData: void setColumnName(int,java.lang.String)>
<ohos.utils.geo.RectFloat: void modify(float,float,float,float)>
<java.text.Bidi: void <init>(java.lang.String,int)>
<java.util.WeakHashMap: boolean isEmpty()>
<ohos.utils.PlainLongArray: boolean contains(int)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: boolean addAll(java.util.Collection)>
<ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder: ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder addSecKeyCryptoAttr(int,java.lang.String[])>
<java.util.concurrent.LinkedTransferQueue: int remainingCapacity()>
<javax.lang.model.SourceVersion: javax.lang.model.SourceVersion latestSupported()>
<ohos.event.intentagent.TriggerInfo.Builder: void <init>()>
<ohos.aafwk.ability.AbilitySliceLifecycleExecutor.LifecycleState: int getValue()>
<ohos.ace.ability.AceAbility: void onCompleteContinuation(int)>
<ohos.dcall.CallStateObserver: void <init>()>
<ohos.global.icu.text.Bidi: boolean isLeftToRight()>
<ohos.hiviewdfx.HiChecker: void removeRule(java.util.EnumSet)>
<ohos.agp.render.PdfDisplay.Page: int getIndex()>
<ohos.agp.utils.Matrix: void setTranslate(float,float)>
<ohos.agp.render.render3d.components.CameraComponent.CameraType: ohos.agp.render.render3d.components.CameraComponent.CameraType[] values()>
<ohos.global.icu.util.IslamicCalendar: int handleGetExtendedYear()>
<java.lang.ArithmeticException: void <init>()>
<java.util.ArrayDeque: java.lang.Object[] toArray()>
<ohos.data.distributed.common.Options: ohos.data.distributed.common.SecurityLevel getSecurityLevel()>
<ohos.bluetooth.ble.BleScanFilter: void setPeripheralAddress(java.lang.String)>
<java.lang.Byte: long toUnsignedLong(byte)>
<ohos.agp.components.Component: void setScaleY(float)>
<ohos.agp.components.Component: float getBoundaryFadeEffectLeftRate()>
<ohos.data.usage.DataUsage: java.util.Optional getVolume(java.io.File)>
<ohos.global.icu.text.BidiRun: byte getDirection()>
<ohos.org.xml.sax.Attributes: java.lang.String getURI(int)>
<ohos.data.search.model.Recommendation: void setValue(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glGetAttachedShaders(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<javax.tools.ForwardingJavaFileManager: javax.tools.JavaFileObject getJavaFileForInput(javax.tools.JavaFileManager.Location,java.lang.String,javax.tools.JavaFileObject.Kind)>
<java.time.chrono.MinguoChronology: int prolepticYear(java.time.chrono.Era,int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates in(java.lang.String,java.lang.String[])>
<java.io.RandomAccessFile: void writeInt(int)>
<ohos.telephony.RadioInfoManager: ohos.telephony.RadioInfoManager getInstance(ohos.app.Context)>
<ohos.global.icu.text.SearchIterator: void reset()>
<java.time.YearMonth: java.time.YearMonth minus(long,java.time.temporal.TemporalUnit)>
<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll()>
<ohos.event.notification.NotificationRequest: int getNotificationId()>
<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open(java.net.SocketAddress)>
<javax.security.auth.callback.PasswordCallback: char[] getPassword()>
<ohos.global.i18n.text.DateFormatUtil: java.lang.String[] getShortStandAloneMonthNames(java.util.Locale)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThan(java.lang.String,java.sql.Time)>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat increaseAll(float)>
<ohos.interwork.eventhandler.InnerEventUtils: void setExInfo(ohos.eventhandler.InnerEvent,int,int,ohos.interwork.utils.PacMapEx)>
<java.util.concurrent.ConcurrentHashMap: void <init>(int,float)>
<ohos.global.icu.text.UCharacterIterator: int getLength()>
<ohos.global.icu.text.CurrencyPluralInfo: ohos.global.icu.text.CurrencyPluralInfo getInstance()>
<ohos.sensor.agent.CategoryMotionAgent: ohos.sensor.bean.CategoryMotion getSingleSensor(int)>
<ohos.utils.LruBuffer: int getMatchCount()>
<java.util.LinkedList: java.lang.Object pop()>
<javax.crypto.spec.PBEKeySpec: void clearPassword()>
<java.security.cert.PKIXCertPathBuilderResult: void <init>(java.security.cert.CertPath,java.security.cert.TrustAnchor,java.security.cert.PolicyNode,java.security.PublicKey)>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
<ohos.agp.render.opengl.GLES20: void glBlendFuncSeparate(int,int,int,int)>
<java.text.AttributedCharacterIterator.Attribute: int hashCode()>
<ohos.global.icu.text.LocaleDisplayNames.UiListItem: int hashCode()>
<java.time.YearMonth: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.javax.xml.stream.XMLStreamReader: void require(int,java.lang.String,java.lang.String)>
<java.time.ZoneOffset: int get(java.time.temporal.TemporalField)>
<ohos.agp.render.Path: void <init>(ohos.agp.render.Path)>
<java.time.temporal.ValueRange: boolean equals(java.lang.Object)>
<ohos.agp.components.element.FlexElement: ohos.agp.utils.Rect getCenterBounds()>
<ohos.app.AbilityContext: java.lang.Object getLastStoredDataWhenConfigChanged()>
<ohos.accessibility.ability.AccessibilityInfo: boolean isSelected()>
<ohos.global.icu.util.TaiwanCalendar: void <init>(ohos.global.icu.util.TimeZone)>
<ohos.app.Context: ohos.global.resource.ResourceManager getResourceManager(ohos.global.configuration.Configuration)>
<javax.net.ssl.SSLServerSocket: java.lang.String[] getSupportedProtocols()>
<java.time.ZonedDateTime: java.time.ZonedDateTime parse(java.lang.CharSequence)>
<ohos.agp.render.Path: void moveTo(ohos.agp.utils.Point)>
<java.sql.Struct: java.lang.Object[] getAttributes()>
<java.net.ServerSocket: java.net.InetAddress getInetAddress()>
<ohos.app.IAbilityManager: java.util.List queryRecentAbilityMissionInfo(int,int)>
<java.sql.Blob: java.io.InputStream getBinaryStream()>
<java.util.ArrayDeque: void addLast(java.lang.Object)>
<ohos.agp.render.render3d.components.MorphComponent: void <init>()>
<ohos.aafwk.content.Operation: java.lang.String getDeviceId()>
<java.security.cert.X509Extension: byte[] getExtensionValue(java.lang.String)>
<ohos.global.icu.text.UnicodeSet: boolean containsNone(int,int)>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 max(ohos.agp.render.render3d.math.Vector2,ohos.agp.render.render3d.math.Vector2)>
<java.util.AbstractSet: boolean equals(java.lang.Object)>
<ohos.media.audio.AudioManager: boolean isMute(ohos.media.audio.AudioManager.AudioVolumeType)>
<ohos.data.rdb.StoreConfig.Builder: ohos.data.rdb.StoreConfig.Builder setName(java.lang.String)>
<java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)>
<java.time.ZonedDateTime: java.time.ZonedDateTime plusYears(long)>
<ohos.global.icu.util.EthiopicCalendar: void <init>()>
<java.sql.SQLFeatureNotSupportedException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.media.recorder.Recorder: int obtainMaxAmplitude()>
<javax.security.auth.x500.X500Principal: void <init>(java.lang.String,java.util.Map)>
<ohos.media.image.ImageSource: ohos.media.image.common.ImageInfo getThumbnailInfo()>
<ohos.utils.net.Uri: ohos.utils.net.Uri appendEncodedPathToUri(ohos.utils.net.Uri,java.lang.String)>
<ohos.media.audio.SoundPlayer: boolean playSound(ohos.media.audio.SoundPlayer.SoundType)>
<java.lang.StackTraceElement: int getLineNumber()>
<ohos.data.distributed.common.UserType: void <clinit>()>
<ohos.media.common.VideoProperty: int getRecorderFps()>
<ohos.accessibility.AccessibilitySystemAbilityClient: int getSuggestedInterval(int,int)>
<java.nio.channels.AsynchronousSocketChannel: java.nio.channels.AsynchronousSocketChannel setOption(java.net.SocketOption,java.lang.Object)>
<ohos.accessibility.ability.AccessibleOperation: java.lang.CharSequence getDescriptionInfo()>
<ohos.agp.components.webengine.WebView: boolean canScroll(int,int)>
<ohos.accessibility.ability.AccessibleAbility: boolean performCommonAction(int)>
<ohos.eventhandler.Dumper: void dump(java.lang.String)>
<java.time.ZonedDateTime: int getHour()>
<ohos.agp.window.service.Window: void setNavigationBarColor(int)>
<java.net.CookieHandler: void setDefault(java.net.CookieHandler)>
<java.text.ParsePosition: int hashCode()>
<ohos.multimodalinput.event.ManipulationEvent: ohos.multimodalinput.event.MmiPoint getPointerPosition(int)>
<java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitVariableAsField(javax.lang.model.element.VariableElement,java.lang.Object)>
<ohos.agp.components.Component: void setTranslationY(float)>
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getG()>
<ohos.global.icu.util.Calendar: java.lang.Object clone()>
<java.time.ZonedDateTime: java.time.ZonedDateTime ofInstant(java.time.Instant,java.time.ZoneId)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage runAfterBoth(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.utils.zson.ZSONException: void <init>(java.lang.Exception)>
<java.util.logging.FileHandler: void close()>
<ohos.javax.xml.parsers.SAXParser: boolean isValidating()>
<ohos.global.icu.lang.UCharacter: boolean isUnicodeIdentifierStart(int)>
<javax.net.ssl.SSLSocket: void setEnabledProtocols(java.lang.String[])>
<ohos.javax.xml.stream.events.Attribute: java.lang.String getValue()>
<ohos.utils.PersistablePacMap: ohos.utils.PersistablePacMap getPersistablePacMap(java.lang.String)>
<java.net.HttpCookie: int hashCode()>
<java.sql.Timestamp: int hashCode()>
<ohos.accessibility.ability.AccessibilityWindow: int getWindowType()>
<javax.security.auth.Subject: boolean equals(java.lang.Object)>
<ohos.system.OsHelperConstants: boolean isRegularFile(int)>
<ohos.utils.geo.RectFloat: ohos.utils.geo.RectFloat obtainIntersectRect(ohos.utils.geo.RectFloat)>
<ohos.agp.utils.Contour: void setContourRect(ohos.agp.utils.Rect)>
<ohos.security.NetworkSecurityPolicy: ohos.security.NetworkSecurityPolicy getInstance()>
<ohos.global.icu.text.DateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentQ()>
<ohos.utils.LruBuffer: void clear()>
<java.nio.channels.AsynchronousSocketChannel: java.nio.channels.AsynchronousSocketChannel open()>
<java.net.ServerSocket: boolean isClosed()>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object floorKey(java.lang.Object)>
<ohos.sensor.agent.CategoryBodyAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryBodyDataCallback,ohos.sensor.bean.CategoryBody,int,long)>
<ohos.agp.components.ScrollView: void doFlingX(int)>
<ohos.agp.components.Component: boolean startDragAndDrop(ohos.agp.utils.MimeData,ohos.agp.components.Component.DragFeedbackProvider)>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseEra eraOf(int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates isNull(java.lang.String)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: java.util.Collection getWaitingThreads()>
<ohos.bluetooth.ble.GattCharacteristic: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.net.NetHandle: java.net.URLConnection openConnection(java.net.URL)>
<ohos.net.NetManager: ohos.net.NetHandle getAppNet()>
<java.util.Arrays: java.lang.String toString(char[])>
<ohos.agp.components.Text.TextColorObserver: void onTextColorChanged(int,int)>
<ohos.agp.components.Component.LayoutDirection: ohos.agp.components.Component.LayoutDirection valueOf(java.lang.String)>
<java.lang.NoSuchMethodError: void <init>()>
<ohos.agp.components.Picker: void setFormatter(ohos.agp.components.Picker.Formatter)>
<ohos.agp.render.render3d.components.SceneComponent: ohos.agp.render.render3d.components.SceneComponent.BackgroundType getBackgroundType()>
<java.lang.Integer: int sum(int,int)>
<ohos.global.icu.text.DateIntervalInfo: void <init>(java.util.Locale)>
<ohos.data.usage.DataUsage: ohos.data.usage.MountState getDiskMountedStatus(java.io.File)>
<java.lang.System: void exit(int)>
<ohos.agp.window.service.Window: void setLayoutConfig(ohos.agp.window.service.WindowManager.LayoutConfig)>
<ohos.org.xml.sax.Parser: void setErrorHandler(ohos.org.xml.sax.ErrorHandler)>
<ohos.bundle.ApplicationInfo: java.lang.String getName()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: java.lang.String getText()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage handle(java.util.function.BiFunction)>
<javax.net.ssl.SSLEngine: java.lang.String[] getEnabledCipherSuites()>
<ohos.data.orm.Blob: void <init>()>
<ohos.agp.render.opengl.GLES1X: void glNormal3f(float,float,float)>
<ohos.global.icu.util.Calendar: void validateField(int,int,int)>
<ohos.agp.components.Picker: ohos.agp.utils.Color getNormalTextColor()>
<java.net.DatagramSocketImpl: void bind(int,java.net.InetAddress)>
<java.time.LocalDate: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<java.util.ArrayDeque: java.lang.Object clone()>
<java.util.logging.MemoryHandler: void close()>
<ohos.agp.animation.Animator.StateChangedListener: void onResume(ohos.agp.animation.Animator)>
<ohos.eventhandler.EventRunner: ohos.eventhandler.EventRunner getMainEventRunner()>
<java.net.URLStreamHandler: boolean hostsEqual(java.net.URL,java.net.URL)>
<ohos.media.audio.AudioCapturer: ohos.media.audio.AudioCapturer.State getState()>
<ohos.usb.USBConfig: int getInterfaceCount()>
<java.net.DatagramSocket: void close()>
<java.time.chrono.ChronoLocalDate: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.bundle.AbilityInfo.AbilitySubType: ohos.bundle.AbilityInfo.AbilitySubType valueOf(java.lang.String)>
<java.nio.file.attribute.DosFileAttributeView: java.lang.String name()>
<java.nio.charset.CharsetEncoder: boolean isLegalReplacement(byte[])>
<ohos.agp.render.render3d.resources.MaterialDesc: void setNormal(ohos.agp.render.render3d.resources.GpuResourceHandle)>
<ohos.media.camera.params.Face: float getProbability()>
<java.lang.Object: int hashCode()>
<java.util.concurrent.ForkJoinPool: void managedBlock(java.util.concurrent.ForkJoinPool.ManagedBlocker)>
<java.security.SecureRandom: void setSeed(long)>
<ohos.agp.render.Canvas: void drawColor(int,ohos.agp.render.BlendMode)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.util.Optional: java.util.Optional flatMap(java.util.function.Function)>
<java.util.concurrent.ConcurrentSkipListMap: void <init>(java.util.Comparator)>
<ohos.agp.components.webengine.BrowserAgent: void onLocationApiAccessCancel()>
<ohos.agp.text.Layout: void drawHighlight(ohos.agp.render.Canvas,ohos.agp.render.Path,ohos.agp.render.Paint,int)>
<ohos.utils.zson.ZSONType: ohos.utils.zson.ZSONType valueOf(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: java.lang.String getConversationTitle()>
<java.nio.charset.CodingErrorAction: java.lang.String toString()>
<java.lang.Long: void <init>(long)>
<ohos.agp.components.TableLayout: void setOrientation(int)>
<ohos.global.icu.text.DecimalFormat: char getPadCharacter()>
<ohos.agp.components.Image: void setImageElement(ohos.agp.components.element.Element)>
<ohos.sysappcomponents.contact.entity.ImAddress: void setLabelId(ohos.app.Context,int)>
<ohos.agp.render.Canvas: void drawLine(float,float,float,float,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<java.sql.Statement: boolean isClosed()>
<java.sql.SQLOutput: void writeDate(java.sql.Date)>
<ohos.media.common.sessioncore.AVElement: boolean isScannable()>
<ohos.wifi.WifiDevice: ohos.wifi.WifiDevice getInstance(ohos.app.Context)>
<java.nio.LongBuffer: java.nio.LongBuffer put(long[])>
<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable,boolean,boolean)>
<java.util.NavigableMap: java.util.Map.Entry pollFirstEntry()>
<ohos.agp.components.PageSliderIndicator: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.global.icu.text.MessagePattern.ApostropheMode: ohos.global.icu.text.MessagePattern.ApostropheMode valueOf(java.lang.String)>
<ohos.wifi.p2p.WifiP2pDevice: boolean marshalling(ohos.utils.Parcel)>
<ohos.data.orm.OrmConfig.Builder: ohos.data.orm.OrmConfig.Builder setDatabaseFileSecurityLevel(ohos.data.DatabaseFileSecurityLevel)>
<java.net.Inet6Address: boolean isLinkLocalAddress()>
<ohos.media.tubecore.AVTubeManager: void useTube(ohos.media.tubecore.AVTube,int)>
<javax.tools.StandardJavaFileManager: java.lang.Iterable getJavaFileObjectsFromFiles(java.lang.Iterable)>
<ohos.agp.window.dialog.PopupDialog: void setArrowOffset(int)>
<ohos.agp.render.render3d.gltf.GltfData: boolean isValid()>
<ohos.org.xml.sax.AttributeList: java.lang.String getName(int)>
<java.util.concurrent.ConcurrentHashMap: void forEach(java.util.function.BiConsumer)>
<java.security.IdentityScope: java.security.Identity getIdentity(java.security.Principal)>
<java.time.chrono.HijrahChronology: java.lang.String getCalendarType()>
<ohos.light.agent.LightAgent: java.util.List getLightIdList()>
<ohos.media.sessioncore.AVController.PlayControls: void playByUri(ohos.utils.net.Uri,ohos.utils.PacMap)>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: ohos.event.notification.NotificationRequest.NotificationPictureContent setBigPicture(ohos.media.image.PixelMap)>
<java.security.Security: void setProperty(java.lang.String,java.lang.String)>
<java.util.Date: int getMinutes()>
<ohos.agp.components.ScrollView.ReboundEffectParams: float getOverscrollRate()>
<ohos.data.preferences.Preferences: ohos.data.preferences.Preferences putString(java.lang.String,java.lang.String)>
<java.time.chrono.ChronoLocalDateTime: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: java.util.Comparator comparator()>
<ohos.media.photokit.metadata.AVMetadataHelper: java.lang.String resolveMetadata(int)>
<java.security.cert.X509CertSelector: void addPathToName(int,java.lang.String)>
<ohos.javax.xml.stream.events.StartElement: java.util.Iterator getAttributes()>
<ohos.agp.utils.Rect.RotationEnum: void <clinit>()>
<ohos.miscservices.pasteboard.PasteData.Record: ohos.miscservices.pasteboard.PasteData.Record createPlainTextRecord(java.lang.CharSequence)>
<java.lang.ArithmeticException: void <init>(java.lang.String)>
<ohos.agp.components.DirectionalLayout.LayoutConfig: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.miscservices.inputmethod.EditingCapability: int getMaxChars()>
<ohos.agp.components.Component: int[] getHorizontalPadding()>
<ohos.agp.components.Clock: java.lang.String getTimeZone()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenAcceptBothAsync(java.util.concurrent.CompletionStage,java.util.function.BiConsumer,java.util.concurrent.Executor)>
<java.math.BigDecimal: void <init>(double)>
<java.net.Socket: void <init>(java.net.InetAddress,int,boolean)>
<ohos.agp.components.PageFlipper: void setFlipInterval(int)>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster lastInMonth(java.time.DayOfWeek)>
<ohos.utils.PacMap: void putByteValue(java.lang.String,byte)>
<java.sql.SQLSyntaxErrorException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform3fv(int,int,int,float[])>
<ohos.data.distributed.device.DeviceKvStore: void closeResultSet(ohos.data.distributed.common.KvStoreResultSet)>
<java.time.ZonedDateTime: java.time.OffsetDateTime toOffsetDateTime()>
<ohos.agp.components.RadioButton: void setTextColor(ohos.agp.utils.Color)>
<ohos.agp.components.SlideDrawer: ohos.agp.components.SlideDrawer.DisplayMode getDisplayMode(ohos.agp.components.SlideDrawer.SlideDirection)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,float)>
<ohos.security.permission.PermissionGroupDef: void <init>(ohos.security.permission.PermissionGroupDef)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: void signal()>
<ohos.agp.components.IndexBar: ohos.agp.render.Paint getIndexStringPaint()>
<ohos.bundle.ShortcutIntent: void addParam(java.lang.String,java.lang.String)>
<ohos.global.icu.text.Transliterator: void filteredTransliterate(ohos.global.icu.text.Replaceable,ohos.global.icu.text.Transliterator.Position,boolean)>
<java.util.concurrent.CompletableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>
<ohos.agp.components.Component.DraggedListener: void onDragDown(ohos.agp.components.Component,ohos.agp.components.DragInfo)>
<java.util.concurrent.LinkedTransferQueue: int drainTo(java.util.Collection,int)>
<java.lang.Boolean: boolean getBoolean(java.lang.String)>
<java.io.File: java.lang.String getPath()>
<ohos.utils.Parcel: void writeValue(java.lang.Object)>
<ohos.global.icu.text.UnicodeSet.ComparisonStyle: ohos.global.icu.text.UnicodeSet.ComparisonStyle valueOf(java.lang.String)>
<ohos.agp.utils.DimensFloat: float getQuotient()>
<ohos.agp.animation.AnimatorGroup: void setLoopedCount(int)>
<java.time.LocalDate: int compareTo(java.time.chrono.ChronoLocalDate)>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitTypeVariable(javax.lang.model.type.TypeVariable,java.lang.Object)>
<ohos.agp.components.Component.DefSpeechEventListener: boolean onSpeechEvent(ohos.agp.components.Component,ohos.multimodalinput.event.SpeechEvent)>
<java.util.Hashtable: java.util.Collection values()>
<javax.net.ssl.SSLSocket: boolean getUseClientMode()>
<java.nio.LongBuffer: java.nio.LongBuffer asReadOnlyBuffer()>
<java.nio.IntBuffer: java.nio.IntBuffer compact()>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream generate(java.util.function.DoubleSupplier)>
<java.lang.StrictMath: float nextDown(float)>
<ohos.agp.text.Layout: int getDescent(int)>
<ohos.backgroundtaskmgr.BackgroundTaskManager: int getRemainingDelayTime(int)>
<ohos.event.notification.NotificationSlot: boolean isShowBadge()>
<ohos.agp.utils.Matrix: boolean preConcat(ohos.agp.utils.Matrix)>
<ohos.media.audio.AudioManager: int getMasterOutputSampleRate()>
<ohos.global.icu.util.TaiwanCalendar: java.lang.String getType()>
<ohos.global.icu.text.DecimalFormatSymbols: char[] getDigits()>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<ohos.aafwk.ability.ContinuationState: ohos.aafwk.ability.ContinuationState[] values()>
<java.util.LinkedList: void addLast(java.lang.Object)>
<ohos.event.notification.ReminderRequest: java.lang.String getTitle()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThan(java.lang.String,int)>
<ohos.global.icu.text.CaseMap.Lower: java.lang.Appendable apply(java.util.Locale,java.lang.CharSequence,java.lang.Appendable,ohos.global.icu.text.Edits)>
<ohos.global.icu.util.Currency: java.lang.String getName(ohos.global.icu.util.ULocale,int,boolean[])>
<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>
<java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>
<ohos.agp.render.opengl.GLES1X: void glStencilFunc(int,int,int)>
<java.text.BreakIterator: void <init>()>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat divisionAll(float)>
<java.time.OffsetTime: java.time.OffsetTime plusSeconds(long)>
<ohos.agp.animation.timelinecurves.SpringCurve: void <init>(float,float,float,float)>
<ohos.media.common.StorageProperty: java.lang.String getRecorderPath()>
<java.time.Duration: long getSeconds()>
<ohos.ai.cv.common.CvPoint: void <init>()>
<java.time.temporal.ValueRange: boolean isFixed()>
<ohos.global.icu.util.GregorianCalendar: void handleComputeFields(int)>
<java.io.CharArrayReader: long skip(long)>
<ohos.bundle.FormInfo: java.lang.String getJsComponentName()>
<java.lang.reflect.MalformedParametersException: void <init>(java.lang.String)>
<java.util.OptionalDouble: double orElse(double)>
<ohos.data.resultset.SharedBlock: void freeLastRow()>
<ohos.utils.zson.ZSONArray: boolean removeAll(java.util.Collection)>
<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>
<java.net.InetAddress: boolean isAnyLocalAddress()>
<java.util.concurrent.ForkJoinPool: void <clinit>()>
<ohos.eventhandler.EventHandler: void sendEvent(int,long,ohos.eventhandler.EventHandler.Priority)>
<ohos.batterymanager.BatteryInfo: ohos.batterymanager.BatteryInfo.BatteryLevel getBatteryLevel()>
<ohos.usb.USBDevicePipe: ohos.usb.USBRequest requestWait(long)>
<java.util.Properties: void loadFromXML(java.io.InputStream)>
<ohos.agp.utils.Matrix44: void preScale(float,float,float)>
<ohos.utils.zson.ZSONObject: java.util.Date getDate(java.lang.String)>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.AlphabeticIndex setOverflowLabel(java.lang.String)>
<java.lang.AssertionError: void <init>()>
<ohos.accessibility.ability.AccessibleAbility: void onInterrupt()>
<ohos.agp.utils.Rect: void offset(int,int)>
<java.time.OffsetDateTime: void <clinit>()>
<ohos.multimodalinput.event.MmiPoint: float getX()>
<java.lang.Thread.State: void <clinit>()>
<java.time.temporal.WeekFields: int hashCode()>
<ohos.agp.render.opengl.GLES30: boolean glUnmapBuffer(int)>
<ohos.interwork.utils.PacMapEx: void putObjectValue(java.lang.String,java.lang.Object)>
<ohos.utils.PacMap: long[] getLongValueArray(java.lang.String)>
<java.nio.file.Path: boolean endsWith(java.nio.file.Path)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setEmissive(ohos.agp.render.render3d.resources.GpuResourceHandle)>
<ohos.utils.zson.ZSONWriter: void flush()>
<ohos.agp.render.render3d.resources.ResourceManager: ohos.agp.render.render3d.resources.RenderDataStorePod createRenderDataStorePod(java.lang.String)>
<ohos.agp.components.element.Element: void drawToCanvas(ohos.agp.render.Canvas)>
<ohos.agp.render.SweepShader: float[] getShaderPositions()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateInstance(ohos.global.icu.util.Calendar,int)>
<ohos.utils.PacMap: float[] getFloatValueArray(java.lang.String)>
<ohos.media.camera.device.CameraAbility: java.util.List getSupportedHighSizes(int)>
<java.math.BigInteger: void <init>(int,byte[])>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,byte)>
<ohos.aafwk.ability.Ability: void continueAbility()>
<ohos.agp.render.opengl.Utils: void <init>()>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<ohos.media.sessioncore.AVController: ohos.media.common.sessioncore.AVPlaybackState getAVPlaybackState()>
<java.sql.ResultSet: boolean isBeforeFirst()>
<ohos.agp.utils.RectFloat: void translateCenterTo(ohos.agp.utils.Point)>
<ohos.agp.render.Paint: void setSubpixelAntiAlias(boolean)>
<ohos.utils.LongPlainArray: long keyAt(int)>
<ohos.agp.window.dialog.BaseDialog: ohos.agp.window.dialog.BaseDialog setAlignment(int)>
<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>
<java.io.Writer: void flush()>
<ohos.data.search.schema.VideoItem: ohos.data.search.schema.VideoItem setDownloadCount(java.lang.Long)>
<ohos.agp.components.ProgressBar: boolean isIndeterminate()>
<ohos.utils.IntervalTimer: void cancel()>
<ohos.utils.geo.Rect: int getPivotXCoordinate()>
<ohos.media.tubecore.AVTube: int maxVolume()>
<ohos.utils.PlainArray: java.lang.Object valueAt(int)>
<ohos.bundle.BackupBundleInfo: boolean hasFileDescriptor()>
<ohos.media.audio.SoundPlayer: int createSound(java.lang.String,ohos.media.audio.AudioRendererInfo)>
<java.util.concurrent.ConcurrentSkipListMap: void <init>()>
<java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>
<java.io.EOFException: void <init>()>
<ohos.data.search.schema.DocumentItem: java.lang.String getContent()>
<java.math.BigDecimal: java.math.BigDecimal valueOf(double)>
<java.util.List: java.util.ListIterator listIterator()>
<javax.lang.model.util.ElementScanner8: void <init>()>
<ohos.agp.render.render3d.Scene: ohos.agp.render.render3d.util.SceneUtil getSceneUtil()>
<java.nio.channels.AsynchronousSocketChannel: void write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)>
<ohos.telephony.RadioInfoManager: java.lang.String getImeiSv(int)>
<ohos.javax.xml.validation.Validator: void setProperty(java.lang.String,java.lang.Object)>
<java.lang.String: java.lang.String replace(char,char)>
<ohos.agp.components.Text: void setCursorElement(ohos.agp.components.element.Element)>
<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>
<java.sql.ResultSet: void updateNClob(java.lang.String,java.sql.NClob)>
<java.lang.Character: char reverseBytes(char)>
<ohos.agp.render.layoutboost.LayoutBoostUtils: int getDimensionValue(ohos.app.Context,java.lang.String)>
<ohos.agp.render.Region: boolean union(ohos.agp.utils.Rect)>
<ohos.agp.window.dialog.BaseDialog: ohos.agp.window.dialog.BaseDialog setAutoClosable(boolean)>
<ohos.event.notification.NotificationRequest: void <init>(ohos.app.Context,int)>
<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor getTrustAnchor()>
<javax.sql.RowSet: void setUrl(java.lang.String)>
<ohos.event.commonevent.CommonEventSubscribeInfo: void setDeviceId(java.lang.String)>
<java.io.PrintWriter: void println(java.lang.Object)>
<ohos.data.search.schema.DocumentItem: void <init>()>
<java.io.FilterReader: boolean ready()>
<java.util.NavigableMap: java.lang.Object higherKey(java.lang.Object)>
<java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)>
<ohos.data.orm.Clob: long position(java.sql.Clob,long)>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDate dateNow()>
<ohos.eventhandler.EventHandler: void sendEvent(ohos.eventhandler.InnerEvent,long,ohos.eventhandler.EventHandler.Priority)>
<ohos.bundle.BundleInfo: java.lang.String getVendor()>
<ohos.eventhandler.EventHandler: void removeEvent(int,java.lang.Object)>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: boolean isColorDataDefined()>
<ohos.media.sessioncore.AVController: boolean setAVControllerCallback(ohos.media.common.sessioncore.AVControllerCallback)>
<ohos.batterymanager.BatteryInfo: java.lang.String getTechnology()>
<java.util.Objects: int hash(java.lang.Object[])>
<java.time.Period: java.time.Period ofYears(int)>
<java.sql.SQLTransactionRollbackException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.components.Component: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.data.search.schema.VideoItem: java.lang.Integer getDuration()>
<java.nio.file.Files: boolean isExecutable(java.nio.file.Path)>
<java.util.Calendar.Builder: java.util.Calendar.Builder setCalendarType(java.lang.String)>
<java.io.StringBufferInputStream: int read(byte[],int,int)>
<ohos.bundle.IBundleManager: boolean isHomeShortcutSupported()>
<java.time.Month: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
<ohos.utils.LruBuffer: java.util.List keys()>
<java.nio.channels.SeekableByteChannel: long position()>
<ohos.global.icu.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
<ohos.agp.components.BaseItemProvider: long getItemId(int)>
<ohos.agp.components.DatePicker: void setSelectedTextBackground(ohos.agp.components.element.Element)>
<java.net.DatagramSocketImpl: int peek(java.net.InetAddress)>
<ohos.global.icu.text.Edits: ohos.global.icu.text.Edits.Iterator getFineChangesIterator()>
<ohos.ai.cv.text.TextElement: void <init>()>
<ohos.agp.render.opengl.GLES31: void glProgramUniform4i(int,int,int,int,int,int)>
<ohos.agp.components.TextFilter: void publishFilterResults(java.lang.CharSequence,ohos.agp.components.TextFilter.FilterResults)>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayLanguageWithDialect(java.lang.String,java.lang.String)>
<ohos.media.recorder.RecorderProfile: ohos.media.recorder.RecorderProfile getParameter(java.lang.String,int)>
<java.security.MessageDigestSpi: void engineUpdate(byte[],int,int)>
<ohos.bundle.CommonEventInfo: int getUid()>
<ohos.global.icu.text.RuleBasedCollator: void setReorderCodes(int[])>
<ohos.light.bean.LightEffect: int getOffDuration()>
<ohos.agp.components.ProgressBar: int getProgressHintTextSize()>
<ohos.event.notification.NotificationSlot: void setLedLightColor(int)>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase)>
<java.util.SortedSet: java.lang.Object first()>
<java.lang.Math: float copySign(float,float)>
<java.time.ZoneOffset: long getLong(java.time.temporal.TemporalField)>
<ohos.interwork.ui.TextureComponentEx: boolean registerObject(java.lang.Object,int,int)>
<ohos.media.common.AVMetadata: java.lang.String getString(java.lang.String)>
<ohos.bundle.IBundleManager: java.util.List queryAbilityByIntent(ohos.aafwk.content.Intent,int,int)>
<java.text.MessageFormat: void applyPattern(java.lang.String)>
<java.time.chrono.HijrahEra: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.bluetooth.BluetoothRemoteDevice: int getPairState()>
<ohos.agp.utils.RectFloat: void <init>(float,float,float,float)>
<ohos.aafwk.ability.SystemMemoryInfo: boolean marshalling(ohos.utils.Parcel)>
<javax.lang.model.element.NestingKind: javax.lang.model.element.NestingKind valueOf(java.lang.String)>
<java.time.ZoneOffset: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.security.acl.Acl: java.util.Enumeration entries()>
<ohos.bundle.AbilityInfo: int getBackgroundModes()>
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
<ohos.data.search.schema.EmailItem: ohos.data.search.schema.EmailItem setCcEmail(java.lang.String)>
<ohos.media.codec.Codec: ohos.media.codec.Codec createEncoder()>
<ohos.utils.PlainArray: int keyAt(int)>
<ohos.event.commonevent.CommonEventSubscriber: boolean isStickyCommonEvent()>
<java.sql.Clob: long position(java.sql.Clob,long)>
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLSocketFactory engineGetSocketFactory()>
<ohos.aafwk.content.Operation: ohos.utils.net.Uri getUri()>
<java.net.NetworkInterface: int getMTU()>
<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>
<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>
<java.security.Timestamp: java.lang.String toString()>
<javax.sql.RowSetInternal: java.lang.Object[] getParams()>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitUnknown(javax.lang.model.element.AnnotationValue,java.lang.Object)>
<java.sql.SQLInput: java.math.BigDecimal readBigDecimal()>
<java.util.Vector: void sort(java.util.Comparator)>
<ohos.media.common.VideoProperty.Builder: void <init>(ohos.media.common.VideoProperty)>
<ohos.utils.geo.Rect.RotationEnum: void <clinit>()>
<java.lang.StrictMath: long max(long,long)>
<java.util.zip.CheckedOutputStream: void write(byte[],int,int)>
<java.lang.RuntimePermission: void <init>(java.lang.String)>
<java.util.UUID: int clockSequence()>
<java.util.prefs.AbstractPreferences: void putDouble(java.lang.String,double)>
<java.nio.channels.Selector: java.util.Set keys()>
<ohos.agp.render.opengl.GLES1X: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<java.util.TooManyListenersException: void <init>()>
<ohos.utils.BasePacMap: int getIntValue(java.lang.String)>
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
<ohos.media.audio.AudioCapturer: int read(float[],int,int)>
<java.util.logging.LogManager: void reset()>
<ohos.media.codec.CodecDescriptionList: java.util.List getSupportedMimes()>
<javax.net.ssl.SSLSocket: void <init>(java.lang.String,int)>
<java.util.stream.Collectors: java.util.stream.Collector toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)>
<ohos.global.icu.math.BigDecimal: void <init>(java.math.BigInteger,int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThanOrEqualTo(java.lang.String,java.lang.String)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectErrorStream(boolean)>
<java.sql.PreparedStatement: void setTime(int,java.sql.Time,java.util.Calendar)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableSet descendingKeySet()>
<ohos.org.w3c.dom.ls.LSInput: void setBaseURI(java.lang.String)>
<ohos.agp.render.Paint: void setAlpha(float)>
<ohos.data.search.schema.MessageItem: ohos.data.search.schema.MessageItem setSenderName(java.lang.String)>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<ohos.global.icu.text.StringSearch: void setPattern(java.lang.String)>
<ohos.ace.ability.AceAbility: void onBackground()>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLParameters getSSLParameters()>
<java.util.ServiceLoader: java.lang.String toString()>
<ohos.ai.tts.TtsParams: java.lang.String getDeviceId()>
<ohos.global.icu.util.ULocale.Category: ohos.global.icu.util.ULocale.Category valueOf(java.lang.String)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal plus(ohos.global.icu.math.MathContext)>
<ohos.global.icu.text.DecimalFormatSymbols: void setPerMill(char)>
<java.util.Map: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.util.UUID: int compareTo(java.util.UUID)>
<ohos.event.notification.NotificationSlotGroup: boolean isDisabled()>
<java.util.AbstractQueue: java.lang.Object remove()>
<ohos.global.icu.text.DecimalFormatSymbols: void setGroupingSeparator(char)>
<ohos.global.icu.text.PluralFormat: int hashCode()>
<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>
<ohos.agp.render.render3d.resources.MaterialDesc: float getNormalScale()>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.math.Vector3 getEmissiveFactor()>
<ohos.utils.LightweightMap: java.lang.String toString()>
<java.util.Arrays: short[] copyOfRange(short[],int,int)>
<java.util.logging.LogRecord: void setResourceBundleName(java.lang.String)>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getAssistantIntention(java.lang.String,int)>
<ohos.event.notification.NotificationSlot: void setSlotGroup(java.lang.String)>
<ohos.aafwk.ability.AbilitySliceLifecycleExecutor: void <init>()>
<ohos.data.rdb.RdbOpenCallback: void onDowngrade(ohos.data.rdb.RdbStore,int,int)>
<java.lang.Character: int getType(char)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,byte)>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource create(java.io.FileDescriptor,ohos.media.image.ImageSource.SourceOptions)>
<ohos.data.orm.Blob: void free()>
<ohos.agp.render.render3d.components.LightComponent: void setRange(float)>
<ohos.global.icu.text.SimpleDateFormat: java.lang.String toLocalizedPattern()>
<ohos.wifi.p2p.WifiP2pController: void createGroup(ohos.wifi.p2p.WifiP2pConfig,ohos.wifi.p2p.WifiP2pCallback)>
<java.util.concurrent.ForkJoinTask: java.util.Collection invokeAll(java.util.Collection)>
<ohos.aafwk.ability.Ability: void startAbility(ohos.aafwk.content.Intent,ohos.aafwk.ability.IAbilityStartCallback)>
<ohos.sensor.common.SensorUtils: int parseSensorCategory(int)>
<ohos.global.icu.text.Normalizer2: java.lang.String getDecomposition(int)>
<java.lang.reflect.Array: void setLong(java.lang.Object,int,long)>
<java.text.NumberFormat: int getMaximumFractionDigits()>
<ohos.agp.components.PageSlider.PageChangedListener: void onPageSlideStateChanged(int)>
<java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.zip.Deflater: void <init>(int,boolean)>
<java.lang.Class: java.lang.Class[] getClasses()>
<java.nio.file.attribute.AclEntryType: void <clinit>()>
<java.util.BitSet: void set(int,int,boolean)>
<java.util.EventObject: java.lang.Object getSource()>
<ohos.agp.render.PdfGenerator.PdfPage: ohos.agp.render.Canvas getCanvas()>
<java.sql.ClientInfoStatus: java.sql.ClientInfoStatus valueOf(java.lang.String)>
<java.sql.ResultSet: void setFetchSize(int)>
<ohos.utils.PacMap: float getFloatValue(java.lang.String)>
<ohos.app.Context: void startAbility(ohos.aafwk.content.Intent,int)>
<java.sql.ResultSet: java.sql.Time getTime(java.lang.String)>
<ohos.agp.render.opengl.GLES30: boolean glIsSync(long)>
<ohos.utils.geo.Point: boolean equals(float,float)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>
<javax.lang.model.util.SimpleElementVisitor7: java.lang.Object visitVariable(javax.lang.model.element.VariableElement,java.lang.Object)>
<java.util.Calendar: void setTimeInMillis(long)>
<java.security.cert.CertificateRevokedException: javax.security.auth.x500.X500Principal getAuthorityName()>
<java.time.LocalDate: int lengthOfMonth()>
<java.lang.Process: void destroy()>
<java.sql.ResultSet: void updateNString(int,java.lang.String)>
<java.util.LongSummaryStatistics: java.lang.String toString()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,int)>
<ohos.agp.render.Path: void setLastPoint(float,float)>
<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel setOption(java.net.SocketOption,java.lang.Object)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>
<ohos.app.ProcessInfo: void <clinit>()>
<java.security.spec.MGF1ParameterSpec: void <init>(java.lang.String)>
<ohos.app.ContextInvalidArgException: void <init>(java.lang.String)>
<ohos.utils.PlainArray: void setValueAt(int,java.lang.Object)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int incrementAndGet(java.lang.Object)>
<ohos.agp.components.Component: void setContentPositionY(float)>
<java.nio.file.Watchable: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind[],java.nio.file.WatchEvent.Modifier[])>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThanOrEqualTo(java.lang.String,java.sql.Timestamp)>
<java.util.AbstractList: void add(int,java.lang.Object)>
<ohos.utils.geo.Rect: ohos.utils.geo.Rect convertValueToRect(java.lang.String)>
<ohos.data.search.schema.AppItem: ohos.data.search.schema.AppItem setRating(java.lang.Double)>
<java.sql.Connection: java.sql.Blob createBlob()>
<ohos.data.resultset.AbsResultSet: double getDouble(int)>
<ohos.accessibility.AccessibilityAbilityInfo: int getEventTypes()>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: void setIndexCount(int)>
<java.nio.IntBuffer: int get(int)>
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>
<ohos.media.recorder.Recorder: boolean prepare()>
<ohos.net.NetSpecifier.Builder: ohos.net.NetSpecifier.Builder removeBearer(int)>
<java.time.ZoneOffset: java.time.ZoneOffset of(java.lang.String)>
<ohos.media.image.PixelMap: boolean useMipmap()>
<java.text.Bidi: boolean requiresBidi(char[],int,int)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.util.TimeZone parse(java.lang.String,java.text.ParsePosition)>
<java.nio.channels.ServerSocketChannel: java.nio.channels.NetworkChannel setOption(java.net.SocketOption,java.lang.Object)>
<ohos.javax.xml.validation.TypeInfoProvider: ohos.org.w3c.dom.TypeInfo getAttributeTypeInfo(int)>
<java.nio.file.StandardWatchEventKinds: void <clinit>()>
<ohos.agp.components.PageSliderIndicator: void setItemNormalElement(ohos.agp.components.element.Element)>
<ohos.agp.render.render3d.resources.ResourceManager: void deleteExternalTextureOes(int)>
<ohos.bundle.AbilityInfo: java.lang.String getWritePermission()>
<java.util.Vector: void forEach(java.util.function.Consumer)>
<ohos.global.icu.util.TaiwanCalendar: void handleComputeFields(int)>
<java.security.cert.X509CertSelector: int getBasicConstraints()>
<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>
<java.time.LocalDate: java.time.LocalDate now(java.time.Clock)>
<ohos.media.audio.AudioRendererInfo.AudioStreamOutputFlag: ohos.media.audio.AudioRendererInfo.AudioStreamOutputFlag[] values()>
<ohos.data.distributed.common.Options: boolean isAutoSync()>
<ohos.event.commonevent.CommonEventSubscriber: boolean getAbortCommonEvent()>
<ohos.agp.render.opengl.GLES1X: boolean glIsTexture(int)>
<ohos.utils.BasePacMap: void putString(java.lang.String,java.lang.String)>
<java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>
<ohos.app.Context: ohos.app.dispatcher.TaskDispatcher getGlobalTaskDispatcher(ohos.app.dispatcher.task.TaskPriority)>
<java.io.RandomAccessFile: int read()>
<ohos.javax.xml.parsers.SAXParserFactory: void setXIncludeAware(boolean)>
<java.nio.channels.SelectableChannel: boolean isRegistered()>
<java.util.stream.Stream: boolean allMatch(java.util.function.Predicate)>
<ohos.aafwk.ability.fraction.FractionAbility: void onBackground()>
<java.time.OffsetTime: int getMinute()>
<java.time.chrono.ChronoLocalDate: java.lang.String toString()>
<ohos.global.icu.number.FormattedNumber: java.math.BigDecimal toBigDecimal()>
<java.sql.SQLPermission: void <init>(java.lang.String)>
<ohos.vibrator.bean.VibrationPattern.EffectFlagType: ohos.vibrator.bean.VibrationPattern.EffectFlagType[] values()>
<ohos.agp.render.opengl.GLES20: void glGenerateMipmap(int)>
<javax.net.ssl.SSLEngine: boolean isInboundDone()>
<ohos.agp.render.Canvas.ClipOp: int value()>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType appendParameterTypes(java.lang.Class[])>
<java.net.ProxySelector: void <init>()>
<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>
<ohos.miscservices.pasteboard.PasteData: ohos.miscservices.pasteboard.PasteData creatHtmlData(java.lang.String)>
<java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator)>
<ohos.agp.components.webengine.CookieStore: boolean isCrossDomainCookieEnable(ohos.agp.components.webengine.WebView)>
<ohos.agp.components.element.FrameAnimationElement: void addFrame(ohos.agp.components.element.Element,int)>
<ohos.global.icu.util.TaiwanCalendar: int handleGetLimit(int,int)>
<java.nio.ShortBuffer: java.nio.ShortBuffer compact()>
<ohos.agp.render.Paint: void setPathEffect(ohos.agp.render.PathEffect)>
<ohos.event.commonevent.CommonEventSubscriber: ohos.event.commonevent.AsyncCommonEventResult goAsyncCommonEvent()>
<java.time.chrono.IsoChronology: java.lang.String getId()>
<ohos.media.camera.device.CameraStateCallback: void onFatalError(ohos.media.camera.device.Camera,int)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setMaxScreenIntentAgent(ohos.event.intentagent.IntentAgent)>
<ohos.agp.components.Component.FadeEffectEnum: ohos.agp.components.Component.FadeEffectEnum[] values()>
<java.nio.channels.Channels: java.io.Writer newWriter(java.nio.channels.WritableByteChannel,java.lang.String)>
<java.io.BufferedInputStream: int available()>
<java.sql.DatabaseMetaData: int getMaxCatalogNameLength()>
<ohos.global.icu.text.RuleBasedCollator: boolean isUpperCaseFirst()>
<java.time.temporal.TemporalAccessor: boolean isSupported(java.time.temporal.TemporalField)>
<java.util.concurrent.LinkedBlockingQueue: void <init>(java.util.Collection)>
<ohos.global.icu.text.SearchIterator: void setMatchLength(int)>
<ohos.data.search.schema.ActionItem: ohos.data.search.schema.ActionItem setActionName(java.lang.String)>
<ohos.media.audio.AudioManager.AudioVolumeType: int getValue()>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.Entity createPerspectiveCamera(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Quaternion,float,float,float)>
<java.sql.ResultSetMetaData: boolean isSigned(int)>
<ohos.media.common.sessioncore.AVPlaybackState: long getCurrentBufferedPosition()>
<ohos.agp.components.element.ElementScatterException: void <init>(java.lang.String)>
<ohos.agp.components.TextFilter: void <init>()>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setImageContent(int,int)>
<ohos.hiviewdfx.Debug: void <init>()>
<ohos.security.asset.AssetOperatorAbs: ohos.security.asset.AssetResult assetDelete(ohos.aafwk.content.IntentParams)>
<ohos.security.seckeychain.SecKeyChain: ohos.aafwk.content.Intent getInstallationIntent()>
<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>
<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal,java.math.MathContext)>
<java.lang.VirtualMachineError: void <init>(java.lang.String,java.lang.Throwable)>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate date(java.time.temporal.TemporalAccessor)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean hasQueuedPredecessors()>
<ohos.rpc.RemoteObject: void slowPathDump(java.io.FileDescriptor,java.lang.String[])>
<javax.tools.SimpleJavaFileObject: java.lang.CharSequence getCharContent(boolean)>
<ohos.miscservices.download.DownloadSession.DownloadInfo: java.lang.String getDescription()>
<ohos.usb.USBInterface: int getInterfaceProtocol()>
<java.util.concurrent.CountedCompleter: void <init>(java.util.concurrent.CountedCompleter,int)>
<java.nio.channels.AsynchronousFileChannel: java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path,java.nio.file.OpenOption[])>
<java.nio.file.attribute.BasicFileAttributes: boolean isOther()>
<java.util.Arrays: java.lang.String toString(boolean[])>
<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>
<ohos.media.image.ImageSource: ohos.media.image.common.ImageInfo getImageInfo(int)>
<ohos.utils.LightweightSet: java.lang.Object[] toArray(java.lang.Object[])>
<ohos.agp.render.render3d.math.Quaternion: float length(float,float,float,float)>
<java.sql.ResultSet: java.sql.Date getDate(int)>
<java.time.OffsetTime: boolean equals(java.lang.Object)>
<ohos.media.camera.params.ParameterKey.Key: boolean equals(java.lang.Object)>
<java.lang.Appendable: java.lang.Appendable append(char)>
<java.sql.SQLNonTransientException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.time.ZonedDateTime: java.time.chrono.ChronoZonedDateTime withZoneSameLocal(java.time.ZoneId)>
<ohos.agp.components.webengine.WebConfig: boolean isViewPortFitScreen()>
<ohos.utils.BasePacMap: void putBooleanValue(java.lang.String,boolean)>
<java.security.AlgorithmConstraints: boolean permits(java.util.Set,java.security.Key)>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.lang.Thread getOwner()>
<ohos.agp.render.render3d.components.LightComponent.LightType: ohos.agp.render.render3d.components.LightComponent.LightType valueOf(java.lang.String)>
<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence,int,int)>
<java.lang.Math: int abs(int)>
<ohos.agp.components.Slider: void setIncreaseButton(ohos.agp.components.element.Element,ohos.agp.components.Component.ClickedListener)>
<ohos.global.icu.text.RuleBasedCollator: void setNumericCollationDefault()>
<java.io.ObjectStreamClass: java.io.ObjectStreamClass lookupAny(java.lang.Class)>
<java.util.Date: boolean before(java.util.Date)>
<ohos.utils.BasePacMap: void clear()>
<java.time.Period: java.time.Period minus(java.time.temporal.TemporalAmount)>
<ohos.agp.components.Clock: void setFormatIn12HourMode(java.lang.CharSequence)>
<ohos.data.rdb.ValuesBucket: java.lang.String toString()>
<ohos.interwork.eventhandler.CourierEx: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.bundle.ShortcutInfo: java.util.List getIntents()>
<java.sql.Connection: java.sql.CallableStatement prepareCall(java.lang.String,int,int,int)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeEndElement()>
<java.util.Base64: java.util.Base64.Decoder getMimeDecoder()>
<ohos.hiviewdfx.Debug: int getProcessSharedCleanSum()>
<javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<ohos.global.resource.ResourceManager: ohos.global.resource.solidxml.SolidXml getSolidXml(int)>
<ohos.event.notification.ReminderRequest: int getNotificationId()>
<ohos.global.icu.text.CollationElementIterator: int tertiaryOrder(int)>
<ohos.javax.xml.stream.XMLReporter: void report(java.lang.String,java.lang.String,java.lang.Object,ohos.javax.xml.stream.Location)>
<javax.net.ssl.SSLEngine: void setWantClientAuth(boolean)>
<java.nio.file.attribute.AclEntry: java.util.Set flags()>
<ohos.bluetooth.ble.BleAdvertiser: void <init>(ohos.app.Context,ohos.bluetooth.ble.BleAdvertiseCallback)>
<java.nio.ShortBuffer: java.nio.ShortBuffer wrap(short[],int,int)>
<java.text.NumberFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.global.icu.text.MessagePattern.Part: int getValue()>
<ohos.data.preferences.Preferences: ohos.data.preferences.Preferences putLong(java.lang.String,long)>
<java.util.ArrayDeque: int size()>
<ohos.agp.components.PageSliderIndicator: void setItemSelectedElement(ohos.agp.components.element.Element)>
<ohos.global.icu.util.UniversalTimeScale: ohos.global.icu.math.BigDecimal bigDecimalFrom(ohos.global.icu.math.BigDecimal,int)>
<java.util.concurrent.ThreadPoolExecutor: int prestartAllCoreThreads()>
<java.util.Arrays: void parallelSort(float[])>
<java.util.Queue: boolean offer(java.lang.Object)>
<ohos.aafwk.ability.DataAbilityResult: boolean marshalling(ohos.utils.Parcel)>
<java.time.LocalDateTime: int get(java.time.temporal.TemporalField)>
<ohos.global.resource.Resource: void <init>()>
<ohos.data.resultset.ResultSet: java.lang.String getColumnNameForIndex(int)>
<ohos.aafwk.ability.ProviderFormInfo: void <init>()>
<ohos.data.search.schema.EmailItem: ohos.data.search.schema.EmailItem setCcName(java.lang.String)>
<java.text.DateFormat: boolean isLenient()>
<java.util.zip.Deflater: void end()>
<ohos.net.NetCapabilities: boolean equals(java.lang.Object)>
<java.lang.reflect.Modifier: boolean isSynchronized(int)>
<ohos.javax.xml.stream.XMLOutputFactory: void <init>()>
<java.util.concurrent.atomic.LongAdder: void add(long)>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate dateYearDay(java.time.chrono.Era,int,int)>
<javax.net.ssl.SSLEngineResult: int bytesConsumed()>
<ohos.agp.utils.Circle: boolean equals(java.lang.Object)>
<ohos.global.icu.util.BuddhistCalendar: void handleComputeFields(int)>
<ohos.data.resultset.ResultSetWrapper: int getInt(int)>
<ohos.media.camera.device.FrameConfig.Builder: int getAfMode()>
<java.util.PriorityQueue: int size()>
<ohos.agp.utils.RectFloat: boolean isIntersect(ohos.agp.utils.RectFloat,ohos.agp.utils.RectFloat)>
<ohos.security.asset.AssetOperator: ohos.security.asset.AssetOperatorAbs getInstance()>
<ohos.agp.components.StackLayout.LayoutConfig: void <init>(int,int,int)>
<ohos.agp.window.dialog.CommonDialog: void siteKeyboardCallback(ohos.agp.window.dialog.IDialog.KeyboardCallback)>
<javax.crypto.KeyGenerator: java.security.Provider getProvider()>
<ohos.javax.xml.parsers.SAXParserFactory: boolean isValidating()>
<java.io.DataInput: java.lang.String readUTF()>
<ohos.app.Context: ohos.bundle.IBundleManager getBundleManager()>
<ohos.data.orm.OrmContext: void unregisterObjectObserver(ohos.data.orm.OrmObject,ohos.data.orm.OrmObjectObserver)>
<ohos.ai.cv.common.ConnectionCallback: void onServiceConnect()>
<java.util.TreeSet: void clear()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap headMap(java.lang.Object,boolean)>
<ohos.agp.render.opengl.GLES30: void glEndQuery(int)>
<java.util.concurrent.locks.ReentrantReadWriteLock: int getWaitQueueLength(java.util.concurrent.locks.Condition)>
<java.math.BigInteger: void <init>(byte[])>
<ohos.data.search.schema.ActionItem: java.util.List getActionSchema()>
<java.security.KeyException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.components.SlideDrawer: boolean toggleSmoothly(ohos.agp.components.SlideDrawer.SlideDirection)>
<javax.security.cert.Certificate: java.lang.String toString()>
<ohos.global.icu.util.EthiopicCalendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<java.security.Signature: void update(java.nio.ByteBuffer)>
<java.util.Arrays: boolean equals(short[],short[])>
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>
<ohos.app.Context: void lockMission()>
<ohos.wifi.WifiSecurity.Phase2Method: void <clinit>()>
<java.lang.invoke.LambdaConversionException: void <init>(java.lang.String,java.lang.Throwable,boolean,boolean)>
<ohos.global.icu.math.BigDecimal: java.math.BigInteger toBigInteger()>
<ohos.data.resultset.SharedBlock: void close()>
<java.nio.file.spi.FileSystemProvider: java.nio.file.Path getPath(java.net.URI)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendText(java.time.temporal.TemporalField,java.time.format.TextStyle)>
<ohos.aafwk.content.Intent: double[] getDoubleArrayParam(java.lang.String)>
<ohos.accessibility.AccessibilitySystemAbilityClient: ohos.accessibility.CaptionProperties getAccessibilityCaptionProperties()>
<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>
<ohos.utils.geo.Rect: boolean isInclude(int,int,int,int)>
<ohos.sysappcomponents.contact.ContactsCollection: void <init>()>
<java.util.concurrent.atomic.AtomicLong: long updateAndGet(java.util.function.LongUnaryOperator)>
<ohos.data.rdb.StoreConfig.SyncMode: ohos.data.rdb.StoreConfig.SyncMode[] values()>
<java.security.KeyFactory: void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String)>
<java.io.DataInputStream: int read(byte[],int,int)>
<ohos.global.icu.text.NumberFormat: boolean isGroupingUsed()>
<ohos.global.icu.util.Calendar: void setLenient(boolean)>
<java.lang.Character: int toChars(int,char[],int)>
<javax.lang.model.util.AbstractAnnotationValueVisitor6: java.lang.Object visit(javax.lang.model.element.AnnotationValue)>
<ohos.global.i18n.text.NotSupportConvertException: void <init>(java.lang.String)>
<ohos.org.w3c.dom.ls.LSInput: java.lang.String getStringData()>
<java.util.Arrays: void parallelSetAll(long[],java.util.function.IntToLongFunction)>
<ohos.ai.tts.TtsListener: void onStart(java.lang.String)>
<java.util.logging.LoggingPermission: void <init>(java.lang.String,java.lang.String)>
<java.security.cert.CertStoreSpi: java.util.Collection engineGetCertificates(java.security.cert.CertSelector)>
<java.security.cert.CertificateRevokedException: java.lang.String getMessage()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture supplyAsync(java.util.function.Supplier,java.util.concurrent.Executor)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate dateNow(java.time.Clock)>
<ohos.data.distributed.device.DeviceKvStore: java.lang.String getString(java.lang.String,java.lang.String)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object get(java.lang.Object)>
<ohos.aafwk.ability.Ability: ohos.aafwk.ability.FormState onAcquireFormState(ohos.aafwk.content.Intent)>
<java.text.BreakIterator: void setText(java.lang.String)>
<ohos.agp.components.AbsButton: boolean isChecked()>
<ohos.data.distributed.common.FieldNode: boolean appendChild(ohos.data.distributed.common.FieldNode)>
<ohos.agp.components.ProgressBar: void setOrientation(int)>
<ohos.security.keystore.KeyGenAlgorithmParaSpec: java.lang.String getSecKeyAlias()>
<ohos.global.icu.util.ValueIterator.Element: void <init>()>
<java.util.logging.StreamHandler: void flush()>
<ohos.utils.IntervalTimer: void onFinish()>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)>
<ohos.data.resultset.ResultSetWrapper: boolean isEnded()>
<ohos.event.notification.MessageUser: java.lang.String getKey()>
<java.util.function.BooleanSupplier: boolean getAsBoolean()>
<java.security.KeyStore: void setKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[])>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate now(java.time.Clock)>
<ohos.telephony.ShortMessage: java.lang.String getVisibleRawAddress()>
<java.time.chrono.HijrahDate: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<ohos.utils.PacMap: void putIntValue(java.lang.String,int)>
<java.util.zip.Adler32: void update(byte[])>
<ohos.global.icu.text.AlphabeticIndex.Bucket: java.util.Iterator iterator()>
<ohos.global.icu.text.Transliterator: java.util.Enumeration getAvailableVariants(java.lang.String,java.lang.String)>
<ohos.data.rdb.RdbPredicates: void <init>(java.lang.String)>
<ohos.agp.components.RadioContainer: int getMarkedButtonId()>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean close()>
<ohos.utils.RationalNumber: boolean isFinite()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateTimeInstance()>
<java.util.concurrent.RunnableScheduledFuture: boolean isPeriodic()>
<ohos.agp.render.Path: void setLastPoint(ohos.agp.utils.Point)>
<ohos.global.icu.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.workscheduler.WorkInfo: boolean isRequestDelay()>
<ohos.agp.components.Component.FadeEffectEnum: ohos.agp.components.Component.FadeEffectEnum valueOf(java.lang.String)>
<ohos.event.notification.NotificationSubscribeInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.SlideDrawer: boolean open(ohos.agp.components.SlideDrawer.SlideDirection)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates between(java.lang.String,float,float)>
<java.util.Collections: java.util.SortedMap synchronizedSortedMap(java.util.SortedMap)>
<java.util.prefs.Preferences: java.util.prefs.Preferences systemNodeForPackage(java.lang.Class)>
<ohos.agp.render.opengl.EGL: boolean eglQueryContext(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLContext,int,int[])>
<ohos.sysappcomponents.contact.ContactsHelper: boolean isLocalContact(long)>
<java.lang.ref.SoftReference: java.lang.Object get()>
<java.util.concurrent.BlockingDeque: void addLast(java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListSet: void <init>(java.util.Comparator)>
<java.util.PrimitiveIterator.OfInt: java.lang.Object next()>
<java.sql.DatabaseMetaData: int getDriverMajorVersion()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateTimeInstance(int,int)>
<ohos.global.icu.text.DateIntervalInfo: ohos.global.icu.text.DateIntervalInfo cloneAsThawed()>
<ohos.agp.components.PageSliderProvider: void <init>()>
<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>
<ohos.agp.colors.RgbColor: void <init>()>
<ohos.agp.render.opengl.GLES20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<ohos.media.sessioncore.AVSession: void setAVQueueTitle(java.lang.CharSequence)>
<ohos.agp.components.Component: void setLayoutDirection(ohos.agp.components.Component.LayoutDirection)>
<ohos.agp.utils.Matrix44: boolean isIdentity()>
<java.lang.reflect.Modifier: boolean isProtected(int)>
<ohos.media.audio.AudioInterrupt: boolean isPauseWhenDucked()>
<ohos.sysappcomponents.contact.entity.Name: java.lang.String getFamilyNamePhonetic()>
<ohos.global.icu.lang.UCharacter: boolean isHighSurrogate(char)>
<ohos.global.icu.util.Currency: java.lang.String getName(ohos.global.icu.util.ULocale,int,java.lang.String,boolean[])>
<java.util.UUID: long getMostSignificantBits()>
<ohos.agp.render.opengl.GLES20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<ohos.ai.tts.TtsListener: void onFinish(java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThanOrEqualTo(java.lang.String,java.sql.Time)>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setCity(java.lang.String)>
<ohos.media.recorder.Recorder: boolean setRecorderProfile(ohos.media.recorder.RecorderProfile)>
<java.sql.ResultSet: java.sql.SQLXML getSQLXML(int)>
<java.util.concurrent.Semaphore: int drainPermits()>
<ohos.agp.components.TimePicker: ohos.agp.components.element.Element getOperatedTextBackgroundElement()>
<java.sql.CallableStatement: void setNull(java.lang.String,int)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object higherKey(java.lang.Object)>
<java.util.zip.ZipOutputStream: void finish()>
<ohos.agp.render.render3d.SceneNode: void setExported(boolean)>
<ohos.security.permission.PermissionGroupDef: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal min(ohos.global.icu.math.BigDecimal,ohos.global.icu.math.MathContext)>
<java.time.chrono.JapaneseDate: java.time.chrono.Chronology getChronology()>
<ohos.media.photokit.support.AlbumList: java.lang.String getCoverData()>
<ohos.data.rdb.RdbRangeException: void <init>(java.lang.String)>
<ohos.global.icu.text.DateTimePatternGenerator: ohos.global.icu.text.DateTimePatternGenerator freeze()>
<ohos.aafwk.ability.Ability: ohos.aafwk.ability.AbilityPackage getAbilityPackage()>
<ohos.aafwk.ability.continuation.ContinuationDeviceInfo: void setDeviceName(java.lang.String)>
<java.sql.SQLInput: boolean readBoolean()>
<ohos.global.icu.text.DisplayContext.Type: void <clinit>()>
<ohos.wifi.p2p.WifiP2pGroup: boolean unmarshalling(ohos.utils.Parcel)>
<java.lang.Long: java.lang.String toString(long,int)>
<ohos.security.fileprotect.SfpPolicyManager: void <clinit>()>
<java.util.concurrent.locks.ReentrantLock: boolean tryLock(long,java.util.concurrent.TimeUnit)>
<java.lang.reflect.Modifier: boolean isInterface(int)>
<ohos.data.rdb.StoreConfig: ohos.data.DatabaseFileType getDatabaseFileType()>
<ohos.aafwk.content.Intent: java.util.ArrayList getStringArrayListParam(java.lang.String)>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime formatToValue(ohos.global.icu.text.RelativeDateTimeFormatter.Direction,ohos.global.icu.text.RelativeDateTimeFormatter.AbsoluteUnit)>
<ohos.agp.components.element.ShapeElement: ohos.agp.components.element.ShapeElement.Orientation getGradientOrientation()>
<ohos.data.distributed.device.DeviceKvStore: java.util.List getEntries(ohos.data.distributed.common.Query)>
<ohos.sysappcomponents.contact.entity.Relation: void setLabelId(ohos.app.Context,int)>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<ohos.media.camera.device.FrameConfig: int getAeMode()>
<ohos.rpc.MessageParcel: int getRawDataCapacity()>
<ohos.media.audio.AudioRendererInfo.Builder: void <init>()>
<ohos.agp.render.Canvas: void drawRect(float,float,float,float,ohos.agp.render.Paint)>
<java.util.Properties: void store(java.io.OutputStream,java.lang.String)>
<java.security.cert.CertificateExpiredException: void <init>(java.lang.String)>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitNoTypeAsNone(javax.lang.model.type.NoType,java.lang.Object)>
<ohos.nfc.oma.Channel: void closeChannel()>
<java.time.Duration: boolean isNegative()>
<ohos.media.sessioncore.AVSession: void setAVSessionCallback(ohos.media.common.sessioncore.AVSessionCallback)>
<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>
<ohos.agp.components.ScrollView: void fluentScrollYTo(int)>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitAnnotation(javax.lang.model.element.AnnotationMirror,java.lang.Object)>
<java.security.NoSuchProviderException: void <init>(java.lang.String)>
<ohos.media.codec.CodecDescriptionList: void <init>()>
<ohos.utils.BasePacMap: double[] getDoubleValueArray(java.lang.String)>
<java.util.Collection: boolean equals(java.lang.Object)>
<javax.net.ssl.SNIServerName: byte[] getEncoded()>
<java.text.DecimalFormat: java.lang.String toLocalizedPattern()>
<java.text.Format: java.lang.Object clone()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,java.util.Calendar)>
<ohos.global.icu.text.Bidi: int getBaseLevel()>
<ohos.data.async.JobParams.Builder: ohos.data.async.JobParams.Builder setCookie(java.lang.Object)>
<ohos.utils.BasePacMap: void putChar(java.lang.String,char)>
<ohos.aafwk.ability.DataAbilityHelper: ohos.data.resultset.ResultSet query(ohos.utils.net.Uri,java.lang.String[],ohos.data.dataability.DataAbilityPredicates)>
<ohos.agp.render.Vertices: int getVertexCount()>
<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>
<ohos.data.distributed.device.DeviceKvStore: double getDouble(java.lang.String,java.lang.String)>
<java.util.concurrent.locks.StampedLock: void <init>()>
<ohos.agp.components.ListContainer: void setItemLongClickedListener(ohos.agp.components.ListContainer.ItemLongClickedListener)>
<java.security.cert.X509CertSelector: java.lang.String getSubjectPublicKeyAlgID()>
<ohos.agp.graphics.TextureHolder: void setBufferDimension(int,int)>
<ohos.wifi.WifiLinkedInfo: boolean isRestricted()>
<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)>
<javax.sql.RowSetMetaData: void setColumnLabel(int,java.lang.String)>
<ohos.org.xml.sax.Attributes: java.lang.String getType(java.lang.String)>
<ohos.app.AbilityContext: void displayUnlockMissionMessage()>
<java.lang.StringBuilder: java.lang.String substring(int,int)>
<ohos.global.icu.lang.UCharacter: int getNumericValue(int)>
<java.io.StringWriter: java.io.StringWriter append(char)>
<javax.net.ssl.SSLParameters: void setEndpointIdentificationAlgorithm(java.lang.String)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setAction(java.lang.String)>
<java.util.regex.Matcher: java.util.regex.Matcher region(int,int)>
<java.io.RandomAccessFile: double readDouble()>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getCurrencyInstance()>
<ohos.javax.xml.stream.events.Attribute: java.lang.String getDTDType()>
<java.nio.DoubleBuffer: double get()>
<ohos.bluetooth.ble.BleCentralManager: void startScan(java.util.List,int,int)>
<java.sql.ResultSet: void updateAsciiStream(int,java.io.InputStream,int)>
<javax.lang.model.util.SimpleTypeVisitor6: void <init>(java.lang.Object)>
<ohos.agp.components.AttrHelper: ohos.agp.utils.Color convertValueToColor(java.lang.String)>
<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>
<ohos.agp.render.opengl.GLES31: void glTexStorage2DMultisample(int,int,int,int,int,boolean)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setRoughnessFactor(float)>
<ohos.global.icu.lang.UCharacter: int codePointBefore(char[],int)>
<java.util.stream.BaseStream: java.util.stream.BaseStream sequential()>
<ohos.global.icu.text.SearchIterator: boolean isOverlapping()>
<ohos.utils.geo.DimensFloat: void <init>(int,int)>
<ohos.media.player.Player: void <init>(ohos.app.Context)>
<ohos.interwork.utils.PacMapEx: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.SimpleTimeZone: void setStartRule(int,int,int,int,boolean)>
<ohos.agp.components.DatePicker: void setSelectorItemNum(int)>
<java.time.temporal.TemporalField: java.time.temporal.ValueRange range()>
<java.time.Duration: java.time.Duration negated()>
<ohos.accessibility.ability.GesturePathDefine: void setDurationTime(int)>
<ohos.global.icu.text.BreakIterator: int getRuleStatus()>
<ohos.miscservices.timeutility.Timer.ITimerListener: void onTrigger()>
<java.time.zone.ZoneRules: java.time.ZoneOffset getStandardOffset(java.time.Instant)>
<ohos.org.xml.sax.SAXParseException: void <init>(java.lang.String,ohos.org.xml.sax.Locator,java.lang.Exception)>
<ohos.agp.render.render3d.math.Vector3: float getLength()>
<ohos.media.tubecore.AVTubeManager.TubeObserver: void onTubeUpdate(ohos.media.tubecore.AVTubeManager,ohos.media.tubecore.AVTube)>
<java.net.URI: boolean equals(java.lang.Object)>
<ohos.app.AbilityContext: void switchToDeviceEncryptedStorageContext()>
<ohos.agp.components.ListContainer: void setContentEndOffSet(int)>
<ohos.aafwk.ability.AbilitySlice: boolean reverseContinueAbility()>
<java.text.DecimalFormat: boolean equals(java.lang.Object)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder appendEncodedPath(java.lang.String)>
<ohos.miscservices.pasteboard.PasteData.DataProperty: void setTag(java.lang.CharSequence)>
<ohos.sysappcomponents.contact.entity.SipAddress: void <init>(ohos.app.Context,java.lang.String,int)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal min(ohos.global.icu.math.BigDecimal)>
<java.lang.StrictMath: int getExponent(float)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>
<ohos.agp.render.Path: void offset(float,float,ohos.agp.render.Path)>
<ohos.aafwk.ability.AbilitySlice: void setUIContent(ohos.agp.components.ComponentContainer)>
<javax.crypto.KeyAgreement: java.lang.String getAlgorithm()>
<javax.net.ssl.X509KeyManager: java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket)>
<ohos.agp.components.element.PixelMapElement: boolean getFilterPixelMap()>
<javax.sql.RowSet: void setBlob(java.lang.String,java.io.InputStream)>
<java.nio.channels.DatagramChannel: int validOps()>
<ohos.utils.PacMap: int getIntValue(java.lang.String,int)>
<java.lang.Math: int negateExact(int)>
<ohos.global.icu.util.Calendar: java.lang.String getDisplayName(java.util.Locale)>
<ohos.media.sessioncore.AVController: ohos.media.common.AVMetadata getAVMetadata()>
<ohos.accessibility.ability.AccessibleAbility: ohos.accessibility.ability.SoftKeyBoardController getSoftKeyBoardController()>
<ohos.agp.render.opengl.GLES30: void glDeleteTransformFeedbacks(int,int[])>
<java.util.Arrays: short[] copyOf(short[],int)>
<java.util.Iterator: void forEachRemaining(java.util.function.Consumer)>
<ohos.event.notification.NotificationHelper: void cancelNotification(java.lang.String,int)>
<ohos.utils.net.UrlQueryFilter: java.lang.String getParamValue(java.lang.String)>
<ohos.agp.window.service.Window: void setBackground(java.lang.String)>
<ohos.global.icu.text.DecimalFormat: void <init>(java.lang.String,ohos.global.icu.text.DecimalFormatSymbols,ohos.global.icu.text.CurrencyPluralInfo,int)>
<ohos.aafwk.ability.Ability: boolean updateForm(long,ohos.aafwk.ability.FormBindingData)>
<java.util.AbstractSet: int hashCode()>
<ohos.agp.components.Component: void informConfigurationChanged(ohos.global.configuration.Configuration)>
<ohos.media.common.AVDescription.Builder: ohos.media.common.AVDescription.Builder setTitle(java.lang.CharSequence)>
<java.time.Duration: java.time.Duration plus(java.time.Duration)>
<ohos.agp.components.IndexBar: void <init>(ohos.app.Context)>
<ohos.agp.utils.Rect: void fuse(int,int)>
<java.util.Observable: void deleteObserver(java.util.Observer)>
<ohos.global.icu.text.PluralRules: ohos.global.icu.text.PluralRules parseDescription(java.lang.String)>
<java.io.CharConversionException: void <init>()>
<java.nio.file.Files: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.lang.String)>
<ohos.agp.components.Text: void setTextCursorVisible(boolean)>
<ohos.global.icu.text.NumberFormat: void setCurrency(ohos.global.icu.util.Currency)>
<java.util.Date: void <init>(long)>
<java.security.PrivilegedExceptionAction: java.lang.Object run()>
<java.util.Collections: java.util.NavigableMap synchronizedNavigableMap(java.util.NavigableMap)>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource create(java.io.InputStream,ohos.media.image.ImageSource.SourceOptions)>
<java.lang.Float: java.lang.String toString(float)>
<javax.security.cert.X509Certificate: void checkValidity(java.util.Date)>
<ohos.agp.render.render3d.math.Matrix4x4: float[] getData()>
<ohos.global.icu.math.BigDecimal: int intValue()>
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<ohos.accessibility.ability.AccessibilityInfo: java.lang.CharSequence getContent()>
<ohos.agp.components.Component: ohos.agp.utils.Rect getComponentPosition()>
<ohos.sysappcomponents.contact.entity.Contact: java.util.List getWebsites()>
<ohos.utils.geo.Rect: java.lang.String convertRectToValue()>
<java.util.concurrent.ThreadPoolExecutor: int getCorePoolSize()>
<java.util.stream.DoubleStream: java.util.OptionalDouble findAny()>
<ohos.global.icu.text.Bidi: void setInverse(boolean)>
<java.util.Map: int size()>
<javax.crypto.KeyAgreement: void init(java.security.Key,java.security.SecureRandom)>
<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger()>
<ohos.agp.render.render3d.math.Vector2: float distance(ohos.agp.render.render3d.math.Vector2,ohos.agp.render.render3d.math.Vector2)>
<ohos.agp.render.opengl.GLES1X: void glTranslatex(int,int,int)>
<ohos.media.audio.AudioStreamInfo.EncodingFormat: ohos.media.audio.AudioStreamInfo.EncodingFormat[] values()>
<ohos.utils.LongPlainArray: boolean contains(long)>
<java.time.chrono.Chronology: java.time.chrono.Era eraOf(int)>
<java.util.HashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<ohos.agp.components.ComponentContainer.LayoutConfig: void setMargins(int,int,int,int)>
<javax.lang.model.element.UnknownElementException: javax.lang.model.element.Element getUnknownElement()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>
<java.util.Locale.LanguageRange: java.util.List mapEquivalents(java.util.List,java.util.Map)>
<java.util.concurrent.locks.StampedLock: long tryReadLock(long,java.util.concurrent.TimeUnit)>
<ohos.global.icu.lang.UCharacter: int digit(int)>
<ohos.media.common.sessioncore.AVControllerCallback: void onOptionsChanged(ohos.utils.PacMap)>
<ohos.agp.render.opengl.GLES32: void glFramebufferTexture(int,int,int,int)>
<java.util.zip.ZipEntry: void <init>(java.lang.String)>
<ohos.global.icu.text.RuleBasedCollator: void setFrenchCollationDefault()>
<java.security.acl.Owner: boolean addOwner(java.security.Principal,java.security.Principal)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query prefixKey(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: ohos.event.notification.NotificationRequest.NotificationMultiLineContent setExpandedTitle(java.lang.String)>
<java.util.NoSuchElementException: void <init>()>
<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>
<javax.tools.JavaFileManager.Location: java.lang.String getName()>
<ohos.data.rdb.StoreConfig.Builder: ohos.data.rdb.StoreConfig.Builder setStorageMode(ohos.data.rdb.StoreConfig.StorageMode)>
<ohos.global.icu.text.UnicodeSet: boolean containsSome(java.lang.Iterable)>
<java.lang.ThreadGroup: int activeCount()>
<ohos.agp.components.webengine.WebView: void reload()>
<java.util.IdentityHashMap: java.util.Collection values()>
<javax.tools.JavaCompiler.CompilationTask: void setLocale(java.util.Locale)>
<ohos.data.resultset.SharedBlock: int getInt(int,int)>
<ohos.agp.render.render3d.Task.State: ohos.agp.render.render3d.Task.State[] values()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>
<ohos.event.notification.NotificationRequest: void <clinit>()>
<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>
<javax.net.SocketFactory: void <init>()>
<ohos.data.resultset.SharedBlock: short getShort(int,int)>
<java.lang.Thread: void <init>()>
<java.time.OffsetDateTime: java.time.Instant toInstant()>
<java.time.ZoneId: java.lang.String getId()>
<ohos.ai.nlu.OnResultListener: void onResult(java.lang.Object)>
<ohos.app.AbilityContext: ohos.app.dispatcher.TaskDispatcher getMainTaskDispatcher()>
<ohos.data.resultset.ResultSet: void registerObserver(ohos.data.rdb.DataObserver)>
<ohos.app.AbilityContext: void startAbilities(ohos.aafwk.content.Intent[])>
<ohos.global.icu.text.Transliterator.Position: void <init>(int,int,int)>
<ohos.global.icu.text.UnicodeSet: boolean equals(java.lang.Object)>
<ohos.agp.window.dialog.CommonDialog.DestroyedListener: void onDestroy()>
<ohos.agp.render.Paint.Join: ohos.agp.render.Paint.Join valueOf(java.lang.String)>
<ohos.global.resource.ResourceManager: void <init>()>
<java.nio.channels.OverlappingFileLockException: void <init>()>
<ohos.agp.components.MagicLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.util.concurrent.LinkedBlockingQueue: void <init>()>
<ohos.agp.render.render3d.gltf.GltfLoader: ohos.agp.render.render3d.gltf.GltfData loadGltf(java.nio.ByteBuffer)>
<java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object)>
<ohos.media.common.sessioncore.AVSessionCallback: void onSeekTo(long)>
<javax.net.ssl.HttpsURLConnection: java.security.Principal getPeerPrincipal()>
<ohos.utils.LightweightMap: boolean removeAll(java.util.Collection)>
<java.sql.CallableStatement: void setSQLXML(java.lang.String,java.sql.SQLXML)>
<java.util.Locale: java.lang.Object clone()>
<java.io.FilterOutputStream: void write(int)>
<ohos.accessibility.ability.AccessibilityInfo: void setEnabled(boolean)>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.text.DateFormat: java.text.NumberFormat getNumberFormat()>
<java.security.Signer: java.lang.String toString()>
<java.util.Collections: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>
<java.sql.CallableStatement: java.lang.Object getObject(java.lang.String,java.util.Map)>
<ohos.bundle.IBundleManager: void disableHomeShortcuts(java.util.List)>
<java.text.DecimalFormatSymbols: void setPatternSeparator(char)>
<ohos.agp.components.webengine.LocationAccessController: void <init>()>
<ohos.data.distributed.user.SingleKvStore: java.util.List getEntries(java.lang.String)>
<ohos.global.icu.math.BigDecimal: int compareTo(java.lang.Object)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<javax.lang.model.util.ElementFilter: java.util.Set constructorsIn(java.util.Set)>
<java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
<ohos.global.resource.Element: java.lang.String getString(java.lang.Object[],java.text.Format[])>
<ohos.data.search.schema.MusicItem: ohos.data.search.schema.MusicItem setArtist(java.lang.String)>
<javax.tools.Diagnostic.Kind: javax.tools.Diagnostic.Kind[] values()>
<ohos.sensor.bean.SensorBase: int getCacheMaxCount()>
<ohos.media.sessioncore.AVController.PlayControls: void prepareToPlayByMediaId(java.lang.String,ohos.utils.PacMap)>
<java.sql.ResultSet: java.sql.SQLXML getSQLXML(java.lang.String)>
<ohos.aafwk.abilityjet.databinding.DataBindingUtil: ohos.aafwk.abilityjet.databinding.DataBinding createBinding(int,ohos.app.Context,java.lang.String)>
<ohos.data.rdb.RdbStore: long insertWithConflictResolution(java.lang.String,ohos.data.rdb.ValuesBucket,ohos.data.rdb.RdbStore.ConflictResolution)>
<ohos.bundle.HapModuleInfo: java.lang.String getLabel()>
<ohos.media.audio.AudioRenderer: boolean setSampleRate(int)>
<ohos.utils.geo.Rect: void setPivot(ohos.utils.geo.Point)>
<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>
<ohos.data.distributed.common.Options: ohos.data.distributed.common.KvStoreType getKvStoreType()>
<ohos.miscservices.inputmethod.EditingText: void <init>()>
<ohos.global.icu.util.MeasureUnit: java.util.Set getAvailableTypes()>
<java.lang.Integer: int max(int,int)>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.AlphabeticIndex addLabels(java.util.Locale[])>
<java.lang.Math: long subtractExact(long,long)>
<ohos.utils.geo.RectFloat: void <init>()>
<ohos.global.i18n.text.MeasureFormatter: java.lang.String format(ohos.global.i18n.text.MeasureOptions.Unit,double,ohos.global.i18n.text.MeasureOptions.Unit,ohos.global.i18n.text.MeasureOptions.FormatStyle)>
<java.util.Deque: java.lang.Object pollLast()>
<java.util.concurrent.locks.LockSupport: void unpark(java.lang.Thread)>
<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal subtract(ohos.global.icu.math.BigDecimal,ohos.global.icu.math.MathContext)>
<java.util.Scanner: long nextLong()>
<java.util.Hashtable: void replaceAll(java.util.function.BiFunction)>
<javax.security.auth.Subject: java.util.Set getPrivateCredentials(java.lang.Class)>
<ohos.media.camera.device.CameraAbility: java.util.List getParameterRange(ohos.media.camera.params.ParameterKey.Key)>
<java.util.Hashtable: boolean contains(java.lang.Object)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates like(java.lang.String,java.lang.String)>
<ohos.media.audio.AudioManager.RingtoneType: ohos.media.audio.AudioManager.RingtoneType valueOf(java.lang.String)>
<java.util.Deque: boolean contains(java.lang.Object)>
<ohos.media.sessioncore.AVController: long getFlags()>
<ohos.distributedschedule.interwork.DeviceInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.MessagePattern: void <init>(java.lang.String)>
<ohos.media.sessioncore.AVBrowserService: void onLoadAVElementList(java.lang.String,ohos.media.common.sessioncore.AVBrowserResult)>
<ohos.data.async.DataAbilityAsyncHandler: void addUpdateJob(ohos.data.async.JobParams,ohos.utils.net.Uri,ohos.data.rdb.ValuesBucket,ohos.data.dataability.DataAbilityPredicates,ohos.data.async.UpdateCallback)>
<ohos.agp.components.Component: boolean findRequestNextFocus(int)>
<ohos.agp.render.opengl.GLES1X: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<javax.security.auth.login.LoginException: void <init>(java.lang.String)>
<javax.lang.model.util.Types: javax.lang.model.element.Element asElement(javax.lang.model.type.TypeMirror)>
<java.util.zip.Deflater: void finalize()>
<ohos.aafwk.ability.continuation.ContinuationDeviceInfo: void <init>()>
<java.net.JarURLConnection: java.lang.String getEntryName()>
<ohos.sensor.data.CategoryMotionData: void <init>(ohos.sensor.bean.CategoryMotion,int,long,int,float[])>
<ohos.agp.components.Rating: float getScore()>
<java.lang.Long: java.lang.String toUnsignedString(long,int)>
<ohos.agp.components.webengine.WebAgent: void onError(ohos.agp.components.webengine.WebView,ohos.agp.components.webengine.ResourceRequest,ohos.agp.components.webengine.ResourceError)>
<ohos.app.AbilityContext: java.io.File getExternalCacheDir()>
<ohos.net.NetHandle: void bindSocket(java.net.DatagramSocket)>
<java.lang.Thread: void <init>(java.lang.String)>
<ohos.agp.utils.Rect: float getPreciseHorizontalCenter()>
<java.nio.channels.spi.AbstractSelectionKey: boolean isValid()>
<ohos.event.notification.NotificationSlot: void setVibrationStyle(long[])>
<java.io.CharArrayWriter: void write(char[],int,int)>
<java.util.EventListenerProxy: void <init>(java.util.EventListener)>
<java.util.Date: java.lang.Object clone()>
<ohos.aafwk.ability.Ability: boolean reload(ohos.utils.net.Uri,ohos.utils.PacMap)>
<java.util.Scanner: void remove()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query notEqualTo(java.lang.String,java.lang.String)>
<java.util.concurrent.CompletionException: void <init>()>
<java.lang.ThreadGroup: void destroy()>
<javax.net.ssl.X509ExtendedKeyManager: void <init>()>
<ohos.global.i18n.text.MeasureOptions.Usage: java.lang.String getUsageType()>
<java.time.Clock: java.time.Clock fixed(java.time.Instant,java.time.ZoneId)>
<ohos.agp.components.Text.TruncationMode: ohos.agp.components.Text.TruncationMode[] values()>
<java.util.Spliterator: boolean tryAdvance(java.util.function.Consumer)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object remove(java.lang.Object)>
<ohos.agp.components.webengine.WebView: void onActive()>
<java.util.stream.IntStream: int[] toArray()>
<ohos.global.icu.text.LocaleDisplayNames: java.lang.String languageDisplayName(java.lang.String)>
<ohos.bluetooth.ble.BlePeripheralManager: void close()>
<java.net.URLConnection: boolean getDoInput()>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getInstance(ohos.global.icu.util.ULocale)>
<ohos.agp.components.Component: void setFocusBorderEnable(boolean)>
<ohos.location.GeoAddress: java.lang.String getSubRoadName()>
<java.util.TreeSet: java.util.Comparator comparator()>
<java.security.cert.X509CRL: java.util.Set getRevokedCertificates()>
<ohos.utils.zson.ZSONReader: void endObject()>
<ohos.location.GeoAddress: double getLongitude()>
<java.util.EventListenerProxy: java.util.EventListener getListener()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean compareAndSetState(int,int)>
<ohos.agp.render.opengl.GLES1X: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayLanguage(ohos.global.icu.util.ULocale)>
<ohos.usb.USBInterface: void setEndpoints(ohos.usb.USBEndpoint[])>
<java.net.URLStreamHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>
<java.util.stream.DoubleStream: double reduce(double,java.util.function.DoubleBinaryOperator)>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setWidth(java.lang.Integer)>
<java.nio.channels.SelectionKey: int readyOps()>
<java.util.concurrent.Phaser: int getUnarrivedParties()>
<ohos.hiviewdfx.xcollie.XCollie: boolean updateTimeout(int,long)>
<ohos.agp.render.opengl.GLES20: void glCompileShader(int)>
<ohos.miscservices.inputmethod.EditorAttribute: void setInputOption(int)>
<java.sql.ResultSet: int findColumn(java.lang.String)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.Object)>
<ohos.telephony.TelephoneNumberUtils: java.lang.String formatPhoneNumberToE164(java.lang.String,java.lang.String)>
<java.util.regex.Pattern: java.util.function.Predicate asPredicate()>
<ohos.global.icu.text.DecimalFormatSymbols: void setExponentSeparator(java.lang.String)>
<ohos.data.rdb.RdbLockedException: void <init>()>
<ohos.miscservices.inputmethod.EditorAttribute: int getEnterKeyType()>
<ohos.net.LocalSocket: void connectSocket()>
<ohos.bundle.BundleInfo: java.util.List getModulePublicDirs()>
<javax.sql.RowSet: void setType(int)>
<ohos.global.icu.text.DateTimePatternGenerator: void setAppendItemName(int,java.lang.String)>
<ohos.agp.colors.HslColor: float getLightness()>
<ohos.agp.components.TimePicker: void setSelectorItemNum(int)>
<ohos.system.OsHelper: java.lang.String readSymbolicLink(java.lang.String)>
<java.nio.DoubleBuffer: int hashCode()>
<ohos.bundle.ShortcutIntent: void setTargetBundle(java.lang.String)>
<javax.sql.RowSet: java.lang.String getPassword()>
<ohos.telephony.ShortMessageManager: java.util.ArrayList splitMessage(java.lang.String)>
<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>
<java.security.Signature: java.lang.String getAlgorithm()>
<ohos.media.image.ImagePacker: boolean addImage(ohos.media.image.ImageSource)>
<java.time.chrono.MinguoDate: java.lang.String toString()>
<ohos.sysappcomponents.contact.entity.Contact: java.util.List getPhoneNumbers()>
<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<javax.net.ssl.SSLServerSocket: void setEnableSessionCreation(boolean)>
<java.text.CollationElementIterator: void setText(java.text.CharacterIterator)>
<ohos.data.distributed.common.KvStoreErrorCode: java.lang.String getErrorMsg()>
<java.util.Deque: void addFirst(java.lang.Object)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture acceptEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Consumer,java.util.concurrent.Executor)>
<javax.lang.model.util.SimpleTypeVisitor8: void <init>(java.lang.Object)>
<ohos.data.orm.Blob: int setBytes(long,byte[])>
<ohos.accessibility.AccessibilityAbilityInfo: java.lang.String getName()>
<ohos.org.xml.sax.helpers.DefaultHandler: void notationDecl(java.lang.String,java.lang.String,java.lang.String)>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>
<ohos.agp.colors.HsvColor: void setValue(float)>
<ohos.agp.utils.Circle: boolean isInclude(ohos.agp.utils.Point)>
<ohos.miscservices.pasteboard.SystemPasteboard: void addPasteDataChangedListener(ohos.miscservices.pasteboard.IPasteDataChangedListener)>
<java.net.URI: java.lang.String getRawUserInfo()>
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDate minus(java.time.temporal.TemporalAmount)>
<java.util.concurrent.atomic.AtomicLongArray: java.lang.String toString()>
<ohos.nfc.tag.NdefTag: ohos.nfc.tag.NdefMessage getNdefMessage()>
<ohos.aafwk.content.Intent: int operationHashCode()>
<ohos.rpc.MessageParcel: ohos.utils.Ashmem readAshmem()>
<ohos.app.AbilityContext: ohos.app.Context getAbilityPackageContext()>
<ohos.event.notification.NotificationSortingMap: void <clinit>()>
<java.util.function.DoubleSupplier: double getAsDouble()>
<java.util.Arrays: void parallelSetAll(double[],java.util.function.IntToDoubleFunction)>
<ohos.global.icu.text.RelativeDateTimeFormatter.AbsoluteUnit: ohos.global.icu.text.RelativeDateTimeFormatter.AbsoluteUnit valueOf(java.lang.String)>
<ohos.nfc.tag.MifareClassicTag: int getFirstBlockId(int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThanOrEqualTo(java.lang.String,float)>
<java.nio.ByteBuffer: float getFloat()>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal divide(ohos.global.icu.math.BigDecimal,int,int)>
<ohos.agp.render.render3d.SceneNode: java.util.Optional getChild(java.lang.String)>
<ohos.agp.components.Image: void setScaleMode(ohos.agp.components.Image.ScaleMode)>
<ohos.event.notification.NotificationSubscriber: void onConnected()>
<java.lang.Enum: java.lang.Class getDeclaringClass()>
<ohos.media.image.PixelMap: boolean marshalling(ohos.utils.Parcel)>
<ohos.account.app.AppAccountAbility: boolean addAccount(java.lang.String,java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>
<ohos.utils.HalfFloat: ohos.utils.HalfFloat valueOf(java.lang.String)>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat setSizeY(int)>
<ohos.global.icu.util.HebrewCalendar: void <init>(int,int,int)>
<java.sql.ResultSet: java.sql.RowId getRowId(int)>
<ohos.data.orm.EntityHelper: java.lang.String getTableName()>
<ohos.global.icu.util.TimeZone: java.lang.String getIDForWindowsID(java.lang.String,java.lang.String)>
<ohos.media.audio.Timestamp: long getNanoTimestamp()>
<ohos.media.common.sessioncore.AVCallerUserInfo: int getCallerUid()>
<java.nio.file.FileStore: long getUnallocatedSpace()>
<ohos.bundle.FormInfo: java.lang.String getFormConfigAbility()>
<ohos.event.notification.NotificationRequest: boolean isFloatingIcon()>
<java.security.cert.PolicyNode: java.util.Set getPolicyQualifiers()>
<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String,java.util.Map)>
<ohos.agp.components.PositionLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.global.icu.util.VersionInfo: boolean equals(java.lang.Object)>
<ohos.global.configuration.Configuration: void <init>()>
<java.time.LocalDateTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<java.lang.Float: boolean equals(java.lang.Object)>
<java.net.HttpCookie: void setCommentURL(java.lang.String)>
<javax.net.ssl.SSLEngine: void closeInbound()>
<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query select()>
<ohos.agp.window.dialog.PopupDialog: ohos.agp.window.dialog.PopupDialog setText(java.lang.String)>
<java.util.Arrays: java.util.stream.DoubleStream stream(double[])>
<ohos.sysappcomponents.contact.entity.Contact: ohos.sysappcomponents.contact.entity.Portrait getPortrait()>
<java.util.BitSet: void set(int)>
<ohos.bundle.BundleInfo: int getCompatibleVersion()>
<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,boolean)>
<ohos.app.Context: ohos.app.IAbilityManager getAbilityManager()>
<ohos.media.camera.device.FrameConfig: int getFaceDetectionType()>
<ohos.data.rdb.RdbStore: boolean isMemoryRdb()>
<java.sql.SQLTransactionRollbackException: void <init>(java.lang.String,java.lang.String,int)>
<ohos.global.icu.util.IslamicCalendar: void <init>(ohos.global.icu.util.ULocale)>
<ohos.utils.zson.ZSONWriter: void endArray()>
<ohos.agp.render.opengl.GLES30: void glVertexAttribDivisor(int,int)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectInput(java.io.File)>
<ohos.agp.components.ProgressBar: int[] getProgressColors()>
<java.nio.ByteBuffer: byte get()>
<java.time.chrono.JapaneseDate: long toEpochDay()>
<ohos.data.distributed.common.Value: ohos.data.distributed.common.Value get(java.lang.String)>
<javax.lang.model.element.ElementKind: void <clinit>()>
<ohos.agp.components.TextField: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.lang.ClassLoader: java.lang.Class findSystemClass(java.lang.String)>
<ohos.media.audio.AudioCapturer: ohos.media.audio.AudioStreamInfo.ChannelMask getAudioChannel()>
<java.net.URL: java.io.InputStream openStream()>
<ohos.agp.utils.Rect.RotationEnum: ohos.agp.utils.Rect.RotationEnum valueOf(java.lang.String)>
<ohos.media.camera.device.CameraConfig: boolean equals(java.lang.Object)>
<ohos.global.icu.util.Calendar: int getActualMinimum(int)>
<ohos.global.i18n.text.MeasureOptions.FormatStyle: ohos.global.icu.text.MeasureFormat.FormatWidth getFormatWidth()>
<ohos.data.orm.UpgradeComparator: int compare(java.lang.Object,java.lang.Object)>
<java.time.chrono.ChronoLocalDate: boolean isSupported(java.time.temporal.TemporalField)>
<ohos.event.notification.IAdvancedNotificationManager: void addNotificationSlots(java.lang.String,java.util.List)>
<ohos.event.commonevent.CommonEventSubscribeInfo: void setThreadMode(ohos.event.commonevent.CommonEventSubscribeInfo.ThreadMode)>
<ohos.javax.xml.stream.events.XMLEvent: boolean isProcessingInstruction()>
<java.lang.Character: boolean isUnicodeIdentifierStart(char)>
<ohos.javax.xml.stream.XMLStreamReader: int getNamespaceCount()>
<ohos.global.icu.util.Calendar: java.lang.String fieldName(int)>
<ohos.global.icu.text.CurrencyPluralInfo: java.lang.String getCurrencyPluralPattern(java.lang.String)>
<ohos.nfc.tag.MessageRecord: boolean equals(java.lang.Object)>
<java.time.LocalDateTime: java.time.LocalDateTime plusNanos(long)>
<java.util.Spliterators: java.util.Spliterator.OfLong emptyLongSpliterator()>
<ohos.agp.render.Canvas: void drawLine(float,float,float,float,ohos.agp.render.Paint)>
<ohos.global.icu.text.PluralFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.agp.components.Picker: ohos.agp.components.element.Element[] getDisplayedLinesElements()>
<ohos.agp.components.webengine.WebAgent: ohos.agp.components.webengine.ResourceResponse processResourceRequest(ohos.agp.components.webengine.WebView,ohos.agp.components.webengine.ResourceRequest)>
<ohos.agp.components.AdaptiveBoxLayout: void clearAdaptiveRules()>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: void lazySet(java.lang.Object,int)>
<java.security.cert.X509CertSelector: java.util.Date getCertificateValid()>
<java.time.chrono.JapaneseChronology: java.util.List eras()>
<ohos.data.distributed.common.FieldNode: void <init>(java.lang.String)>
<java.util.concurrent.ForkJoinTask: int getQueuedTaskCount()>
<java.sql.ResultSet: void beforeFirst()>
<ohos.global.icu.text.Replaceable: void getChars(int,int,char[],int)>
<java.util.concurrent.ArrayBlockingQueue: int drainTo(java.util.Collection,int)>
<ohos.global.icu.text.ScientificNumberFormatter: ohos.global.icu.text.ScientificNumberFormatter getSuperscriptInstance(ohos.global.icu.util.ULocale)>
<java.nio.charset.CharsetDecoder: void implReplaceWith(java.lang.String)>
<java.security.acl.AclEntry: boolean checkPermission(java.security.acl.Permission)>
<ohos.agp.components.PageSlider: void setOrientation(int)>
<java.lang.Compiler: void disable()>
<ohos.agp.render.opengl.GLES20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates between(java.lang.String,java.util.Calendar,java.util.Calendar)>
<java.time.temporal.ChronoField: java.lang.String getDisplayName(java.util.Locale)>
<ohos.agp.components.Component: void enableScrollBar(int,boolean)>
<java.time.chrono.ChronoLocalDateTime: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.time.MonthDay: java.time.MonthDay now(java.time.ZoneId)>
<ohos.agp.components.webengine.WebView: boolean requestFocus()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenAccept(java.util.function.Consumer)>
<ohos.global.icu.util.ULocale: java.util.Iterator getKeywords(java.lang.String)>
<ohos.global.icu.util.VersionInfo: void <clinit>()>
<java.net.Inet6Address: int hashCode()>
<java.util.Comparator: java.util.Comparator thenComparingDouble(java.util.function.ToDoubleFunction)>
<java.net.URI: java.net.URI parseServerAuthority()>
<ohos.global.icu.text.AlphabeticIndex: void <init>(ohos.global.icu.util.ULocale)>
<ohos.data.search.schema.MusicItem: ohos.data.search.schema.MusicItem setAlbum(java.lang.String)>
<ohos.global.icu.util.DateInterval: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.String toString()>
<ohos.telephony.GsmSignalInformation: void <init>()>
<java.util.BitSet: void xor(java.util.BitSet)>
<java.util.function.Predicate: java.util.function.Predicate and(java.util.function.Predicate)>
<javax.net.ssl.KeyManagerFactory: java.lang.String getAlgorithm()>
<java.sql.SQLInput: java.sql.Time readTime()>
<ohos.agp.render.opengl.GLES32: void glTexBuffer(int,int,int)>
<ohos.agp.render.render3d.math.Vector3: float distance(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<ohos.agp.components.Component: int getGesturePriority(ohos.agp.components.Component.GestureType)>
<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>
<java.sql.CallableStatement: void setDate(java.lang.String,java.sql.Date,java.util.Calendar)>
<java.nio.file.WatchEvent: java.nio.file.WatchEvent.Kind kind()>
<java.net.ServerSocket: void implAccept(java.net.Socket)>
<ohos.agp.window.dialog.ListDialog: void setListener(ohos.agp.components.ListContainer.ItemClickedListener,ohos.agp.components.ListContainer.ItemLongClickedListener,ohos.agp.components.ListContainer.ItemSelectedListener)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void invokeAbilityOnBackground(ohos.aafwk.ability.Ability)>
<ohos.event.commonevent.CommonEventSubscriber: ohos.event.commonevent.CommonEventSubscribeInfo getSubscribeInfo()>
<ohos.media.audio.AudioInterrupt: ohos.media.audio.AudioStreamInfo getStreamInfo()>
<ohos.global.icu.text.MessageFormat: int hashCode()>
<ohos.sysappcomponents.contact.ContactsHelper: ohos.sysappcomponents.contact.entity.Contact queryContact(java.lang.String,ohos.sysappcomponents.contact.entity.Holder,ohos.sysappcomponents.contact.ContactAttributes)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getEncoding()>
<java.lang.Character.UnicodeScript: java.lang.Character.UnicodeScript valueOf(java.lang.String)>
<java.io.DataInputStream: int readInt()>
<java.util.concurrent.locks.StampedLock: java.util.concurrent.locks.Lock asWriteLock()>
<java.security.acl.Owner: boolean isOwner(java.security.Principal)>
<ohos.agp.components.SlideDrawer.LayoutConfig: void <init>(ohos.agp.components.SlideDrawer.LayoutConfig)>
<ohos.agp.components.Component: int getTop()>
<ohos.event.notification.NotificationRequest: int getVisibleness()>
<ohos.utils.zson.ZSONArray: java.lang.Object get(int)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getCurrencyPattern()>
<java.nio.channels.spi.AbstractSelector: java.nio.channels.spi.SelectorProvider provider()>
<java.util.concurrent.LinkedBlockingQueue: java.util.Spliterator spliterator()>
<ohos.agp.render.Region: boolean op(ohos.agp.render.Region,ohos.agp.render.Region,ohos.agp.render.Region.Op)>
<java.util.stream.Collectors: java.util.stream.Collector groupingBy(java.util.function.Function,java.util.stream.Collector)>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,float[])>
<ohos.agp.components.element.ShapeElement: void setStroke(int,ohos.agp.colors.RgbColor)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,boolean)>
<ohos.agp.render.opengl.GLES20: int glGetError()>
<ohos.aafwk.ability.Ability: void onTopActiveAbilityChanged(boolean)>
<ohos.agp.render.Region: boolean quickReject(ohos.agp.render.Region)>
<javax.crypto.spec.DHPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>
<ohos.global.icu.util.GregorianCalendar: boolean isEquivalentTo(ohos.global.icu.util.Calendar)>
<ohos.media.image.PropertyFilter: ohos.media.image.PropertyFilter setPropertyInt(java.lang.String,int)>
<java.time.OffsetDateTime: java.time.LocalDate toLocalDate()>
<javax.sql.RowSet: void setArray(int,java.sql.Array)>
<javax.lang.model.element.ElementVisitor: java.lang.Object visitPackage(javax.lang.model.element.PackageElement,java.lang.Object)>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.Instant,java.time.ZoneId)>
<ohos.accessibility.ability.AccessibleOperation: int hashCode()>
<ohos.agp.render.opengl.GLES20: void glReleaseShaderCompiler()>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 divide(ohos.agp.render.render3d.math.Vector3,float)>
<ohos.agp.components.Component: void setBackground(ohos.agp.components.element.Element)>
<java.time.Period: boolean equals(java.lang.Object)>
<java.util.Arrays: int binarySearch(byte[],byte)>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.BaseDialog setAlignment(int)>
<java.nio.FloatBuffer: java.lang.String toString()>
<ohos.agp.text.RichText.TouchEventListener: boolean onTouchEvent(ohos.agp.components.Component,ohos.multimodalinput.event.TouchEvent)>
<ohos.global.icu.lang.UCharacter: ohos.global.icu.util.RangeValueIterator getTypeIterator()>
<java.util.logging.ErrorManager: void <init>()>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object lowerKey(java.lang.Object)>
<ohos.agp.render.PathEffect: void <init>(ohos.agp.render.Path,float,float,ohos.agp.render.PathEffect.Style)>
<ohos.global.icu.text.StringSearch: ohos.global.icu.text.RuleBasedCollator getCollator()>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoZonedDateTime withZoneSameLocal(java.time.ZoneId)>
<ohos.agp.render.Canvas.VertexMode: int value()>
<javax.lang.model.util.Elements: boolean isFunctionalInterface(javax.lang.model.element.TypeElement)>
<ohos.agp.graphics.Surface: boolean unmarshalling(ohos.utils.Parcel)>
<java.net.InetAddress: java.lang.String getHostAddress()>
<java.text.DecimalFormat: void setGroupingSize(int)>
<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getG()>
<ohos.data.distributed.common.UserInfo: int hashCode()>
<ohos.agp.components.Text: void setSelectionColor(ohos.agp.utils.Color)>
<ohos.data.search.schema.DocumentItem: ohos.data.search.schema.DocumentItem setContent(java.lang.String)>
<ohos.org.w3c.dom.ls.LSInput: void setPublicId(java.lang.String)>
<ohos.bluetooth.ble.GattService: boolean marshalling(ohos.utils.Parcel)>
<ohos.os.ProcessManager: boolean isAppUid(int)>
<ohos.agp.render.opengl.GLES20: void glClearStencil(int)>
<java.util.Deque: java.lang.Object pop()>
<java.util.logging.FileHandler: void <init>(java.lang.String)>
<ohos.sysappcomponents.calendar.entity.Accounts: void setAccName(java.lang.String)>
<ohos.global.icu.text.UnicodeSet: void <clinit>()>
<java.util.DoubleSummaryStatistics: java.lang.String toString()>
<ohos.location.GeoAddress: boolean unmarshalling(ohos.utils.Parcel)>
<java.sql.ResultSetMetaData: java.lang.String getColumnName(int)>
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
<java.util.concurrent.CompletableFuture: boolean cancel(boolean)>
<ohos.ai.asr.AsrIntent: int getTimeoutThresholdMs()>
<java.util.concurrent.ForkJoinPool: boolean hasQueuedSubmissions()>
<ohos.utils.zson.ZSONType: void <clinit>()>
<java.sql.SQLXML: void setString(java.lang.String)>
<java.security.cert.CRLException: void <init>(java.lang.Throwable)>
<java.security.AlgorithmParametersSpi: void <init>()>
<java.util.SortedMap: java.util.Collection values()>
<java.security.spec.ECPoint: java.math.BigInteger getAffineY()>
<ohos.agp.components.Component.MeasureSpec: int getSizeAndConfig(int,int,int)>
<ohos.systemrestore.SystemRestore: void verifyUpgradePackage(java.io.File,ohos.systemrestore.ISystemRestoreProgressListener,java.io.File)>
<ohos.data.DatabaseFileSecurityLevel: void <clinit>()>
<ohos.agp.render.opengl.GLES31: void glProgramUniform3f(int,int,float,float,float)>
<java.sql.DatabaseMetaData: boolean supportsOpenCursorsAcrossRollback()>
<ohos.agp.components.PageSliderProvider: java.lang.String getPageTitle(int)>
<ohos.agp.render.render3d.components.TransformComponent: void <init>()>
<java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<ohos.nfc.tag.TagManager: byte[] sendData(byte[])>
<ohos.global.icu.util.ULocale: java.lang.String getKeywordValue(java.lang.String)>
<ohos.agp.utils.Rect: float getPreciseVerticalCenter()>
<java.util.Arrays: boolean equals(byte[],byte[])>
<ohos.agp.components.Component: int getModeResolved()>
<ohos.nfc.cardemulation.OffHostService: ohos.rpc.IRemoteObject onConnect(ohos.aafwk.content.Intent)>
<java.time.chrono.ChronoLocalDate: int compareTo(java.lang.Object)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: ohos.event.notification.NotificationRequest.NotificationConversationalContent setConversationTitle(java.lang.String)>
<ohos.net.HttpResponseCache: void close()>
<ohos.security.permission.PermissionDef: boolean marshalling(ohos.utils.Parcel)>
<java.util.Map.Entry: java.lang.Object getKey()>
<ohos.agp.render.Vertices: int getTexOffset()>
<ohos.agp.render.render3d.components.LightComponent: ohos.agp.render.render3d.components.LightComponent.LightType getLightType()>
<ohos.agp.components.Text: void stopAutoScrolling()>
<ohos.agp.components.DatePicker: int getYear()>
<ohos.utils.BasePacMap: void putIntValue(java.lang.String,int)>
<ohos.agp.components.ListContainer: ohos.agp.utils.Color getBoundaryColor()>
<ohos.media.audio.AudioStreamInfo.ChannelMask: void <clinit>()>
<ohos.agp.components.ListContainer: int getItemPosByVisibleIndex(int)>
<ohos.agp.render.opengl.GLES1X: int glCheckFramebufferStatusOES(int)>
<ohos.global.icu.text.MessageFormat: void <init>(java.lang.String)>
<ohos.utils.FloatDimension: ohos.utils.FloatDimension parseFloatDimension(java.lang.String)>
<ohos.agp.components.Component: ohos.agp.components.Component findNextFocusableComponent(int)>
<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>
<ohos.org.xml.sax.DocumentHandler: void startElement(java.lang.String,ohos.org.xml.sax.AttributeList)>
<ohos.media.audio.AudioCapturer: boolean release()>
<java.util.Hashtable: void <init>(int,float)>
<ohos.aafwk.ability.Ability: ohos.agp.window.service.Window getWindow()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture completedFuture(java.lang.Object)>
<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Throwable)>
<ohos.utils.BasePacMap: java.lang.String[] getStringArray(java.lang.String)>
<ohos.rpc.MessageParcel: boolean containFileDescriptors()>
<java.sql.ResultSet: void updateTimestamp(int,java.sql.Timestamp)>
<ohos.aafwk.ability.FormException: java.lang.String getMessage()>
<ohos.global.icu.text.Transliterator: java.lang.String getDisplayName(java.lang.String,java.util.Locale)>
<java.util.concurrent.BlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<ohos.aafwk.ability.fraction.FractionAbility: void onBackPressed()>
<java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setTextColor(int)>
<ohos.agp.window.service.Window: boolean isActive()>
<ohos.nfc.tag.NdefMessage: int hashCode()>
<ohos.media.sessioncore.AVBrowser: void unsubscribeByParentMediaId(java.lang.String)>
<ohos.backgroundtaskmgr.BackgroundTaskManager: void <init>(ohos.app.Context)>
<ohos.media.camera.CameraKit: java.lang.String[] getCameraIds()>
<java.util.EnumMap: void putAll(java.util.Map)>
<ohos.data.resultset.ResultSet: boolean isStarted()>
<ohos.agp.colors.ColorSpec: void <clinit>()>
<ohos.sysappcomponents.contact.entity.Organization: java.lang.String getTitle()>
<java.net.URI: int hashCode()>
<ohos.aafwk.ability.DataUriUtils: ohos.utils.net.Uri updateId(ohos.utils.net.Uri,long)>
<ohos.agp.render.render3d.Engine: ohos.agp.render.render3d.resources.ResourceManager getResourceManager()>
<ohos.agp.components.DatePicker: ohos.agp.utils.Color getOperatedTextColor()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThanOrEqualTo(java.lang.String,float)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates between(java.lang.String,java.sql.Timestamp,java.sql.Timestamp)>
<ohos.miscservices.inputmethodability.InputMethodAbility: void onShowKeyboard()>
<java.sql.PreparedStatement: void setClob(int,java.io.Reader)>
<java.net.SecureCacheResponse: java.util.List getLocalCertificateChain()>
<ohos.agp.components.TimePicker: int getMinute()>
<javax.security.auth.Subject: java.lang.Object doAs(javax.security.auth.Subject,java.security.PrivilegedExceptionAction)>
<ohos.accessibility.ability.GesturePathDefine: void <init>()>
<ohos.global.icu.text.CurrencyPluralInfo: void <init>(ohos.global.icu.util.ULocale)>
<ohos.global.icu.text.Edits: void <init>()>
<ohos.agp.text.TextForm: int getTextSize()>
<javax.lang.model.util.ElementScanner6: void <init>()>
<ohos.hiviewdfx.HiTraceId: void <init>()>
<java.text.DecimalFormatSymbols: void setPercent(char)>
<java.time.LocalDateTime: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<java.sql.ResultSet: void updateLong(java.lang.String,long)>
<java.security.cert.CollectionCertStoreParameters: void <init>()>
<ohos.agp.render.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,java.nio.Buffer)>
<ohos.agp.render.Paint: void setDashPathEffectIntervals(float[])>
<ohos.agp.render.opengl.GLES20: void glVertexAttrib4f(int,float,float,float,float)>
<java.util.Scanner: java.math.BigDecimal nextBigDecimal()>
<ohos.utils.Parcel: double[] readDoubleArray()>
<ohos.aafwk.ability.Form: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.webengine.CookieStore: ohos.agp.components.webengine.CookieStore getInstance()>
<java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getTableTypes()>
<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>
<javax.security.cert.X509Certificate: java.util.Date getNotAfter()>
<ohos.accessibility.ability.DisplayResizeController: boolean setScale(float,boolean)>
<ohos.agp.render.opengl.GLES1X: void glLightfv(int,int,float[])>
<ohos.media.image.PixelMap: void release()>
<ohos.media.photokit.common.AVLoggerConnectionClient: void onLogCompleted(java.lang.String,ohos.utils.net.Uri)>
<ohos.hiviewdfx.HiChecker: void setCautionListener(java.util.concurrent.Executor,ohos.hiviewdfx.HiChecker.OnCautionListener)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThanOrEqualTo(java.lang.String,java.sql.Time)>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.text.MeasureFormat.FormatWidth getWidth()>
<ohos.accessibility.ability.AccessibilityInfo: boolean isEssential()>
<ohos.agp.components.ScrollHelper: boolean isOverScrolled()>
<ohos.net.HttpResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>
<java.time.ZoneOffset: boolean equals(java.lang.Object)>
<java.time.YearMonth: java.time.YearMonth plus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setInt(int,java.lang.String,int)>
<ohos.miscservices.inputmethod.EditingText: int getOffset()>
<java.io.OutputStreamWriter: java.lang.String getEncoding()>
<ohos.media.player.Player: float getAudioPitch()>
<java.nio.channels.DatagramChannel: java.net.SocketAddress receive(java.nio.ByteBuffer)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform3iv(int,int,int,int[])>
<java.security.MessageDigest: int getDigestLength()>
<ohos.agp.render.opengl.GLES2Ext: void glSamplerParameterIivEXT(int,int,int[])>
<java.time.MonthDay: int hashCode()>
<java.util.concurrent.atomic.AtomicInteger: java.lang.String toString()>
<ohos.net.HttpProxy: int hashCode()>
<java.lang.Math: double expm1(double)>
<ohos.agp.components.LayoutManager: int getOrientation()>
<ohos.agp.components.SlideDrawer: boolean closeSmoothly(int)>
<java.nio.channels.MembershipKey: java.net.NetworkInterface networkInterface()>
<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>
<javax.sql.RowSet: void setCharacterStream(int,java.io.Reader,int)>
<java.net.HttpURLConnection: java.lang.String getHeaderField(int)>
<ohos.bundleactive.BundleActiveStates.State: long queryStateOccurredMs()>
<java.sql.SQLInvalidAuthorizationSpecException: void <init>()>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitPrimitiveAsLong(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<java.sql.SQLXML: java.lang.String getString()>
<javax.lang.model.util.ElementFilter: java.util.List methodsIn(java.lang.Iterable)>
<ohos.utils.Parcel: void readSequenceableArray(ohos.utils.Sequenceable[])>
<java.security.MessageDigestSpi: void engineUpdate(java.nio.ByteBuffer)>
<java.sql.ResultSet: void updateClob(int,java.io.Reader)>
<ohos.agp.components.webengine.ResourceRequest: boolean isServerSideRedirected()>
<ohos.utils.IOutput: void output(java.lang.String)>
<ohos.agp.components.Component.MeasureSpec: int getSize(int)>
<ohos.agp.components.Picker: boolean setWheelModeEnabled(boolean)>
<ohos.miscservices.wallpaper.WallpaperController: ohos.miscservices.wallpaper.WallpaperController getInstance(ohos.app.Context)>
<ohos.agp.components.ListContainer: void setSelectedItemIndex(int)>
<java.util.Set: int hashCode()>
<java.util.concurrent.atomic.DoubleAccumulator: long longValue()>
<java.security.cert.X509CRL: byte[] getSignature()>
<ohos.agp.components.ListContainer: void addItemVisibilityChangedListener(ohos.agp.components.ListContainer.ItemVisibilityChangedListener)>
<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>
<ohos.sysappcomponents.calendar.entity.Accounts: void setSyncEvents(boolean)>
<java.nio.channels.AcceptPendingException: void <init>()>
<ohos.bluetooth.ble.BlePeripheralCallback: void servicesDiscoveredEvent(int)>
<ohos.aafwk.ability.Ability: void continueAbilityReversibly()>
<java.math.RoundingMode: java.math.RoundingMode[] values()>
<ohos.utils.BasePacMap: void putDoubleValue(java.lang.String,double)>
<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>
<ohos.data.search.schema.MessageItem: java.lang.String getContent()>
<ohos.utils.Parcel: ohos.utils.Sequenceable[] createSequenceableArray()>
<ohos.agp.utils.Matrix: boolean postSkew(float,float)>
<java.nio.LongBuffer: java.lang.Object array()>
<ohos.data.rdb.RdbCorruptException: void <init>(java.lang.String)>
<javax.net.ssl.SNIMatcher: void <init>(int)>
<ohos.global.icu.text.DateFormatSymbols: void setLocalPatternChars(java.lang.String)>
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>
<ohos.bluetooth.BluetoothHost: boolean isBtDiscovering()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getClientInfoProperties()>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.Instant,java.time.ZoneId)>
<java.util.stream.Collectors: java.util.stream.Collector summingInt(java.util.function.ToIntFunction)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParams(ohos.aafwk.content.IntentParams)>
<java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>
<ohos.aafwk.ability.DataAbilityOperation.Builder: ohos.aafwk.ability.DataAbilityOperation.Builder withInterruptionAllowed(boolean)>
<ohos.agp.components.Component: boolean isLongClickOn()>
<ohos.media.common.AVDescription.Builder: ohos.media.common.AVDescription.Builder setExtras(ohos.utils.PacMap)>
<ohos.nfc.tag.MessageRecord: ohos.nfc.tag.MessageRecord buildTextRecord(java.lang.String,java.lang.String)>
<ohos.multimodalinput.standard.TelephoneEventHandle: boolean onAnswer(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getEraNames()>
<java.time.temporal.WeekFields: java.time.temporal.TemporalField dayOfWeek()>
<java.sql.PreparedStatement: void setRef(int,java.sql.Ref)>
<ohos.global.icu.util.IslamicCalendar.CalculationType: void <clinit>()>
<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseBest(java.lang.CharSequence,java.time.temporal.TemporalQuery[])>
<java.time.chrono.HijrahDate: java.lang.String toString()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean tryRelease(int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,byte)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate dateYearDay(int,int)>
<ohos.batterymanager.BatteryInfo: ohos.batterymanager.BatteryInfo.BatteryPluggedType getPluggedType()>
<java.nio.DoubleBuffer: boolean equals(java.lang.Object)>
<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
<ohos.utils.PacMap: void putFloatValueArray(java.lang.String,float[])>
<ohos.bundle.FormInfo: void <init>()>
<java.lang.String: java.lang.CharSequence subSequence(int,int)>
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object[] toArray()>
<ohos.global.icu.text.RelativeDateTimeFormatter.Direction: ohos.global.icu.text.RelativeDateTimeFormatter.Direction[] values()>
<ohos.wifi.p2p.WifiP2pGroup: void setOwnerIpAddress(java.lang.String)>
<ohos.agp.components.ProgressBar: void setProgressElement(ohos.agp.components.element.Element)>
<ohos.agp.window.service.DisplayNotch: int hashCode()>
<javax.net.ssl.TrustManagerFactorySpi: void engineInit(java.security.KeyStore)>
<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>
<ohos.data.search.schema.MessageItem: ohos.data.search.schema.MessageItem setRecipientName(java.lang.String)>
<java.text.DecimalFormatSymbols: void setExponentSeparator(java.lang.String)>
<java.util.Locale: java.lang.String getExtension(char)>
<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap.KeySetView keySet(java.lang.Object)>
<ohos.media.camera.params.ParametersResult: int getState()>
<java.sql.CallableStatement: java.lang.String getNString(java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glVertexAttribI4ui(int,int,int,int,int)>
<ohos.aafwk.ability.AbilitySlice: java.util.List getFormsByModule(java.lang.String,java.lang.String)>
<ohos.utils.LightweightMap: boolean containsValue(java.lang.Object)>
<java.util.LinkedList: java.lang.Object getFirst()>
<ohos.utils.HalfFloat: int hashCode()>
<java.util.AbstractSet: boolean removeAll(java.util.Collection)>
<java.util.zip.DataFormatException: void <init>()>
<ohos.aafwk.ability.Ability: int getVolumeTypeAdjustedByKey()>
<java.lang.reflect.Field: void setInt(java.lang.Object,int)>
<java.io.PipedInputStream: void <init>()>
<ohos.data.search.model.ChangedIndexContent: void setDeletedItems(java.util.List)>
<ohos.agp.render.render3d.resources.AnimationPlayback: float getSpeed()>
<ohos.agp.components.surfaceprovider.SurfaceProvider: void removeFromWindow()>
<ohos.sensor.agent.CategoryOrientationAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback)>
<ohos.utils.IntArray: void <init>(java.util.List)>
<ohos.org.xml.sax.HandlerBase: void fatalError(ohos.org.xml.sax.SAXParseException)>
<java.time.format.DateTimeFormatterBuilder: java.lang.String getLocalizedDateTimePattern(java.time.format.FormatStyle,java.time.format.FormatStyle,java.time.chrono.Chronology,java.util.Locale)>
<java.text.Bidi: void <init>(char[],int,byte[],int,int,int)>
<ohos.agp.render.render3d.math.Matrix4x4: ohos.agp.render.render3d.math.Vector3 extractTranslation()>
<ohos.bluetooth.BluetoothRemoteDevice: boolean marshalling(ohos.utils.Parcel)>
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndAccumulate(int,java.lang.Object,java.util.function.BinaryOperator)>
<ohos.agp.components.DependentLayout.LayoutConfig: void addRule(int)>
<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>
<ohos.data.dataability.DataAbilityPredicates: java.lang.String getOrder()>
<java.util.zip.CRC32: void reset()>
<ohos.media.audio.AudioRendererInfo: int getDeviceId()>
<java.nio.channels.spi.AbstractSelector: java.nio.channels.SelectionKey register(java.nio.channels.spi.AbstractSelectableChannel,int,java.lang.Object)>
<java.text.AttributedString: void addAttributes(java.util.Map,int,int)>
<ohos.utils.zson.ZSONObject: boolean containsKey(java.lang.Object)>
<java.net.URLConnection: java.lang.String getContentType()>
<java.nio.channels.DatagramChannel: java.nio.channels.NetworkChannel bind(java.net.SocketAddress)>
<ohos.data.orm.OrmObject: void setRowId(long)>
<java.time.MonthDay: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<ohos.agp.components.Component: void setFadeEffectColor(ohos.agp.utils.Color)>
<ohos.data.search.schema.IndexSchemaType: ohos.data.search.schema.IndexSchemaType valueOf(java.lang.String)>
<ohos.event.notification.ReminderRequestTimer: void <init>(long)>
<javax.net.ssl.X509ExtendedTrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: boolean remove(java.lang.Object)>
<ohos.aafwk.ability.AbilitySlice: boolean requestForm(int)>
<ohos.utils.LongPlainArray: void setValueAt(int,java.lang.Object)>
<java.lang.Math: double nextUp(double)>
<ohos.data.rdb.ValuesBucket: void putByteArray(java.lang.String,byte[])>
<ohos.aafwk.ability.Ability: void onSaveAbilityState(ohos.utils.PacMap)>
<ohos.telephony.CdmaSignalInformation: void <init>()>
<ohos.global.icu.text.Collator: java.lang.String[] getKeywordValues(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glBindAttribLocation(int,int,java.lang.String)>
<java.io.ObjectInput: java.lang.Object readObject()>
<java.lang.Long: java.lang.String toString(long)>
<ohos.interwork.utils.PacMapEx: java.lang.ClassLoader getCustomClassLoader()>
<java.util.Optional: java.lang.Object get()>
<java.time.temporal.TemporalAmount: java.time.temporal.Temporal subtractFrom(java.time.temporal.Temporal)>
<ohos.sysappcomponents.contact.entity.Name: void setGivenName(java.lang.String)>
<java.sql.PreparedStatement: void setArray(int,java.sql.Array)>
<ohos.data.distributed.file.DistFile: ohos.data.distributed.file.DistFile[] listFiles(java.io.FilenameFilter)>
<ohos.agp.render.render3d.components.CameraComponent: void setPerspectiveVerticalFov(float)>
<ohos.agp.components.RoundProgressBar: float getStartAngle()>
<java.util.stream.LongStream: long[] toArray()>
<ohos.app.AbilityContext: ohos.global.resource.solidxml.Theme getTheme()>
<javax.crypto.spec.DHGenParameterSpec: int getExponentSize()>
<ohos.eventhandler.EventHandler.Priority: ohos.eventhandler.EventHandler.Priority[] values()>
<java.util.jar.JarInputStream: int read(byte[],int,int)>
<java.net.HttpCookie: java.lang.String getName()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getSuperTypes(java.lang.String,java.lang.String,java.lang.String)>
<java.security.cert.CertStoreSpi: java.util.Collection engineGetCRLs(java.security.cert.CRLSelector)>
<ohos.media.audio.AudioCapturer: int getBufferFrameCount()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayName(java.lang.String,ohos.global.icu.util.ULocale)>
<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>
<java.util.jar.Attributes: void <init>(int)>
<java.io.PushbackInputStream: void unread(int)>
<java.time.chrono.ChronoZonedDateTime: boolean isAfter(java.time.chrono.ChronoZonedDateTime)>
<java.time.Year: java.time.LocalDate atDay(int)>
<ohos.utils.PersistablePacMap: void <init>(int)>
<ohos.agp.utils.RectFloat: void fuse(float,float)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.String getGMTOffsetPattern(ohos.global.icu.text.TimeZoneFormat.GMTOffsetPatternType)>
<ohos.agp.render.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],int[])>
<ohos.accessibility.ability.AccessibleAbility: void onAccessibilityEvent(ohos.accessibility.AccessibilityEventInfo)>
<ohos.aafwk.ability.AbilitySlice: java.util.List getFormsInfoByApp(java.lang.String)>
<ohos.sysappcomponents.contact.entity.Relation: void setRelationName(java.lang.String)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,double)>
<java.net.Socket: boolean isBound()>
<ohos.sysappcomponents.calendar.CalendarCollection: void close()>
<ohos.utils.PlainIntArray: java.lang.Object clone()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseLenient()>
<ohos.app.AbilityContext: java.io.File getPreferencesDir()>
<ohos.agp.render.render3d.SceneNode: ohos.agp.render.render3d.Scene getScene()>
<ohos.global.icu.util.GregorianCalendar: java.lang.String getType()>
<ohos.agp.render.opengl.GLES32: void glGetnUniformuiv(int,int,int,int[])>
<java.time.chrono.JapaneseDate: long getLong(java.time.temporal.TemporalField)>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<ohos.sensor.agent.CategoryOtherAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int)>
<java.sql.SQLRecoverableException: void <init>(java.lang.String)>
<java.util.BitSet: int length()>
<java.util.stream.BaseStream: java.util.stream.BaseStream parallel()>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setRoad(java.lang.String)>
<ohos.data.distributed.common.FieldNode: java.lang.Object getDefaultValue()>
<ohos.media.camera.device.FrameConfig: float getZoomValue()>
<ohos.media.common.AVDescription: java.lang.String getMediaId()>
<ohos.aafwk.ability.FormState: int getValue()>
<java.util.concurrent.CompletableFuture: void obtrudeValue(java.lang.Object)>
<ohos.utils.zson.ZSONArray: double getDoubleValue(int)>
<ohos.org.xml.sax.HandlerBase: ohos.org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[])>
<ohos.data.distributed.common.ChangeNotification: java.lang.String getDeviceId()>
<java.net.HttpCookie: java.lang.String getValue()>
<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>
<java.io.CharArrayReader: void reset()>
<ohos.agp.render.render3d.TargetBuffer: int getHeight()>
<ohos.event.notification.NotificationRequest: java.util.List getActionButtons()>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate dateYearDay(int,int)>
<ohos.utils.PacMap: void putDoubleValueArray(java.lang.String,double[])>
<javax.sql.RowSet: void setClob(java.lang.String,java.sql.Clob)>
<ohos.eventhandler.Courier: void send(ohos.eventhandler.InnerEvent)>
<java.net.Proxy: java.net.SocketAddress address()>
<ohos.global.icu.text.NumberingSystem: void <clinit>()>
<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object[])>
<ohos.miscservices.wallpaper.WallpaperController: int getMinHeight()>
<java.net.ServerSocket: void <init>(int)>
<java.nio.file.FileSystem: java.nio.file.WatchService newWatchService()>
<java.io.File: void <clinit>()>
<ohos.global.icu.text.DateIntervalInfo.PatternInfo: int hashCode()>
<java.util.logging.MemoryHandler: void push()>
<ohos.data.resultset.AbsResultSet: boolean isAtFirstRow()>
<java.util.Set: java.util.Iterator iterator()>
<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>
<ohos.ai.cv.common.VisionManager: ohos.ai.cv.text.ITextDetector getTextDetector(ohos.app.Context)>
<java.security.cert.X509Extension: java.util.Set getCriticalExtensionOIDs()>
<java.lang.StrictMath: long floorMod(long,long)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent formatType(java.lang.String)>
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinTask adapt(java.lang.Runnable,java.lang.Object)>
<ohos.data.resultset.ResultSet: java.util.List getAffectedByUris()>
<ohos.agp.render.render3d.resources.RenderDataStorePod: void createPod(java.lang.String,java.lang.String,java.nio.ByteBuffer)>
<ohos.media.audio.AudioDeviceDescriptor: boolean isInputDevice()>
<java.util.concurrent.BlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>
<ohos.system.DeviceInfo: java.lang.String getLocale()>
<ohos.aafwk.ability.continuation.IContinuationDeviceCallback: void onDeviceConnectDone(java.lang.String,java.lang.String)>
<ohos.agp.render.render3d.resources.AnimationPlayback.State: ohos.agp.render.render3d.resources.AnimationPlayback.State valueOf(java.lang.String)>
<ohos.agp.components.ListContainer: boolean onItemLongClicked(ohos.agp.components.ListContainer,ohos.agp.components.Component,int,long)>
<ohos.aafwk.abilityjet.activedata.ActiveData: void removeObserver(ohos.aafwk.abilityjet.activedata.DataObserver)>
<ohos.global.icu.util.Calendar: int getGregorianYear()>
<ohos.data.DatabaseFileSecurityLevel: ohos.data.DatabaseFileSecurityLevel[] values()>
<ohos.agp.render.opengl.GLES30: void glBindBufferRange(int,int,int,int,int)>
<ohos.global.icu.text.Bidi: void setReorderingMode(int)>
<ohos.agp.render.Path: int countVerbs()>
<ohos.javax.xml.parsers.SAXParserFactory: boolean isXIncludeAware()>
<ohos.agp.render.opengl.GLES32: void glDebugMessageControl(int,int,int,int,int[],boolean)>
<ohos.sysappcomponents.contact.ContactsHelper: boolean isMyCard(long)>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate dateYearDay(int,int)>
<ohos.nfc.NfcController: void registerForegroundDispatch(ohos.aafwk.ability.Ability,ohos.event.intentagent.IntentAgent,java.util.List,java.lang.String[][])>
<ohos.agp.render.opengl.GLES30: void glGetActiveUniformBlockName(int,int,int,int[],byte[])>
<javax.sql.RowSet: void setBoolean(int,boolean)>
<ohos.agp.window.service.DisplayNotch: boolean equals(java.lang.Object)>
<ohos.agp.components.SlideDrawer: boolean hasSlideDisables()>
<java.util.Spliterators.AbstractDoubleSpliterator: int characteristics()>
<ohos.data.search.schema.ContactItem: java.lang.String getEmail()>
<ohos.utils.system.SystemCapability.Telephony: void <init>()>
<java.util.logging.Handler: void setLevel(java.util.logging.Level)>
<ohos.global.icu.util.DateInterval: long getFromDate()>
<ohos.javax.xml.parsers.SAXParser: java.lang.Object getProperty(java.lang.String)>
<ohos.data.preferences.Preferences: ohos.data.preferences.Preferences putBoolean(java.lang.String,boolean)>
<java.util.logging.MemoryHandler: boolean isLoggable(java.util.logging.LogRecord)>
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>
<java.security.cert.PKIXParameters: void setTargetCertConstraints(java.security.cert.CertSelector)>
<ohos.global.icu.text.NumberFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>
<java.util.jar.Pack200: java.util.jar.Pack200.Unpacker newUnpacker()>
<ohos.aafwk.ability.Ability: boolean setFormNextRefreshTime(long,long)>
<ohos.agp.render.Path: void addRect(ohos.agp.utils.RectFloat,ohos.agp.render.Path.Direction)>
<ohos.agp.utils.RectFloat: void shrink(float,float)>
<ohos.miscservices.inputmethod.EditingText: boolean marshalling(ohos.utils.Parcel)>
<java.security.KeyStore: void setEntry(java.lang.String,java.security.KeyStore.Entry,java.security.KeyStore.ProtectionParameter)>
<javax.lang.model.element.VariableElement: java.lang.Object getConstantValue()>
<ohos.ai.tts.TtsParams: void setDeviceId(java.lang.String)>
<ohos.agp.text.RichText: void addTouchEventListener(ohos.agp.text.RichText.TouchEventListener,int,int)>
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glLineWidth(float)>
<java.security.cert.TrustAnchor: java.lang.String toString()>
<java.time.chrono.ChronoLocalDateTime: java.time.chrono.ChronoLocalDate toLocalDate()>
<java.net.DatagramSocketImpl: int getLocalPort()>
<ohos.media.image.ImageReceiver: ohos.media.image.Image readLatestImage()>
<java.nio.file.FileAlreadyExistsException: void <init>(java.lang.String)>
<ohos.agp.utils.Matrix44: void postScale(float,float,float)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder encodedQuery(java.lang.String)>
<ohos.agp.utils.RectFloat: boolean equals(java.lang.Object)>
<ohos.aafwk.ability.Ability: void onStop()>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.resources.ResourceHandle generateCubeMesh(java.lang.String,ohos.agp.render.render3d.resources.ResourceHandle,float,float,float)>
<ohos.utils.Parcel: boolean readBoolean()>
<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>
<ohos.agp.components.ComponentContainer: ohos.agp.components.ComponentTransition getComponentTransition()>
<java.security.SignatureSpi: void engineUpdate(byte[],int,int)>
<java.time.zone.ZoneRules: java.time.zone.ZoneRules of(java.time.ZoneOffset)>
<ohos.bundle.BundleInfo: void <clinit>()>
<javax.security.auth.Subject: java.util.Set getPublicCredentials(java.lang.Class)>
<ohos.agp.components.IndexBar: void setIndexBarExpandedStatus(boolean)>
<ohos.agp.components.element.ShapeElement: void setCornerRadius(float)>
<ohos.rpc.MessageParcel: boolean writeRemoteObjectArray(ohos.rpc.IRemoteObject[])>
<java.sql.ResultSet: java.lang.String getNString(int)>
<javax.net.ServerSocketFactory: void <init>()>
<ohos.agp.render.render3d.resources.MeshDesc: void setPrimitives(ohos.agp.render.render3d.resources.MeshDesc.PrimitiveDesc[])>
<ohos.utils.geo.Rect.RotationEnum: int getValue()>
<java.util.concurrent.ThreadPoolExecutor: void purge()>
<ohos.agp.components.PageFlipper: void setFlipPeriod(int)>
<ohos.global.icu.util.GregorianCalendar: void <init>()>
<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>
<javax.net.ssl.SSLSocketFactory: javax.net.SocketFactory getDefault()>
<ohos.data.distributed.common.KvManagerFactory: ohos.data.distributed.common.KvManagerFactory getInstance()>
<java.net.URLStreamHandler: java.lang.String toExternalForm(java.net.URL)>
<ohos.global.icu.util.ULocale: java.lang.String getName()>
<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>
<java.util.IntSummaryStatistics: int getMax()>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinTask pollSubmission()>
<ohos.agp.components.PageSlider.ReboundEffectParams: void setRemainVisiblePercent(int)>
<ohos.agp.components.Component: float getPivotY()>
<java.util.concurrent.ThreadPoolExecutor.DiscardPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>
<java.math.BigDecimal: void <init>(char[],java.math.MathContext)>
<ohos.agp.components.ScrollView: void setReboundEffect(boolean)>
<ohos.data.rdb.RdbStore: void setVersion(int)>
<javax.sql.RowSetListener: void cursorMoved(javax.sql.RowSetEvent)>
<java.lang.String: void <init>(java.lang.StringBuilder)>
<ohos.agp.colors.HsvColor: void <init>()>
<java.io.ByteArrayOutputStream: void <init>(int)>
<java.util.concurrent.atomic.LongAdder: double doubleValue()>
<ohos.agp.render.render3d.SceneNode: boolean isEnabled()>
<ohos.global.icu.text.SymbolTable: ohos.global.icu.text.UnicodeMatcher lookupMatcher(int)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getInstance()>
<ohos.nfc.tag.NfcVTag: java.util.Optional getInstance(ohos.nfc.tag.TagInfo)>
<java.io.LineNumberReader: void mark(int)>
<java.lang.Character.UnicodeBlock: void <clinit>()>
<ohos.event.commonevent.AsyncCommonEventResult: void clearAbortCommonEvent()>
<ohos.utils.IntArray: void insert(int,int)>
<java.util.concurrent.ConcurrentSkipListSet: boolean add(java.lang.Object)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long updateAndGet(java.lang.Object,java.util.function.LongUnaryOperator)>
<ohos.media.camera.device.Camera: java.lang.String getCameraId()>
<ohos.data.distributed.common.Options: boolean isBackup()>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<ohos.agp.components.Component: void clearFocus()>
<ohos.utils.PacMap: void putFloatValue(java.lang.String,float)>
<ohos.security.permission.PermissionLevel: ohos.security.permission.PermissionAvailableScope[] availableScope()>
<ohos.accessibility.AccessibilitySystemAbilityClient: boolean unSubscribeStateObserver(ohos.accessibility.AccessibilityStateObserver,int)>
<java.util.concurrent.FutureTask: boolean isDone()>
<ohos.media.common.AVMetadata.Builder: ohos.media.common.AVMetadata.Builder setString(java.lang.String,java.lang.String)>
<java.util.regex.PatternSyntaxException: java.lang.String getPattern()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThan(java.lang.String,java.util.Date)>
<java.security.SecureRandom: byte[] getSeed(int)>
<ohos.bundle.ApplicationInfo: int getSupportedModes()>
<ohos.utils.IntArray: void pushBack(int)>
<ohos.agp.components.webengine.BrowserAgent: void onProgressUpdated(ohos.agp.components.webengine.WebView,int)>
<ohos.agp.window.dialog.IDialog.CheckBoxClickedListener: void onClick(ohos.agp.window.dialog.IDialog,int,boolean)>
<java.util.concurrent.locks.StampedLock: long tryConvertToOptimisticRead(long)>
<ohos.global.icu.text.AlphabeticIndex.ImmutableIndex: int getBucketCount()>
<java.nio.file.spi.FileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>
<ohos.org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>
<ohos.bundleactive.BundleActiveInfos: long queryAbilitySeenWholeMs()>
<ohos.global.icu.text.LocaleDisplayNames.UiListItem: java.lang.String toString()>
<ohos.global.icu.text.SearchIterator.ElementComparisonType: void <clinit>()>
<ohos.data.resultset.ResultSetWrapper: double getDouble(int)>
<ohos.agp.render.render3d.Entity: ohos.agp.render.render3d.Component addComponent(java.lang.Class)>
<java.util.Random: java.util.stream.IntStream ints(long)>
<ohos.media.camera.device.CameraStateCallback: void onConfigureFailed(ohos.media.camera.device.Camera,int)>
<ohos.sysappcomponents.calendar.entity.Reminders: void setSyncId(java.lang.String)>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<ohos.usb.USBEndpoint: int getDirection()>
<ohos.workscheduler.WorkScheduler: void onDisconnect(ohos.aafwk.content.Intent)>
<ohos.event.intentagent.IntentAgent: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.MessagePattern.ApostropheMode: ohos.global.icu.text.MessagePattern.ApostropheMode[] values()>
<ohos.global.icu.text.CaseMap.Title: ohos.global.icu.text.CaseMap.Title noLowercase()>
<ohos.agp.text.Layout: int getWidth()>
<ohos.utils.net.UrlQueryFilter: boolean isAllowUnregisteredParameters()>
<java.text.Format.Field: void <init>(java.lang.String)>
<ohos.rpc.MessageParcel: int detachFd(java.io.FileDescriptor)>
<ohos.data.DatabaseFileConfig: ohos.data.DatabaseFileType getDatabaseFileType()>
<ohos.global.icu.util.Calendar.WeekData: java.lang.String toString()>
<java.lang.invoke.MethodHandleInfo: java.lang.String toString(int,java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>
<ohos.global.icu.text.UCharacterIterator: int getText(char[],int)>
<ohos.agp.components.element.ShapeElement: void setPath(ohos.agp.render.Path)>
<ohos.agp.components.DatePicker: void setYearFixed(boolean)>
<java.util.function.BinaryOperator: java.util.function.BinaryOperator minBy(java.util.Comparator)>
<ohos.agp.utils.DimensFloat: int getQuotientFloorInt()>
<ohos.agp.components.Component: ohos.agp.components.Component.LayoutDirection getLayoutDirectionResolved()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.components.Component: void announceAccessibility(java.lang.String)>
<ohos.thermallistener.ThermalConnection: void thermalServiceDied()>
<ohos.agp.components.VelocityDetector: void addEvent(ohos.multimodalinput.event.TouchEvent)>
<ohos.global.icu.text.DateFormat: void setCalendarLenient(boolean)>
<ohos.telephony.NetworkState: boolean isEmergency()>
<java.lang.StringBuilder: int lastIndexOf(java.lang.String)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int addAndGet(java.lang.Object,int)>
<ohos.global.icu.util.Calendar: int handleGetExtendedYear()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenAcceptAsync(java.util.function.Consumer,java.util.concurrent.Executor)>
<ohos.global.icu.text.MessagePattern: java.lang.Object clone()>
<java.security.spec.ECPrivateKeySpec: java.security.spec.ECParameterSpec getParams()>
<ohos.data.rdb.StoreConfig: ohos.data.rdb.StoreConfig.JournalMode getJournalMode()>
<java.util.Map: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,byte)>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>
<javax.security.cert.Certificate: boolean equals(java.lang.Object)>
<ohos.global.icu.util.Calendar: int floorDivide(int,int,int[])>
<java.net.ServerSocket: void setSocketFactory(java.net.SocketImplFactory)>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate date(java.time.chrono.Era,int,int,int)>
<java.lang.Character: void <init>(char)>
<ohos.sysappcomponents.contact.entity.PostalAddress: void setNeighborhood(java.lang.String)>
<ohos.app.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
<java.util.Collections: void fill(java.util.List,java.lang.Object)>
<java.nio.file.Files: java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path,java.nio.file.LinkOption[])>
<java.security.spec.ECPoint: java.math.BigInteger getAffineX()>
<java.util.stream.Stream: java.util.stream.Stream empty()>
<java.util.logging.LoggingMXBean: java.lang.String getParentLoggerName(java.lang.String)>
<ohos.smartcomm.MultiPathManager: int enableMultipathFlow(java.lang.String,java.lang.String,java.lang.String,ohos.smartcomm.IMultiPathCallback)>
<ohos.aafwk.ability.AbilityLifecycleCallbacks: void onAbilityBackground(ohos.aafwk.ability.Ability)>
<ohos.agp.render.opengl.GLES1X: void glClearDepthx(int)>
<ohos.event.notification.NotificationUserInput: void setInputsSource(ohos.aafwk.content.Intent,ohos.event.notification.NotificationConstant.InputsSource)>
<java.time.LocalDateTime: java.time.LocalDateTime plusDays(long)>
<java.util.concurrent.ExecutorService: java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.text.DateIntervalFormat getInstance(java.lang.String,ohos.global.icu.util.ULocale,ohos.global.icu.text.DateIntervalInfo)>
<ohos.global.icu.text.Normalizer: int compare(java.lang.String,java.lang.String,int)>
<java.security.cert.CRL: java.lang.String getType()>
<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>
<java.time.temporal.TemporalField: java.time.temporal.TemporalUnit getBaseUnit()>
<java.util.logging.Level: int hashCode()>
<ohos.net.HttpProxy: void <init>()>
<ohos.agp.render.render3d.resources.MaterialDesc: void setBaseColor(ohos.agp.render.render3d.resources.GpuResourceHandle)>
<ohos.agp.components.ListContainer.ReboundEffectParams: void setOverscrollRate(float)>
<ohos.agp.render.Paint: ohos.agp.render.Paint.Style getStyle()>
<java.text.MessageFormat: java.text.Format[] getFormats()>
<ohos.agp.components.Text: void setTextInputType(int)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream of(double)>
<ohos.telephony.LteSignalInformation: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.media.image.PixelMap: ohos.media.image.common.ImageInfo getImageInfo()>
<java.util.jar.JarFile: java.util.Enumeration entries()>
<ohos.utils.HalfFloat: short value()>
<ohos.utils.BasePacMap: char getChar(java.lang.String)>
<ohos.javax.xml.validation.ValidatorHandler: void setErrorHandler(ohos.org.xml.sax.ErrorHandler)>
<javax.sql.RowSet: int getTransactionIsolation()>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate dateYearDay(java.time.chrono.Era,int,int)>
<ohos.aafwk.content.Intent: byte getByteParam(java.lang.String,byte)>
<ohos.accessibility.ability.AccessibilityInfo: void setChecked(boolean)>
<java.text.NumberFormat: boolean equals(java.lang.Object)>
<java.sql.CallableStatement: java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar)>
<ohos.agp.render.opengl.GLES1X: void glDisableClientState(int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates between(java.lang.String,java.sql.Time,java.sql.Time)>
<java.util.Collections: java.util.Set checkedSet(java.util.Set,java.lang.Class)>
<ohos.agp.components.ScrollView.ReboundEffectParams: void <init>(int,float,int)>
<javax.tools.JavaFileObject.Kind: void <clinit>()>
<java.net.HttpURLConnection: int getResponseCode()>
<ohos.event.commonevent.CommonEventData: void <init>(ohos.aafwk.content.Intent)>
<java.text.BreakIterator: int previous()>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,float[])>
<ohos.accessibility.AccessibilityEventInfo: void setAccessibilityEventType(int)>
<ohos.agp.components.RecycleItemProvider: void <init>()>
<ohos.agp.render.render3d.gltf.GltfLoader.ImportListener: void onGltfImportFinished(java.lang.String,ohos.agp.render.render3d.gltf.GltfImportData)>
<ohos.bundle.LauncherService.BundleStatusCallback: void onBundleUpdated(java.lang.String,int)>
<java.util.Locale.Builder: java.util.Locale.Builder setUnicodeLocaleKeyword(java.lang.String,java.lang.String)>
<ohos.agp.components.Button: void <init>(ohos.app.Context)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder.Redirect redirectOutput()>
<java.sql.DatabaseMetaData: boolean storesMixedCaseQuotedIdentifiers()>
<java.util.NavigableSet: java.util.Iterator iterator()>
<java.lang.invoke.MethodHandleInfo: int getModifiers()>
<java.security.KeyFactorySpi: java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)>
<java.util.OptionalInt: java.util.OptionalInt of(int)>
<ohos.agp.utils.Rect: void shrink(int,int)>
<java.sql.ResultSetMetaData: java.lang.String getTableName(int)>
<ohos.org.xml.sax.InputSource: java.lang.String getPublicId()>
<java.util.concurrent.CountedCompleter: void quietlyCompleteRoot()>
<ohos.agp.components.element.ShapeElement: void setShape(int)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayScript(java.lang.String,java.lang.String)>
<java.nio.file.ProviderMismatchException: void <init>(java.lang.String)>
<ohos.global.icu.text.DateIntervalInfo.PatternInfo: java.lang.String getSecondPart()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent replaceParams(ohos.aafwk.content.Intent)>
<ohos.media.image.common.DecodeEvent: int getValue()>
<java.io.DataInput: java.lang.String readLine()>
<java.util.concurrent.ForkJoinTask: void complete(java.lang.Object)>
<ohos.miscservices.pasteboard.PasteData.Record: java.lang.CharSequence getPlainText()>
<ohos.account.app.AppAccountAbility: boolean deleteAccount(java.lang.String)>
<ohos.agp.window.dialog.BaseDialog: ohos.agp.components.Component searchComponentViaId(int)>
<java.time.chrono.JapaneseEra: int getValue()>
<ohos.agp.components.SlideDrawer.LayoutConfig: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.components.webengine.ResourceRequest: ohos.utils.net.Uri getRequestUrl()>
<java.time.LocalTime: java.time.LocalTime minusMinutes(long)>
<ohos.agp.components.SlideDrawer: void removeAllSlideDisables()>
<java.lang.Class: java.lang.Class getComponentType()>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder setExtension(char,java.lang.String)>
<java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock: int getHoldCount()>
<ohos.global.resource.solidxml.Theme: ohos.global.resource.solidxml.TypedAttribute getValue(java.lang.String)>
<ohos.app.AbilityContext: java.io.File[] getExternalMediaDirs()>
<ohos.utils.net.UrlQueryFilter: void parseParamPair(java.lang.String,java.lang.String)>
<ohos.sysappcomponents.calendar.entity.Accounts: void <init>()>
<java.util.Timer: void <init>(java.lang.String)>
<ohos.telephony.SimInfoManager: java.lang.String getSimIccId(int)>
<java.util.StringTokenizer: boolean hasMoreTokens()>
<ohos.global.icu.util.EthiopicCalendar: void <init>(int,int,int,int,int,int)>
<ohos.sensor.agent.CategoryBodyAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryBodyDataCallback,ohos.sensor.bean.CategoryBody,long)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setUnremovable(boolean)>
<java.nio.ShortBuffer: java.nio.ShortBuffer allocate(int)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream distinct()>
<java.lang.StrictMath: int multiplyExact(int,int)>
<ohos.security.seoperator.SeOperator: ohos.security.seoperator.SEOperatorAbs getInstance()>
<ohos.agp.utils.Matrix: float getScaleX()>
<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>
<ohos.miscservices.pasteboard.PasteData.DataProperty: void setAdditions(ohos.utils.PacMap)>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: java.lang.String getExpandedTitle()>
<java.sql.Timestamp: int compareTo(java.util.Date)>
<java.util.zip.ZipEntry: void setSize(long)>
<ohos.hiviewdfx.HiChecker: void removeRule(ohos.hiviewdfx.HiChecker.Rule)>
<javax.sql.RowSetInternal: java.sql.ResultSet getOriginal()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThan(java.lang.String,double)>
<javax.net.ssl.KeyManagerFactorySpi: void engineInit(java.security.KeyStore,char[])>
<ohos.agp.render.render3d.resources.RenderDataStorePod: void release()>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.BaseDialog setAutoClosable(boolean)>
<java.io.FileNotFoundException: void <init>()>
<ohos.aafwk.content.Intent.OperationBuilder: ohos.aafwk.content.Intent.OperationBuilder withDeviceId(java.lang.String)>
<ohos.aafwk.content.Intent: int getFlags()>
<javax.sql.RowSetMetaData: void setColumnCount(int)>
<java.net.URI: java.lang.String getRawAuthority()>
<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>
<ohos.bundle.BundleInfo: boolean unmarshalling(ohos.utils.Parcel)>
<java.nio.IntBuffer: int arrayOffset()>
<java.sql.PreparedStatement: void setNCharacterStream(int,java.io.Reader)>
<java.util.NavigableSet: java.util.SortedSet headSet(java.lang.Object)>
<ohos.data.DatabaseHelper: boolean movePreferences(ohos.app.Context,java.lang.String,java.lang.String)>
<javax.security.cert.Certificate: java.security.PublicKey getPublicKey()>
<javax.tools.Tool: java.util.Set getSourceVersions()>
<java.util.TreeSet: java.util.Iterator descendingIterator()>
<java.util.Spliterators: java.util.Spliterator.OfDouble spliteratorUnknownSize(java.util.PrimitiveIterator.OfDouble,int)>
<java.util.Arrays: float[] copyOfRange(float[],int,int)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.DisplayContext getCapitalizationContext()>
<java.time.YearMonth: java.time.YearMonth now(java.time.ZoneId)>
<java.util.Arrays: void sort(short[])>
<java.sql.DatabaseMetaData: boolean dataDefinitionIgnoredInTransactions()>
<java.lang.Class: java.net.URL getResource(java.lang.String)>
<ohos.global.icu.util.GregorianCalendar: void <init>(ohos.global.icu.util.TimeZone)>
<java.lang.Thread: void stop(java.lang.Throwable)>
<java.util.TreeMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>
<ohos.data.resultset.AbsResultSet: int getRowCount()>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryEnvironmentDataCallback)>
<java.lang.SecurityManager: void checkListen(int)>
<java.nio.file.FileSystem: java.lang.String getSeparator()>
<ohos.aafwk.ability.IAbilityContinuation: boolean onRestoreData(ohos.aafwk.content.IntentParams)>
<ohos.security.keystore.KeyStoreProtectionParameter.Builder: ohos.security.keystore.KeyStoreProtectionParameter.Builder setSecKeyAuthDuration(int)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder decodedQuery(java.lang.String)>
<ohos.agp.window.service.Display: void getCurrentSizeRange(ohos.agp.utils.Point,ohos.agp.utils.Point)>
<ohos.aafwk.ability.continuation.DeviceConnectState: ohos.aafwk.ability.continuation.DeviceConnectState[] values()>
<java.util.concurrent.ConcurrentHashMap: void forEachValue(long,java.util.function.Consumer)>
<java.util.zip.Inflater: int getAdler()>
<javax.net.ssl.SSLParameters: void setCipherSuites(java.lang.String[])>
<java.lang.Math: double sinh(double)>
<java.util.Spliterators.AbstractLongSpliterator: int characteristics()>
<java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>
<ohos.data.rdb.RdbStore: void giveConnectionTemporarily(long)>
<ohos.data.search.schema.CommonItem: void <init>()>
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)>
<ohos.media.common.AVMetadata: long getLong(java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notBetween(java.lang.String,java.sql.Time,java.sql.Time)>
<ohos.media.common.VideoProperty.Builder: ohos.media.common.VideoProperty.Builder setRecorderDegrees(int)>
<ohos.global.resource.RawFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<ohos.utils.LightweightMap: java.lang.Object setValueAt(int,java.lang.Object)>
<java.util.Date: java.lang.String toGMTString()>
<ohos.media.image.Image.Component: java.nio.ByteBuffer getBuffer()>
<ohos.data.search.SearchAbility: void registerIndexChangeListener(java.lang.String,java.lang.String,ohos.data.search.listener.IIndexChangeListener)>
<java.util.concurrent.Phaser: int awaitAdvanceInterruptibly(int)>
<ohos.aafwk.content.Intent: java.lang.Object clone()>
<ohos.os.ProcessManager: int getUidByName(java.lang.String)>
<ohos.utils.geo.Point: float getPointY()>
<ohos.agp.render.Paint: void setMaskFilter(ohos.agp.render.MaskFilter)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,double)>
<ohos.global.icu.text.Bidi: void setPara(char[],byte,byte[])>
<ohos.security.keystore.KeyStoreKeySpec: java.lang.String getSecKeyAlias()>
<java.lang.ThreadGroup: void interrupt()>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: void <init>()>
<java.security.Certificate: void encode(java.io.OutputStream)>
<ohos.utils.system.SystemCapability.HiviewDFX: void <init>()>
<ohos.agp.render.render3d.resources.ResourceManager.ResourceInfo: ohos.agp.render.render3d.resources.ResourceHandle getHandle()>
<java.util.concurrent.BlockingQueue: boolean remove(java.lang.Object)>
<ohos.agp.utils.Point: void <init>(ohos.agp.utils.Point)>
<ohos.agp.render.Paint: ohos.agp.text.Font getFont()>
<ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder: ohos.security.keystore.KeyGenAlgorithmParaSpec createKeyGenAlgorithmParaSpec()>
<java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object[])>
<ohos.data.rdb.ValuesBucket: java.lang.Byte getByte(java.lang.String)>
<ohos.telephony.RadioInfoManager: java.lang.String getMeid(int)>
<java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<ohos.agp.components.PageFlipper: int getFlipPeriod()>
<ohos.agp.render.render3d.resources.ResourceManager: int createExternalTextureOes()>
<ohos.rpc.IPCSkeleton: ohos.rpc.IRemoteObject getContextObject()>
<java.text.DecimalFormat: void setCurrency(java.util.Currency)>
<ohos.media.image.common.ImageInfo: java.lang.String toString()>
<ohos.agp.render.render3d.Engine: ohos.agp.render.render3d.Engine.Time getEngineTime()>
<ohos.global.icu.text.DateIntervalInfo.PatternInfo: boolean firstDateInPtnIsLaterDate()>
<ohos.agp.components.Component: void setRotationEventListener(ohos.agp.components.Component.RotationEventListener)>
<java.util.Arrays: int hashCode(boolean[])>
<ohos.media.photokit.metadata.AVStorage.Audio.Genres: ohos.utils.net.Uri fetchResourceForAudioId(java.lang.String,int)>
<java.time.OffsetDateTime: java.time.OffsetDateTime now(java.time.Clock)>
<ohos.global.icu.util.Currency: java.lang.String toString()>
<ohos.agp.render.render3d.Task: void onCancel()>
<java.time.temporal.ValueRange: long getMaximum()>
<ohos.agp.components.element.ShapeElement: float[] getCornerRadii()>
<ohos.telephony.SignalInformation: boolean equals(java.lang.Object)>
<java.net.Socket: void <init>()>
<javax.crypto.SecretKeyFactorySpi: javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)>
<ohos.agp.components.Component: void release()>
<ohos.agp.render.render3d.resources.MaterialDesc: float getMetallicFactor()>
<ohos.wifi.IpInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.eventhandler.EventHandler: void sendEvent(ohos.eventhandler.InnerEvent,ohos.eventhandler.EventHandler.Priority)>
<java.math.BigInteger: java.math.BigInteger flipBit(int)>
<ohos.event.commonevent.CommonEventSubscribeInfo: java.lang.String toString()>
<ohos.global.icu.text.Collator: ohos.global.icu.text.CollationKey getCollationKey(java.lang.String)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet clear()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: void acquireShared(long)>
<java.lang.ClassCircularityError: void <init>()>
<ohos.agp.components.SearchBar: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.agp.render.render3d.resources.ImageFormat: ohos.agp.render.render3d.resources.ImageFormat valueOf(java.lang.String)>
<java.lang.ProcessBuilder: java.lang.Process start()>
<java.security.Policy: void refresh()>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder scheme(java.lang.String)>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
<ohos.global.icu.text.DateTimePatternGenerator: boolean isFrozen()>
<javax.crypto.Cipher: int getBlockSize()>
<javax.lang.model.util.AbstractTypeVisitor6: java.lang.Object visitIntersection(javax.lang.model.type.IntersectionType,java.lang.Object)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayVariant(java.lang.String,ohos.global.icu.util.ULocale)>
<javax.net.ssl.SSLParameters: java.util.Collection getSNIMatchers()>
<java.util.concurrent.ConcurrentLinkedDeque: void clear()>
<ohos.ai.cv.qrcode.IBarcodeDetector: int detect(java.lang.String,byte[],int,int)>
<ohos.data.resultset.ResultSetWrapper: byte[] getBlob(int)>
<ohos.aafwk.ability.ProcessErrorInfo: java.lang.String getTag()>
<javax.crypto.spec.RC2ParameterSpec: int getEffectiveKeyBits()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates and()>
<ohos.data.rdb.ValuesBucket: boolean equals(java.lang.Object)>
<java.math.BigDecimal: void <init>(char[],int,int,java.math.MathContext)>
<ohos.nfc.NfcController: boolean openNfc()>
<ohos.utils.geo.Rect: boolean verifyRect()>
<ohos.net.ConnectionProperties: boolean isPrivateDnsActive()>
<ohos.agp.render.opengl.GLES30: void glGetInternalformativ(int,int,int,int,int[])>
<ohos.agp.render.PdfGenerator: void endDrawing(ohos.agp.render.PdfGenerator.PdfPage)>
<ohos.media.codec.Codec: boolean setCodecFormat(ohos.media.common.Format)>
<java.util.stream.LongStream: java.util.stream.LongStream of(long)>
<javax.sql.RowSet: void setDate(int,java.sql.Date,java.util.Calendar)>
<javax.security.auth.PrivateCredentialPermission: java.lang.String getCredentialClass()>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.resources.ResourceHandle generateConeMesh(java.lang.String,ohos.agp.render.render3d.resources.ResourceHandle,float,float,int)>
<ohos.data.distributed.file.DistFiles: void <init>()>
<ohos.global.icu.text.StringSearch: void reset()>
<ohos.workscheduler.WorkInfo: ohos.bundle.ElementName getElementInfo()>
<ohos.agp.colors.UserDefinedColor: boolean equals(java.lang.Object)>
<ohos.global.icu.util.ULocale: java.lang.String getISO3Language()>
<ohos.agp.render.Path: void addCircle(ohos.agp.utils.Point,float,ohos.agp.render.Path.Direction)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,java.util.Calendar)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendText(java.time.temporal.TemporalField,java.util.Map)>
<ohos.agp.colors.Color: int getAlpha()>
<ohos.utils.LightweightSet: boolean containsAll(java.util.Collection)>
<java.util.stream.IntStream: java.util.stream.DoubleStream mapToDouble(java.util.function.IntToDoubleFunction)>
<java.net.DatagramPacket: void <init>(byte[],int)>
<java.time.zone.ZoneOffsetTransition: java.time.LocalDateTime getDateTimeAfter()>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
<ohos.media.tubecore.AVTubeManager: ohos.media.tubecore.AVTubeManager getInstance(ohos.app.Context)>
<java.text.DecimalFormat: boolean isDecimalSeparatorAlwaysShown()>
<ohos.eventhandler.InnerEvent: void drop()>
<ohos.media.audio.AudioRenderer: void setFramePositionObserver(ohos.media.audio.FramePositionObserver,int,ohos.eventhandler.EventHandler)>
<java.nio.charset.Charset: int compareTo(java.lang.Object)>
<ohos.agp.render.render3d.Engine: ohos.agp.render.render3d.gltf.GltfLoader getGltfLoader()>
<ohos.ai.cv.common.VisionManager: ohos.ai.cv.docrefine.IDocRefine getDocRefine(ohos.app.Context)>
<java.time.chrono.ChronoPeriod: java.time.chrono.ChronoPeriod normalized()>
<ohos.app.dispatcher.TaskDispatcher: ohos.app.dispatcher.task.Revocable delayDispatch(java.lang.Runnable,long)>
<java.security.SignedObject: boolean verify(java.security.PublicKey,java.security.Signature)>
<java.net.URL: java.net.URI toURI()>
<ohos.accessibility.ability.AccessibilityWindow: java.util.Optional getChild(int)>
<ohos.data.rdb.RdbUtils: void verifyPredicates(ohos.data.rdb.RdbStore,ohos.data.rdb.RdbUtils.OperationType,ohos.data.rdb.AbsRdbPredicates)>
<ohos.agp.components.TimePicker: boolean isHourEnabled()>
<ohos.utils.BasePacMap: void <init>()>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate now(java.time.Clock)>
<ohos.utils.net.UrlQueryFilter: void parseUrl(java.lang.String)>
<java.util.Formatter: void <init>(java.lang.String,java.lang.String,java.util.Locale)>
<ohos.utils.geo.Rect: int[] getCenter()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object)>
<java.util.concurrent.LinkedBlockingDeque: void <init>()>
<java.nio.file.Files: java.util.stream.Stream list(java.nio.file.Path)>
<java.util.Formatter: void <init>(java.io.PrintStream)>
<ohos.data.async.DataAbilityAsyncHandler: void finalize()>
<ohos.wifi.WifiDevice: java.util.List getScanInfoList()>
<javax.net.ssl.SSLSessionContext: javax.net.ssl.SSLSession getSession(byte[])>
<ohos.media.common.VideoProperty.Builder: ohos.media.common.VideoProperty.Builder setRecorderBitRate(int)>
<ohos.sensor.agent.SensorAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase)>
<ohos.agp.render.render3d.components.LightComponent: boolean isShadowEnabled()>
<ohos.sysappcomponents.contact.entity.PhoneNumber: void <init>(java.lang.String,java.lang.String)>
<ohos.sysappcomponents.contact.entity.PhoneNumber: void setPhoneNumber(java.lang.String)>
<java.util.List: java.util.ListIterator listIterator(int)>
<java.lang.Character.UnicodeScript: java.lang.Character.UnicodeScript[] values()>
<ohos.utils.LightweightMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<ohos.wifi.p2p.WifiP2pLinkedInfo: boolean isGroupFormed()>
<java.util.prefs.Preferences: void removeNode()>
<ohos.global.icu.text.Bidi: boolean isInverse()>
<java.lang.Double: double max(double,double)>
<java.time.OffsetDateTime: int hashCode()>
<java.sql.Blob: long position(byte[],long)>
<ohos.global.icu.text.CaseMap.Fold: ohos.global.icu.text.CaseMap.Fold omitUnchangedText()>
<java.nio.channels.AsynchronousSocketChannel: java.nio.channels.spi.AsynchronousChannelProvider provider()>
<javax.lang.model.util.Elements: java.util.Map getElementValuesWithDefaults(javax.lang.model.element.AnnotationMirror)>
<java.sql.Statement: boolean execute(java.lang.String)>
<java.util.PriorityQueue: void <init>()>
<ohos.global.icu.text.DecimalFormatSymbols: char getPlusSign()>
<java.io.LineNumberReader: int read()>
<ohos.agp.components.element.ShapeElement: ohos.agp.render.Path getPath()>
<ohos.data.rdb.ValuesBucket: void putString(java.lang.String,java.lang.String)>
<java.util.Date: int getHours()>
<java.sql.ResultSet: void updateObject(java.lang.String,java.lang.Object)>
<java.util.concurrent.atomic.AtomicLongArray: long getAndUpdate(int,java.util.function.LongUnaryOperator)>
<ohos.bundle.InstallParam: void setUserId(int)>
<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>
<ohos.global.icu.util.ULocale: java.util.Set getExtensionKeys()>
<java.util.SortedSet: java.util.Comparator comparator()>
<java.security.UnresolvedPermission: java.lang.String getUnresolvedType()>
<ohos.agp.components.ProgressBar: void setStep(int)>
<ohos.media.image.common.Rect: void <init>(ohos.media.image.common.Rect)>
<java.lang.Integer: double doubleValue()>
<ohos.agp.render.opengl.GLES2Ext: void glGetTexParameterIuivEXT(int,int,int[])>
<java.util.HashSet: void <init>(int)>
<ohos.wifi.WifiDeviceConfig: void setSsid(java.lang.String)>
<ohos.telephony.CdmaSignalInformation: int getSignalLevel()>
<ohos.utils.PacMap: int getSize()>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getTitleInstance(ohos.global.icu.util.ULocale)>
<java.util.PrimitiveIterator.OfDouble: double nextDouble()>
<javax.tools.ForwardingFileObject: java.io.Reader openReader(boolean)>
<ohos.agp.render.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<java.sql.PreparedStatement: void setNClob(int,java.io.Reader)>
<ohos.bundle.AbilityInfo.DisplayOrientation: void <clinit>()>
<ohos.app.AbilityContext: void compelVerifyPermission(java.lang.String,java.lang.String)>
<java.time.temporal.WeekFields: java.time.temporal.TemporalField weekBasedYear()>
<ohos.agp.utils.RectFloat: void setPivot(float,float)>
<java.util.function.BiPredicate: java.util.function.BiPredicate and(java.util.function.BiPredicate)>
<ohos.media.camera.device.CameraInfo: java.lang.String toString()>
<ohos.aafwk.ability.LifecycleObserver: void <init>()>
<ohos.utils.geo.Point: void <init>(float,float)>
<ohos.agp.window.service.DisplayNotch: ohos.agp.utils.Rect getNotchRectLeft()>
<java.time.chrono.ChronoPeriod: int hashCode()>
<ohos.workscheduler.WorkInfo: boolean isRequestPersisted()>
<ohos.agp.utils.Matrix: boolean isScaleTranslate()>
<java.util.zip.GZIPInputStream: int read(byte[],int,int)>
<ohos.miscservices.timeutility.Time: long getRealActiveTimeNs()>
<java.nio.channels.FileChannel: void force(boolean)>
<java.security.cert.CRLException: void <init>(java.lang.String,java.lang.Throwable)>
<java.time.chrono.ChronoLocalDate: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<ohos.eventhandler.EventHandler: void sendEvent(int,long)>
<ohos.global.icu.text.Bidi: int countRuns()>
<java.nio.channels.IllegalSelectorException: void <init>()>
<java.util.BitSet: java.util.BitSet valueOf(java.nio.ByteBuffer)>
<java.time.YearMonth: java.time.YearMonth plusMonths(long)>
<ohos.utils.LightweightSet: void <init>(ohos.utils.LightweightSet)>
<java.security.cert.PKIXRevocationChecker: java.util.List getSoftFailExceptions()>
<ohos.data.resultset.ResultSet: java.lang.String getString(int)>
<ohos.rpc.RemoteObject: void <init>(java.lang.String)>
<ohos.agp.components.ScrollView: void setMatchViewportEnabled(boolean)>
<ohos.data.usage.StatVfs: long getFreeSpace()>
<ohos.media.sessioncore.AVSession: boolean setAVButtonReceiver(ohos.event.intentagent.IntentAgent)>
<java.util.Date: void <init>(int,int,int)>
<ohos.global.icu.text.UnicodeSet.EntryRange: java.lang.String toString()>
<java.security.acl.Acl: boolean checkPermission(java.security.Principal,java.security.acl.Permission)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: boolean equals(java.lang.Object)>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<ohos.global.icu.text.Transliterator: java.util.Enumeration getAvailableSources()>
<java.time.Instant: boolean equals(java.lang.Object)>
<ohos.agp.render.render3d.util.SceneUtil.RayCastResult: float getDistance()>
<ohos.agp.components.Component.LayoutRefreshedListener: void onRefreshed(ohos.agp.components.Component)>
<java.lang.Math: float min(float,float)>
<ohos.agp.render.render3d.resources.RenderDataStorePod: void destroyPod(java.lang.String,java.lang.String)>
<java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
<ohos.agp.components.webengine.PickFilesParams: int getType()>
<ohos.app.AbilityContext: java.lang.String getLocalClassName()>
<java.io.BufferedOutputStream: void flush()>
<java.lang.Byte: java.lang.Byte valueOf(byte)>
<ohos.utils.PacMap: void putChar(java.lang.String,char)>
<java.sql.ResultSet: void updateRow()>
<java.util.Formatter.BigDecimalLayoutForm: void <clinit>()>
<ohos.agp.render.Path.Direction: ohos.agp.render.Path.Direction valueOf(java.lang.String)>
<java.security.cert.X509Certificate: byte[] getTBSCertificate()>
<ohos.aafwk.ability.DataAbilityResult: void <clinit>()>
<ohos.agp.components.Switch: java.lang.String getStateOffText()>
<ohos.aafwk.ability.fraction.Fraction: void <init>()>
<ohos.media.image.common.Size: java.lang.String toString()>
<java.io.FileOutputStream: void <init>(java.lang.String)>
<ohos.agp.animation.AnimatorGroup: void setCurve(ohos.agp.animation.Animator.TimelineCurve)>
<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)>
<java.util.Timer: void <init>(java.lang.String,boolean)>
<ohos.agp.render.opengl.GLES30: void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)>
<ohos.global.icu.util.Currency: java.util.Locale[] getAvailableLocales()>
<ohos.usb.USBDevicePipe: int bulkTransfer(ohos.usb.USBEndpoint,byte[],int,int,int)>
<ohos.ai.cv.common.CvPoint: void offset(int,int)>
<ohos.global.icu.text.SearchIterator: void setTarget(java.text.CharacterIterator)>
<ohos.bundle.AbilityInfo: java.lang.String getClassName()>
<ohos.app.Context: void startAbility(ohos.aafwk.content.Intent,ohos.aafwk.ability.startsetting.AbilityStartSetting,ohos.aafwk.ability.IAbilityStartCallback)>
<java.util.concurrent.ForkJoinTask: void invokeAll(java.util.concurrent.ForkJoinTask[])>
<ohos.global.icu.text.Bidi: java.lang.String writeReordered(int)>
<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>
<java.util.concurrent.locks.Lock: void unlock()>
<ohos.global.icu.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<ohos.miscservices.wallpaper.WallpaperController: void registerColorsChangedListener(ohos.miscservices.wallpaper.IWallpaperColorsChangedListener)>
<ohos.nfc.oma.SEService: boolean isConnected()>
<ohos.aafwk.ability.RunningProcessInfo: int getPid()>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty moveToY(float)>
<ohos.data.search.SearchAbility: ohos.data.search.SearchSession beginSearch(java.lang.String,java.lang.String)>
<ohos.media.image.ImageSource: int getImagePropertyInt(java.lang.String,int)>
<ohos.agp.components.Rating: int getRatingItems()>
<java.util.concurrent.TransferQueue: boolean tryTransfer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<java.text.SimpleDateFormat: int hashCode()>
<ohos.utils.IntArray: int popBack()>
<java.util.Vector: boolean removeIf(java.util.function.Predicate)>
<java.io.ObjectOutputStream: void drain()>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal negate(ohos.global.icu.math.MathContext)>
<ohos.javax.xml.stream.XMLStreamWriter: void setNamespaceContext(ohos.javax.xml.namespace.NamespaceContext)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean tryAcquire(long)>
<ohos.data.resultset.ResultSetWrapper: void unregisterObserver(ohos.data.rdb.DataObserver)>
<java.sql.ResultSet: void updateTime(int,java.sql.Time)>
<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>
<java.lang.Double: java.lang.String toHexString(double)>
<javax.net.ssl.SSLParameters: java.lang.String[] getProtocols()>
<ohos.agp.render.opengl.GLES20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)>
<ohos.aafwk.ability.continuation.ExtraParams: void <init>()>
<java.nio.charset.UnmappableCharacterException: int getInputLength()>
<ohos.agp.components.Component: float getRotation()>
<java.util.TimeZone: int getDSTSavings()>
<ohos.global.icu.util.IndianCalendar: void <init>()>
<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)>
<ohos.bundle.BundleInfo: int getMaxSdkVersion()>
<ohos.hiviewdfx.FaultLogger.FaultLogInfo: int getFaultType()>
<ohos.data.DatabaseHelper: boolean moveDatabase(ohos.app.Context,java.lang.String,java.lang.String)>
<javax.crypto.SealedObject: java.lang.Object getObject(java.security.Key,java.lang.String)>
<java.sql.SQLTransientException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<java.util.Enumeration: boolean hasMoreElements()>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>
<ohos.sensor.agent.SensorAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int)>
<java.util.prefs.AbstractPreferences: void syncSpi()>
<ohos.data.search.schema.NoticeItem: java.lang.String getLocation()>
<ohos.utils.geo.Rect: boolean isEmpty()>
<ohos.agp.components.Component: void setTranslationX(float)>
<ohos.bundle.ShortcutInfo: void setBundleName(java.lang.String)>
<ohos.utils.zson.ZSONArray: ohos.utils.zson.ZSONObject getZSONObject(int)>
<java.util.concurrent.atomic.AtomicLong: long decrementAndGet()>
<java.util.concurrent.ConcurrentSkipListMap: void replaceAll(java.util.function.BiFunction)>
<ohos.agp.components.Component: float getAlpha()>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream.Builder builder()>
<ohos.agp.utils.Matrix: void setSkewY(float)>
<ohos.agp.utils.Matrix44: float getFloat(int,int)>
<ohos.rpc.RemoteObjectCallbackList: void unregisterAll()>
<java.util.GregorianCalendar: int getWeekYear()>
<ohos.global.icu.text.PluralFormat: void <init>()>
<ohos.data.search.SearchAbility: void unRegisterIndexChangeListener(java.lang.String,java.lang.String,ohos.data.search.listener.IIndexChangeListener)>
<java.lang.Number: long longValue()>
<ohos.global.icu.text.SimpleDateFormat: void setNumberFormat(ohos.global.icu.text.NumberFormat)>
<java.util.concurrent.ForkJoinTask: boolean isCompletedAbnormally()>
<ohos.agp.components.ComponentState: boolean isStateMatched(int,int)>
<java.util.Arrays: int binarySearch(long[],int,int,long)>
<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<ohos.utils.net.Uri: java.lang.String getScheme()>
<ohos.utils.LightweightSet: boolean remove(java.lang.Object)>
<java.util.Arrays: void parallelSetAll(int[],java.util.function.IntUnaryOperator)>
<ohos.sysappcomponents.calendar.entity.Events: void <init>()>
<ohos.agp.render.opengl.GLES1X: void glMaterialx(int,int,int)>
<ohos.global.icu.lang.UCharacter: int getIntPropertyMinValue(int)>
<java.time.LocalDateTime: java.time.LocalDateTime of(java.time.LocalDate,java.time.LocalTime)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendChronologyText(java.time.format.TextStyle)>
<ohos.event.commonevent.CommonEventSubscribeInfo.ThreadMode: void <clinit>()>
<ohos.media.audio.AudioCapturer: int read(short[],int,int)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.String formatOffsetLocalizedGMT(int)>
<java.util.TreeMap: java.util.Map.Entry lastEntry()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notIn(java.lang.String,java.util.Calendar[])>
<ohos.rpc.IPCSkeleton: boolean isLocalCalling()>
<ohos.agp.components.ComponentContainer: void removeComponentAt(int)>
<ohos.global.icu.lang.UScript: boolean isRightToLeft(int)>
<java.util.Set: boolean remove(java.lang.Object)>
<ohos.agp.render.opengl.GLES1X: void glLightx(int,int,int)>
<java.util.zip.ZipEntry: java.nio.file.attribute.FileTime getLastModifiedTime()>
<java.time.format.DecimalStyle: java.lang.String toString()>
<java.sql.ResultSet: void updateBinaryStream(int,java.io.InputStream,long)>
<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
<java.sql.CallableStatement: void setNull(java.lang.String,int,java.lang.String)>
<ohos.utils.PlainLongArray: int keyAt(int)>
<java.util.concurrent.ForkJoinTask: boolean inForkJoinPool()>
<ohos.agp.components.ProgressBar: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.util.Arrays: java.util.stream.IntStream stream(int[],int,int)>
<ohos.data.search.schema.PlaceItem: java.lang.Long getPostalCode()>
<ohos.data.search.SearchAbility: ohos.data.search.SearchResult setSearchableEntity(ohos.data.search.model.SearchableEntity)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle[])>
<ohos.eventhandler.EventRunner: ohos.eventhandler.EventRunner create(java.lang.String)>
<java.text.CharacterIterator: java.lang.Object clone()>
<java.security.Provider: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>
<java.nio.Buffer: java.nio.Buffer position(int)>
<ohos.location.GeoAddress: void setPlaceName(java.lang.String)>
<ohos.global.icu.lang.UCharacter: int toTitleCase(int)>
<ohos.media.sessioncore.AVSession: void setOptions(ohos.utils.PacMap)>
<ohos.agp.components.ListContainer: int getSelectedItemIndex()>
<ohos.global.icu.text.DecimalFormatSymbols: void setPlusSignString(java.lang.String)>
<ohos.media.photokit.metadata.AVLoggerConnection: void <init>(ohos.app.Context,ohos.media.photokit.common.AVLoggerConnectionClient)>
<java.net.URLConnection: long getLastModified()>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.util.BoundingBox getBoundsUsingTransform(ohos.agp.render.render3d.Entity,boolean)>
<javax.lang.model.util.ElementKindVisitor6: void <init>()>
<javax.crypto.CipherInputStream: int read(byte[])>
<ohos.data.search.schema.VideoItem: java.lang.Integer getWatchDuration()>
<ohos.utils.geo.Rect: int getWidth()>
<java.net.URISyntaxException: int getIndex()>
<java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock: void unlock()>
<ohos.global.icu.text.DisplayContext.Type: ohos.global.icu.text.DisplayContext.Type[] values()>
<ohos.agp.components.TableLayout: int getColumnCount()>
<java.time.OffsetTime: java.time.OffsetTime ofInstant(java.time.Instant,java.time.ZoneId)>
<ohos.event.intentagent.TriggerInfo.Builder: ohos.event.intentagent.TriggerInfo.Builder setPermission(java.lang.String)>
<java.lang.Math: int subtractExact(int,int)>
<ohos.data.distributed.common.FieldNode: boolean setNullable(boolean)>
<java.math.BigInteger: int hashCode()>
<ohos.event.notification.NotificationActionButton: void <clinit>()>
<ohos.agp.components.ProgressBar: int getMaxWidth()>
<ohos.agp.window.dialog.PopupDialog: ohos.agp.window.dialog.PopupDialog setCustomComponent(ohos.agp.components.Component)>
<java.lang.invoke.VolatileCallSite: void <init>(java.lang.invoke.MethodHandle)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getSharedQueuedThreads()>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getWeekdays(int,int)>
<ohos.data.resultset.ResultSet: void setAffectedByUris(java.lang.Object,java.util.List)>
<ohos.data.search.schema.ContactItem: java.lang.String getGender()>
<java.time.LocalTime: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<ohos.agp.render.render3d.Task: ohos.agp.render.render3d.Task.State getState()>
<java.text.Bidi: java.lang.String toString()>
<ohos.global.resource.solidxml.Node: void <init>()>
<java.nio.file.spi.FileSystemProvider: boolean deleteIfExists(java.nio.file.Path)>
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>
<java.nio.file.attribute.PosixFileAttributeView: void setGroup(java.nio.file.attribute.GroupPrincipal)>
<java.time.Instant: int hashCode()>
<ohos.global.icu.text.CollationElementIterator: boolean equals(java.lang.Object)>
<java.time.chrono.MinguoDate: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.time.Year: int compareTo(java.time.Year)>
<java.util.logging.Handler: java.util.logging.Level getLevel()>
<ohos.data.rdb.RdbBusyException: void <init>()>
<ohos.sysappcomponents.contact.entity.Contact: void addSipAddress(ohos.sysappcomponents.contact.entity.SipAddress)>
<java.util.AbstractMap: java.lang.String toString()>
<ohos.data.rdb.StoreConfig.JournalMode: ohos.data.rdb.StoreConfig.JournalMode valueOf(java.lang.String)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates crossJoin(java.lang.String)>
<java.time.zone.ZoneOffsetTransition: java.time.ZoneOffset getOffsetAfter()>
<ohos.global.icu.util.GregorianCalendar: int handleGetExtendedYear()>
<ohos.bundle.ShortcutInfo: void setId(java.lang.String)>
<java.sql.ResultSet: java.io.Reader getNCharacterStream(java.lang.String)>
<java.time.ZoneId: java.util.Set getAvailableZoneIds()>
<ohos.media.audio.AudioManager: ohos.utils.net.Uri getRingerUri(ohos.app.Context,ohos.media.audio.AudioManager.RingtoneType)>
<javax.tools.ForwardingJavaFileManager: boolean isSameFile(javax.tools.FileObject,javax.tools.FileObject)>
<java.util.Vector: boolean removeElement(java.lang.Object)>
<ohos.eventhandler.EventHandler: void postTimingTask(java.lang.Runnable,long)>
<ohos.agp.render.render3d.components.CameraComponent: int getRenderResolutionX()>
<ohos.media.audio.AudioStreamInfo.StreamType: int getValue()>
<java.security.spec.EllipticCurve: java.math.BigInteger getB()>
<java.util.TreeMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<ohos.global.icu.text.CurrencyPluralInfo: boolean equals(java.lang.Object)>
<javax.crypto.IllegalBlockSizeException: void <init>()>
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery localDate()>
<ohos.media.image.common.AlphaType: ohos.media.image.common.AlphaType[] values()>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getElementText()>
<java.time.YearMonth: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<ohos.systemrestore.SystemRestoreException: void <init>(java.lang.String)>
<ohos.utils.IntArray: void deleteRangeIn(int,int)>
<ohos.agp.components.ComponentParent: ohos.agp.components.ComponentParent getComponentParent()>
<java.text.Bidi: int getBaseLevel()>
<javax.crypto.CipherSpi: int engineGetBlockSize()>
<ohos.security.seckeychain.SecKeyAliasCallback: void onKeyAliasSelected(java.lang.String)>
<java.time.chrono.MinguoDate: long getLong(java.time.temporal.TemporalField)>
<javax.net.ssl.SSLSession: void putValue(java.lang.String,java.lang.Object)>
<ohos.media.codec.Codec.ICodecListener: void onReadBuffer(java.nio.ByteBuffer,ohos.media.common.BufferInfo,int)>
<java.net.URLClassLoader: java.net.URL[] getURLs()>
<java.time.temporal.TemporalUnit: java.time.Duration getDuration()>
<ohos.bluetooth.ble.BleScanResult: byte[] getRawData()>
<ohos.data.distributed.common.FieldValueType: ohos.data.distributed.common.FieldValueType valueOf(java.lang.String)>
<ohos.location.GeoAddress: java.lang.String getRoadName()>
<ohos.media.audio.AudioManager: boolean changeVolumeBy(ohos.media.audio.AudioManager.AudioVolumeType,int)>
<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
<ohos.global.icu.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<ohos.agp.render.render3d.math.Matrix4x4: void makeScale(ohos.agp.render.render3d.math.Vector3)>
<java.security.Provider: java.lang.Object get(java.lang.Object)>
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>
<ohos.security.permission.PermissionGrantMode: ohos.security.permission.PermissionGrantMode[] values()>
<ohos.global.icu.util.MeasureUnit: java.lang.String getSubtype()>
<java.nio.file.ClosedFileSystemException: void <init>()>
<java.security.Provider: boolean remove(java.lang.Object,java.lang.Object)>
<java.time.ZonedDateTime: java.lang.String format(java.time.format.DateTimeFormatter)>
<java.util.Spliterators.AbstractSpliterator: void <init>(long,int)>
<ohos.media.image.common.DecodeEvent: ohos.media.image.common.DecodeEvent valueOf(java.lang.String)>
<ohos.agp.window.dialog.ToastDialog: void onShow()>
<ohos.agp.render.Region: boolean quickReject(ohos.agp.utils.Rect)>
<ohos.agp.utils.Color: int rgb(int,int,int)>
<ohos.media.sessioncore.AVBrowser: void disconnect()>
<java.sql.ResultSet: java.sql.Date getDate(java.lang.String,java.util.Calendar)>
<ohos.agp.components.Picker: void setDisplayedLinesTopElement(ohos.agp.components.element.Element)>
<java.util.stream.Collectors: java.util.stream.Collector joining()>
<ohos.agp.render.opengl.GLES2Ext: void glPrimitiveBoundingBoxEXT(float,float,float,float,float,float,float,float)>
<ohos.agp.render.render3d.Engine: ohos.agp.render.render3d.util.MeshBuilder createMeshBuilder(int)>
<ohos.data.resultset.ResultSet: int getInt(int)>
<java.nio.file.DirectoryIteratorException: java.io.IOException getCause()>
<java.lang.Boolean: java.lang.String toString(boolean)>
<ohos.agp.render.render3d.resources.ResourceManager: java.util.Optional getMaterialDesc(ohos.agp.render.render3d.resources.ResourceHandle)>
<ohos.ai.cv.text.TextLine: void setValue(java.lang.String)>
<ohos.sysappcomponents.contact.entity.PostalAddress: void setPostcode(java.lang.String)>
<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>
<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>
<ohos.media.sessioncore.AVSession: void <init>(ohos.app.Context,java.lang.String)>
<ohos.agp.components.DatePicker: ohos.agp.utils.Color getShaderColor()>
<ohos.distributedschedule.interwork.DeviceInfo: java.lang.String getDeviceId()>
<ohos.bundle.AbilityInfo: ohos.bundle.AbilityInfo.LaunchMode getLaunchMode()>
<java.lang.Comparable: int compareTo(java.lang.Object)>
<ohos.agp.components.webengine.ScaleController: int getTextScale()>
<java.sql.SQLNonTransientException: void <init>(java.lang.String)>
<ohos.sensor.data.SensorData: long getTimestamp()>
<java.nio.channels.AlreadyBoundException: void <init>()>
<java.util.zip.Inflater: void finalize()>
<ohos.global.icu.text.CollationKey: boolean equals(java.lang.Object)>
<java.time.chrono.ThaiBuddhistDate: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.text.DecimalFormat: java.lang.String getPositivePrefix()>
<java.lang.Throwable: java.lang.Throwable getCause()>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster firstInMonth(java.time.DayOfWeek)>
<ohos.agp.utils.MimeData: void <init>()>
<ohos.media.player.Player.StreamInfo: java.lang.String toString()>
<ohos.global.icu.text.SimpleDateFormat: void <init>(java.lang.String)>
<ohos.agp.render.render3d.components.SceneComponent: ohos.agp.render.render3d.math.Vector3 getEnvironmentDiffuseColor()>
<java.util.concurrent.locks.StampedLock: java.util.concurrent.locks.ReadWriteLock asReadWriteLock()>
<java.time.chrono.ChronoLocalDate: java.time.chrono.Chronology getChronology()>
<ohos.global.icu.text.NumberingSystem: java.lang.String getName()>
<java.io.PrintWriter: void println(java.lang.String)>
<java.lang.Math: double tan(double)>
<ohos.sysappcomponents.calendar.entity.Reminders: void setRemindMinutes(int)>
<java.net.SocketImpl: java.lang.String toString()>
<ohos.agp.components.Component: int getPaddingRight()>
<ohos.wifi.p2p.WifiP2pCallback: void eventExecFail(int)>
<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.global.icu.math.BigDecimal: float floatValue()>
<java.lang.Thread: void stop()>
<java.lang.reflect.Method: boolean isVarArgs()>
<java.net.URLConnection: void setIfModifiedSince(long)>
<java.lang.Character: int compareTo(java.lang.Character)>
<java.util.zip.Deflater: void setStrategy(int)>
<java.util.stream.Collector.Characteristics: java.util.stream.Collector.Characteristics valueOf(java.lang.String)>
<java.util.regex.Matcher: boolean find(int)>
<ohos.sensor.agent.CategoryOtherAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback)>
<java.lang.StrictMath: double random()>
<ohos.utils.zson.ZSONArray: java.util.List stringToClassList(java.lang.String,java.lang.Class)>
<ohos.location.GeoAddress: java.lang.String getDescriptions(int)>
<ohos.global.icu.text.DateFormat: boolean equals(java.lang.Object)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query greaterThan(java.lang.String,int)>
<ohos.agp.components.SlideDrawer: void setDisplayMode(ohos.agp.components.SlideDrawer.DisplayMode,ohos.agp.components.SlideDrawer.SlideDirection)>
<java.lang.Math: double IEEEremainder(double,double)>
<java.security.spec.ECField: int getFieldSize()>
<ohos.global.icu.text.DecimalFormat: java.lang.StringBuffer format(ohos.global.icu.util.CurrencyAmount,java.lang.StringBuffer,java.text.FieldPosition)>
<java.time.Duration: long get(java.time.temporal.TemporalUnit)>
<ohos.media.sessioncore.AVController: ohos.utils.PacMap getAVSessionInfo()>
<java.io.PipedWriter: void write(int)>
<java.util.concurrent.DelayQueue: boolean offer(java.util.concurrent.Delayed,long,java.util.concurrent.TimeUnit)>
<ohos.data.search.schema.EventItem: java.lang.String getLocation()>
<java.sql.SQLNonTransientConnectionException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.logging.Logger: java.lang.String getName()>
<ohos.data.distributed.common.Schema: ohos.data.distributed.common.FieldNode getRootFieldNode()>
<ohos.hiviewdfx.HiTraceId: long getSpanId()>
<java.nio.file.Files: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>
<ohos.global.icu.text.MessagePattern: java.lang.Object freeze()>
<java.util.Objects: java.lang.String toString(java.lang.Object)>
<ohos.agp.text.RichTextBuilder: ohos.agp.text.RichTextBuilder addText(java.lang.String)>
<java.security.Timestamp: int hashCode()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThan(java.lang.String,double)>
<java.lang.Integer: float floatValue()>
<ohos.agp.render.render3d.gltf.GltfData: java.lang.String getGltfUri()>
<ohos.data.search.schema.PlaceItem: java.lang.String getCountry()>
<java.lang.ClassLoader: java.lang.Package[] getPackages()>
<ohos.data.rdb.Statement: int executeAndGetChanges()>
<java.util.zip.Adler32: void <init>()>
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asVarargsCollector(java.lang.Class)>
<ohos.nfc.tag.MessageRecord: byte[] getId()>
<java.nio.file.Path: boolean endsWith(java.lang.String)>
<ohos.agp.render.render3d.Task: void onInitialize()>
<ohos.agp.components.PageSlider: int getOrientation()>
<ohos.agp.render.Path.ArcSize: ohos.agp.render.Path.ArcSize valueOf(java.lang.String)>
<ohos.media.camera.params.Face: int hashCode()>
<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String)>
<java.util.Spliterators: java.util.Spliterator spliterator(java.util.Iterator,long,int)>
<ohos.vibrator.agent.VibratorAgent: boolean start(int,ohos.vibrator.bean.VibrationPattern)>
<java.sql.PreparedStatement: void setBlob(int,java.sql.Blob)>
<ohos.media.common.sessioncore.AVSessionCallback: void <init>()>
<java.time.Clock: java.time.ZoneId getZone()>
<ohos.agp.render.opengl.GLES32: void glPatchParameteri(int,int)>
<ohos.media.camera.params.PropertyKey: void <clinit>()>
<javax.tools.JavaFileManager: java.lang.ClassLoader getClassLoader(javax.tools.JavaFileManager.Location)>
<ohos.utils.net.UrlQueryFilter: void <init>()>
<java.net.Socket: void setTrafficClass(int)>
<ohos.global.icu.util.VersionInfo: ohos.global.icu.util.VersionInfo getInstance(int)>
<ohos.agp.components.element.ElementContainer: int getFadeOutEffectPeriod()>
<java.util.jar.Pack200.Unpacker: void addPropertyChangeListener(java.beans.PropertyChangeListener)>
<ohos.data.search.schema.MessageItem: ohos.data.search.schema.MessageItem setSenderPhone(java.lang.String)>
<java.util.Currency: java.util.Set getAvailableCurrencies()>
<ohos.agp.window.dialog.ListDialog: ohos.agp.window.dialog.ListDialog setMultiSelectItems(java.lang.String[],boolean[])>
<ohos.sysappcomponents.calendar.entity.CalendarEntity: void <init>()>
<java.net.SocketImpl: int available()>
<ohos.data.orm.Clob: java.io.Reader getCharacterStream()>
<ohos.data.distributed.file.DistFiles: boolean delete(ohos.data.distributed.file.DistFile)>
<ohos.system.OsHelperErrnoException: java.lang.String getMessage()>
<java.nio.channels.AsynchronousSocketChannel: java.nio.channels.NetworkChannel bind(java.net.SocketAddress)>
<ohos.media.audio.SoundPlayer.SoundType: void <clinit>()>
<ohos.utils.LightweightMap: java.lang.Object remove(java.lang.Object)>
<ohos.utils.PacMap: boolean isEmpty()>
<java.nio.FloatBuffer: java.nio.FloatBuffer duplicate()>
<ohos.aafwk.ability.FormBindingData: void updateData(ohos.utils.zson.ZSONObject)>
<ohos.data.distributed.common.Options: ohos.data.distributed.common.Options setCreateIfMissing(boolean)>
<ohos.data.resultset.AbsSharedResultSet: byte[] getBlob(int)>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<ohos.net.IpPrefix: boolean marshalling(ohos.utils.Parcel)>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoZonedDateTime withEarlierOffsetAtOverlap()>
<ohos.app.Context: void compelVerifyUriPermission(ohos.utils.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<java.lang.StringBuffer: java.lang.Appendable append(char)>
<ohos.media.image.ImageReceiver: void release()>
<ohos.agp.components.DependentLayout.LayoutConfig: java.lang.Object clone()>
<ohos.global.icu.lang.UCharacter: boolean isISOControl(int)>
<ohos.data.search.model.IndexData: void remove(java.lang.String)>
<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate)>
<ohos.agp.components.AdaptiveBoxLayout: void <init>(ohos.app.Context)>
<ohos.event.commonevent.MatchingSkills: void <clinit>()>
<ohos.aafwk.ability.DataAbilityOperation: ohos.aafwk.ability.DataAbilityOperation.Builder newUpdateBuilder(ohos.utils.net.Uri)>
<java.time.temporal.WeekFields: java.time.temporal.TemporalField weekOfYear()>
<java.util.Arrays: void sort(char[])>
<ohos.aafwk.ability.ILifecycle: ohos.aafwk.ability.Lifecycle getLifecycle()>
<ohos.global.icu.math.BigDecimal: int scale()>
<ohos.javax.xml.stream.events.StartElement: ohos.javax.xml.namespace.NamespaceContext getNamespaceContext()>
<ohos.interwork.utils.PacMapEx: void <init>(int)>
<ohos.media.audio.AudioStreamInfo.StreamType: ohos.media.audio.AudioStreamInfo.StreamType valueOf(java.lang.String)>
<ohos.media.image.common.Position: void <init>()>
<ohos.data.search.schema.NoticeItem: java.lang.Double getLatitude()>
<ohos.global.icu.text.MessagePattern: java.lang.String getPatternString()>
<ohos.agp.render.Canvas.ClipOp: void <clinit>()>
<ohos.rpc.RemoteObjectCallbackList: void stopBroadcast()>
<java.math.BigInteger: java.math.BigInteger abs()>
<java.lang.Thread: java.util.Map getAllStackTraces()>
<ohos.agp.components.Component.DragFeedbackProvider: ohos.agp.components.Component getComponent()>
<ohos.agp.components.Component: ohos.agp.components.Component.SpeechEventListener getSpeechEventListener()>
<java.util.concurrent.ConcurrentHashMap: long reduceEntriesToLong(long,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator)>
<ohos.agp.components.BaseItemProvider: int getItemComponentType(int)>
<ohos.bundle.IBundleManager: java.lang.String getAbilityLabel(java.lang.String,java.lang.String)>
<java.security.DomainLoadStoreParameter: void <init>(java.net.URI,java.util.Map)>
<ohos.telephony.TdscdmaSignalInformation: java.lang.String toString()>
<java.util.concurrent.ArrayBlockingQueue: java.util.Spliterator spliterator()>
<ohos.aafwk.ability.LifecycleObserver: void onForeground(ohos.aafwk.content.Intent)>
<ohos.agp.render.Region: ohos.agp.render.Path getBoundaryPath()>
<java.sql.DatabaseMetaData: boolean supportsResultSetConcurrency(int,int)>
<java.util.LinkedList: java.lang.Object clone()>
<java.lang.Class: java.lang.String getName()>
<ohos.agp.components.webengine.ScaleController: boolean isScalable()>
<javax.crypto.ExemptionMechanism: int genExemptionBlob(byte[])>
<ohos.agp.components.Picker: void setScrollListener(ohos.agp.components.Picker.ScrolledListener)>
<ohos.data.orm.Blob: long position(byte[],long)>
<ohos.javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>
<java.util.OptionalLong: long orElse(long)>
<java.sql.CallableStatement: void setNClob(java.lang.String,java.io.Reader,long)>
<ohos.app.IAbilityManager: void killProcessesByBundleName(java.lang.String)>
<java.lang.ExceptionInInitializerError: void <init>(java.lang.String)>
<javax.crypto.KeyGeneratorSpi: void engineInit(java.security.SecureRandom)>
<ohos.agp.components.Component: boolean hasFocus()>
<javax.lang.model.util.SimpleTypeVisitor6: java.lang.Object visitWildcard(javax.lang.model.type.WildcardType,java.lang.Object)>
<ohos.media.common.sessioncore.AVCallerUserInfo: int getCallerPid()>
<ohos.hiviewdfx.HiLog: int debug(ohos.hiviewdfx.HiLogLabel,java.lang.String,java.lang.Object[])>
<ohos.media.camera.params.ParameterKey: void <clinit>()>
<ohos.agp.render.Path: void computeBounds(ohos.agp.utils.RectFloat)>
<ohos.global.icu.util.ULocale: java.util.Set getUnicodeLocaleKeys()>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(ohos.javax.xml.transform.Result)>
<java.io.RandomAccessFile: void writeFloat(float)>
<ohos.agp.window.dialog.BaseDialog: void registerDisplayCallback(ohos.agp.window.dialog.BaseDialog.DisplayCallback)>
<java.security.cert.X509Certificate: byte[] getSigAlgParams()>
<ohos.agp.components.element.Element: boolean isStateful()>
<ohos.media.image.common.Size: void <init>(int,int)>
<javax.net.ssl.SSLParameters: void setWantClientAuth(boolean)>
<ohos.global.icu.util.Currency: java.lang.String getName(java.util.Locale,int,java.lang.String,boolean[])>
<ohos.aafwk.content.Operation: java.lang.String getBundleName()>
<java.sql.DatabaseMetaData: boolean nullsAreSortedAtStart()>
<ohos.agp.render.render3d.gltf.GltfData: java.lang.String getBaseUri()>
<ohos.global.icu.util.Currency.CurrencyUsage: ohos.global.icu.util.Currency.CurrencyUsage valueOf(java.lang.String)>
<java.nio.charset.CharsetDecoder: boolean isCharsetDetected()>
<ohos.data.orm.OrmContext: void unregisterEntityObserver(java.lang.String,ohos.data.orm.OrmObjectObserver)>
<ohos.net.NetManager: ohos.net.NetHandle getDefaultNet()>
<java.lang.Thread: java.lang.Object clone()>
<java.security.DomainLoadStoreParameter: java.security.KeyStore.ProtectionParameter getProtectionParameter()>
<ohos.media.camera.params.Face: ohos.agp.utils.Rect getFaceRect()>
<java.time.Year: java.lang.Object query(java.time.temporal.TemporalQuery)>
<java.lang.Byte: void <clinit>()>
<ohos.agp.components.Text: void setFont(ohos.agp.text.Font)>
<java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
<java.nio.ByteBuffer: int hashCode()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThan(java.lang.String,java.sql.Time)>
<ohos.bundle.LauncherAbilityInfo: long getInstallTime()>
<ohos.agp.window.service.Display: ohos.agp.window.service.DisplayAttributes getAttributes()>
<ohos.agp.render.render3d.components.SceneComponent: void setEnvironmentDiffuseIntensity(float)>
<java.nio.file.Path: java.nio.file.Path getFileName()>
<ohos.media.codec.Codec: boolean setSourceFormat(ohos.media.common.Format)>
<java.nio.file.spi.FileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>
<ohos.aafwk.ability.ViewListener: void onTouchEvent(ohos.aafwk.ability.AbilityForm,ohos.aafwk.ability.ViewsStatus)>
<java.util.zip.CheckedInputStream: int read(byte[],int,int)>
<java.util.BitSet: int hashCode()>
<java.util.prefs.AbstractPreferences: java.lang.String[] keys()>
<java.text.AttributedCharacterIterator: int getRunLimit(java.text.AttributedCharacterIterator.Attribute)>
<javax.lang.model.util.AbstractElementVisitor6: java.lang.Object visit(javax.lang.model.element.Element)>
<ohos.agp.window.dialog.ToastDialog: void <init>(ohos.app.Context)>
<ohos.media.audio.AudioRenderer: ohos.media.audio.AudioRenderer.State getState()>
<java.util.Formatter: void flush()>
<java.util.concurrent.Phaser: void <init>()>
<javax.net.ssl.SSLParameters: void <init>(java.lang.String[])>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: java.nio.FloatBuffer getNormals()>
<java.nio.IntBuffer: java.lang.Object array()>
<ohos.global.icu.util.Calendar: void setFirstDayOfWeek(int)>
<ohos.media.image.ImagePacker: void release()>
<java.text.AttributedCharacterIterator: int getRunLimit()>
<java.nio.channels.spi.AbstractSelector: void close()>
<java.security.cert.X509CertSelector: java.lang.String getSubjectAsString()>
<ohos.agp.components.Picker: int getValue()>
<ohos.bundle.ShortcutInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.utils.BasePacMap: void putDoubleValueArray(java.lang.String,double[])>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>
<ohos.global.icu.text.UnicodeSet: java.lang.String toPattern(boolean)>
<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal,java.math.MathContext)>
<ohos.agp.components.Picker.ValueChangedListener: void onValueChanged(ohos.agp.components.Picker,int,int)>
<javax.crypto.ExemptionMechanismException: void <init>()>
<java.io.PipedWriter: void write(char[],int,int)>
<ohos.global.icu.text.TimeZoneFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<ohos.sensor.agent.CategoryBodyAgent: java.util.List getAllSensors(int)>
<java.time.OffsetDateTime: java.time.OffsetDateTime plusMinutes(long)>
<java.time.Instant: java.time.Instant minusMillis(long)>
<java.lang.Character: int codePointBefore(char[],int)>
<ohos.miscservices.pasteboard.PasteData: java.lang.String getPrimaryHtml()>
<java.net.DatagramSocketImpl: int getTimeToLive()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: void <init>(java.lang.String,long,ohos.event.notification.MessageUser)>
<java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<ohos.aafwk.ability.continuation.ContinuationDeviceInfo: java.lang.String getDeviceType()>
<java.util.AbstractCollection: java.lang.String toString()>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder setLocale(ohos.global.icu.util.ULocale)>
<ohos.usb.USBEndpoint: int getType()>
<ohos.agp.utils.Matrix: float[] getData()>
<ohos.workscheduler.WorkScheduler: void <init>()>
<java.sql.ResultSet: void updateBlob(java.lang.String,java.sql.Blob)>
<ohos.agp.utils.DimensFloat: float getSizeY()>
<ohos.bluetooth.ble.BleScanFilter: java.util.UUID getPeripheralServcieUuid()>
<ohos.data.distributed.common.UserInfo: ohos.data.distributed.common.UserType getUserType()>
<java.nio.file.SecureDirectoryStream: java.nio.channels.SeekableByteChannel newByteChannel(java.lang.Object,java.util.Set,java.nio.file.attribute.FileAttribute[])>
<ohos.ace.ability.AceAbility: void onRequestPermissionsFromUserResult(int,java.lang.String[],int[])>
<ohos.biometrics.authentication.BiometricAuthentication: int execAuthenticationAction(ohos.biometrics.authentication.BiometricAuthentication.AuthType,ohos.biometrics.authentication.BiometricAuthentication.SecureLevel,boolean,boolean,ohos.biometrics.authentication.BiometricAuthentication.SystemAuthDialogInfo)>
<ohos.agp.render.Path: boolean contains(float,float)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setCustomView(ohos.agp.components.ComponentProvider)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeDefaultNamespace(java.lang.String)>
<java.lang.Runtime: long totalMemory()>
<ohos.agp.components.Component: int getPaddingBottom()>
<java.nio.FloatBuffer: int compareTo(java.lang.Object)>
<java.util.Deque: boolean offerFirst(java.lang.Object)>
<java.util.LinkedList: java.lang.Object remove()>
<java.util.PropertyPermission: void <init>(java.lang.String,java.lang.String)>
<ohos.agp.render.render3d.components.SceneComponent: void setEnvironmentDiffuseColor(ohos.agp.render.render3d.math.Vector3)>
<java.time.temporal.TemporalField: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal,long)>
<java.util.Vector: void ensureCapacity(int)>
<ohos.agp.components.SlideDrawer: boolean toggleSmoothly(ohos.agp.components.SlideDrawer.SlideDirection,int)>
<ohos.hiviewdfx.FaultLogger.FaultLogQueryResult: java.util.Optional next()>
<ohos.agp.render.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)>
<ohos.global.icu.text.UnicodeSet: java.lang.Object clone()>
<ohos.telephony.TelephoneNumberUtils: boolean isEmergencyPhoneNumber(java.lang.String)>
<java.text.ChoiceFormat: int hashCode()>
<ohos.multimodalinput.event.KeyBoardEvent: int getUnicode()>
<java.io.OutputStreamWriter: void flush()>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: void setPositions(java.nio.FloatBuffer)>
<java.net.CookieStore: java.util.List getCookies()>
<ohos.miscservices.inputmethod.EditingText: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.ComponentContainer.LayoutConfig: int[] getMarginsLeftAndRight()>
<java.util.AbstractList: java.util.Iterator iterator()>
<ohos.org.xml.sax.XMLReader: void parse(ohos.org.xml.sax.InputSource)>
<ohos.agp.components.Component: void setPivot(float,float)>
<ohos.global.resource.NotExistException: void <init>()>
<ohos.media.common.sessioncore.AVCallerUserInfo: void <init>(java.lang.String,int,int)>
<java.time.OffsetDateTime: java.time.OffsetDateTime plus(java.time.temporal.TemporalAmount)>
<java.time.chrono.Chronology: java.time.chrono.Chronology ofLocale(java.util.Locale)>
<ohos.eventhandler.EventQueue: void <init>()>
<java.util.Arrays: void parallelPrefix(java.lang.Object[],int,int,java.util.function.BinaryOperator)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>
<ohos.media.photokit.metadata.AVMetadataHelper: ohos.media.image.PixelMap fetchVideoPixelMapByIndex(int)>
<ohos.global.icu.text.MessageFormat: java.text.Format[] getFormats()>
<ohos.global.i18n.text.DateFormatUtil: java.lang.String getBestPattern(java.lang.String,java.util.Locale)>
<java.util.concurrent.locks.ReentrantLock: java.util.Collection getQueuedThreads()>
<ohos.telephony.RadioStateObserver: void <init>(int,ohos.eventhandler.EventRunner)>
<java.util.Scanner: short nextShort(int)>
<ohos.global.icu.text.MessageFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<ohos.media.photokit.metadata.AVLoggerConnection: void performLoggerFile(ohos.app.Context,java.lang.String[],java.lang.String[],ohos.media.photokit.common.AVLogCompletedListener)>
<ohos.event.notification.INotificationSubscriber: void onNotificationRemoved(ohos.event.notification.NotificationRequest,ohos.event.notification.NotificationSortingMap,int)>
<ohos.agp.components.VelocityDetector: float getVerticalVelocity()>
<java.lang.Object: void finalize()>
<java.util.GregorianCalendar: java.lang.String getCalendarType()>
<ohos.telephony.NetworkState: boolean unmarshalling(ohos.utils.Parcel)>
<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>
<ohos.miscservices.download.DownloadConfig.Builder: ohos.miscservices.download.DownloadConfig.Builder enableRoaming(boolean)>
<ohos.agp.components.TimePicker.AmPmOrder: ohos.agp.components.TimePicker.AmPmOrder valueOf(java.lang.String)>
<ohos.aafwk.ability.AbilityMissionInfo: int getAbilityMissionId()>
<ohos.agp.render.opengl.GLES20: void glUniform4iv(int,int,java.nio.IntBuffer)>
<java.lang.Long: java.lang.Long valueOf(java.lang.String)>
<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty moveFromX(float)>
<java.lang.StrictMath: long abs(long)>
<java.util.Scanner: void close()>
<java.net.ServerSocket: void setPerformancePreferences(int,int,int)>
<java.util.Arrays: void sort(int[],int,int)>
<ohos.agp.components.Component.EstimateSpec: int getChildSizeWithMode(int,int,int)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: java.lang.Object[] toArray(java.lang.Object[])>
<java.io.ObjectInputStream: void readFully(byte[],int,int)>
<ohos.event.commonevent.AsyncCommonEventResult: boolean getAbortCommonEvent()>
<ohos.data.distributed.common.Options: ohos.data.distributed.common.Options setSchema(ohos.data.distributed.common.Schema)>
<java.nio.channels.FileChannel: long read(java.nio.ByteBuffer[])>
<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadHoldCount()>
<ohos.location.GeoAddress: java.lang.String getPostalCode()>
<java.sql.ResultSet: void updateNCharacterStream(java.lang.String,java.io.Reader,long)>
<java.io.PrintWriter: void print(char)>
<ohos.agp.components.BaseItemProvider: ohos.agp.components.Component getComponent(int,ohos.agp.components.Component,ohos.agp.components.ComponentContainer)>
<ohos.data.search.schema.AppItem: ohos.data.search.schema.AppItem setComment(java.lang.String)>
<java.util.zip.ZipEntry: void setCrc(long)>
<java.nio.file.attribute.PosixFilePermission: void <clinit>()>
<ohos.system.OsHelper: long setFileOperationPos(java.io.FileDescriptor,long,int)>
<java.util.logging.Logger: java.util.logging.Filter getFilter()>
<java.util.Random: java.util.stream.LongStream longs()>
<java.time.YearMonth: java.time.YearMonth of(int,int)>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<ohos.distributedhardware.devicemanager.DeviceStateCallback: void onDeviceOffline(ohos.distributedhardware.devicemanager.DeviceInfo)>
<ohos.media.common.sessioncore.AVBrowserResult: void sendAVElementList(java.util.List)>
<ohos.aafwk.ability.DataAbilityHelper: java.lang.String[] getFileTypes(ohos.utils.net.Uri,java.lang.String)>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback)>
<java.sql.SQLPermission: void <init>(java.lang.String,java.lang.String)>
<java.util.logging.StreamHandler: void <init>()>
<ohos.usb.USBCore: void requestRight(ohos.usb.USBDevice,java.lang.String)>
<ohos.javax.xml.stream.events.XMLEvent: ohos.javax.xml.namespace.QName getSchemaType()>
<java.time.chrono.JapaneseDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.rpc.MessageParcel: int getDataVersion()>
<ohos.sysappcomponents.contact.entity.Contact: void addPostalAddress(ohos.sysappcomponents.contact.entity.PostalAddress)>
<java.text.SimpleDateFormat: java.lang.String toLocalizedPattern()>
<ohos.agp.text.Font.Builder: void <init>(java.io.File)>
<java.sql.CallableStatement: void setLong(java.lang.String,long)>
<ohos.global.icu.text.DateFormatSymbols: void <init>(java.util.Locale)>
<java.text.DecimalFormatSymbols: char getMonetaryDecimalSeparator()>
<ohos.agp.components.ProgressBar: void enableDividerLines(boolean)>
<ohos.javax.xml.stream.Location: int getLineNumber()>
<java.text.FieldPosition: int hashCode()>
<ohos.telephony.NrSignalInformation: int hashCode()>
<java.util.zip.Adler32: void update(java.nio.ByteBuffer)>
<java.net.URI: void <init>(java.lang.String)>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDate date(int,int,int)>
<ohos.event.notification.NotificationSlot: void setDescription(java.lang.String)>
<java.sql.ResultSet: void updateAsciiStream(int,java.io.InputStream,long)>
<javax.crypto.interfaces.PBEKey: char[] getPassword()>
<ohos.global.icu.text.PluralFormat: boolean equals(ohos.global.icu.text.PluralFormat)>
<ohos.accessibility.ability.AccessibilityInfo: void addOperation(ohos.accessibility.ability.AccessibleOperation)>
<java.time.Instant: java.time.Instant now(java.time.Clock)>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.LongStream longs(long)>
<ohos.global.icu.text.UCharacterIterator: ohos.global.icu.text.UCharacterIterator getInstance(java.text.CharacterIterator)>
<java.text.Format: java.lang.String format(java.lang.Object)>
<ohos.media.camera.params.PropertyKey.Key: boolean equals(java.lang.Object)>
<ohos.agp.components.element.ShapeElement: void setArc(ohos.agp.render.Arc)>
<ohos.nfc.tag.MifareClassicTag: void writeBlock(int,byte[])>
<ohos.sensor.agent.CategoryBodyAgent: ohos.sensor.bean.SensorBase getSingleSensor(int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates in(java.lang.String,float[])>
<java.text.Bidi: boolean isRightToLeft()>
<javax.sql.RowSet: void setObject(int,java.lang.Object)>
<ohos.aafwk.ability.fraction.Fraction: void onActive()>
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLParameters engineGetDefaultSSLParameters()>
<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>
<java.lang.Long: java.lang.String toHexString(long)>
<ohos.accessibility.ability.GesturePathPositionDefine: float getPositionY()>
<ohos.global.icu.lang.UCharacterCategory: java.lang.String toString(int)>
<java.lang.StrictMath: int floorDiv(int,int)>
<ohos.bluetooth.ble.GattService: boolean unmarshalling(ohos.utils.Parcel)>
<java.io.BufferedReader: int read()>
<javax.net.ssl.SSLSessionContext: int getSessionCacheSize()>
<ohos.agp.components.webengine.WebConfig: void setTextAutoSizing(boolean)>
<ohos.global.icu.text.ConstrainedFieldPosition: java.lang.String toString()>
<ohos.media.audio.AudioManager.RingtoneType: void <clinit>()>
<ohos.miscservices.inputmethodability.InputMethodAbility: void onScreenOrientationChanged(int)>
<java.security.cert.X509Certificate: boolean[] getKeyUsage()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates between(java.lang.String,long,long)>
<java.lang.Character: boolean isSupplementaryCodePoint(int)>
<ohos.utils.geo.RectFloat: void setPivotYCoordinate(float)>
<java.time.LocalDateTime: java.time.LocalDateTime of(int,java.time.Month,int,int,int,int)>
<java.lang.Math: double sin(double)>
<ohos.agp.utils.RectFloat: boolean getIntersectRect(ohos.agp.utils.RectFloat)>
<ohos.net.RouteInfo: boolean hasGateway()>
<java.time.chrono.JapaneseEra: java.time.chrono.JapaneseEra valueOf(java.lang.String)>
<ohos.utils.PlainIntArray: boolean isEmpty()>
<ohos.global.icu.util.CopticCalendar: void <init>(java.util.Date)>
<ohos.app.AbilityContext: int getThemeId()>
<java.math.BigInteger: int bitLength()>
<ohos.media.audio.SoundPlayer: int createSound(java.lang.String)>
<ohos.ai.asr.AsrClient: void stopListening()>
<ohos.ai.cv.text.TextConfiguration.Builder: ohos.ai.cv.text.TextConfiguration build()>
<ohos.miscservices.wallpaper.WallpaperController: void unregisterColorsChangedListener(ohos.miscservices.wallpaper.IWallpaperColorsChangedListener)>
<ohos.sensor.agent.CategoryOrientationAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase)>
<java.io.File: java.lang.String getName()>
<ohos.ai.cv.docrefine.DocCoordinates: ohos.ai.cv.common.CvPoint getTopLeft()>
<ohos.telephony.ShortMessage: boolean hasReplyPath()>
<ohos.utils.zson.ZSONObject: java.lang.String getString(java.lang.String)>
<ohos.agp.utils.Matrix: void setScale(float,float,float,float)>
<ohos.org.xml.sax.Attributes: int getIndex(java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glDeleteFramebuffers(int,java.nio.IntBuffer)>
<ohos.agp.components.TimePicker.AmPmOrder: void <clinit>()>
<ohos.media.audio.SoundEffect.SoundEffectInfo: void setType(java.util.UUID)>
<java.sql.DatabaseMetaData: boolean updatesAreDetected(int)>
<java.security.cert.X509CRLSelector: void <init>()>
<ohos.agp.utils.RectFloat: float getPivotXCoordinate()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates beginsWith(java.lang.String,java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,java.sql.Timestamp)>
<ohos.hiviewdfx.Debug: int getProcessSharedDirty(ohos.hiviewdfx.Debug.MemType)>
<javax.net.ssl.SSLServerSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>
<ohos.accessibility.AccessibilityEventInfo: java.util.ArrayList getContentList()>
<ohos.data.orm.EntityHelper: java.lang.String getUpdateStatement()>
<java.time.Month: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<ohos.agp.components.Text: void setAutoScrollingCount(int)>
<ohos.data.search.schema.ContactItem: void <init>()>
<ohos.media.tubecore.AVTubeEx: void setDetails(java.lang.String)>
<ohos.security.seoperator.SEOperatorAbs: int checkEligibility(java.lang.String)>
<ohos.bundle.AbilityInfo: java.lang.String toString()>
<java.util.concurrent.locks.ReentrantLock: boolean tryLock()>
<java.lang.ExceptionInInitializerError: java.lang.Throwable getCause()>
<java.lang.StrictMath: float signum(float)>
<java.net.Socket: boolean isInputShutdown()>
<ohos.net.NetHandle: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>
<ohos.net.NetHandle: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.AdaptiveBoxLayout.LayoutConfig: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getVersionColumns(java.lang.String,java.lang.String,java.lang.String)>
<ohos.data.search.schema.EventItem: ohos.data.search.schema.EventItem setLocation(java.lang.String)>
<ohos.media.common.AVDescription.Builder: ohos.media.common.AVDescription.Builder setSubTitle(java.lang.CharSequence)>
<ohos.data.rdb.AbsRdbPredicates: void clear()>
<java.time.LocalTime: java.lang.String format(java.time.format.DateTimeFormatter)>
<ohos.bluetooth.ble.BleAdvertiser: void close()>
<java.nio.charset.CharsetDecoder: float averageCharsPerByte()>
<java.util.Collections: java.lang.Object min(java.util.Collection)>
<ohos.media.camera.device.FrameResult: ohos.media.camera.params.AfResult getAfResult()>
<ohos.event.notification.NotificationSorting: int getRanking()>
<javax.sql.RowSet: java.lang.String getCommand()>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: void <init>()>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.AlphabeticIndex addLabels(ohos.global.icu.util.ULocale[])>
<ohos.app.dispatcher.task.TaskPriority: ohos.app.dispatcher.task.TaskPriority valueOf(java.lang.String)>
<ohos.event.notification.ReminderRequest: boolean equals(java.lang.Object)>
<java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<ohos.location.GeoAddress: void setSubAdministrativeArea(java.lang.String)>
<ohos.agp.components.ScrollHelper: int getScrollDistanceY()>
<ohos.global.icu.text.Bidi: java.lang.String writeReverse(java.lang.String,int)>
<java.lang.StringBuffer: java.lang.CharSequence subSequence(int,int)>
<java.lang.LinkageError: void <init>(java.lang.String,java.lang.Throwable)>
<java.security.GuardedObject: void <init>(java.lang.Object,java.security.Guard)>
<java.security.interfaces.RSAMultiPrimePrivateCrtKey: java.math.BigInteger getCrtCoefficient()>
<java.nio.FloatBuffer: java.nio.FloatBuffer wrap(float[],int,int)>
<ohos.agp.render.opengl.GLES30: void glClearBufferuiv(int,int,int[])>
<java.nio.channels.Channels: java.io.Reader newReader(java.nio.channels.ReadableByteChannel,java.lang.String)>
<ohos.utils.IntArray: void <init>(int,int)>
<ohos.agp.colors.HsvColor: void <init>(ohos.agp.colors.HsvColor)>
<ohos.agp.render.Canvas: void drawChars(ohos.agp.render.Paint,char[],float,float)>
<ohos.usb.USBDevice: ohos.usb.USBInterface getInterface(int)>
<ohos.utils.Parcel: int[] readIntArray()>
<ohos.utils.RationalNumber: boolean isNaN()>
<java.security.cert.CertPathValidatorException.BasicReason: void <clinit>()>
<java.util.stream.LongStream: long reduce(long,java.util.function.LongBinaryOperator)>
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>
<ohos.agp.components.TimePicker: ohos.agp.components.element.Element getSelectedTextBackgroundElement()>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo.Builder requestChargingType(boolean,int)>
<ohos.agp.components.Text: void setTextAlignment(int)>
<ohos.bundle.FormInfo: java.lang.String getFormName()>
<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<ohos.os.ProcessManager: int getUid()>
<java.util.concurrent.ConcurrentLinkedDeque: boolean isEmpty()>
<ohos.agp.components.webengine.Navigator: void goBack()>
<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>
<ohos.media.camera.params.ResultKey.Key: boolean equals(java.lang.Object)>
<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>
<java.util.concurrent.SynchronousQueue: int size()>
<java.lang.String: void <init>(char[],int,int)>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.ToastDialog setDuration(int)>
<ohos.app.IAbilityManager: boolean isUserKingKong()>
<ohos.global.icu.lang.UCharacter: java.lang.String toLowerCase(ohos.global.icu.util.ULocale,java.lang.String)>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: java.nio.FloatBuffer getColors()>
<ohos.media.audio.SoundPlayer.AudioVolumes: void <init>()>
<java.lang.Object: void notify()>
<ohos.agp.utils.Rect: void translate(int,int)>
<java.util.logging.Logger: void setResourceBundle(java.util.ResourceBundle)>
<java.lang.StrictMath: int abs(int)>
<ohos.utils.BasePacMap: void putIntValueArray(java.lang.String,int[])>
<ohos.agp.components.element.FrameAnimationElement: void stop()>
<ohos.data.search.schema.EmailItem: java.lang.String getBccEmail()>
<ohos.agp.components.CornerMark: void setElement(ohos.agp.components.element.ShapeElement)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notBetween(java.lang.String,java.util.Calendar,java.util.Calendar)>
<ohos.data.search.schema.DocumentItem: java.lang.String getPath()>
<ohos.utils.PlainBooleanArray: boolean isEmpty()>
<ohos.global.icu.text.AlphabeticIndex.Record: java.lang.CharSequence getName()>
<java.util.IdentityHashMap: boolean isEmpty()>
<java.security.cert.X509CRLSelector: boolean match(java.security.cert.CRL)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType appendParameterTypes(java.util.List)>
<javax.net.ssl.SSLServerSocket: void setEnabledCipherSuites(java.lang.String[])>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.Instant,java.time.ZoneId)>
<java.util.TreeSet: java.lang.Object pollLast()>
<ohos.net.NetStatusCallback: void onBlockedStatusChanged(ohos.net.NetHandle,boolean)>
<ohos.agp.utils.Circle: boolean isInclude(float,float)>
<ohos.agp.components.TimePicker: int getHour()>
<ohos.agp.utils.Matrix: boolean equals(java.lang.Object)>
<java.sql.DatabaseMetaData: boolean supportsConvert(int,int)>
<java.sql.Timestamp: boolean equals(java.lang.Object)>
<ohos.global.icu.text.NumberFormat: java.lang.String format(double)>
<ohos.bundle.HapModuleInfo: ohos.bundle.AbilityInfo getMainAbility()>
<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>
<ohos.media.audio.SoundPlayer.AudioVolumes: void setSubwooferVolume(float)>
<java.util.regex.PatternSyntaxException: void <init>(java.lang.String,java.lang.String,int)>
<java.nio.channels.AsynchronousServerSocketChannel: void accept(java.lang.Object,java.nio.channels.CompletionHandler)>
<java.time.chrono.MinguoEra: int getValue()>
<javax.security.auth.x500.X500Principal: int hashCode()>
<ohos.javax.xml.namespace.NamespaceContext: java.lang.String getPrefix(java.lang.String)>
<ohos.global.icu.text.UnicodeSet: void <init>(java.lang.String,java.text.ParsePosition,ohos.global.icu.text.SymbolTable,int)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: boolean weakCompareAndSet(java.lang.Object,long,long)>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getEventPosition()>
<ohos.agp.components.element.FrameAnimationElement: void <init>()>
<java.text.ChoiceFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.agp.render.opengl.GLES1X: void glPointSize(float)>
<java.io.ObjectInputStream: double readDouble()>
<java.sql.RowIdLifetime: java.sql.RowIdLifetime[] values()>
<ohos.global.resource.RawFileDescriptor: long getFileSize()>
<java.util.concurrent.atomic.AtomicLongArray: long getAndDecrement(int)>
<ohos.global.icu.text.TimeZoneNames.NameType: ohos.global.icu.text.TimeZoneNames.NameType valueOf(java.lang.String)>
<ohos.aafwk.ability.AbilitySlice: boolean onKeyUp(int,ohos.multimodalinput.event.KeyEvent)>
<ohos.agp.utils.Contour: void setContourEncompassRect(int,int,int,int,float)>
<ohos.media.codec.CodecDescriptionList: java.util.List findDecoder(ohos.media.common.Format)>
<java.util.Date: void setHours(int)>
<java.util.Locale: void <init>(java.lang.String,java.lang.String)>
<ohos.global.resource.Resource: int available()>
<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>
<ohos.agp.render.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>
<ohos.data.rdb.ValuesBucket: java.lang.Short getShort(java.lang.String)>
<java.security.spec.DSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>
<java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
<ohos.utils.PacMap: boolean marshalling(ohos.utils.Parcel)>
<ohos.data.rdb.RdbStore: java.util.List batchInsertOrThrowException(java.lang.String,java.util.List,ohos.data.rdb.RdbStore.ConflictResolution)>
<ohos.ai.asr.AsrClient: void init(ohos.ai.asr.AsrIntent,ohos.ai.asr.AsrListener)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParcelableArrayListParam(java.lang.String,java.util.ArrayList)>
<ohos.javax.xml.stream.events.EndElement: java.util.Iterator getNamespaces()>
<java.time.chrono.ChronoLocalDate: java.time.chrono.Era getEra()>
<ohos.telephony.RadioInfoManager: java.util.List getSignalInfoList(int)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query greaterThan(java.lang.String,double)>
<ohos.agp.components.Component: void setTop(int)>
<java.time.LocalDate: java.time.OffsetDateTime atTime(java.time.OffsetTime)>
<ohos.agp.render.opengl.GLES32: void glDisablei(int,int)>
<ohos.agp.render.Canvas.PorterDuffMode: int value()>
<java.time.YearMonth: int lengthOfYear()>
<ohos.agp.render.Vertices: int getColorOffset()>
<ohos.global.icu.text.CaseMap.Title: ohos.global.icu.text.CaseMap omitUnchangedText()>
<ohos.aafwk.ability.AbilityLifecycleExecutor: void <init>()>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: ohos.event.notification.NotificationRequest.NotificationPictureContent setText(java.lang.String)>
<ohos.utils.xml.XmlUtils: int getLineNumber(ohos.javax.xml.stream.XMLStreamReader)>
<java.text.ParseException: void <init>(java.lang.String,int)>
<ohos.agp.render.Paint: ohos.agp.render.Shader getShader()>
<ohos.app.Context: void terminateAbility()>
<ohos.global.icu.text.Collator: int getMaxVariable()>
<ohos.media.codec.CodecDescription: ohos.media.common.Format getSupportedFormat()>
<ohos.global.icu.text.UnicodeSet: int getRangeEnd(int)>
<java.security.cert.CertPathValidator: java.lang.String getDefaultType()>
<java.sql.DatabaseMetaData: boolean autoCommitFailureClosesAllResultSets()>
<java.net.NetworkInterface: java.lang.String toString()>
<java.util.concurrent.Semaphore: void <init>(int,boolean)>
<java.util.ArrayList: java.util.Spliterator spliterator()>
<ohos.agp.components.ScrollHelper: void abortAnimation()>
<ohos.agp.components.ComponentContainer.LayoutConfig: int[] getMarginsTopAndBottom()>
<java.sql.ResultSet: java.sql.SQLWarning getWarnings()>
<java.util.concurrent.atomic.DoubleAdder: double sum()>
<ohos.agp.components.Text: float getNumOfFontHeight()>
<java.nio.channels.NotYetBoundException: void <init>()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: boolean triggerClickEvent(ohos.aafwk.ability.Ability,ohos.agp.components.Component)>
<java.sql.SQLSyntaxErrorException: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform2f(int,int,float,float)>
<java.util.Spliterators.AbstractSpliterator: int characteristics()>
<java.security.KeyStore.PrivateKeyEntry: java.security.cert.Certificate getCertificate()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture whenComplete(java.util.function.BiConsumer)>
<ohos.agp.render.Paint: float getStrokeWidth()>
<java.net.URI: java.lang.String getPath()>
<ohos.agp.components.Component.ScrolledListener: void scrolledStageUpdate(ohos.agp.components.Component,int)>
<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>
<ohos.agp.components.Component: void enableFadeEffect(ohos.agp.components.Component.FadeEffectEnum)>
<java.util.ArrayDeque: java.lang.Object removeFirst()>
<ohos.data.usage.StatVfs: boolean isSupported()>
<ohos.sysappcomponents.contact.entity.Email: void <init>(java.lang.String,java.lang.String)>
<java.util.Collections: java.util.Set singleton(java.lang.Object)>
<ohos.agp.components.TimePicker: void setNormalTextFont(ohos.agp.text.Font)>
<java.util.prefs.AbstractPreferences: java.lang.String[] childrenNames()>
<java.time.ZonedDateTime: int getNano()>
<java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)>
<ohos.global.icu.text.MessageFormat.Field: void <clinit>()>
<java.sql.Connection: java.sql.SQLXML createSQLXML()>
<ohos.agp.components.AdaptiveBoxLayout: void addAdaptiveRule(int,int,int)>
<ohos.utils.geo.Rect: boolean isIntersect(ohos.utils.geo.Rect,ohos.utils.geo.Rect)>
<ohos.biometrics.authentication.BiometricAuthentication.SecureLevel: ohos.biometrics.authentication.BiometricAuthentication.SecureLevel valueOf(java.lang.String)>
<ohos.agp.components.webengine.WebView: void load(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<javax.lang.model.util.ElementFilter: java.util.Set fieldsIn(java.util.Set)>
<ohos.agp.components.Picker: void setNormalTextColor(ohos.agp.utils.Color)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>
<java.util.ArrayDeque: boolean add(java.lang.Object)>
<ohos.media.codec.Codec: boolean setProperty(ohos.media.common.Format)>
<ohos.utils.IntArray: int binarySearchInInsArray(int)>
<java.sql.ResultSet: void close()>
<ohos.data.resultset.TableResultSet: double getDouble(int)>
<java.util.concurrent.ForkJoinWorkerThread: void onTermination(java.lang.Throwable)>
<java.util.Observable: void addObserver(java.util.Observer)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putChar(char)>
<java.util.concurrent.FutureTask: void done()>
<java.time.zone.ZoneRules: java.util.List getTransitions()>
<java.time.MonthDay: boolean isSupported(java.time.temporal.TemporalField)>
<java.io.Reader: void mark(int)>
<ohos.sysappcomponents.calendar.entity.Accounts: java.lang.String getAccName()>
<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream,java.nio.charset.Charset)>
<ohos.utils.LightweightSet: int hashCode()>
<ohos.agp.components.TimePicker: java.lang.String getAmString()>
<ohos.telephony.TelephoneNumberUtils: void <init>()>
<ohos.agp.utils.Rect: ohos.agp.utils.Rect convertValueToRect(java.lang.String)>
<java.util.Set: boolean addAll(java.util.Collection)>
<ohos.agp.components.DirectionalLayout: int getAlignment()>
<ohos.agp.components.Attr: int getDimensionValue()>
<ohos.media.audio.AudioWaver: boolean setDataSize(int)>
<java.io.ObjectOutputStream: void <init>()>
<ohos.agp.render.opengl.GLES31: void glProgramUniform4uiv(int,int,int,int[])>
<ohos.agp.render.Canvas: void drawPath(ohos.agp.render.Path,ohos.agp.render.Paint)>
<java.lang.invoke.VolatileCallSite: void <init>(java.lang.invoke.MethodType)>
<java.nio.FloatBuffer: float get()>
<ohos.data.distributed.common.KvStore: void putByteArray(java.lang.String,byte[])>
<ohos.agp.render.render3d.components.LightComponent: void setColor(ohos.agp.render.render3d.math.Vector3)>
<ohos.agp.render.render3d.math.Matrix4x4: float get(int,int)>
<java.util.concurrent.ConcurrentLinkedDeque: java.util.Iterator descendingIterator()>
<ohos.data.distributed.file.DistLinkFile: boolean createNewFile()>
<ohos.global.icu.text.DateTimePatternGenerator: void setDecimal(java.lang.String)>
<ohos.agp.components.SearchBar: void setSubmitButton(ohos.media.image.PixelMap)>
<ohos.multimodalinput.event.MultimodalEvent: boolean isSameEvent(java.util.UUID)>
<ohos.miscservices.pasteboard.PasteData: ohos.miscservices.pasteboard.PasteData.Record getRecordAt(int)>
<java.lang.LinkageError: void <init>()>
<ohos.aafwk.ability.DataAbilityHelper: int delete(ohos.utils.net.Uri,ohos.data.dataability.DataAbilityPredicates)>
<java.nio.IntBuffer: boolean equals(java.lang.Object)>
<java.nio.file.Files: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path)>
<ohos.app.Context: java.io.File getCacheDir()>
<ohos.app.IAbilityManager: int getAppMemory()>
<java.lang.IllegalStateException: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<ohos.javax.xml.parsers.SAXParserFactory: ohos.javax.xml.parsers.SAXParser newSAXParser()>
<java.util.concurrent.atomic.AtomicMarkableReference: void <init>(java.lang.Object,boolean)>
<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>
<ohos.agp.window.dialog.ListDialog: ohos.agp.components.BaseItemProvider getProvider()>
<ohos.utils.CommonPattern: java.util.regex.Pattern getEmailAddress()>
<ohos.location.Location: void setSpeed(float)>
<ohos.event.commonevent.CommonEventSubscribeInfo.ThreadMode: ohos.event.commonevent.CommonEventSubscribeInfo.ThreadMode[] values()>
<java.time.OffsetDateTime: java.time.OffsetDateTime parse(java.lang.CharSequence)>
<java.util.SplittableRandom: long nextLong(long)>
<ohos.global.icu.util.Calendar: int computeZoneOffset(long,int)>
<java.security.cert.CertPath: boolean equals(java.lang.Object)>
<ohos.bluetooth.ble.BlePeripheralCallback: void <init>()>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate date(java.time.chrono.Era,int,int,int)>
<ohos.utils.Parcel: int getReadPosition()>
<java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<java.net.URLConnection: long getDate()>
<java.lang.Math: int addExact(int,int)>
<java.time.temporal.ValueRange: java.time.temporal.ValueRange of(long,long,long)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notIn(java.lang.String,int[])>
<java.text.DecimalFormatSymbols: int hashCode()>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitFloat(float,java.lang.Object)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class,java.lang.Class[])>
<ohos.utils.Parcel: boolean writePlainBooleanArray(ohos.utils.PlainBooleanArray)>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 divide(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<java.util.concurrent.ConcurrentNavigableMap: java.util.concurrent.ConcurrentNavigableMap subMap(java.lang.Object,java.lang.Object)>
<java.util.concurrent.Phaser: void forceTermination()>
<ohos.multimodalinput.event.EventCreator: java.util.Optional createKeyEvent(int,int)>
<ohos.sysappcomponents.contact.entity.Relation: void <init>(ohos.app.Context,java.lang.String,int)>
<java.util.Vector: void <init>(int)>
<ohos.agp.components.ComponentContainer.LayoutConfig: void <init>(int,int)>
<java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int)>
<ohos.app.Context: void setShowOnLockScreen(boolean)>
<ohos.global.icu.text.Collator: void setDecomposition(int)>
<javax.sql.RowSet: void setByte(java.lang.String,byte)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit)>
<ohos.account.OsAccount: void setType(ohos.account.OsAccountType)>
<java.sql.ResultSet: void updateLong(int,long)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThan(java.lang.String,float)>
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>
<ohos.agp.components.TabList.TabSelectedListener: void onReselected(ohos.agp.components.TabList.Tab)>
<ohos.data.distributed.file.DistFiles: ohos.data.distributed.file.DistLinkFile createLinkFile(java.lang.String,java.lang.String)>
<ohos.global.icu.util.Calendar: int computeJulianDay()>
<ohos.global.icu.util.ULocale: java.lang.String getISO3Language(java.lang.String)>
<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>
<java.util.TimeZone: java.lang.String getDisplayName(java.util.Locale)>
<java.util.concurrent.ConcurrentHashMap: void forEach(long,java.util.function.BiConsumer)>
<javax.tools.FileObject: boolean delete()>
<ohos.event.notification.NotificationActionButton.Builder: ohos.event.notification.NotificationActionButton.Builder setContextDependent(boolean)>
<java.io.PrintWriter: void println(char)>
<java.util.concurrent.BlockingDeque: java.lang.Object takeLast()>
<ohos.agp.components.Component.SpeechEventListener: boolean onSpeechEvent(ohos.agp.components.Component,ohos.multimodalinput.event.SpeechEvent)>
<java.io.ObjectOutputStream.PutField: void put(java.lang.String,char)>
<java.time.Year: java.time.Year now(java.time.Clock)>
<java.security.Security: java.util.Set getAlgorithms(java.lang.String)>
<ohos.sensor.agent.SensorAgent: long getSensorMinSampleInterval(int)>
<ohos.data.rdb.RdbStore: long count(ohos.data.rdb.AbsRdbPredicates)>
<ohos.bundleactive.BundleActiveStates.State: void <init>()>
<ohos.sysappcomponents.calendar.entity.Events: boolean hasAlarm()>
<java.security.cert.PKIXBuilderParameters: void <init>(java.util.Set,java.security.cert.CertSelector)>
<ohos.data.search.model.IndexForm: void setPrimaryKey(boolean)>
<ohos.agp.components.element.Element: boolean getVisible()>
<java.sql.Clob: int setString(long,java.lang.String)>
<ohos.batterymanager.BatteryInfo.BatteryPluggedType: void <clinit>()>
<java.net.HttpRetryException: void <init>(java.lang.String,int)>
<ohos.global.icu.text.NumberFormat: void setRoundingMode(int)>
<ohos.agp.render.render3d.math.Vector4: float distance(ohos.agp.render.render3d.math.Vector4,ohos.agp.render.render3d.math.Vector4)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean releaseShared(long)>
<java.security.MessageDigest: java.lang.String toString()>
<ohos.media.camera.device.FrameStateCallback: void onCaptureTriggerStarted(ohos.media.camera.device.Camera,int,long)>
<ohos.media.common.sessioncore.AVControllerCallback: void onAVSessionDestroyed()>
<ohos.global.icu.text.BidiClassifier: void setContext(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object poll()>
<java.util.concurrent.CyclicBarrier: void <init>(int)>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
<java.util.AbstractCollection: void <init>()>
<ohos.org.xml.sax.HandlerBase: void setDocumentLocator(ohos.org.xml.sax.Locator)>
<ohos.aafwk.ability.MemoryInfo: java.lang.String toString()>
<ohos.agp.render.Paint: void setPosition(ohos.agp.utils.Point)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()>
<java.nio.channels.SocketChannel: int read(java.nio.ByteBuffer)>
<java.util.HashMap: boolean isEmpty()>
<ohos.rpc.RemoteObjectCallbackList: java.lang.Object getRemoteObjectCallbackCookie(ohos.rpc.IRemoteObject)>
<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>
<java.security.cert.PKIXRevocationChecker.Option: java.security.cert.PKIXRevocationChecker.Option[] values()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenAccept(java.util.function.Consumer)>
<ohos.agp.components.element.PixelMapElement: ohos.media.image.PixelMap getPixelMap()>
<ohos.bundleactive.BundleActiveInfosMgr: ohos.bundleactive.BundleActiveInfosMgr newInstance(ohos.app.Context)>
<java.lang.Double: long doubleToRawLongBits(double)>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: ohos.event.notification.NotificationRequest.NotificationMediaContent setTitle(java.lang.String)>
<ohos.event.commonevent.MatchingSkills: void <init>(ohos.event.commonevent.MatchingSkills)>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getMonths()>
<ohos.net.LocalSocket: boolean isSocketConnected()>
<ohos.agp.components.Component: void onRtlChanged(ohos.agp.components.Component.LayoutDirection)>
<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>
<java.util.regex.Matcher: int end(java.lang.String)>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate dateEpochDay(long)>
<ohos.bluetooth.ble.GattDescriptor: int getPermissions()>
<ohos.multimodalinput.event.SpeechEvent: java.lang.String getActionProperty()>
<ohos.bundle.ShortcutIntent: void <init>()>
<ohos.bundle.IBundleManager: boolean getClearUserDataFlag(java.lang.String,java.lang.String)>
<java.lang.EnumConstantNotPresentException: java.lang.String constantName()>
<ohos.agp.colors.UserDefinedColor: ohos.agp.colors.UserDefinedColor assign(ohos.agp.colors.UserDefinedColor)>
<java.security.PKCS12Attribute: boolean equals(java.lang.Object)>
<ohos.agp.components.Rating: void setHalfFilledElement(ohos.agp.components.element.Element)>
<ohos.global.icu.util.Currency: java.lang.String getCurrencyCode()>
<java.sql.ResultSet: void updateObject(int,java.lang.Object)>
<java.time.LocalDate: boolean equals(java.lang.Object)>
<ohos.media.common.AVDescription: ohos.media.image.PixelMap getIcon()>
<ohos.agp.components.ScrollHelper: void doFlingY(int,int,int,int)>
<ohos.agp.components.Component: void setEstimatedSize(int,int)>
<ohos.sysappcomponents.calendar.entity.Instances: void setInstanceEndMinute(long)>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale[] getAvailableLocales()>
<java.util.concurrent.BlockingQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterEither(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.sysappcomponents.contact.entity.Contact: void addWebsite(ohos.sysappcomponents.contact.entity.Website)>
<ohos.nfc.oma.Aid: byte[] getAidBytes()>
<ohos.utils.zson.ZSONObject: ohos.utils.zson.ZSONObject stringToZSON(java.lang.String)>
<ohos.media.player.Player: boolean setAudioParamsInitialized()>
<ohos.telephony.GsmSignalInformation: int hashCode()>
<ohos.agp.components.webengine.WebConfig: int getSecurityMode()>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 divide(ohos.agp.render.render3d.math.Vector4,ohos.agp.render.render3d.math.Vector4)>
<java.time.YearMonth: boolean isBefore(java.time.YearMonth)>
<ohos.global.icu.util.VersionInfo: ohos.global.icu.util.VersionInfo getInstance(int,int,int)>
<ohos.agp.components.ScrollView: void fluentScrollBy(int,int)>
<ohos.utils.zson.ZSONReader: void close()>
<ohos.data.orm.OrmObjectObserver: void onChange(ohos.data.orm.OrmContext,ohos.data.orm.AllChangeToTarget)>
<java.security.KeyPairGenerator: java.lang.String getAlgorithm()>
<java.lang.SecurityManager: void checkMulticast(java.net.InetAddress)>
<java.util.TreeSet: boolean add(java.lang.Object)>
<ohos.agp.render.render3d.components.CameraComponent: void setRenderResolution(int,int)>
<java.util.Properties: void store(java.io.Writer,java.lang.String)>
<ohos.data.DatabaseHelper: void <init>(ohos.app.Context)>
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThan(java.lang.String,double)>
<ohos.agp.components.Component: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,int)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<ohos.global.icu.text.MeasureFormat: int hashCode()>
<java.time.Duration: java.time.temporal.Temporal subtractFrom(java.time.temporal.Temporal)>
<java.nio.file.SecureDirectoryStream: java.nio.file.SecureDirectoryStream newDirectoryStream(java.lang.Object,java.nio.file.LinkOption[])>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates or()>
<ohos.data.rdb.ValuesBucket: void putValues(ohos.data.rdb.ValuesBucket)>
<ohos.agp.components.Component: boolean requestFocus()>
<ohos.org.xml.sax.HandlerBase: void <init>()>
<java.util.Optional: java.util.Optional filter(java.util.function.Predicate)>
<ohos.agp.components.TickTimer: java.lang.String getFormat()>
<ohos.hiviewdfx.ResourceTag: void warnIfNeed()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getTimeInstance(int,ohos.global.icu.util.ULocale)>
<java.nio.charset.CharsetEncoder: java.nio.ByteBuffer encode(java.nio.CharBuffer)>
<java.sql.CallableStatement: void setClob(java.lang.String,java.io.Reader)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.Iterator descendingIterator()>
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters)>
<ohos.event.notification.NotificationHelper: ohos.event.notification.NotificationSortingMap getCurrentAppSorting()>
<java.util.concurrent.ForkJoinPool: int getParallelism()>
<ohos.agp.render.render3d.math.Quaternion: float getZ()>
<ohos.rpc.RemoteObject: int getCallingPid()>
<java.net.Proxy: java.lang.String toString()>
<java.util.UnknownFormatConversionException: void <init>(java.lang.String)>
<ohos.data.rdb.RdbFileLockedException: void <init>()>
<ohos.org.xml.sax.Parser: void setDocumentHandler(ohos.org.xml.sax.DocumentHandler)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream,int)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream of(double[])>
<ohos.global.icu.text.DecimalFormat: void setPadPosition(int)>
<ohos.media.codec.Codec: ohos.media.common.Format getBufferFormat(java.nio.ByteBuffer)>
<ohos.agp.render.opengl.GLES2Ext: void glBlendBarrierKHR()>
<ohos.data.search.schema.NotepadItem: java.util.List getNotepadSchema()>
<ohos.agp.render.Vertices: int getVertOffset()>
<ohos.global.icu.text.UnicodeSetIterator: void <init>(ohos.global.icu.text.UnicodeSet)>
<java.util.Properties: void <init>()>
<ohos.agp.components.Component: boolean canScroll(int)>
<ohos.agp.colors.CmykColor: ohos.agp.colors.CmykColor assign(ohos.agp.colors.CmykColor)>
<ohos.media.camera.params.FaceDetectionResult: int getState()>
<java.lang.Class: boolean isLocalClass()>
<java.util.Properties: void <init>(java.util.Properties)>
<java.time.MonthDay: java.time.Month getMonth()>
<ohos.app.Context: java.io.File getDatabaseDir()>
<ohos.agp.render.render3d.ViewHolder: void release()>
<java.lang.reflect.Method: int getParameterCount()>
<java.nio.file.Path: boolean startsWith(java.lang.String)>
<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>
<ohos.utils.LruBuffer: void updateCapacity(int)>
<ohos.net.DataFlowStatistics: void removeSocketTag(java.net.Socket)>
<java.io.File: int compareTo(java.lang.Object)>
<java.util.logging.LogManager: void removePropertyChangeListener(java.beans.PropertyChangeListener)>
<ohos.agp.render.opengl.GLES1X: void glOrthof(float,float,float,float,float,float)>
<ohos.data.async.DataAbilityAsyncHandler: void cancelJob(int)>
<ohos.agp.components.TimePicker: ohos.agp.text.Font getNormalTextFont()>
<ohos.global.icu.text.DecimalFormatSymbols: void setDecimalSeparatorString(java.lang.String)>
<ohos.agp.text.Layout: int getBottom(int)>
<ohos.global.icu.text.CaseMap: ohos.global.icu.text.CaseMap.Lower toLower()>
<ohos.aafwk.ability.AbilitySlice: void present(ohos.aafwk.ability.AbilitySlice,ohos.aafwk.content.Intent)>
<java.nio.IntBuffer: java.nio.IntBuffer get(int[],int,int)>
<java.nio.ByteBuffer: int arrayOffset()>
<java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<ohos.aafwk.ability.startsetting.AbilityStartSetting: boolean isEmpty()>
<ohos.javax.xml.stream.util.XMLEventAllocator: ohos.javax.xml.stream.events.XMLEvent allocate(ohos.javax.xml.stream.XMLStreamReader)>
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult flush(java.nio.ByteBuffer)>
<java.sql.ResultSet: void updateClob(int,java.sql.Clob)>
<ohos.miscservices.wallpaper.WallpaperColorsCollection: ohos.agp.colors.RgbColor next()>
<ohos.net.NetCapabilities: void <init>()>
<javax.net.ssl.SSLEngine: boolean getNeedClientAuth()>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: java.lang.String getTitle()>
<ohos.global.icu.text.DateFormat.Field: ohos.global.icu.text.DateFormat.Field ofCalendarField(int)>
<java.security.SignedObject: void <init>(java.io.Serializable,java.security.PrivateKey,java.security.Signature)>
<java.util.Arrays: int binarySearch(int[],int)>
<java.util.Calendar: long getTimeInMillis()>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.util.stream.Stream: java.util.stream.Stream sorted()>
<ohos.global.icu.util.Currency: java.lang.String[] getKeywordValuesForLocale(java.lang.String,ohos.global.icu.util.ULocale,boolean)>
<java.net.InetAddress: java.lang.String toString()>
<java.util.InvalidPropertiesFormatException: void <init>(java.lang.String)>
<ohos.app.Context: ohos.global.resource.solidxml.Theme getTheme()>
<ohos.data.search.schema.PhotoItem: java.lang.String getProvince()>
<ohos.sensor.agent.CategoryBodyAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback)>
<ohos.eventhandler.EventHandler: void postSyncTask(java.lang.Runnable,ohos.eventhandler.EventHandler.Priority)>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.text.RuleBasedCollator setMaxVariable(int)>
<java.util.zip.Inflater: void reset()>
<java.security.Identity: void removeCertificate(java.security.Certificate)>
<java.sql.DatabaseMetaData: java.lang.String getDatabaseProductName()>
<java.util.concurrent.DelayQueue: java.util.concurrent.Delayed peek()>
<ohos.agp.render.render3d.resources.MaterialDesc: void setBaseColorFactor(ohos.agp.render.render3d.math.Vector4)>
<java.util.concurrent.ExecutionException: void <init>()>
<java.nio.ByteBuffer: boolean isDirect()>
<java.util.MissingResourceException: java.lang.String getKey()>
<javax.net.ssl.SNIHostName: void <init>(byte[])>
<ohos.agp.render.render3d.gltf.GltfData: void releaseBuffers()>
<java.util.stream.DoubleStream: java.util.stream.BaseStream sequential()>
<ohos.media.player.Player: int getCurrentStream(int)>
<ohos.nfc.oma.SEService: ohos.nfc.oma.Reader[] getReaders()>
<java.security.cert.PKIXRevocationChecker: java.net.URI getOcspResponder()>
<javax.net.ssl.HandshakeCompletedListener: void handshakeCompleted(javax.net.ssl.HandshakeCompletedEvent)>
<ohos.agp.window.service.ComponentPadding: int getSystemComponentPaddingTop()>
<ohos.usb.USBDevicePipe: void <init>(ohos.usb.USBDevice)>
<java.util.TreeMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>
<ohos.media.image.DataSourceUnavailableException: void <init>(java.lang.String)>
<java.sql.SQLDataException: void <init>(java.lang.String,java.lang.String,int)>
<ohos.eventhandler.EventHandler: boolean hasInnerEvent(long)>
<ohos.agp.render.opengl.GLES30: void glGetUniformuiv(int,int,int[])>
<java.io.CharArrayWriter: char[] toCharArray()>
<java.security.Provider.Service: java.lang.Object newInstance(java.lang.Object)>
<ohos.global.icu.text.DateFormat.Field: void <clinit>()>
<java.sql.SQLDataException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<ohos.multimodalinput.event.ManipulationEvent: float getForce(int)>
<ohos.bundle.LauncherService.BundleStatusCallback: void onBundleRemoved(java.lang.String,int)>
<java.io.PipedReader: void <init>(int)>
<ohos.agp.render.PathMeasure: void setPath(ohos.agp.render.Path,boolean)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
<ohos.agp.render.Path: boolean isInverseFillType()>
<ohos.global.icu.text.UnicodeSet: int getRangeCount()>
<java.text.ParsePosition: int getIndex()>
<ohos.powermanager.PowerManager.RunningLock: void unLock()>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate now(java.time.Clock)>
<java.security.AlgorithmParameters: void init(byte[])>
<java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>
<ohos.aafwk.ability.continuation.ContinuationDeviceInfo: java.lang.String getDeviceId()>
<ohos.data.rdb.RdbMismatchException: void <init>()>
<ohos.javax.xml.validation.ValidatorHandler: ohos.org.xml.sax.ContentHandler getContentHandler()>
<ohos.media.common.sessioncore.AVQueueElement: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setMaterial(ohos.agp.render.render3d.resources.GpuResourceHandle)>
<javax.security.auth.Subject: java.lang.String toString()>
<ohos.global.config.ConfigType: void <clinit>()>
<ohos.sensor.bean.SensorBase: int getFlags()>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.Era getEra()>
<javax.crypto.spec.PBEKeySpec: void <init>(char[])>
<ohos.javax.xml.stream.Location: java.lang.String getSystemId()>
<ohos.utils.Parcel: int readInt()>
<ohos.aafwk.ability.AbilitySlice: void notifyInvisibleForms(java.util.List)>
<java.lang.StrictMath: double asin(double)>
<java.util.stream.LongStream: java.util.stream.LongStream empty()>
<ohos.sysappcomponents.contact.entity.Contact: void setContactAttributes(ohos.sysappcomponents.contact.ContactAttributes)>
<ohos.agp.components.Slider: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.app.ProcessInfo: void <init>()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.lang.String)>
<ohos.javax.xml.stream.XMLOutputFactory: boolean isPropertySupported(java.lang.String)>
<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)>
<ohos.agp.utils.Matrix: void <init>(float[])>
<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>
<ohos.agp.utils.Matrix: void <init>(ohos.agp.utils.Matrix)>
<ohos.media.camera.device.FrameConfig.Builder: int getFrameConfigType()>
<ohos.accessibility.AccessibilitySystemAbilityClient: ohos.accessibility.AccessibilitySystemAbilityClient getInstance(ohos.app.Context)>
<ohos.data.distributed.common.SecurityLevel: ohos.data.distributed.common.SecurityLevel[] values()>
<java.lang.Character: java.lang.String toString()>
<ohos.security.keystore.KeyGenAlgorithmParaSpec: int getSecKeyAuthDuration()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.media.camera.device.CameraDeviceCallback: void onFlashlightStatus(java.lang.String,int)>
<ohos.sysappcomponents.calendar.entity.Accounts: void setAccDisplayName(java.lang.String)>
<ohos.telephony.TelephoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>
<ohos.utils.BasePacMap: boolean equals(java.lang.Object)>
<java.util.Locale: java.lang.String getDisplayVariant()>
<ohos.ai.tts.TtsClient: ohos.ai.tts.TtsClient getInstance()>
<java.util.stream.IntStream: java.util.OptionalInt min()>
<java.io.StreamTokenizer: void ordinaryChar(int)>
<ohos.agp.components.Component: void removeBindStateChangedListener(ohos.agp.components.Component.BindStateChangedListener)>
<ohos.data.resultset.AbsResultSet: boolean goToFirstRow()>
<ohos.aafwk.ability.Ability: ohos.utils.PacMap call(java.lang.String,java.lang.String,ohos.utils.PacMap)>
<java.net.CookieHandler: java.util.Map get(java.net.URI,java.util.Map)>
<java.time.chrono.JapaneseDate: int hashCode()>
<java.util.StringTokenizer: void <init>(java.lang.String)>
<javax.sql.RowSet: java.lang.String getUsername()>
<ohos.global.icu.number.LocalizedNumberFormatter: boolean equals(java.lang.Object)>
<ohos.utils.zson.ZSONWriter: void startObject()>
<javax.crypto.Mac: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<ohos.global.icu.util.TimeZone: int hashCode()>
<java.io.File: boolean setReadable(boolean)>
<ohos.agp.components.Component: void setClipEnabled(boolean)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query endGroup()>
<ohos.utils.PacMap: long getLongValue(java.lang.String,long)>
<java.util.LinkedList: void <init>(java.util.Collection)>
<java.security.Signer: void <init>(java.lang.String)>
<ohos.agp.render.PixelMapHolder: ohos.media.image.PixelMap getPixelMap()>
<ohos.app.IAbilityManager: int getAppLargeMemory()>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 divide(ohos.agp.render.render3d.math.Vector2,float)>
<ohos.app.AbilityContext: java.lang.String getProcessName()>
<ohos.location.Locator: boolean registerSwitchCallback(ohos.location.SwitchCallback)>
<java.util.WeakHashMap: void putAll(java.util.Map)>
<ohos.sysappcomponents.contact.entity.Note: void setNoteContent(java.lang.String)>
<java.util.TreeMap: java.lang.Object higherKey(java.lang.Object)>
<ohos.distributedhardware.devicemanager.DeviceManager: int selectDeviceList(java.lang.String,java.util.Map,ohos.distributedhardware.devicemanager.SelectDeviceListListener)>
<ohos.agp.animation.AnimatorGroup: java.util.ArrayList getAnimatorsAt(int)>
<ohos.global.icu.text.DecimalFormatSymbols: void setCurrencySymbol(java.lang.String)>
<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
<java.util.concurrent.locks.ReentrantLock: void unlock()>
<ohos.agp.utils.RectFloat: void modify(float,float,float,float)>
<java.io.ObjectOutputStream: void annotateProxyClass(java.lang.Class)>
<java.lang.Character: int getType(int)>
<ohos.agp.render.render3d.math.Vector4: float lengthSquared(float,float,float,float)>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.math.Vector3 screenToWorld(ohos.agp.render.render3d.Entity,ohos.agp.render.render3d.math.Vector3)>
<java.util.AbstractMap.SimpleEntry: java.lang.Object getKey()>
<ohos.ai.nlu.ResponseResult: int getCode()>
<ohos.global.icu.text.CurrencyPluralInfo: int hashCode()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendZoneId()>
<java.io.File: long getUsableSpace()>
<ohos.media.image.common.Position: java.lang.String toString()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query isNull(java.lang.String)>
<java.sql.DatabaseMetaData: boolean supportsResultSetType(int)>
<java.util.Base64.Encoder: int encode(byte[],byte[])>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setRingDuration(long)>
<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>
<ohos.bundle.AbilityInfo: java.lang.String getProcess()>
<ohos.media.audio.SoundPlayer.SoundPlayerParameters: int getLoop()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,boolean[])>
<javax.net.ssl.SSLEngineResult.HandshakeStatus: javax.net.ssl.SSLEngineResult.HandshakeStatus[] values()>
<java.net.IDN: java.lang.String toASCII(java.lang.String)>
<java.io.DataOutputStream: void writeFloat(float)>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat increase(float,float)>
<java.time.LocalDate: java.time.LocalDate withDayOfYear(int)>
<javax.lang.model.util.ElementKindVisitor8: void <init>()>
<ohos.agp.render.render3d.components.SceneComponent: void setEnvironmentSpecularIntensity(float)>
<java.lang.ClassLoader: java.lang.ClassLoader getParent()>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,float)>
<ohos.media.tubecore.AVTubeManager: java.util.Optional getTubeByIndex(int)>
<ohos.nfc.tag.TagManager: int getMaxSendLength()>
<ohos.agp.render.PdfDisplay: void close()>
<ohos.agp.render.Path: ohos.agp.utils.RectFloat computeTightBounds()>
<ohos.agp.utils.Matrix44: void setRotateDegreesAbout(float,float,float,float)>
<java.nio.file.attribute.PosixFilePermissions: java.util.Set fromString(java.lang.String)>
<java.nio.file.FileSystem: boolean isReadOnly()>
<ohos.agp.render.Paint: boolean isFakeBoldText()>
<java.util.logging.Formatter: java.lang.String format(java.util.logging.LogRecord)>
<ohos.global.icu.text.SearchIterator: java.lang.String getMatchedText()>
<java.time.LocalDate: java.time.LocalDate now()>
<java.util.concurrent.ConcurrentNavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>
<ohos.global.icu.text.DecimalFormat: ohos.global.icu.util.CurrencyAmount parseCurrency(java.lang.CharSequence,java.text.ParsePosition)>
<ohos.media.audio.SoundEffect: boolean getActivated()>
<java.util.concurrent.CopyOnWriteArrayList: void forEach(java.util.function.Consumer)>
<ohos.bundle.HapModuleInfo: java.lang.String getDescription()>
<ohos.javax.xml.stream.XMLStreamWriter: void flush()>
<java.util.TreeSet: java.lang.Object ceiling(java.lang.Object)>
<java.util.zip.Deflater: int getTotalOut()>
<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>
<java.time.DayOfWeek: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.tools.ByTrace: void startTrace(java.lang.String,float)>
<java.time.MonthDay: long getLong(java.time.temporal.TemporalField)>
<java.security.cert.CertPathBuilderSpi: java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)>
<ohos.interwork.bundle.ElementNameEx: void marshallingEx(ohos.utils.Parcel)>
<ohos.agp.render.opengl.GLES30: void glCopyBufferSubData(int,int,int,int,int)>
<java.util.Deque: boolean remove(java.lang.Object)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoEra getEra()>
<java.util.ResourceBundle.Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>
<java.lang.Class: java.lang.Object[] getSigners()>
<ohos.agp.components.Component.LayoutDirection: ohos.agp.components.Component.LayoutDirection[] values()>
<java.text.DecimalFormatSymbols: void setZeroDigit(char)>
<javax.sql.RowSet: void setClob(int,java.io.Reader)>
<ohos.utils.LightweightSet: java.util.Iterator iterator()>
<java.nio.channels.CancelledKeyException: void <init>()>
<java.util.concurrent.atomic.AtomicLongArray: long updateAndGet(int,java.util.function.LongUnaryOperator)>
<java.util.stream.IntStream: void forEachOrdered(java.util.function.IntConsumer)>
<ohos.agp.render.render3d.components.NodeComponent: void setEnabled(boolean)>
<ohos.global.icu.text.ConstrainedFieldPosition: void <init>()>
<java.lang.String: java.lang.String toLowerCase()>
<java.util.Arrays: void parallelSort(char[])>
<java.time.ZonedDateTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<ohos.global.icu.text.AlphabeticIndex: java.util.List getBucketLabels()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)>
<ohos.agp.components.Component: void setScrolledListener(ohos.agp.components.Component.ScrolledListener)>
<ohos.sysappcomponents.calendar.entity.Events: void setRecurRule(java.lang.String)>
<java.lang.String: int indexOf(int)>
<ohos.javax.xml.stream.events.XMLEvent: boolean isCharacters()>
<ohos.agp.render.PdfGenerator.PdfPage: ohos.agp.render.PdfGenerator.PageInfo getPageInfo()>
<ohos.agp.render.render3d.math.Vector2: void <clinit>()>
<ohos.agp.render.render3d.math.Quaternion: float getW()>
<java.text.BreakIterator: int preceding(int)>
<java.io.Reader: boolean markSupported()>
<java.sql.SQLTimeoutException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setIntentAgent(ohos.event.intentagent.IntentAgent)>
<java.time.LocalDateTime: java.time.LocalDateTime minusSeconds(long)>
<ohos.agp.text.Layout: int getBeginCharIndex(int)>
<ohos.data.rdb.RawRdbPredicates: void <init>(java.lang.String,java.lang.String,java.lang.String[])>
<java.sql.PreparedStatement: void setObject(int,java.lang.Object,int,int)>
<ohos.agp.components.DirectionalLayout: float getTotalWeight()>
<ohos.agp.render.Texture: int getWidth()>
<java.security.cert.PKIXParameters: void setSigProvider(java.lang.String)>
<ohos.media.sessioncore.AVController.PlayControls: void playPrevious()>
<java.net.Inet6Address: boolean isAnyLocalAddress()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet add(java.lang.CharSequence)>
<javax.net.ssl.SSLParameters: boolean getUseCipherSuitesOrder()>
<ohos.agp.render.opengl.GLES31: void glVertexBindingDivisor(int,int)>
<java.util.concurrent.DelayQueue: java.util.concurrent.Delayed poll()>
<ohos.sensor.agent.CategoryEnvironmentAgent: void <init>()>
<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>
<ohos.data.resultset.SharedBlock: void clear()>
<java.security.cert.X509CRLEntry: java.lang.String toString()>
<ohos.agp.components.TableLayout: ohos.agp.components.TableLayout.Specification specification(float)>
<ohos.multimodalinput.event.ManipulationEvent: long getStartTime()>
<javax.lang.model.element.UnknownElementException: void <init>(javax.lang.model.element.Element,java.lang.Object)>
<ohos.global.resource.solidxml.Theme: float getFloatValue(java.lang.String,float)>
<ohos.agp.components.TableLayout: ohos.agp.components.TableLayout.Specification specification(int)>
<ohos.data.orm.OrmContext: boolean backup(java.lang.String)>
<java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<ohos.data.orm.Clob: long length()>
<ohos.data.resultset.TableResultSet: short getShort(int)>
<ohos.hiviewdfx.Debug.IpcType: void <clinit>()>
<java.util.TreeSet: java.util.NavigableSet descendingSet()>
<java.nio.Buffer: java.lang.Object array()>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getSentenceInstance()>
<ohos.utils.BasePacMap: java.lang.ClassLoader getClassLoader()>
<java.nio.channels.GatheringByteChannel: long write(java.nio.ByteBuffer[],int,int)>
<javax.lang.model.util.SimpleAnnotationValueVisitor7: void <init>()>
<ohos.data.orm.OrmContext: java.lang.Double max(ohos.data.orm.OrmPredicates,java.lang.String)>
<ohos.global.icu.text.NumberFormat: java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition)>
<java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)>
<ohos.net.http.SslError: int getCriticalError()>
<java.security.MessageDigest: java.lang.String getAlgorithm()>
<java.time.temporal.ChronoUnit: boolean isDurationEstimated()>
<java.time.LocalDateTime: int getSecond()>
<ohos.global.icu.lang.UCharacter: java.lang.String getName(int)>
<java.time.Clock: void <init>()>
<java.util.Arrays: boolean[] copyOfRange(boolean[],int,int)>
<ohos.org.w3c.dom.ls.LSInput: void setCharacterStream(java.io.Reader)>
<ohos.sysappcomponents.calendar.CalendarDataHelper: boolean insert(ohos.data.rdb.ValuesBucket)>
<ohos.utils.Scope: ohos.utils.Scope intersect(java.lang.Comparable,java.lang.Comparable)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty setDelay(long)>
<ohos.bundle.CommonEventInfo: void <clinit>()>
<java.util.concurrent.ConcurrentSkipListSet: java.lang.Object first()>
<ohos.agp.render.render3d.Engine: boolean update()>
<ohos.utils.PlainArray: java.util.Optional get(int)>
<ohos.agp.components.IndexBar: void setIndexRadius(float)>
<ohos.hiviewdfx.HiLog: int warn(ohos.hiviewdfx.HiLogLabel,java.lang.String,java.lang.Object[])>
<java.io.DataInputStream: boolean readBoolean()>
<ohos.agp.components.Text: ohos.agp.components.element.Element[] getAroundElements()>
<ohos.location.GeoAddress: void setLocality(java.lang.String)>
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getY()>
<ohos.app.Context: int getDisplayOrientation()>
<ohos.agp.render.opengl.GLES2Ext: void glEnableiEXT(int,int)>
<ohos.data.DatabaseHelper: boolean deleteRdbStore(java.lang.String)>
<java.sql.ResultSet: void updateBytes(java.lang.String,byte[])>
<ohos.agp.components.Rating: void setRatingItems(int)>
<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>
<ohos.agp.utils.Matrix: float getTranslateX()>
<ohos.media.audio.AudioDeviceDescriptor: void setSamplingRates(int[])>
<java.time.ZoneOffset: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<java.security.MessageDigestSpi: void <init>()>
<java.time.zone.ZoneOffsetTransition: boolean isGap()>
<java.lang.Runtime: void runFinalization()>
<ohos.bundle.BundleInfo: int getMinSdkVersion()>
<ohos.security.permission.NeedsPermission: java.lang.String value()>
<ohos.sensor.common.SensorUtils: int parseSensorType(int)>
<java.util.LinkedList: boolean offerFirst(java.lang.Object)>
<java.io.RandomAccessFile: void writeBoolean(boolean)>
<java.lang.Character: boolean isUnicodeIdentifierPart(char)>
<ohos.data.distributed.file.DistFiles: boolean copy(ohos.data.distributed.file.DistFile,ohos.data.distributed.file.DistFile)>
<ohos.global.icu.util.TimeZone: java.lang.String getDisplayName(ohos.global.icu.util.ULocale)>
<ohos.agp.components.Text: void setAutoScrollingDuration(long)>
<java.security.SignatureException: void <init>()>
<java.time.Instant: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<java.nio.channels.SocketChannel: boolean isConnectionPending()>
<ohos.data.distributed.common.Value: double getDouble()>
<ohos.global.resource.LocaleFallBackException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.Vector: java.lang.Object elementAt(int)>
<java.nio.channels.AsynchronousFileChannel: long size()>
<java.util.concurrent.ExecutorService: java.lang.Object invokeAny(java.util.Collection)>
<java.time.ZoneOffset: java.time.ZoneOffset ofHours(int)>
<ohos.event.notification.NotificationRequest: boolean isShowStopwatch()>
<ohos.agp.components.element.FrameAnimationElement: void start()>
<ohos.agp.render.opengl.GLES20: void glStencilFunc(int,int,int)>
<ohos.global.icu.text.CaseMap.Title: ohos.global.icu.text.CaseMap.Title noBreakAdjustment()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: void <init>(java.util.concurrent.locks.AbstractQueuedSynchronizer)>
<ohos.agp.render.opengl.EGLSurface: int hashCode()>
<java.sql.CallableStatement: void setBinaryStream(java.lang.String,java.io.InputStream,long)>
<java.net.Socket: void <init>(java.lang.String,int,boolean)>
<ohos.agp.components.webengine.WebAgent: void onPageLoaded(ohos.agp.components.webengine.WebView,java.lang.String)>
<ohos.global.icu.util.DateInterval: long getToDate()>
<java.util.StringJoiner: int length()>
<ohos.location.Location: ohos.utils.PacMap getAdditions()>
<ohos.media.sessioncore.AVSession: boolean setAVSessionAbility(ohos.event.intentagent.IntentAgent)>
<ohos.agp.components.PageFlipper: void setIncomingAnimation(ohos.agp.animation.AnimatorProperty)>
<java.time.Year: int get(java.time.temporal.TemporalField)>
<java.security.cert.X509CertSelector: void setSubject(java.lang.String)>
<ohos.media.sessioncore.AVSession: void sendAVSessionEvent(java.lang.String,ohos.utils.PacMap)>
<ohos.global.icu.util.TimeZone: boolean observesDaylightTime()>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitWildcard(javax.lang.model.type.WildcardType,java.lang.Object)>
<java.sql.ResultSet: void updateBinaryStream(java.lang.String,java.io.InputStream,int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThanOrEqualTo(java.lang.String,int)>
<java.lang.reflect.Executable: java.lang.reflect.Type[] getGenericParameterTypes()>
<ohos.global.icu.text.SelectFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.thermallistener.ThermalConnection.ThermalSeverityLevel: ohos.thermallistener.ThermalConnection.ThermalSeverityLevel valueOf(java.lang.String)>
<java.text.NumberFormat: boolean isParseIntegerOnly()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setGroupAlertType(int)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.components.Component getTarget()>
<ohos.global.icu.text.DateFormatSymbols: void setNarrowEras(java.lang.String[])>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void invokeAbilityOnActive(ohos.aafwk.ability.Ability)>
<java.util.Map: void replaceAll(java.util.function.BiFunction)>
<ohos.ai.cv.text.TextConfiguration.TextShape: void <clinit>()>
<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object[])>
<java.util.Date: int hashCode()>
<java.util.Observable: void setChanged()>
<ohos.wifi.p2p.WifiP2pDevice: int getConnState()>
<ohos.aafwk.ability.ProviderFormInfo: ohos.agp.components.ComponentProvider getComponentProvider()>
<ohos.media.audio.AudioManager: void setAudioDeviceChangeObserver(ohos.media.audio.AudioDeviceChangeObserver)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet applyPattern(java.lang.String,int)>
<java.io.LineNumberReader: int getLineNumber()>
<ohos.utils.geo.Rect: void <init>()>
<javax.sql.RowSet: void setTimestamp(java.lang.String,java.sql.Timestamp)>
<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode getPolicyTree()>
<ohos.location.RequestParam: int getScenario()>
<ohos.data.search.schema.EmailItem: void <init>()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: java.util.Optional waitAbilityMonitor(ohos.aafwk.ability.delegation.IAbilityMonitor,long)>
<ohos.account.AccountAbility: java.util.List getOsAccountAllConstraints(int)>
<ohos.global.icu.math.BigDecimal: boolean equals(java.lang.Object)>
<ohos.agp.components.PageSlider: void setProvider(ohos.agp.components.PageSliderProvider)>
<ohos.agp.utils.Matrix: void setTranslateY(float)>
<ohos.sensor.bean.CategoryLight: void <init>(int,java.lang.String,java.lang.String,int,float,float,int,int,long,long)>
<java.net.URLConnection: long getHeaderFieldLong(java.lang.String,long)>
<ohos.agp.render.Paint: ohos.agp.utils.Color getColor()>
<ohos.global.icu.text.DecimalFormat: int getGroupingSize()>
<ohos.bundle.ApplicationInfo: java.lang.String getProcess()>
<java.util.stream.IntStream: int sum()>
<java.util.zip.InflaterInputStream: void fill()>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.lang.Character: boolean isHighSurrogate(char)>
<java.util.function.ToLongBiFunction: long applyAsLong(java.lang.Object,java.lang.Object)>
<java.net.URLConnection: java.lang.String getDefaultRequestProperty(java.lang.String)>
<ohos.hiviewdfx.HiTraceId: boolean isValid()>
<ohos.bluetooth.BluetoothHost: boolean cancelBtDiscovery()>
<java.nio.file.spi.FileTypeDetector: java.lang.String probeContentType(java.nio.file.Path)>
<ohos.rpc.MessageParcel: ohos.rpc.MessageParcel create(long)>
<java.util.concurrent.ArrayBlockingQueue: java.util.Iterator iterator()>
<java.util.stream.LongStream: java.util.stream.LongStream sorted()>
<ohos.agp.render.opengl.GLES30: void glUniformBlockBinding(int,int,int)>
<ohos.global.icu.text.NumberFormat: void setMaximumFractionDigits(int)>
<javax.sql.PooledConnection: void addConnectionEventListener(javax.sql.ConnectionEventListener)>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle unreflectSpecial(java.lang.reflect.Method,java.lang.Class)>
<java.util.concurrent.atomic.AtomicLongArray: boolean weakCompareAndSet(int,long,long)>
<ohos.sysappcomponents.contact.entity.Name: java.lang.String getNamePrefix()>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion normalize(float,float,float,float)>
<java.util.Hashtable: boolean containsValue(java.lang.Object)>
<ohos.aafwk.ability.ProfileMissingConfigException: void <init>(java.lang.String)>
<ohos.bundle.IBundleManager: boolean isShortcutExist(java.lang.String)>
<ohos.ai.cv.docrefine.DocCoordinates: java.util.ArrayList toArrayList(ohos.ai.cv.docrefine.DocCoordinates)>
<java.lang.Character: boolean isISOControl(int)>
<ohos.agp.render.render3d.Engine: void setDefaultTargetBuffers(ohos.agp.render.render3d.TargetBuffer[])>
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.security.Provider)>
<java.text.DecimalFormat: java.text.DecimalFormatSymbols getDecimalFormatSymbols()>
<java.time.OffsetDateTime: java.time.OffsetDateTime minus(long,java.time.temporal.TemporalUnit)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate dateNow(java.time.ZoneId)>
<java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<ohos.agp.components.DatePicker: ohos.agp.text.Font getNormalTextFont()>
<javax.lang.model.util.TypeKindVisitor8: void <init>()>
<java.util.logging.Level: java.util.logging.Level parse(java.lang.String)>
<ohos.agp.render.Paint: boolean isAntiAlias()>
<ohos.data.search.schema.PlaceItem: ohos.data.search.schema.PlaceItem setDistrict(java.lang.String)>
<ohos.data.rdb.StoreConfig.Builder: ohos.data.rdb.StoreConfig build()>
<ohos.media.audio.AudioCapturerInfo: long getBufferSizeInBytes()>
<java.security.Policy: void <clinit>()>
<ohos.sysappcomponents.calendar.entity.Accounts: void setAccColour(int)>
<java.util.AbstractMap: void clear()>
<ohos.bundle.ApplicationInfo: java.util.List getModuleSourceDirs()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThan(java.lang.String,java.sql.Timestamp)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long addAndGet(java.lang.Object,long)>
<java.time.Period: java.time.Period minusDays(long)>
<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>
<ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime: boolean nextPosition(ohos.global.icu.text.ConstrainedFieldPosition)>
<ohos.utils.geo.Point: java.lang.String toString()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage handleAsync(java.util.function.BiFunction,java.util.concurrent.Executor)>
<java.util.prefs.AbstractPreferences: java.lang.String toString()>
<java.util.IdentityHashMap: java.util.Set entrySet()>
<java.lang.SecurityManager: void checkSecurityAccess(java.lang.String)>
<java.net.URLConnection: boolean getDefaultAllowUserInteraction()>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object defaultAction(java.lang.Object,java.lang.Object)>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.util.Measure parseObject(java.lang.String,java.text.ParsePosition)>
<ohos.global.icu.util.Calendar: int millisToJulianDay(long)>
<ohos.global.icu.text.RelativeDateTimeFormatter.Style: ohos.global.icu.text.RelativeDateTimeFormatter.Style valueOf(java.lang.String)>
<ohos.agp.components.TimePicker: void setSelectedTextSize(int)>
<java.sql.CallableStatement: short getShort(java.lang.String)>
<ohos.security.seckeychain.SecKeyChain: java.security.cert.X509Certificate[] getSecCertificateChain(ohos.app.AbilityContext,java.lang.String)>
<java.util.Map.Entry: java.lang.Object getValue()>
<ohos.agp.utils.RectFloat: float getHeight()>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withResolverFields(java.time.temporal.TemporalField[])>
<java.security.cert.X509CertSelector: void setCertificateValid(java.util.Date)>
<ohos.agp.render.opengl.GLES1X: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<ohos.eventhandler.EventHandler: void postTimingTask(java.lang.Runnable,long,ohos.eventhandler.EventHandler.Priority)>
<ohos.agp.components.element.FrameAnimationElement: int getPreDecodeFrames()>
<java.text.NumberFormat.Field: void <init>(java.lang.String)>
<ohos.agp.render.opengl.EGL: boolean eglBindAPI(int)>
<java.util.concurrent.SynchronousQueue: java.util.Spliterator spliterator()>
<ohos.agp.render.render3d.components.RenderMeshComponent: ohos.agp.render.render3d.resources.ResourceHandle getMaterial()>
<ohos.aafwk.ability.MemoryInfo: int getArkPss()>
<ohos.data.search.model.Recommendation: void setIndexDataList(java.util.List)>
<java.lang.Object: void wait(long)>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 multiply(ohos.agp.render.render3d.math.Vector4,ohos.agp.render.render3d.math.Vector4)>
<ohos.agp.render.opengl.GLES1X: void glColorPointer(int,int,int,java.nio.Buffer)>
<ohos.interwork.utils.PacMapEx: void unmarshallingEx(ohos.utils.Parcel)>
<java.util.zip.Inflater: long getBytesWritten()>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectOutput(java.lang.ProcessBuilder.Redirect)>
<java.nio.CharBuffer: int length()>
<ohos.global.icu.util.MeasureUnit: java.lang.String toString()>
<java.lang.ref.Reference: java.lang.Object get()>
<ohos.agp.render.render3d.resources.ResourceManager.ResourceInfo: java.lang.String getUri()>
<java.util.stream.LongStream: boolean allMatch(java.util.function.LongPredicate)>
<ohos.media.tubecore.AVTubeManager.TubeObserver: void onTubeEnterWorkingState(ohos.media.tubecore.AVTubeManager,ohos.media.tubecore.AVTube,int)>
<java.util.concurrent.ForkJoinTask: void reinitialize()>
<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>
<java.nio.file.attribute.BasicFileAttributes: boolean isRegularFile()>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLSession getHandshakeSession()>
<ohos.media.common.sessioncore.AVPlaybackState: ohos.utils.PacMap getOptions()>
<java.util.BitSet: void <init>(int)>
<java.util.Arrays: java.util.Spliterator spliterator(java.lang.Object[])>
<java.sql.SQLClientInfoException: java.util.Map getFailedProperties()>
<java.util.concurrent.RecursiveAction: boolean exec()>
<java.lang.System: long nanoTime()>
<ohos.global.icu.text.DecimalFormat: void setMaximumSignificantDigits(int)>
<java.net.ServerSocket: void <init>(int,int)>
<java.util.Arrays: long[] copyOfRange(long[],int,int)>
<ohos.agp.utils.Circle: double getArea()>
<java.nio.ReadOnlyBufferException: void <init>()>
<ohos.global.icu.util.ChineseCalendar: void <init>(int,int,int,int,int,int,int)>
<ohos.sysappcomponents.contact.entity.Event: void <init>(ohos.app.Context,java.lang.String,int)>
<ohos.data.preferences.Preferences: boolean hasKey(java.lang.String)>
<ohos.app.Context: void switchToCredentialEncryptedStorageContext()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notBetween(java.lang.String,java.sql.Time,java.sql.Time)>
<ohos.accessibility.ability.AccessibleAbility: java.util.Optional gainFocus(int)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform2uiv(int,int,int,int[])>
<ohos.ai.cv.common.CvRect: void <init>(int,int,int,int)>
<ohos.agp.components.ListContainer: void setScrollListener(ohos.agp.components.ListContainer.ScrollListener)>
<ohos.os.ProcessManager: boolean is64Bit()>
<java.sql.ResultSet: void updateNClob(int,java.sql.NClob)>
<javax.crypto.ExemptionMechanism: java.security.Provider getProvider()>
<ohos.sysappcomponents.calendar.entity.Instances: long getInstanceStartMinute()>
<ohos.global.icu.util.JapaneseCalendar: int handleGetLimit(int,int)>
<java.sql.Array: java.lang.Object getArray()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setElementName(java.lang.String,java.lang.String,java.lang.String)>
<java.lang.Short: short parseShort(java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glHint(int,int)>
<java.lang.Exception: void <init>(java.lang.String)>
<ohos.data.rdb.RdbUtils: void verifySql(ohos.data.rdb.RdbStore,java.lang.String)>
<java.sql.SQLTransactionRollbackException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.io.UncheckedIOException: java.io.IOException getCause()>
<ohos.data.rdb.Statement: long executeAndGetLong()>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLResolver getXMLResolver()>
<java.io.IOException: void <init>()>
<java.sql.SQLOutput: void writeLong(long)>
<java.util.function.IntUnaryOperator: int applyAsInt(int)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setBigIcon(ohos.media.image.PixelMap)>
<ohos.utils.BasePacMap: double getDoubleValue(java.lang.String)>
<java.net.CacheResponse: java.util.Map getHeaders()>
<java.util.stream.DoubleStream: double[] toArray()>
<ohos.app.AbilityContext: void <init>(ohos.app.Context)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setReflectance(float)>
<ohos.event.notification.NotificationUserInput: java.util.List getOptions()>
<ohos.media.audio.AudioCapturerInfo.Builder: ohos.media.audio.AudioCapturerInfo.Builder sessionID(int)>
<ohos.utils.IntArray: void swap(ohos.utils.IntArray)>
<java.text.ChoiceFormat: void <init>(double[],java.lang.String[])>
<java.sql.SQLNonTransientException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.stream.IntStream: java.util.stream.IntStream of(int[])>
<ohos.bluetooth.ble.BleCentralManagerCallback: void scanResultEvent(ohos.bluetooth.ble.BleScanResult)>
<ohos.agp.colors.RgbColor: void setRed(int)>
<ohos.media.audio.AudioStreamInfo.Builder: ohos.media.audio.AudioStreamInfo.Builder audioStreamFlag(ohos.media.audio.AudioStreamInfo.AudioStreamFlag)>
<java.util.prefs.AbstractPreferences: void exportNode(java.io.OutputStream)>
<ohos.agp.components.DatePicker: void setOperatedTextBackground(ohos.agp.components.element.Element)>
<ohos.media.common.StorageProperty.Builder: ohos.media.common.StorageProperty.Builder setRecorderMaxDurationMs(int)>
<ohos.systemrestore.ISystemRestoreProgressListener: void onProgressChanged(int)>
<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>
<ohos.agp.render.render3d.math.Vector2: void <init>(float[],int)>
<javax.sql.RowSet: void setByte(int,byte)>
<ohos.agp.components.SearchBar: void activateSubmitButton(boolean)>
<ohos.eventhandler.Courier: int hashCode()>
<ohos.global.icu.text.AlphabeticIndex: int getMaxLabelCount()>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoZonedDateTime withZoneSameInstant(java.time.ZoneId)>
<ohos.global.icu.util.RangeValueIterator: boolean next(ohos.global.icu.util.RangeValueIterator.Element)>
<ohos.security.keystore.KeyStoreProtectionParameter.Builder: ohos.security.keystore.KeyStoreProtectionParameter createCustomProtection()>
<ohos.ai.cv.text.TextLine: void setCornerPoints(ohos.ai.cv.common.CvPoint[])>
<java.util.stream.Collectors: java.util.stream.Collector reducing(java.lang.Object,java.util.function.BinaryOperator)>
<java.util.StringTokenizer: java.lang.String nextToken(java.lang.String)>
<ohos.media.audio.AudioRenderer.PlayMode: int getModeValue()>
<ohos.agp.render.opengl.EGL: void <init>()>
<java.nio.file.attribute.UserPrincipalNotFoundException: java.lang.String getName()>
<ohos.wifi.p2p.WifiP2pCallback: void eventExecOk()>
<ohos.ace.ability.AceAbility: void pushPage(java.lang.String,ohos.aafwk.content.IntentParams)>
<ohos.agp.render.layoutboost.LayoutBoost: ohos.agp.components.Component inflate(ohos.app.Context,int,ohos.agp.components.ComponentContainer,boolean)>
<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater,boolean)>
<java.time.ZonedDateTime: java.time.ZonedDateTime plusHours(long)>
<javax.net.ssl.KeyManagerFactorySpi: javax.net.ssl.KeyManager[] engineGetKeyManagers()>
<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>
<ohos.media.audio.AudioRenderer.ChannelVolume: void <init>(float,float)>
<ohos.event.notification.NotificationRequest: boolean isInProgress()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayKeywordValue(java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat copy(float,float)>
<java.util.concurrent.TimeUnit: long toNanos(long)>
<ohos.wifi.WifiLinkedInfo: java.lang.String getMacAddress()>
<ohos.data.resultset.AbsResultSet: boolean isStarted()>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.text.MeasureFormat getInstance(ohos.global.icu.util.ULocale,ohos.global.icu.text.MeasureFormat.FormatWidth)>
<java.security.Timestamp: void <init>(java.util.Date,java.security.cert.CertPath)>
<ohos.agp.components.Component: void setScaledListener(ohos.agp.components.Component.ScaledListener)>
<ohos.data.search.schema.DocumentItem: ohos.data.search.schema.DocumentItem setPath(java.lang.String)>
<ohos.utils.ObjectAttribute: java.lang.String getName()>
<java.security.AccessControlException: java.security.Permission getPermission()>
<ohos.agp.render.opengl.GLES30: void glSamplerParameterf(int,int,float)>
<java.nio.channels.AsynchronousSocketChannel: void read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)>
<javax.net.ssl.SSLParameters: boolean getNeedClientAuth()>
<java.nio.file.spi.FileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI)>
<java.util.Locale: java.util.List filterTags(java.util.List,java.util.Collection)>
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>
<java.time.LocalDateTime: java.time.ZonedDateTime atZone(java.time.ZoneId)>
<javax.net.ssl.SNIMatcher: boolean matches(javax.net.ssl.SNIServerName)>
<java.util.logging.ConsoleHandler: void <init>()>
<java.time.Instant: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.net.Inet4Address: boolean isMCGlobal()>
<ohos.global.icu.text.DecimalFormat: void setMinimumSignificantDigits(int)>
<ohos.media.common.Source: int getRecorderAudioSource()>
<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>
<java.time.OffsetDateTime: int getYear()>
<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>
<java.text.CharacterIterator: int getIndex()>
<java.time.chrono.ChronoZonedDateTime: long toEpochSecond()>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate dateNow(java.time.ZoneId)>
<java.io.LineNumberInputStream: int available()>
<java.lang.StrictMath: double pow(double,double)>
<ohos.agp.render.render3d.components.SceneComponent: void setEnvMap(ohos.agp.render.render3d.resources.GpuResourceHandle)>
<ohos.agp.render.Vertices: void <init>(int,float[],int,float[],int,int[],int,short[],int,int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,double)>
<ohos.media.image.common.Rect: java.lang.String toString()>
<ohos.ai.asr.AsrIntent.AsrAudioSrcType: ohos.ai.asr.AsrIntent.AsrAudioSrcType[] values()>
<ohos.telephony.RadioInfoManager: java.lang.String getImei(int)>
<ohos.javax.xml.stream.EventFilter: boolean accept(ohos.javax.xml.stream.events.XMLEvent)>
<ohos.utils.Parcel: ohos.utils.PlainBooleanArray readPlainBooleanArray()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getExclusiveQueuedThreads()>
<javax.crypto.spec.PBEParameterSpec: int getIterationCount()>
<ohos.global.icu.util.Calendar: void set(int,int,int,int,int,int)>
<java.io.StringWriter: void write(java.lang.String)>
<java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<ohos.batterymanager.BatteryInfo.BatteryPluggedType: ohos.batterymanager.BatteryInfo.BatteryPluggedType[] values()>
<ohos.telephony.ShortMessage: byte[] getUserRawData()>
<java.time.LocalDate: java.time.LocalDate parse(java.lang.CharSequence)>
<ohos.agp.window.service.Display: java.lang.String getDisplayName()>
<ohos.global.icu.lang.UCharacter: boolean isUnicodeIdentifierPart(int)>
<ohos.data.resultset.AbsSharedResultSet: void <init>(java.lang.String)>
<java.sql.DatabaseMetaData: boolean nullsAreSortedHigh()>
<ohos.global.resource.RawFileEntry: void <init>()>
<ohos.bluetooth.HandsFreeAudioGateway: boolean closeVoiceRecognition(ohos.bluetooth.BluetoothRemoteDevice)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates offset(int)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.IntentParams getParam(java.lang.String)>
<java.util.prefs.AbstractPreferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>
<ohos.org.xml.sax.ErrorHandler: void error(ohos.org.xml.sax.SAXParseException)>
<ohos.global.icu.lang.UCharacter: boolean isSpaceChar(int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates between(java.lang.String,double,double)>
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.security.Provider)>
<java.beans.PropertyChangeEvent: java.lang.Object getPropagationId()>
<java.io.PrintStream: void <init>(java.lang.String)>
<ohos.agp.components.PageSliderIndicator: void setHeight(int)>
<java.sql.ResultSet: int getInt(java.lang.String)>
<java.util.ResourceBundle.Control: java.util.ResourceBundle.Control getNoFallbackControl(java.util.List)>
<java.util.GregorianCalendar: int getGreatestMinimum(int)>
<ohos.global.icu.text.MessagePattern.Part: ohos.global.icu.text.MessagePattern.ArgType getArgType()>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(java.nio.DoubleBuffer)>
<ohos.event.commonevent.AsyncCommonEventResult: void finishCommonEvent()>
<ohos.bundle.AbilityInfo: int getMinFormWidth()>
<ohos.sensor.data.CategoryEnvironmentData: float getDeviceAltitude(float)>
<ohos.miscservices.inputmethod.RichContent: void <clinit>()>
<java.nio.charset.CoderResult: boolean isUnderflow()>
<ohos.utils.geo.Rect: void <clinit>()>
<java.util.concurrent.ThreadLocalRandom: int nextInt(int,int)>
<ohos.javax.xml.parsers.FactoryConfigurationError: java.lang.Exception getException()>
<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.lang.String)>
<java.util.stream.Stream: void forEachOrdered(java.util.function.Consumer)>
<java.lang.Double: int hashCode()>
<ohos.sysappcomponents.contact.entity.SipAddress: void <init>(java.lang.String,java.lang.String)>
<ohos.distributedhardware.devicemanager.SelectDeviceListListener: void onGetDeviceList(java.util.List,int)>
<ohos.data.DatabaseFileType: ohos.data.DatabaseFileType[] values()>
<ohos.agp.components.Attr: boolean getBoolValue()>
<java.security.Timestamp: java.util.Date getTimestamp()>
<java.io.CharArrayWriter: java.lang.Appendable append(java.lang.CharSequence)>
<ohos.agp.components.TabList: int getTabCount()>
<java.lang.NullPointerException: void <init>(java.lang.String)>
<ohos.accessibility.AccessibilityEventInfo: java.lang.CharSequence getDescription()>
<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum)>
<ohos.utils.Parcel: java.util.List readSequenceableList(java.lang.Class)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>
<ohos.system.OsHelper: ohos.system.FileStat getFileStatus(java.lang.String)>
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPublicExponent()>
<java.lang.Enum: java.lang.String toString()>
<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>
<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>
<ohos.agp.render.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,float[])>
<ohos.global.icu.text.SearchIterator.ElementComparisonType: ohos.global.icu.text.SearchIterator.ElementComparisonType[] values()>
<ohos.media.audio.SoundPlayer: int createSound(ohos.app.Context,int)>
<ohos.media.image.PixelMap: boolean isReleased()>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.security.Provider)>
<java.util.WeakHashMap: void <init>(int,float)>
<ohos.agp.components.webengine.ScaleController: void setTextScale(int)>
<ohos.nfc.cardemulation.CardEmulation: boolean unregisterForegroundPreferred(ohos.aafwk.ability.Ability)>
<java.net.Inet4Address: boolean isMCSiteLocal()>
<ohos.global.icu.text.Collator: java.lang.String getDisplayName(ohos.global.icu.util.ULocale,ohos.global.icu.util.ULocale)>
<ohos.global.icu.text.RuleBasedCollator: void setCaseLevelDefault()>
<java.nio.file.attribute.AclEntry.Builder: java.nio.file.attribute.AclEntry.Builder setFlags(java.nio.file.attribute.AclEntryFlag[])>
<ohos.utils.PlainIntArray: int indexOfKey(int)>
<ohos.agp.components.element.ElementContainer.ElementState: int getChildElementCount()>
<ohos.global.icu.util.ULocale: java.lang.String getCountry()>
<java.security.Security: java.security.Provider getProvider(java.lang.String)>
<java.util.concurrent.CopyOnWriteArraySet: boolean retainAll(java.util.Collection)>
<java.io.RandomAccessFile: void write(byte[])>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.text.Collator setMaxVariable(int)>
<ohos.miscservices.timeutility.Timer.RepeatTimer: void start(int,long,long)>
<ohos.light.agent.LightAgent: boolean turnOn(int,java.lang.String)>
<java.util.concurrent.atomic.AtomicReferenceArray: boolean weakCompareAndSet(int,java.lang.Object,java.lang.Object)>
<ohos.multimodalinput.standard.KeyEventHandle: boolean onKey(ohos.multimodalinput.event.KeyEvent)>
<ohos.global.icu.lang.UCharacter: boolean isMirrored(int)>
<java.util.concurrent.locks.Condition: void signalAll()>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitEnumConstant(javax.lang.model.element.VariableElement,java.lang.Object)>
<ohos.agp.window.dialog.ListDialog: int getComponentLocation(ohos.agp.components.Component)>
<java.lang.StrictMath: double sqrt(double)>
<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String getBaseSkeleton(java.lang.String)>
<java.nio.charset.CharsetDecoder: java.lang.String replacement()>
<ohos.agp.components.webengine.BrowserAgent: boolean onJsTextInput(ohos.agp.components.webengine.WebView,java.lang.String,java.lang.String,java.lang.String,ohos.agp.components.webengine.JsTextInputResult)>
<ohos.global.icu.text.UnicodeSet: java.lang.Object cloneAsThawed()>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty moveFromY(float)>
<ohos.ace.ability.AceInternalAbility.AceInternalAbilityHandler: boolean onRemoteRequest(int,ohos.rpc.MessageParcel,ohos.rpc.MessageParcel,ohos.rpc.MessageOption)>
<java.time.LocalDateTime: java.lang.String format(java.time.format.DateTimeFormatter)>
<ohos.ai.tts.TtsListener: void onSpeechProgressChanged(java.lang.String,int)>
<ohos.agp.window.dialog.ListDialog: void setBackColor(int)>
<ohos.event.notification.NotificationRequest.NotificationContent: void <init>(ohos.event.notification.NotificationRequest.NotificationNormalContent)>
<ohos.agp.components.RecycleItemProvider: int getCacheSize()>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onStartDrag(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.data.distributed.user.SingleKvStore: void setSyncParam(int)>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.utils.Line: void setEndPointX(float)>
<ohos.global.icu.text.MessageFormat: void <init>(java.lang.String,ohos.global.icu.util.ULocale)>
<java.sql.SQLOutput: void writeBigDecimal(java.math.BigDecimal)>
<javax.net.ssl.SSLPermission: void <init>(java.lang.String)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void invokeAbilityOnInactive(ohos.aafwk.ability.Ability)>
<ohos.bundle.AbilityInfo: java.lang.String getURI()>
<java.time.Instant: java.time.Instant ofEpochMilli(long)>
<java.nio.charset.CharsetEncoder: void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)>
<ohos.media.photokit.metadata.AVMetadataHelper: ohos.media.image.PixelMap fetchVideoPixelMapByTime(long,int)>
<ohos.utils.IntervalTimer: void <init>(long,long)>
<java.io.DataOutputStream: void writeDouble(double)>
<java.util.Stack: int search(java.lang.Object)>
<ohos.ai.cv.text.TextConfiguration: int getDetectType()>
<java.security.Signature: void initVerify(java.security.cert.Certificate)>
<ohos.telephony.SimInfoManager: java.lang.String getSimSpn(int)>
<ohos.global.icu.math.MathContext: int getDigits()>
<ohos.agp.render.render3d.Engine: void renderFrame(ohos.agp.render.render3d.Engine.RenderNodeGraph)>
<ohos.account.AccountAbility: boolean isMultiOSAccountEnable()>
<ohos.biometrics.authentication.BiometricAuthentication.SystemAuthDialogInfo: void <init>()>
<ohos.aafwk.ability.Ability.WindowAttributeHelper: ohos.aafwk.ability.Ability.WindowAttributeHelper setBottomPadding(int)>
<ohos.agp.components.DatePicker: void setMaxDate(long)>
<ohos.aafwk.ability.Ability: void onCastTempForm(long)>
<ohos.media.audio.SoundPlayer.AudioVolumes: float getRearRightVolume()>
<java.security.KeyManagementException: void <init>(java.lang.String)>
<java.util.concurrent.Executors: java.util.concurrent.Callable callable(java.lang.Runnable,java.lang.Object)>
<java.math.BigDecimal: void <init>(long,java.math.MathContext)>
<java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<java.util.Collection: boolean isEmpty()>
<ohos.agp.render.PdfGenerator.PageInfo: int getPageWidth()>
<ohos.aafwk.ability.AbilitySlice: java.util.List getAllFormsInfo()>
<ohos.media.audio.AudioDeviceDescriptor.DeviceFlag: ohos.media.audio.AudioDeviceDescriptor.DeviceFlag valueOf(java.lang.String)>
<javax.security.auth.Subject: void setReadOnly()>
<ohos.global.icu.text.SelectFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<ohos.agp.components.Component: void setHorizontalPadding(int,int)>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setRelativeTextSize(float)>
<java.io.PipedInputStream: int read(byte[],int,int)>
<ohos.agp.utils.Rect.RotationEnum: int getValue()>
<javax.crypto.Mac: byte[] doFinal(byte[])>
<java.util.Deque: boolean add(java.lang.Object)>
<java.nio.ShortBuffer: java.nio.ShortBuffer asReadOnlyBuffer()>
<ohos.agp.window.dialog.IDialog.ItemClickedListener: void onClick(ohos.agp.window.dialog.IDialog,int)>
<java.util.Scanner: java.lang.String next(java.lang.String)>
<javax.net.ssl.SNIHostName: java.lang.String toString()>
<ohos.bluetooth.ble.GattService: java.util.List getIncludedServices()>
<ohos.agp.graphics.TextureHolder: boolean getMatrixForTransform(float[])>
<java.security.KeyStoreSpi: java.security.cert.Certificate engineGetCertificate(java.lang.String)>
<java.util.GregorianCalendar: void <init>(int,int,int)>
<ohos.global.icu.text.CollationElementIterator: void setText(java.text.CharacterIterator)>
<java.sql.CallableStatement: java.net.URL getURL(int)>
<ohos.agp.render.opengl.GLES20: void glUniform3f(int,float,float,float)>
<ohos.data.search.schema.MusicItem: void <init>()>
<ohos.telephony.SimInfoManager: java.lang.String getSimGid1(int)>
<ohos.agp.components.Component: void setContentEnable(boolean)>
<java.util.Observable: void clearChanged()>
<ohos.agp.components.ComponentProvider.ComponentProviderException: void <init>(java.lang.String)>
<java.util.concurrent.atomic.AtomicLongArray: long accumulateAndGet(int,long,java.util.function.LongBinaryOperator)>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitChar(char,java.lang.Object)>
<ohos.location.RequestParam: float getMaxAccuracy()>
<ohos.utils.PacMap: boolean[] getBooleanValueArray(java.lang.String)>
<java.net.InetAddress: boolean isReachable(java.net.NetworkInterface,int,int)>
<java.lang.SecurityException: void <init>(java.lang.Throwable)>
<java.security.Provider.Service: java.lang.String getAlgorithm()>
<javax.crypto.Cipher: int update(byte[],int,int,byte[])>
<ohos.agp.render.opengl.GLES1X: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<java.math.BigDecimal: void <init>(double,java.math.MathContext)>
<ohos.event.notification.NotificationSlot: boolean canEnableLight()>
<javax.net.ssl.SSLSessionContext: void setSessionCacheSize(int)>
<ohos.global.icu.util.VersionInfo: java.lang.String toString()>
<ohos.agp.components.TimePicker: boolean isHourShown()>
<ohos.agp.render.render3d.resources.AnimationPlayback: void setRepeatCount(int)>
<ohos.usb.USBDevice: int getProductId()>
<ohos.media.camera.params.Face: ohos.media.camera.params.FaceLandmark[] getLandmarks()>
<java.net.DatagramSocket: void setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory)>
<java.text.MessageFormat: java.lang.Object clone()>
<java.io.SequenceInputStream: void close()>
<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>
<ohos.data.distributed.common.KvStoreErrorCode: void <clinit>()>
<ohos.sysappcomponents.calendar.entity.Accounts: int getAccColour()>
<ohos.agp.render.PathEffect.Style: int value()>
<java.util.concurrent.CountedCompleter: java.util.concurrent.CountedCompleter getRoot()>
<ohos.global.icu.text.UCharacterIterator: void setToStart()>
<java.util.Properties: void save(java.io.OutputStream,java.lang.String)>
<ohos.agp.components.TabList: void setOrientation(int)>
<ohos.agp.components.TableLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateInstance()>
<java.util.regex.Matcher: int regionStart()>
<ohos.ai.cv.text.TextConfiguration.Builder: ohos.ai.cv.text.TextConfiguration.Builder setTrackingRelease(int)>
<ohos.ai.cv.docrefine.DocCoordinates: void <init>(ohos.ai.cv.common.CvPoint,ohos.ai.cv.common.CvPoint,ohos.ai.cv.common.CvPoint,ohos.ai.cv.common.CvPoint)>
<java.time.ZonedDateTime: java.time.chrono.ChronoZonedDateTime withEarlierOffsetAtOverlap()>
<ohos.sysappcomponents.contact.entity.Contact: void addEmail(ohos.sysappcomponents.contact.entity.Email)>
<ohos.agp.database.DataSetPublisher: void <init>()>
<java.net.MulticastSocket: void setInterface(java.net.InetAddress)>
<ohos.media.image.ImageSource.DecodeEventListener: void onDecodeEvent(ohos.media.image.ImageSource,ohos.media.image.common.DecodeEvent)>
<java.time.LocalDate: java.time.LocalDateTime atTime(int,int,int)>
<javax.sql.RowSetMetaData: void setSchemaName(int,java.lang.String)>
<ohos.agp.components.Text: ohos.agp.components.element.Element getCursorElement()>
<java.util.zip.ZipEntry: byte[] getExtra()>
<java.util.ArrayList: boolean retainAll(java.util.Collection)>
<ohos.media.audio.AudioStreamInfo.StreamUsage: ohos.media.audio.AudioStreamInfo.StreamUsage getEnum(int)>
<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>
<ohos.hiviewdfx.HiChecker: java.util.EnumSet removeCheckFileReadRule()>
<java.text.Collator: void <init>()>
<java.net.DatagramSocket: java.net.InetAddress getInetAddress()>
<java.util.concurrent.LinkedTransferQueue: void put(java.lang.Object)>
<java.nio.channels.AsynchronousSocketChannel: java.util.concurrent.Future read(java.nio.ByteBuffer)>
<ohos.agp.utils.Point: int getPointYToInt()>
<ohos.javax.xml.stream.XMLEventWriter: void setNamespaceContext(ohos.javax.xml.namespace.NamespaceContext)>
<ohos.event.notification.NotificationUserInput: int getInputsSource(ohos.aafwk.content.Intent)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<ohos.data.search.schema.NotepadItem: ohos.data.search.schema.NotepadItem setNotepadCategory(java.lang.String)>
<ohos.agp.render.opengl.GLES20: boolean glIsShader(int)>
<ohos.media.audio.SoundPlayer: boolean setOnCreateCompleteListener(ohos.media.audio.SoundPlayer.OnCreateCompleteListener,boolean)>
<java.util.Spliterator.OfLong: boolean tryAdvance(java.lang.Object)>
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object peek()>
<java.util.stream.Collectors: java.util.stream.Collector averagingDouble(java.util.function.ToDoubleFunction)>
<ohos.media.photokit.support.FetchResult: java.lang.Object getFirstObject()>
<javax.tools.Diagnostic: long getStartPosition()>
<java.lang.StringBuilder: java.lang.StringBuilder append(double)>
<ohos.agp.colors.HsvColor: ohos.agp.colors.HsvColor assign(ohos.agp.colors.HsvColor)>
<ohos.hiviewdfx.Debug: int getProcessSwappedOutPss(ohos.hiviewdfx.Debug.MemType)>
<java.nio.channels.ConnectionPendingException: void <init>()>
<ohos.ai.tts.TtsClient: void create(ohos.app.Context,ohos.ai.tts.TtsListener)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValueReduced(java.time.temporal.TemporalField,int,int,int)>
<java.security.cert.CertStore: java.util.Collection getCertificates(java.security.cert.CertSelector)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult flush(java.nio.CharBuffer)>
<ohos.miscservices.download.DownloadSession.DownloadInfo: java.lang.String getTitle()>
<java.nio.ShortBuffer: boolean equals(java.lang.Object)>
<ohos.agp.components.ComponentContainer.LayoutConfig: int getHorizontalEndMargin()>
<ohos.agp.render.opengl.GLES32: void glMinSampleShading(float)>
<java.time.temporal.WeekFields: void <clinit>()>
<javax.sql.RowSet: void setNString(java.lang.String,java.lang.String)>
<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.lang.Class: java.lang.String toString()>
<ohos.app.Context: int[] getIntArray(int)>
<ohos.global.icu.text.DecimalFormat: void setGroupingSize(int)>
<java.time.OffsetDateTime: java.time.OffsetDateTime withMonth(int)>
<ohos.agp.utils.Point: void <init>()>
<java.util.Locale: java.util.Locale lookup(java.util.List,java.util.Collection)>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.AlphabeticIndex.ImmutableIndex buildImmutableIndex()>
<ohos.media.audio.SoundPlayer: boolean pause()>
<java.net.Socket: void setSoTimeout(int)>
<ohos.global.icu.text.ConstrainedFieldPosition: void setState(java.text.Format.Field,java.lang.Object,int,int)>
<ohos.global.icu.text.PluralFormat: java.lang.String toPattern()>
<ohos.media.camera.device.Camera: void release()>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDate dateNow(java.time.ZoneId)>
<ohos.agp.utils.Line: void set(ohos.agp.utils.Point,ohos.agp.utils.Point)>
<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.AbstractSelector openSelector()>
<java.time.LocalTime: java.lang.String toString()>
<ohos.global.icu.util.HebrewCalendar: void add(int,int)>
<ohos.event.notification.NotificationSlot: void setSound(ohos.utils.net.Uri)>
<java.lang.Character: boolean isSpaceChar(char)>
<java.io.RandomAccessFile: void seek(long)>
<java.util.logging.Logger: void setParent(java.util.logging.Logger)>
<ohos.event.intentagent.IntentAgent: void <clinit>()>
<ohos.global.icu.text.MessageFormat: ohos.global.icu.util.ULocale getULocale()>
<java.util.stream.DoubleStream: boolean noneMatch(java.util.function.DoublePredicate)>
<java.util.Calendar: void set(int,int,int)>
<java.time.OffsetTime: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>
<ohos.event.notification.NotificationRequest: void <init>(int)>
<ohos.sysappcomponents.contact.entity.Relation: void <clinit>()>
<java.sql.ResultSet: void updateClob(java.lang.String,java.io.Reader)>
<ohos.agp.render.render3d.systems.MorphingSystem: void setTargetNames(long,java.lang.String[])>
<java.util.Scanner: byte nextByte()>
<ohos.bluetooth.ble.GattCharacteristic: java.util.List getDescriptors()>
<ohos.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>
<java.io.BufferedInputStream: boolean markSupported()>
<java.security.SignatureSpi: void engineInitVerify(java.security.PublicKey)>
<ohos.agp.render.render3d.math.Quaternion: float getLengthSquared()>
<ohos.agp.render.Shader: void setShaderMatrix(ohos.agp.utils.Matrix)>
<java.time.LocalTime: int getSecond()>
<ohos.org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.window.service.DisplayNotch: int getPaddingTop()>
<java.lang.reflect.Field: char getChar(java.lang.Object)>
<java.util.concurrent.BlockingDeque: boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<java.lang.reflect.Parameter: java.lang.reflect.Executable getDeclaringExecutable()>
<java.util.function.IntConsumer: void accept(int)>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: void setNormals(java.nio.FloatBuffer)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenAcceptBothAsync(java.util.concurrent.CompletionStage,java.util.function.BiConsumer,java.util.concurrent.Executor)>
<ohos.agp.render.opengl.GLES1X: void glDepthMask(boolean)>
<ohos.media.image.ImageSource: void setMemoryUsagePreference(ohos.media.image.common.MemoryUsagePreference)>
<ohos.utils.zson.ZSONReader: boolean hasNext()>
<ohos.agp.render.render3d.math.Vector4: void <init>(float[],int)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query inString(java.lang.String,java.util.List)>
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor: void afterExecute(java.lang.Runnable,java.lang.Throwable)>
<ohos.bundle.IBundleManager: int finishBackupSession(int)>
<ohos.media.camera.params.ParametersResult: java.util.List getAvailableResultKeys()>
<java.security.spec.PSSParameterSpec: void <init>(int)>
<java.nio.charset.Charset: int hashCode()>
<java.lang.String: java.lang.String trim()>
<java.nio.file.attribute.FileTime: java.time.Instant toInstant()>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onNext(ohos.multimodalinput.event.MultimodalEvent)>
<java.util.Formatter: void close()>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat multiplicationAll(float)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: int getSliceStackSize(ohos.aafwk.ability.Ability)>
<ohos.aafwk.ability.IntentAbility: void onCommand(ohos.aafwk.content.Intent,boolean,int)>
<java.nio.file.Files: java.nio.file.Path setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>
<ohos.agp.components.TimePicker: ohos.agp.utils.Color getNormalTextColor()>
<ohos.eventhandler.InnerEvent: ohos.eventhandler.InnerEvent get(int,long,java.lang.Object)>
<ohos.utils.LongPlainArray: int locate(long)>
<java.util.Hashtable: java.lang.Object clone()>
<ohos.sysappcomponents.calendar.entity.Accounts: boolean isVisible()>
<ohos.wifi.p2p.WifiP2pLinkedInfo: void <init>()>
<java.sql.ResultSetMetaData: boolean isDefinitelyWritable(int)>
<ohos.sysappcomponents.settings.SystemSettings: java.lang.String getValue(ohos.aafwk.ability.DataAbilityHelper,java.lang.String)>
<ohos.agp.render.opengl.GLES2Ext: void glBlendEquationiEXT(int,int)>
<ohos.global.icu.text.Normalizer2: ohos.global.icu.text.Normalizer2 getNFKDInstance()>
<ohos.agp.render.opengl.GLES31: void glDeleteProgramPipelines(int,int[])>
<ohos.agp.render.PathEffect.Style: ohos.agp.render.PathEffect.Style valueOf(java.lang.String)>
<ohos.media.image.PixelMap: void readPixels(java.nio.Buffer)>
<java.util.stream.StreamSupport: java.util.stream.DoubleStream doubleStream(java.util.Spliterator.OfDouble,boolean)>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle unreflectConstructor(java.lang.reflect.Constructor)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,long)>
<ohos.global.icu.text.CurrencyPluralInfo: void <init>(java.util.Locale)>
<ohos.aafwk.content.Intent: java.lang.String getUriString()>
<java.security.cert.PolicyNode: java.lang.String getValidPolicy()>
<ohos.data.distributed.common.KvStore: void putInt(java.lang.String,int)>
<java.io.PrintWriter: void println(int)>
<ohos.net.NetManager: boolean addNetStatusCallback(ohos.net.NetSpecifier,ohos.net.NetStatusCallback)>
<java.lang.Double: double longBitsToDouble(long)>
<java.util.TreeMap: java.lang.Object clone()>
<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>
<ohos.utils.zson.ZSONReader: void read(java.lang.Object)>
<ohos.hiviewdfx.Debug: int getProcessPrivateClean(ohos.hiviewdfx.Debug.MemType)>
<ohos.agp.render.Paint: void setMultipleLine(boolean)>
<ohos.agp.render.opengl.GLES20: void glStencilMask(int)>
<java.util.DoubleSummaryStatistics: double getMax()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenRun(java.lang.Runnable)>
<java.awt.font.NumericShaper: java.lang.String toString()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query lessThan(java.lang.String,long)>
<ohos.agp.text.Layout: float getTextWidth(int)>
<java.util.LinkedHashMap: void <init>()>
<java.util.PrimitiveIterator.OfInt: void forEachRemaining(java.lang.Object)>
<ohos.media.audio.AudioCapturer: int getCapturerSessionId()>
<ohos.hiviewdfx.xcollie.XCollie: int setTimeout(java.lang.String,int,java.lang.Runnable,long)>
<javax.lang.model.util.ElementScanner6: java.lang.Object scan(javax.lang.model.element.Element,java.lang.Object)>
<ohos.utils.PlainBooleanArray: void put(int,boolean)>
<ohos.data.resultset.CombinedResultSet: int getInt(int)>
<ohos.global.icu.util.IllformedLocaleException: void <init>(java.lang.String)>
<java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)>
<ohos.utils.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>
<javax.sql.RowSet: void setCommand(java.lang.String)>
<ohos.event.intentagent.IntentAgentHelper: void cancel(ohos.event.intentagent.IntentAgent)>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String,java.lang.String)>
<ohos.media.audio.SoundEffect: boolean release()>
<java.security.IdentityScope: void <init>()>
<ohos.utils.Ashmem: void <init>(long)>
<ohos.agp.utils.RectFloat: void setPivotYCoordinate(float)>
<java.util.function.ObjIntConsumer: void accept(java.lang.Object,int)>
<ohos.agp.components.ListContainer.ReboundEffectParams: void <init>(int,float,int)>
<java.sql.DatabaseMetaData: java.lang.String getStringFunctions()>
<javax.sql.RowSet: void setString(java.lang.String,java.lang.String)>
<ohos.agp.render.Paint: void <init>(ohos.agp.render.Paint)>
<ohos.global.icu.text.DateIntervalFormat.FormattedDateInterval: char charAt(int)>
<java.text.Bidi: boolean isMixed()>
<ohos.data.rdb.RdbOpenCallback: void <init>()>
<ohos.accessibility.ability.AccessibilityInfo: boolean isPluralLineSupported()>
<ohos.agp.render.opengl.GLES20: void glBlendFunc(int,int)>
<java.text.Collator: int hashCode()>
<ohos.app.Context: java.lang.String getLocalClassName()>
<java.util.Deque: java.lang.Object removeFirst()>
<ohos.javax.xml.stream.XMLStreamException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.BitSet: int previousSetBit(int)>
<ohos.global.icu.util.HebrewCalendar: void <init>(ohos.global.icu.util.TimeZone)>
<javax.lang.model.element.ExecutableElement: javax.lang.model.element.AnnotationValue getDefaultValue()>
<ohos.data.rdb.RdbStore: int update(ohos.data.rdb.ValuesBucket,ohos.data.rdb.AbsRdbPredicates)>
<javax.net.ssl.KeyStoreBuilderParameters: void <init>(java.util.List)>
<ohos.agp.components.VelocityDetector: void clear()>
<java.lang.Math: double hypot(double,double)>
<javax.net.ssl.SSLSession: long getCreationTime()>
<ohos.agp.render.opengl.GLES1X: void glTranslatef(float,float,float)>
<java.nio.DoubleBuffer: java.lang.Object array()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates leftOuterJoin(java.lang.String)>
<java.util.SortedMap: java.util.Set entrySet()>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: java.nio.FloatBuffer getPositions()>
<ohos.agp.text.SimpleTextLayout: float calculateTextWidth(java.lang.String,ohos.agp.render.Paint)>
<java.nio.channels.SocketChannel: java.nio.channels.NetworkChannel bind(java.net.SocketAddress)>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo.Builder setAbilityInfo(int,java.lang.String,java.lang.String)>
<java.net.MalformedURLException: void <init>()>
<javax.lang.model.element.UnknownAnnotationValueException: javax.lang.model.element.AnnotationValue getUnknownAnnotationValue()>
<ohos.data.distributed.common.KvStoreType: ohos.data.distributed.common.KvStoreType valueOf(java.lang.String)>
<ohos.accessibility.ability.DisplayResizeController: float getScale()>
<ohos.utils.Parcel: boolean setSize(int)>
<ohos.agp.components.webengine.WebConfig: void setDataAbilityPermit(boolean)>
<ohos.agp.render.render3d.math.Matrix4x4: java.lang.String toString()>
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(long)>
<ohos.utils.geo.RectFloat: void <init>(float,float,float,float)>
<java.time.Period: int hashCode()>
<ohos.utils.system.SystemCapability.UserIAM: void <init>()>
<ohos.global.icu.text.SelectFormat: void <init>(java.lang.String)>
<ohos.utils.geo.Rect: void setPivotYCoordinate(int)>
<ohos.data.distributed.file.DistAgentFile: boolean createNewFile()>
<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>
<ohos.global.resource.Entry: java.lang.String getPath()>
<ohos.security.asset.AssetResult: int getResultCode()>
<ohos.agp.components.Component: ohos.agp.components.Component.KeyEventListener getKeyEventListener()>
<ohos.media.codec.TrackInfo: java.util.HashMap getUnsupportedTracksInfoMap()>
<java.time.LocalDateTime: java.time.LocalDateTime plus(long,java.time.temporal.TemporalUnit)>
<java.nio.charset.CharsetDecoder: float maxCharsPerByte()>
<ohos.aafwk.ability.Ability: void startAbilityForResult(ohos.aafwk.content.Intent,int)>
<java.net.InetAddress: java.net.InetAddress getLoopbackAddress()>
<ohos.miscservices.inputmethodability.KeyboardDelegate: void onTextChanged(int,ohos.miscservices.inputmethod.EditingText)>
<ohos.wifi.p2p.WifiP2pDevice: java.lang.String getDeviceName()>
<ohos.agp.utils.Line: void setStartPoint(ohos.agp.utils.Point)>
<java.security.KeyStore.PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>
<ohos.data.distributed.common.KvStoreResultSet: boolean skipRow(int)>
<java.time.LocalDateTime: java.time.chrono.ChronoLocalDateTime minus(long,java.time.temporal.TemporalUnit)>
<java.time.chrono.ChronoPeriod: java.time.chrono.Chronology getChronology()>
<java.lang.SecurityManager: void checkAccept(java.lang.String,int)>
<ohos.hiviewdfx.Debug: int getIpcCount(ohos.hiviewdfx.Debug.IpcType)>
<ohos.global.icu.util.Calendar: int[] handleCreateFields()>
<java.util.zip.ZipEntry: java.util.zip.ZipEntry setCreationTime(java.nio.file.attribute.FileTime)>
<java.time.OffsetTime: java.time.OffsetTime plusNanos(long)>
<ohos.agp.render.opengl.GLES1X: void glDeleteBuffers(int,java.nio.IntBuffer)>
<java.nio.file.attribute.DosFileAttributeView: java.nio.file.attribute.DosFileAttributes readAttributes()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getQueuedThreads()>
<java.time.Year: java.time.Year now()>
<ohos.global.icu.text.Normalizer: void <clinit>()>
<ohos.javax.xml.stream.util.XMLEventAllocator: ohos.javax.xml.stream.util.XMLEventAllocator newInstance()>
<java.math.BigInteger: java.math.BigInteger setBit(int)>
<ohos.agp.components.Component: float[] getFocusBorderRadius()>
<java.net.URLConnection: boolean getDefaultUseCaches()>
<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>
<java.lang.OutOfMemoryError: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glTexStorage2D(int,int,int,int,int)>
<java.time.MonthDay: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
<ohos.usb.USBRequest: void <init>()>
<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.temporal.TemporalAccessor)>
<java.awt.font.NumericShaper.Range: java.awt.font.NumericShaper.Range[] values()>
<ohos.utils.PlainIntArray: int keyAt(int)>
<java.sql.CallableStatement: java.math.BigDecimal getBigDecimal(int)>
<ohos.multimodalinput.event.ManipulationEvent: int getPhase()>
<ohos.global.icu.text.DecimalFormat: void setParseNoExponent(boolean)>
<java.util.concurrent.ForkJoinPool: java.lang.Thread.UncaughtExceptionHandler getUncaughtExceptionHandler()>
<java.net.Socket: int getTrafficClass()>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setTextFont(ohos.agp.text.Font)>
<java.lang.StringBuilder: int lastIndexOf(java.lang.String,int)>
<ohos.agp.components.Text: void setScrollable(boolean)>
<ohos.sysappcomponents.contact.entity.Group: java.lang.String getTitle()>
<java.lang.reflect.Field: boolean isSynthetic()>
<java.util.LinkedList: boolean addAll(int,java.util.Collection)>
<ohos.app.Context: ohos.bundle.AbilityInfo getAbilityInfo()>
<java.io.DataOutputStream: void writeInt(int)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setImagePixelMap(int,ohos.media.image.PixelMap)>
<java.time.temporal.UnsupportedTemporalTypeException: void <init>(java.lang.String,java.lang.Throwable)>
<java.io.File: boolean setWritable(boolean,boolean)>
<java.sql.SQLClientInfoException: void <init>(java.util.Map,java.lang.Throwable)>
<java.net.DatagramSocket: void <init>(java.net.DatagramSocketImpl)>
<java.nio.file.SecureDirectoryStream: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.lang.Object,java.lang.Class,java.nio.file.LinkOption[])>
<ohos.sysappcomponents.calendar.entity.Accounts: java.lang.String getName()>
<ohos.agp.components.TimePicker: void enableHour(boolean)>
<ohos.app.AbilityContext: void requestPermissionsFromUser(java.lang.String[],int)>
<java.util.ArrayList: java.util.ListIterator listIterator()>
<ohos.agp.utils.Rect: void <init>()>
<java.security.cert.CRLSelector: boolean match(java.security.cert.CRL)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>
<java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>
<java.net.SocketException: void <init>(java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThanOrEqualTo(java.lang.String,long)>
<ohos.data.search.schema.CommonItem: java.util.List getCommonSchema()>
<java.io.ObjectInputStream.GetField: short get(java.lang.String,short)>
<ohos.bluetooth.ble.BleAdvertiseData.Builder: void <init>()>
<java.lang.invoke.MethodType: int hashCode()>
<java.net.DatagramPacket: int getLength()>
<ohos.agp.render.opengl.GLES20: void glDeleteBuffers(int,java.nio.IntBuffer)>
<ohos.agp.text.TextForm: void <init>()>
<java.util.logging.StreamHandler: void setEncoding(java.lang.String)>
<java.util.concurrent.RecursiveAction: void setRawResult(java.lang.Object)>
<ohos.event.notification.IAdvancedNotificationManager: int getActiveNotificationNums(java.lang.String)>
<java.sql.Connection: java.sql.CallableStatement prepareCall(java.lang.String)>
<ohos.data.rdb.RdbMisuseException: void <init>(java.lang.String)>
<java.util.concurrent.BlockingDeque: void push(java.lang.Object)>
<ohos.security.keystore.KeyStoreKeySpec: java.lang.String[] getKeyCryptoAttr(int)>
<ohos.global.icu.text.DateTimePatternGenerator: ohos.global.icu.text.DateTimePatternGenerator getInstance(ohos.global.icu.util.ULocale)>
<javax.net.ssl.SSLParameters: boolean getWantClientAuth()>
<ohos.global.icu.text.Normalizer2.Mode: ohos.global.icu.text.Normalizer2.Mode[] values()>
<java.util.Deque: java.lang.Object peek()>
<java.nio.charset.CharsetDecoder: boolean isAutoDetecting()>
<ohos.global.icu.text.DecimalFormatSymbols: ohos.global.icu.text.DecimalFormatSymbols getInstance()>
<java.util.Spliterator.OfDouble: java.util.Spliterator.OfPrimitive trySplit()>
<ohos.ai.cv.text.TextBlock: void setCornerPoints(ohos.ai.cv.common.CvPoint[])>
<java.time.LocalDateTime: java.time.LocalDateTime withDayOfYear(int)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayCountry(java.lang.String,java.lang.String)>
<ohos.agp.utils.Matrix: boolean hasPerspective()>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: ohos.media.image.PixelMap getBigPicture()>
<java.util.zip.Deflater: int deflate(byte[],int,int,int)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayScript(ohos.global.icu.util.ULocale)>
<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>
<java.util.concurrent.BlockingQueue: boolean contains(java.lang.Object)>
<ohos.agp.components.AdaptiveBoxLayout: ohos.agp.components.ComponentContainer.LayoutConfig createLayoutConfig(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.render.opengl.GLES30: void glWaitSync(long,int,long)>
<ohos.media.tubecore.AVTube: boolean isConnecting()>
<ohos.event.notification.IAdvancedNotificationManager: void addNotificationSlotGroups(java.lang.String,java.util.List)>
<ohos.miscservices.inputmethodability.TextInputClient: boolean replaceMarkedText(java.lang.String)>
<ohos.agp.utils.Rect: void setPivot(ohos.agp.utils.Point)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setShowStopwatch(boolean)>
<java.security.AlgorithmParameterGenerator: java.security.Provider getProvider()>
<ohos.utils.BasePacMap: void putFloatValueArray(java.lang.String,float[])>
<java.text.MessageFormat: int hashCode()>
<java.nio.channels.DatagramChannel: java.net.SocketAddress getLocalAddress()>
<ohos.agp.components.SlideDrawer.DisplayMode: ohos.agp.components.SlideDrawer.DisplayMode valueOf(java.lang.String)>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 subtract(ohos.agp.render.render3d.math.Vector4,ohos.agp.render.render3d.math.Vector4)>
<javax.tools.SimpleJavaFileObject: java.lang.String toString()>
<ohos.global.icu.util.Currency: double getRoundingIncrement(ohos.global.icu.util.Currency.CurrencyUsage)>
<java.sql.ResultSetMetaData: java.lang.String getColumnTypeName(int)>
<ohos.agp.text.Layout: int getLineIndexByCoordinate(int)>
<ohos.agp.utils.RectFloat: int hashCode()>
<ohos.org.xml.sax.AttributeList: int getLength()>
<java.util.stream.LongStream: java.util.stream.Stream boxed()>
<javax.sql.RowSet: void setBlob(int,java.io.InputStream)>
<ohos.javax.xml.stream.events.EndElement: ohos.javax.xml.namespace.QName getName()>
<java.time.Period: java.time.Period parse(java.lang.CharSequence)>
<ohos.ai.cv.common.VisionManager: ohos.ai.cv.sr.ITxtImageSuperResolution getTisr(ohos.app.Context)>
<ohos.utils.Parcel: boolean writeLong(long)>
<ohos.media.audio.AudioRenderer.PlayMode: void <clinit>()>
<ohos.ai.cv.common.ImageResult: ohos.media.image.PixelMap getPixelMap()>
<java.util.concurrent.ConcurrentLinkedDeque: boolean contains(java.lang.Object)>
<ohos.agp.components.Component.VoiceEvent: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: java.lang.Object getMappedValue()>
<ohos.agp.animation.styledsolutions.GravitationalClick: ohos.agp.animation.AnimatorProperty getActionUpAnimation(ohos.agp.components.Component,int)>
<ohos.media.codec.CodecDescription: boolean isEncoder()>
<ohos.data.search.SearchAbility: java.util.List getSearchableEntityList()>
<java.util.LinkedList: int size()>
<ohos.media.audio.SoundPlayer.SoundPlayerParameters: void setLoop(int)>
<java.nio.LongBuffer: boolean isDirect()>
<ohos.agp.components.Component: void setHorizontalPosition(int,int)>
<java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<java.sql.RowIdLifetime: void <clinit>()>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate date(int,int,int)>
<java.net.HttpCookie: void setDiscard(boolean)>
<java.util.stream.LongStream: java.util.stream.LongStream sequential()>
<ohos.net.RouteInfo: boolean matches(java.net.InetAddress)>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getSentenceInstance(ohos.global.icu.util.ULocale)>
<ohos.dcall.DistributedCallManager: int getCallState()>
<ohos.event.notification.NotificationSorting: boolean marshalling(ohos.utils.Parcel)>
<java.util.OptionalLong: long getAsLong()>
<ohos.media.audio.AudioRenderer.State: ohos.media.audio.AudioRenderer.State[] values()>
<ohos.wifi.WifiScanInfo: int getFrequency()>
<ohos.data.rdb.StoreConfig.Builder: ohos.data.rdb.StoreConfig.Builder setSyncMode(ohos.data.rdb.StoreConfig.SyncMode)>
<java.util.concurrent.CompletableFuture: void obtrudeException(java.lang.Throwable)>
<java.util.concurrent.ConcurrentSkipListMap: boolean remove(java.lang.Object,java.lang.Object)>
<ohos.agp.components.TimePicker: void setDisplayedTopElement(ohos.agp.components.element.Element)>
<ohos.vibrator.agent.VibratorAgent: boolean isSupport(int)>
<java.text.DecimalFormatSymbols: void setNaN(java.lang.String)>
<java.util.concurrent.Phaser: int getRegisteredParties()>
<ohos.global.icu.util.GregorianCalendar: java.util.Date getGregorianChange()>
<java.math.MathContext: void <init>(int)>
<java.util.ArrayDeque: void addFirst(java.lang.Object)>
<ohos.agp.components.CornerMark: void setTextColor(ohos.agp.utils.Color)>
<java.nio.file.LinkPermission: void <init>(java.lang.String,java.lang.String)>
<ohos.data.file.FileAbility: java.lang.String getType(ohos.utils.net.Uri)>
<java.util.concurrent.ForkJoinPool: long getStealCount()>
<ohos.data.rdb.RdbOpenCallback: void onOpen(ohos.data.rdb.RdbStore)>
<ohos.data.preferences.PreferencesFileWriteException: void <init>(java.lang.String)>
<ohos.utils.Parcel: char readChar()>
<ohos.bluetooth.ble.BleScanResult: int getAdvertiseFlag()>
<java.sql.ResultSetMetaData: int getColumnDisplaySize(int)>
<java.text.CollationElementIterator: void setOffset(int)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLEventReader createXMLEventReader(ohos.javax.xml.stream.XMLStreamReader)>
<ohos.agp.components.TextFilter: ohos.agp.components.TextFilter.FilterResults executeFiltering(java.lang.CharSequence)>
<ohos.security.asset.AssetOperatorAbs: ohos.security.asset.AssetResult assetInsert(ohos.aafwk.content.IntentParams)>
<ohos.storageinfomgr.StorageInfo: long getCacheSize()>
<java.io.PrintWriter: java.io.Writer append(java.lang.CharSequence)>
<ohos.media.audio.SoundEffect: void <init>(java.util.UUID,java.util.UUID,int,int,java.lang.String)>
<java.io.Writer: java.lang.Appendable append(java.lang.CharSequence,int,int)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>
<ohos.agp.render.opengl.GLES1X: void glTexParameteri(int,int,int)>
<java.sql.Connection: int getTransactionIsolation()>
<ohos.hiviewdfx.HiLogLabel: void <init>(int,int,java.lang.String)>
<java.io.FilterWriter: void write(char[],int,int)>
<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>
<java.sql.Connection: void setTransactionIsolation(int)>
<ohos.utils.geo.RectFloat.RotationEnum: ohos.utils.geo.RectFloat.RotationEnum getByInt(int)>
<java.lang.System: java.io.Console console()>
<ohos.event.intentagent.IntentAgentHelper: boolean judgeEquality(ohos.event.intentagent.IntentAgent,ohos.event.intentagent.IntentAgent)>
<ohos.global.icu.util.GregorianCalendar: int handleGetYearLength(int)>
<ohos.utils.LruBuffer: int getMissCount()>
<java.time.Month: long getLong(java.time.temporal.TemporalField)>
<ohos.global.icu.text.DateFormatSymbols: void <init>(java.util.ResourceBundle,java.util.Locale)>
<ohos.agp.components.Text: void setSelectionRightBubbleElement(ohos.agp.components.element.Element)>
<ohos.multimodalinput.event.StylusEvent: void <init>()>
<java.text.NumberFormat: int hashCode()>
<java.io.File: void <init>(java.io.File,java.lang.String)>
<java.math.RoundingMode: void <clinit>()>
<java.util.SimpleTimeZone: void setEndRule(int,int,int)>
<java.sql.ResultSet: java.lang.Object getObject(int,java.util.Map)>
<ohos.global.icu.text.TimeZoneFormat: void <init>(ohos.global.icu.util.ULocale)>
<java.beans.PropertyChangeListenerProxy: void <init>(java.lang.String,java.beans.PropertyChangeListener)>
<ohos.utils.PersistablePacMap: long getLongValue(java.lang.String)>
<java.util.EventObject: java.lang.String toString()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query setSuggestIndex(java.lang.String)>
<ohos.agp.components.Component: void setMarginsLeftAndRight(int,int)>
<ohos.data.async.QueryCallback: void onQueryDone(java.lang.Integer,java.lang.Object,ohos.data.resultset.ResultSet)>
<java.time.format.DateTimeFormatter: java.time.chrono.Chronology getChronology()>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<ohos.sysappcomponents.contact.entity.PostalAddress: void <clinit>()>
<ohos.global.icu.util.VersionInfo: ohos.global.icu.util.VersionInfo getInstance(int,int,int,int)>
<java.nio.charset.Charset: int compareTo(java.nio.charset.Charset)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: java.util.concurrent.ConcurrentHashMap getMap()>
<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>
<ohos.sysappcomponents.contact.entity.Contact: java.util.List getRelations()>
<java.util.concurrent.RejectedExecutionException: void <init>(java.lang.Throwable)>
<javax.net.ssl.KeyManagerFactory: void init(javax.net.ssl.ManagerFactoryParameters)>
<java.time.format.DecimalStyle: java.time.format.DecimalStyle withNegativeSign(char)>
<java.io.RandomAccessFile: void writeBytes(java.lang.String)>
<ohos.bluetooth.ble.BleCentralManager: void startScan(java.util.List)>
<ohos.ai.asr.AsrListener: void onResults(ohos.utils.PacMap)>
<ohos.global.icu.text.SearchIterator: int following(int)>
<ohos.agp.components.PageSliderIndicator: int getOnSelectionChangedListenerCount()>
<ohos.agp.window.dialog.PopupDialog: void <init>(ohos.app.Context,ohos.agp.components.Component,int,int)>
<ohos.ai.cv.common.BoundingBox: int getLeft()>
<ohos.javax.xml.parsers.SAXParser: void setProperty(java.lang.String,java.lang.Object)>
<java.nio.ByteBuffer: long getLong(int)>
<java.util.NavigableMap: java.util.NavigableMap descendingMap()>
<ohos.agp.render.render3d.resources.MaterialDesc: float getAmbientOcclusionFactor()>
<ohos.data.search.SearchAbility: int clearIndex(java.lang.String,java.lang.String,java.util.Map)>
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel.MapMode,long,long)>
<ohos.global.icu.text.MessageFormat: void setLocale(java.util.Locale)>
<java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<java.text.Normalizer.Form: void <clinit>()>
<java.lang.SecurityManager: int classDepth(java.lang.String)>
<java.time.chrono.JapaneseEra: java.lang.String toString()>
<java.util.concurrent.RecursiveAction: void setRawResult(java.lang.Void)>
<javax.tools.JavaCompiler.CompilationTask: void setProcessors(java.lang.Iterable)>
<ohos.agp.components.DatePicker: ohos.agp.components.element.Element getOperatedTextBackgroundElement()>
<ohos.media.common.sessioncore.AVPlaybackState: int getAVPlaybackState()>
<ohos.agp.render.Paint.Style: ohos.agp.render.Paint.Style valueOf(java.lang.String)>
<javax.lang.model.element.Element: int hashCode()>
<ohos.net.NetStatusCallback: void onCapabilitiesChanged(ohos.net.NetHandle,ohos.net.NetCapabilities)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getInstance(ohos.global.icu.util.ULocale,int)>
<ohos.agp.render.render3d.RenderLoop: void resume()>
<ohos.global.icu.util.IndianCalendar: void <init>(java.util.Locale)>
<ohos.agp.components.Component: ohos.agp.components.ComponentTreeObserver getComponentTreeObserver()>
<java.security.Key: byte[] getEncoded()>
<java.time.Year: java.time.Year minus(java.time.temporal.TemporalAmount)>
<java.util.EnumMap: int size()>
<ohos.agp.components.SlideDrawer: void setMaximumSlideDistance(int)>
<ohos.powermanager.PowerManager.RunningLock: void lock(long)>
<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>
<ohos.agp.render.render3d.Engine.RenderNodeGraph: void release()>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty scaleYBy(float)>
<ohos.sysappcomponents.calendar.entity.Events: long getEventEndTime()>
<java.net.MulticastSocket: int getTimeToLive()>
<ohos.agp.render.render3d.components.WorldMatrixComponent: ohos.agp.render.render3d.math.Matrix4x4 getWorldMatrix()>
<ohos.media.muxer.Muxer: boolean stop()>
<ohos.data.rdb.TransactionObserver: void onCommit()>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setSubscript(boolean)>
<ohos.utils.LruBuffer: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.time.ZoneId: int hashCode()>
<ohos.telephony.PhoneNumberFormattingTextObserver: void onTextUpdated(java.lang.String,int,int,int)>
<ohos.agp.components.ListContainer: void removeItemVisibilityChangedListener(ohos.agp.components.ListContainer.ItemVisibilityChangedListener)>
<ohos.sensor.agent.CategoryOtherAgent: ohos.sensor.bean.CategoryOther getSingleSensor(int)>
<ohos.media.camera.device.CameraStateCallback: void onConfigured(ohos.media.camera.device.Camera)>
<ohos.miscservices.pasteboard.PasteData.Record: ohos.miscservices.pasteboard.PasteData.Record createUriRecord(ohos.utils.net.Uri)>
<ohos.data.orm.DowngradeComparator: int compare(ohos.data.orm.OrmMigration,ohos.data.orm.OrmMigration)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notBetween(java.lang.String,java.sql.Timestamp,java.sql.Timestamp)>
<ohos.aafwk.ability.startsetting.AbilityStartSetting: void <init>()>
<ohos.agp.components.ScrollView: ohos.agp.components.ScrollView.ReboundEffectParams getReboundEffectParams()>
<java.time.temporal.ValueRange: long getSmallestMaximum()>
<java.net.Socket: void setReceiveBufferSize(int)>
<ohos.agp.render.render3d.gltf.GltfImportData: java.util.List getSamplers()>
<java.sql.ResultSet: boolean isLast()>
<ohos.global.icu.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition)>
<java.time.Duration: long toMinutes()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object searchKeys(long,java.util.function.Function)>
<java.security.cert.X509CRLSelector: void setCertificateChecking(java.security.cert.X509Certificate)>
<ohos.event.notification.ReminderRequest: boolean marshalling(ohos.utils.Parcel)>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndUpdate(java.lang.Object,java.util.function.UnaryOperator)>
<ohos.agp.animation.AnimatorProperty: void <init>()>
<ohos.utils.Parcel: void writePlainArray(ohos.utils.PlainArray)>
<ohos.agp.components.DragEvent: boolean isBroadcast()>
<ohos.utils.LightweightMap: boolean containsAll(java.util.Collection)>
<ohos.sysappcomponents.contact.entity.Email: void setLabelId(ohos.app.Context,int)>
<java.nio.DoubleBuffer: double get(int)>
<ohos.global.i18n.text.MeasureOptions.Usage: void <clinit>()>
<ohos.utils.geo.Rect: void translateCenterTo(ohos.utils.geo.Point)>
<ohos.agp.utils.DimensFloat: void <init>()>
<java.util.concurrent.locks.StampedLock: void unlockRead(long)>
<java.security.KeyStore: boolean entryInstanceOf(java.lang.String,java.lang.Class)>
<java.util.stream.Collectors: java.util.stream.Collector groupingBy(java.util.function.Function)>
<java.io.OutputStreamWriter: void write(char[],int,int)>
<ohos.event.commonevent.CommonEventData: java.lang.String getData()>
<java.time.temporal.WeekFields: java.time.temporal.WeekFields of(java.util.Locale)>
<java.lang.Character: boolean isLetter(int)>
<ohos.aafwk.ability.AbilitySlice: ohos.agp.window.service.Window getWindow()>
<java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>
<ohos.org.xml.sax.SAXParseException: java.lang.String getPublicId()>
<ohos.data.resultset.AbsSharedResultSet: void setBlock(ohos.data.resultset.SharedBlock)>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)>
<javax.crypto.interfaces.PBEKey: int getIterationCount()>
<java.util.concurrent.CopyOnWriteArraySet: java.util.Spliterator spliterator()>
<ohos.agp.render.Path.ArcSize: int value()>
<ohos.global.icu.number.FormattedNumber: boolean nextPosition(ohos.global.icu.text.ConstrainedFieldPosition)>
<java.time.OffsetDateTime: java.time.ZonedDateTime toZonedDateTime()>
<java.text.CollationElementIterator: int previous()>
<ohos.agp.components.webengine.JsTextInputResult: void respond(java.lang.String)>
<ohos.global.icu.util.ULocale: boolean equals(java.lang.Object)>
<ohos.agp.utils.Matrix: float getMinScale()>
<java.net.URLConnection: void setConnectTimeout(int)>
<ohos.miscservices.wallpaper.WallpaperColorsCollection: boolean hasNext()>
<ohos.utils.Scope: ohos.utils.Scope intersect(ohos.utils.Scope)>
<java.time.chrono.ChronoLocalDateTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<java.util.stream.Stream: java.util.Optional findAny()>
<java.sql.Driver: boolean acceptsURL(java.lang.String)>
<javax.tools.DocumentationTool.DocumentationTask: java.lang.Boolean call()>
<ohos.interwork.utils.PacMapEx: void marshallingEx(ohos.utils.Parcel)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,java.util.Calendar)>
<java.util.Comparator: java.util.Comparator thenComparingLong(java.util.function.ToLongFunction)>
<java.util.ListIterator: void set(java.lang.Object)>
<ohos.aafwk.ability.Ability.LayoutParamsHelper: void <init>(ohos.aafwk.content.Intent)>
<ohos.media.common.sessioncore.AVToken: boolean equals(java.lang.Object)>
<java.sql.ResultSet: int getRow()>
<javax.lang.model.type.ExecutableType: javax.lang.model.type.TypeMirror getReturnType()>
<java.util.concurrent.Semaphore: boolean hasQueuedThreads()>
<ohos.data.rdb.RdbCantOpenException: void <init>()>
<ohos.utils.IntArray: int size()>
<ohos.utils.zson.ZSONObject: java.lang.Integer getInteger(java.lang.String)>
<java.sql.ResultSet: java.io.InputStream getUnicodeStream(java.lang.String)>
<ohos.agp.render.Canvas: int saveLayer(ohos.agp.utils.RectFloat,ohos.agp.render.Paint)>
<ohos.agp.render.render3d.resources.RenderDataStorePod: byte[] get(java.lang.String)>
<ohos.utils.Scope: void <init>(java.lang.Comparable,java.lang.Comparable)>
<java.lang.Integer: int compareUnsigned(int,int)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeCData(java.lang.String)>
<java.util.function.LongPredicate: java.util.function.LongPredicate negate()>
<ohos.global.icu.text.Normalizer2: int composePair(int,int)>
<java.sql.Timestamp: long getTime()>
<java.util.logging.SocketHandler: void publish(java.util.logging.LogRecord)>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: boolean unmarshalling(ohos.utils.Parcel)>
<java.sql.Statement: void setCursorName(java.lang.String)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThan(java.lang.String,java.sql.Time)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<ohos.global.icu.text.UnicodeSet: int compareTo(java.lang.Object)>
<java.util.stream.StreamSupport: java.util.stream.Stream stream(java.util.Spliterator,boolean)>
<java.nio.channels.Pipe: java.nio.channels.Pipe.SinkChannel sink()>
<java.util.concurrent.locks.StampedLock: long tryConvertToWriteLock(long)>
<ohos.agp.components.ListContainer: void setContentStartOffSet(int)>
<ohos.location.GeoAddress: java.lang.String getSubAdministrativeArea()>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster next(java.time.DayOfWeek)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal movePointRight(int)>
<java.util.concurrent.SynchronousQueue: boolean removeAll(java.util.Collection)>
<ohos.agp.colors.HslColor: void <init>(float,float,float,int)>
<java.nio.channels.CompletionHandler: void failed(java.lang.Throwable,java.lang.Object)>
<ohos.agp.components.element.PixelMapElement: void <init>(ohos.global.resource.Resource,boolean)>
<ohos.global.icu.text.DateTimePatternGenerator: ohos.global.icu.text.DateTimePatternGenerator addPattern(java.lang.String,boolean,ohos.global.icu.text.DateTimePatternGenerator.PatternInfo)>
<ohos.global.icu.util.EthiopicCalendar: void handleComputeFields(int)>
<java.util.concurrent.atomic.DoubleAccumulator: float floatValue()>
<ohos.global.icu.text.UnicodeSet: java.util.Iterator iterator()>
<java.sql.Statement: void clearWarnings()>
<ohos.net.http.SslError: boolean hasError(int)>
<ohos.org.xml.sax.Attributes: java.lang.String getType(java.lang.String,java.lang.String)>
<ohos.media.audio.SoundEffect.SoundEffectInfo: void <init>()>
<java.io.LineNumberInputStream: long skip(long)>
<ohos.global.icu.util.UniversalTimeScale: ohos.global.icu.math.BigDecimal toBigDecimal(long,int)>
<ohos.wifi.WifiScanInfo: int getBandWidth()>
<java.util.Collection: boolean addAll(java.util.Collection)>
<ohos.agp.render.render3d.math.Matrix4x4: float get(int)>
<ohos.net.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayLanguage(java.lang.String,ohos.global.icu.util.ULocale)>
<ohos.agp.render.Region: void translate(int,int,ohos.agp.render.Region)>
<ohos.org.w3c.dom.ls.LSInput: java.lang.String getSystemId()>
<ohos.global.icu.math.BigDecimal: void <clinit>()>
<ohos.global.icu.text.DecimalFormat: ohos.global.icu.util.Currency getCurrency()>
<java.util.jar.Pack200.Packer: void pack(java.util.jar.JarInputStream,java.io.OutputStream)>
<javax.net.ssl.HttpsURLConnection: java.security.cert.Certificate[] getLocalCertificates()>
<java.security.KeyStore.SecretKeyEntry: java.util.Set getAttributes()>
<java.util.Calendar: java.lang.String toString()>
<ohos.bundle.BundleInfo: long getInstallTime()>
<ohos.media.audio.AudioRenderer: void <init>(ohos.media.audio.AudioRendererInfo,ohos.media.audio.AudioRenderer.PlayMode,ohos.media.audio.AudioDeviceDescriptor)>
<ohos.agp.render.render3d.components.LocalMatrixComponent: ohos.agp.render.render3d.math.Matrix4x4 getLocalMatrix()>
<ohos.agp.components.Component.VoiceEvent: void setBadge(boolean)>
<ohos.agp.utils.Rect: int getPivotYCoordinate()>
<java.lang.StrictMath: double sin(double)>
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinTask peekNextLocalTask()>
<ohos.agp.render.opengl.GLES30: java.lang.String glGetStringi(int,int)>
<ohos.global.icu.text.CollationElementIterator: int primaryOrder(int)>
<java.security.UnrecoverableEntryException: void <init>(java.lang.String)>
<javax.crypto.CipherSpi: int engineGetKeySize(java.security.Key)>
<ohos.aafwk.ability.DataAbilityOperation.Builder: ohos.aafwk.ability.DataAbilityOperation build()>
<ohos.agp.components.ListContainer.ReboundEffectParams: void setOverscrollPercent(int)>
<ohos.agp.components.webengine.ResourceRequest: java.lang.String getMethod()>
<ohos.global.icu.math.BigDecimal: byte byteValueExact()>
<ohos.global.icu.util.JapaneseCalendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<ohos.bundle.CommonEventInfo: java.util.List getData()>
<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<java.util.function.DoublePredicate: java.util.function.DoublePredicate or(java.util.function.DoublePredicate)>
<ohos.app.AbilityContext: void disconnectAbility(ohos.aafwk.ability.IAbilityConnection)>
<java.security.spec.DSAParameterSpec: java.math.BigInteger getQ()>
<ohos.agp.components.SearchBar: java.lang.String getQuery()>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
<ohos.agp.window.dialog.ListDialog: void <init>(ohos.app.Context)>
<java.util.concurrent.ConcurrentSkipListMap: void forEach(java.util.function.BiConsumer)>
<java.security.cert.PKIXParameters: boolean isRevocationEnabled()>
<ohos.agp.render.opengl.GLES1X: void glMaterialfv(int,int,float[])>
<java.time.chrono.IsoEra: java.time.chrono.IsoEra valueOf(java.lang.String)>
<ohos.agp.graphics.SurfaceOps.Callback: void surfaceChanged(ohos.agp.graphics.SurfaceOps,int,int,int)>
<ohos.utils.zson.ZSONObject: byte[] getBytes(java.lang.String)>
<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>
<java.util.concurrent.atomic.AtomicLong: void lazySet(long)>
<ohos.aafwk.ability.Ability: ohos.agp.components.Component findComponentById(int)>
<java.sql.ResultSet: void updateSQLXML(java.lang.String,java.sql.SQLXML)>
<ohos.aafwk.ability.RunningProcessInfo: java.lang.String getProcessName()>
<ohos.global.icu.text.UnicodeSet: java.util.Collection addAllTo(java.util.Collection)>
<ohos.global.icu.text.PluralRules: ohos.global.icu.text.PluralRules forLocale(java.util.Locale)>
<ohos.data.search.schema.MusicItem: java.lang.String getGenre()>
<java.text.DateFormat: void setCalendar(java.util.Calendar)>
<java.sql.CallableStatement: double getDouble(int)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage setData(java.lang.String,ohos.utils.net.Uri)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenRunAsync(java.lang.Runnable,java.util.concurrent.Executor)>
<java.util.InputMismatchException: void <init>()>
<ohos.global.icu.text.Normalizer: java.lang.Object clone()>
<java.lang.Character: boolean isJavaIdentifierPart(char)>
<java.util.Vector: java.util.Spliterator spliterator()>
<javax.lang.model.type.MirroredTypeException: javax.lang.model.type.TypeMirror getTypeMirror()>
<ohos.global.icu.text.DecimalFormat: ohos.global.icu.math.MathContext getMathContextICU()>
<ohos.media.photokit.support.AlbumListInfo: java.lang.String getDateTaken()>
<ohos.agp.components.ProgressBar: void setViceProgress(int)>
<ohos.media.camera.device.FrameConfig: java.lang.Object get(ohos.media.camera.params.ParameterKey.Key)>
<ohos.net.NetManager: boolean removeNetStatusCallback(ohos.net.NetStatusCallback)>
<java.security.Provider: void removeService(java.security.Provider.Service)>
<java.time.OffsetTime: java.time.OffsetTime minusSeconds(long)>
<ohos.data.search.schema.AppItem: java.lang.Double getRating()>
<ohos.global.icu.text.UnicodeSetSpanner: boolean equals(java.lang.Object)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture allOf(java.util.concurrent.CompletableFuture[])>
<ohos.global.icu.text.DateTimePatternGenerator: void setAppendItemFormat(int,java.lang.String)>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>
<ohos.media.audio.AudioStreamInfo: boolean isValidOutChannelMask(ohos.media.audio.AudioStreamInfo.ChannelMask)>
<java.util.stream.LongStream: java.util.OptionalLong findFirst()>
<java.util.Currency: int getNumericCode()>
<ohos.rpc.MessageParcel: java.lang.String readInterfaceToken()>
<ohos.utils.BasePacMap: long getLongValue(java.lang.String,long)>
<ohos.agp.render.render3d.RenderLoop: void requestRender()>
<ohos.ace.ability.AceAbility: void onAbilityResult(int,int,ohos.aafwk.content.Intent)>
<ohos.agp.components.Component.DragFeedbackProvider: void <init>(ohos.agp.components.Component)>
<ohos.agp.render.PathMeasure: boolean getSegment(float,float,ohos.agp.render.Path,boolean)>
<ohos.security.keystore.KeyGenAlgorithmParaSpec: int getSecKeyUsagePurposes()>
<ohos.agp.render.render3d.Engine: ohos.agp.render.render3d.gltf.GltfExporter getGltfExporter()>
<java.util.stream.IntStream.Builder: void accept(int)>
<ohos.global.icu.text.MeasureFormat: java.lang.StringBuilder formatMeasurePerUnit(ohos.global.icu.util.Measure,ohos.global.icu.util.MeasureUnit,java.lang.StringBuilder,java.text.FieldPosition)>
<ohos.media.camera.device.CameraStateCallback: void onPartialConfigured(ohos.media.camera.device.Camera)>
<ohos.org.xml.sax.InputSource: void <init>(java.lang.String)>
<ohos.rpc.RemoteProxy: boolean isObjectDead()>
<ohos.global.icu.text.CurrencyPluralInfo: ohos.global.icu.text.CurrencyPluralInfo getInstance(ohos.global.icu.util.ULocale)>
<java.util.TreeMap: java.util.NavigableSet navigableKeySet()>
<ohos.event.notification.NotificationUserInput: void addMimeInputToIntent(ohos.event.notification.NotificationUserInput,ohos.aafwk.content.Intent,java.util.Map)>
<ohos.agp.database.DataSetSubscriber: void onItemRangeChanged(int,int)>
<ohos.agp.render.opengl.GLES1X: void glTexEnvf(int,int,float)>
<ohos.agp.render.render3d.SceneNode: boolean isAncestorOf(ohos.agp.render.render3d.SceneNode)>
<ohos.media.audio.SoundPlayer: boolean setPriority(int,int)>
<java.util.stream.LongStream: java.util.OptionalLong findAny()>
<java.time.Year: boolean isSupported(java.time.temporal.TemporalUnit)>
<ohos.media.recorder.Recorder: boolean setSource(ohos.media.common.Source)>
<java.nio.FloatBuffer: java.nio.FloatBuffer wrap(float[])>
<ohos.accessibility.ability.SoftKeyBoardListener: void onSoftKeyBoardShowModeChanged(ohos.accessibility.ability.SoftKeyBoardController,int)>
<java.util.Spliterators: java.util.Spliterator spliterator(java.util.Collection,int)>
<ohos.agp.components.DatePicker: void init(int,int,int,ohos.agp.components.DatePicker.ValueChangedListener)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[])>
<ohos.global.icu.text.MessageFormat: java.lang.String format(java.lang.String,java.util.Map)>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object take()>
<ohos.miscservices.inputmethodability.InputMethodAbility: ohos.agp.components.ComponentContainer onCreateKeyboardContainer()>
<java.util.Scanner: int nextInt(int)>
<ohos.aafwk.ability.ProcessErrorInfo: int getUid()>
<java.lang.Integer: int parseInt(java.lang.String,int)>
<java.lang.Long: void <init>(java.lang.String)>
<java.time.OffsetDateTime: java.time.ZonedDateTime atZoneSameInstant(java.time.ZoneId)>
<ohos.sysappcomponents.contact.entity.SipAddress: int hashCode()>
<ohos.app.dispatcher.TaskDispatcher: ohos.app.dispatcher.Group createDispatchGroup()>
<java.util.Collections: java.util.List synchronizedList(java.util.List)>
<ohos.global.icu.util.Calendar: ohos.global.icu.text.DateFormat getDateTimeFormat(int,int,ohos.global.icu.util.ULocale)>
<ohos.nfc.cardemulation.OffHostService: void <init>()>
<ohos.ai.cv.docrefine.DocCoordinates: void setTopRight(ohos.ai.cv.common.CvPoint)>
<ohos.agp.components.Switch: int[] getThumbPadding()>
<ohos.sysappcomponents.calendar.entity.Instances: void setInstanceBegin(long)>
<ohos.utils.net.Uri: ohos.utils.net.Uri parse(java.lang.String)>
<java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.utils.PacMap: void putLongValueArray(java.lang.String,long[])>
<java.nio.channels.spi.SelectorProvider: java.nio.channels.DatagramChannel openDatagramChannel()>
<ohos.agp.components.TabList.Tab: void <init>(ohos.agp.components.TabList,ohos.app.Context)>
<ohos.event.commonevent.CommonEventData: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.PluralFormat: void <init>(ohos.global.icu.util.ULocale,ohos.global.icu.text.PluralRules.PluralType,java.lang.String)>
<java.util.function.DoubleBinaryOperator: double applyAsDouble(double,double)>
<ohos.agp.render.opengl.GLES20: void glBindTexture(int,int)>
<ohos.distributedschedule.interwork.DeviceInfo: void setDeviceState(ohos.distributedschedule.interwork.DeviceInfo.DeviceState)>
<java.util.prefs.Preferences: void <init>()>
<java.util.concurrent.CompletionService: java.util.concurrent.Future poll()>
<ohos.data.resultset.ResultSetWrapper: ohos.data.resultset.ResultSet.ColumnType getColumnTypeForIndex(int)>
<ohos.data.resultset.ResultSetWrapper: java.lang.String getString(int)>
<java.nio.file.attribute.AclEntry.Builder: java.nio.file.attribute.AclEntry build()>
<ark.system.ClassLoaderHelper: java.lang.String findNativeLibrary(java.lang.ClassLoader,java.lang.String)>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getTitle()>
<java.security.cert.PKIXRevocationChecker: void setOcspResponderCert(java.security.cert.X509Certificate)>
<java.text.SimpleDateFormat: void set2DigitYearStart(java.util.Date)>
<ohos.hiviewdfx.FaultLogger.FaultLogQueryResult: void destroy()>
<ohos.agp.render.opengl.GLES20: void glShaderSource(int,int,java.lang.String[],java.nio.IntBuffer)>
<java.util.Hashtable: boolean equals(java.lang.Object)>
<ohos.media.photokit.metadata.AVLoggerConnection: void performLoggerFile(java.lang.String,java.lang.String)>
<ohos.agp.colors.UserDefinedColor: void <init>(ohos.agp.colors.UserDefinedColor)>
<java.util.Arrays: int hashCode(float[])>
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object updateAndGet(int,java.util.function.UnaryOperator)>
<ohos.agp.components.ScrollView.ReboundEffectParams: int getRemainVisiblePercent()>
<ohos.account.AccountAbility: ohos.account.OsAccountType getOsAccountTypeFromProcess()>
<ohos.agp.render.opengl.GLES20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)>
<java.text.StringCharacterIterator: int getIndex()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: long awaitNanos(long)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getText()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>
<java.util.concurrent.ConcurrentSkipListSet: java.util.SortedSet tailSet(java.lang.Object)>
<java.sql.Time: void setDate(int)>
<ohos.media.image.ImageSource: boolean updateData(byte[],boolean)>
<java.sql.Savepoint: java.lang.String getSavepointName()>
<ohos.agp.render.opengl.GLES1X: void glActiveTexture(int)>
<java.util.AbstractSequentialList: java.util.ListIterator listIterator(int)>
<java.io.DataOutputStream: void write(byte[],int,int)>
<java.time.DayOfWeek: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.media.image.SourceDataIncompleteException: void <init>(java.lang.String)>
<ohos.global.icu.lang.UScript.ScriptUsage: void <clinit>()>
<javax.net.ssl.SSLEngineResult.Status: javax.net.ssl.SSLEngineResult.Status valueOf(java.lang.String)>
<ohos.media.image.common.Rect: boolean equals(java.lang.Object)>
<java.time.chrono.IsoChronology: java.time.LocalDate date(java.time.temporal.TemporalAccessor)>
<ohos.vibrator.bean.VibrationPattern: ohos.vibrator.bean.VibrationPattern createPeriod(int[],int)>
<java.security.Provider: void putAll(java.util.Map)>
<ohos.media.audio.AudioRenderer.PlayMode: ohos.media.audio.AudioRenderer.PlayMode[] values()>
<ohos.org.xml.sax.InputSource: java.io.Reader getCharacterStream()>
<ohos.utils.PacMap: char getChar(java.lang.String,char)>
<java.io.DataInputStream: int readUnsignedByte()>
<java.util.Arrays: void sort(long[],int,int)>
<java.io.InvalidObjectException: void <init>(java.lang.String)>
<java.lang.Readable: int read(java.nio.CharBuffer)>
<ohos.global.icu.text.SearchIterator: int previous()>
<java.security.Permission: java.lang.String getActions()>
<java.sql.DatabaseMetaData: boolean supportsCoreSQLGrammar()>
<java.util.concurrent.ConcurrentHashMap: void <init>()>
<ohos.miscservices.inputmethodability.TextInputClient: boolean unsubscribeEditingText(int)>
<java.lang.Double: boolean isInfinite()>
<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidatorResult validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)>
<ohos.aafwk.ability.AbilitySlice: void onAbilityResult(int,int,ohos.aafwk.content.Intent)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates in(java.lang.String,java.sql.Timestamp[])>
<ohos.telephony.ShortMessageManager: void sendMessage(int,java.lang.String,java.lang.String,java.lang.String,ohos.telephony.ISendShortMessageCallback,ohos.telephony.IDeliveryShortMessageCallback)>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<java.util.concurrent.atomic.DoubleAccumulator: double get()>
<java.lang.Float: float intBitsToFloat(int)>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.text.DateIntervalFormat getInstance(java.lang.String,ohos.global.icu.util.ULocale)>
<ohos.agp.components.PageSlider: int getCurrentSlidingState()>
<ohos.accessibility.AccessibilityEventInfo: void setCount(int)>
<ohos.sensor.agent.CategoryLightAgent: ohos.sensor.bean.CategoryLight getSingleSensor(int)>
<ohos.ace.ability.AceAbility: void onStart(ohos.aafwk.content.Intent)>
<ohos.rpc.RemoteObjectCallbackList: ohos.rpc.IRemoteBroker getRemoteObjectCallbackInterface(ohos.rpc.IRemoteObject)>
<ohos.event.commonevent.CommonEventSubscriber: void setCodeAndData(int,java.lang.String)>
<java.nio.channels.FileChannel: long transferTo(long,long,java.nio.channels.WritableByteChannel)>
<ohos.aafwk.ability.AbilitySlice: boolean deleteForm(int)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendZoneOrOffsetId()>
<java.util.Spliterator.OfPrimitive: void forEachRemaining(java.lang.Object)>
<java.util.zip.DeflaterOutputStream: void flush()>
<java.util.Date: boolean equals(java.lang.Object)>
<ohos.global.i18n.text.DateFormatUtil: char[] getOrder(java.lang.String)>
<java.time.Duration: java.time.Duration abs()>
<ohos.agp.components.ComponentContainer: boolean onDrag(ohos.agp.components.Component,ohos.agp.components.DragEvent)>
<ohos.aafwk.ability.AbilitySlice: void continueAbility(java.lang.String)>
<ohos.media.audio.AudioRendererInfo: boolean isOffload()>
<ohos.bundle.HapModuleInfo: java.util.List getAbilityInfos()>
<java.util.Vector: boolean addAll(int,java.util.Collection)>
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
<ohos.javax.xml.stream.XMLStreamReader: int getTextStart()>
<ohos.agp.render.Canvas: void clipRect(ohos.agp.utils.Rect)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getNaN()>
<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>
<java.nio.IntBuffer: boolean hasArray()>
<java.nio.charset.StandardCharsets: void <clinit>()>
<ohos.aafwk.ability.AbilitySlice: void setLayoutParams(ohos.agp.window.service.WindowManager.LayoutConfig)>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setFeature(java.lang.String)>
<ohos.multimodalinput.standard.TelephoneEventHandle: boolean onHangup(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.global.icu.text.DecimalFormat: int getMaximumIntegerDigits()>
<java.util.Collection: boolean add(java.lang.Object)>
<java.lang.IllegalMonitorStateException: void <init>(java.lang.String)>
<ohos.agp.components.SlideDrawer.LayoutConfig: void <init>()>
<java.util.LinkedHashMap: void forEach(java.util.function.BiConsumer)>
<ohos.utils.PlainIntArray: int valueAt(int)>
<ohos.hiviewdfx.Debug: boolean isConnectingToDebugger()>
<ohos.utils.zson.ZSONReader: void skipValue()>
<java.nio.file.Files: long copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption[])>
<ohos.global.icu.text.CaseMap.Lower: java.lang.String apply(java.util.Locale,java.lang.CharSequence)>
<ohos.rpc.MessageParcel: boolean writeRemoteObjectList(java.util.List)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty setDuration(long)>
<ohos.javax.xml.stream.XMLInputFactory: void setXMLReporter(ohos.javax.xml.stream.XMLReporter)>
<java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>
<ohos.ai.cv.common.VisionConfiguration: int getProcessMode()>
<ohos.global.icu.util.GregorianCalendar: void <init>(int,int,int,int,int,int)>
<java.util.zip.CRC32: void <init>()>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate plus(java.time.temporal.TemporalAmount)>
<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult()>
<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: ohos.event.notification.NotificationRequest.NotificationMultiLineContent setBriefText(java.lang.String)>
<java.lang.Integer: byte byteValue()>
<ohos.javax.xml.validation.ValidatorHandler: void <init>()>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getAttributeLocalName(int)>
<ohos.utils.zson.ZSONArray: ohos.utils.zson.ZSONObject toZSONObject(java.lang.String[])>
<ohos.ai.cv.common.VisionConfiguration.Builder: ohos.ai.cv.common.VisionConfiguration.Builder setClientState(int)>
<java.sql.DatabaseMetaData: boolean supportsSchemasInTableDefinitions()>
<ohos.sysappcomponents.contact.ContactsHelper: void <init>(ohos.app.Context)>
<ohos.agp.window.service.DisplayNotch: ohos.agp.utils.Rect getNotchRectBottom()>
<ohos.account.OsAccount: java.lang.String getLocalName()>
<java.lang.StrictMath: double ulp(double)>
<ohos.global.icu.text.Transliterator.Position: void <init>(ohos.global.icu.text.Transliterator.Position)>
<ohos.media.audio.SoundEffect.SoundEffectInfo: int hashCode()>
<java.io.PrintStream: void <init>(java.lang.String,java.lang.String)>
<java.lang.Character: char forDigit(int,int)>
<java.lang.Thread: void setName(java.lang.String)>
<java.util.concurrent.locks.StampedLock: long tryWriteLock()>
<ohos.sensor.agent.CategoryOtherAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase)>
<ohos.media.image.PixelMap: void writePixels(int)>
<ohos.ai.cv.docrefine.DocCoordinates: ohos.ai.cv.docrefine.DocCoordinates toCoordinates(java.util.List)>
<ohos.bundle.ShortcutInfo: void <init>(ohos.bundle.ShortcutInfo)>
<java.util.stream.LongStream: java.util.stream.BaseStream sequential()>
<ohos.ace.ability.AceInternalAbility: void <init>(java.lang.String)>
<java.time.Year: boolean isAfter(java.time.Year)>
<ohos.agp.components.TextFilter: void filter(java.lang.CharSequence)>
<java.text.SimpleDateFormat: void <init>(java.lang.String,java.text.DateFormatSymbols)>
<ohos.aafwk.content.Intent: java.lang.CharSequence[] getCharSequenceArrayParam(java.lang.String)>
<java.security.KeyStoreSpi: java.util.Date engineGetCreationDate(java.lang.String)>
<ohos.global.icu.util.Calendar: long julianDayToMillis(int)>
<java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<ohos.utils.geo.DimensFloat: int getSizeXToInt()>
<ohos.global.i18n.phonenumbers.PhoneNumberAttribution: void <init>()>
<ohos.media.common.sessioncore.AVBrowserRoot: java.lang.String getRootMediaId()>
<java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>
<ohos.bundle.FormInfo: java.lang.String getDescription()>
<java.net.CacheResponse: void <init>()>
<ohos.media.player.Player.IPlayerCallback: void onPrepared()>
<java.time.Duration: java.time.Duration ofSeconds(long,long)>
<ohos.tools.ByTrace: void startTrace(java.lang.String)>
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>
<java.util.AbstractQueue: boolean add(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>
<ohos.global.icu.text.UCharacterIterator: java.lang.Object clone()>
<ohos.utils.Sequenceable: boolean marshalling(ohos.utils.Parcel)>
<ohos.data.search.model.IndexForm: void setIndexType(java.lang.String)>
<ohos.agp.window.dialog.ListDialog: ohos.agp.components.Component getListContainer()>
<ohos.utils.geo.Rect: boolean isInclude(ohos.utils.geo.Rect)>
<java.lang.Long: long parseUnsignedLong(java.lang.String)>
<javax.sql.RowSetMetaData: void setScale(int,int)>
<ohos.account.app.AppAccountAbility: boolean setAssociatedData(java.lang.String,java.lang.String,java.lang.String)>
<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>
<java.security.Identity: void setPublicKey(java.security.PublicKey)>
<java.security.cert.Certificate.CertificateRep: void <init>(java.lang.String,byte[])>
<java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate now(java.time.ZoneId)>
<ohos.agp.render.render3d.resources.GpuResourceHandle: void release()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: long getState()>
<java.lang.StrictMath: double min(double,double)>
<java.util.Scanner: int radix()>
<javax.security.cert.CertificateEncodingException: void <init>(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.lang.UCharacter: int getBidiPairedBracket(int)>
<ohos.location.Location: float getSpeed()>
<ohos.agp.components.ProgressBar: void setIndeterminate(boolean)>
<ohos.agp.render.opengl.GLES20: void glUniform3fv(int,int,float[])>
<java.lang.Exception: void <init>(java.lang.Throwable)>
<ohos.nfc.cardemulation.CardEmulation: boolean registerAids(ohos.bundle.ElementName,java.lang.String,java.util.List)>
<java.util.function.ToLongFunction: long applyAsLong(java.lang.Object)>
<java.util.stream.LongStream: java.util.PrimitiveIterator.OfLong iterator()>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction: ohos.utils.PacMap getOptions()>
<java.awt.font.NumericShaper: void shape(char[],int,int,int)>
<java.nio.channels.DatagramChannel: java.net.SocketAddress getRemoteAddress()>
<ohos.global.icu.text.LocaleDisplayNames.DialectHandling: ohos.global.icu.text.LocaleDisplayNames.DialectHandling[] values()>
<ohos.accessibility.ability.AccessibilityInfo: void setClassName(java.lang.String)>
<java.io.DataInput: char readChar()>
<java.io.FilterOutputStream: void close()>
<java.time.Duration: java.time.Duration multipliedBy(long)>
<ohos.global.icu.text.UnicodeSetSpanner.TrimOption: ohos.global.icu.text.UnicodeSetSpanner.TrimOption valueOf(java.lang.String)>
<ohos.agp.render.opengl.GLES2Ext: void glColorMaskiEXT(int,boolean,boolean,boolean,boolean)>
<ohos.event.notification.MessageUser: ohos.media.image.PixelMap getPixelMap()>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setTitle(java.lang.String)>
<ohos.ai.tts.TtsClient: boolean isSpeaking()>
<java.util.Arrays: void fill(boolean[],int,int,boolean)>
<ohos.net.LocalSocket: ohos.net.SocketCertificates getPeerSocketInfo()>
<java.util.prefs.AbstractPreferences: void flush()>
<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>
<ohos.agp.components.SlideDrawer: void removeSlideDisable(ohos.agp.components.SlideDrawer.SlideDisable)>
<java.nio.channels.FileChannel: long size()>
<java.lang.Package: java.lang.String getName()>
<java.net.Inet6Address: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
<javax.tools.JavaCompiler: javax.tools.StandardJavaFileManager getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)>
<java.security.Security: java.security.Provider[] getProviders(java.lang.String)>
<ohos.aafwk.ability.AbilitySlice: boolean deleteForm(long)>
<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,java.util.Date,long)>
<ohos.accessibility.AccessibilityStateEvent: java.lang.String getEventMsg()>
<ohos.media.audio.GainControlEffect: boolean isAvailable()>
<java.util.logging.LogRecord: java.lang.String getSourceClassName()>
<javax.net.ssl.SSLSession: int getPacketBufferSize()>
<ohos.global.i18n.text.MeasureFormatter: ohos.global.i18n.text.MeasureFormatter getInstance(java.util.Locale)>
<java.net.Socket: void setSoLinger(boolean,int)>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: boolean unmarshalling(ohos.utils.Parcel)>
<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getLocalPrincipal()>
<javax.net.ssl.TrustManagerFactory: java.lang.String getAlgorithm()>
<ohos.media.common.Format: void putDoubleValue(java.lang.String,double)>
<java.math.BigDecimal: void <init>(java.lang.String,java.math.MathContext)>
<java.util.Locale.Builder: java.util.Locale.Builder setLanguage(java.lang.String)>
<ohos.ai.cv.docrefine.DocCoordinates: void scaleDocCoordinates(float,float)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>
<ohos.global.icu.util.Currency: int getNumericCode()>
<javax.sql.RowSet: void setDate(java.lang.String,java.sql.Date,java.util.Calendar)>
<java.net.MalformedURLException: void <init>(java.lang.String)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitBoolean(boolean,java.lang.Object)>
<ohos.agp.render.Picture: int getWidth()>
<ohos.agp.components.PageSlider.ReboundEffectParams: void <init>(int,float,int)>
<ohos.global.icu.util.GregorianCalendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<ohos.agp.components.SlideDrawer: boolean toggleSmoothly()>
<java.security.spec.ECFieldF2m: boolean equals(java.lang.Object)>
<ohos.agp.components.Component: void setSpeechEventListener(ohos.agp.components.Component.SpeechEventListener)>
<ohos.global.icu.util.Currency: java.lang.String[] getAvailableCurrencyCodes(ohos.global.icu.util.ULocale,java.util.Date)>
<java.lang.ThreadGroup: boolean allowThreadSuspension(boolean)>
<ohos.global.icu.util.Calendar: void set(int,int,int,int,int)>
<java.util.zip.ZipFile: java.lang.String getComment()>
<ohos.global.icu.util.Calendar: ohos.global.icu.util.TimeZone getTimeZone()>
<java.sql.Connection: java.sql.Savepoint setSavepoint(java.lang.String)>
<ohos.utils.zson.ZSONObject: java.lang.Short getShort(java.lang.String)>
<ohos.agp.render.render3d.resources.ResourceManager: ohos.agp.render.render3d.resources.ResourceHandle getResourceHandle(java.lang.String)>
<java.util.TimerTask: boolean cancel()>
<ohos.miscservices.pasteboard.PasteData: ohos.miscservices.pasteboard.PasteData.DataProperty getProperty()>
<ohos.agp.render.render3d.components.RenderMeshComponent: void <init>()>
<ohos.utils.geo.RectFloat: void rotateBy(ohos.utils.geo.RectFloat.RotationEnum)>
<java.sql.DataTruncation: void <init>(int,boolean,boolean,int,int)>
<ohos.media.common.VideoProperty.Builder: ohos.media.common.VideoProperty.Builder setRecorderFps(int)>
<java.time.LocalDateTime: java.time.LocalDateTime withHour(int)>
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>
<ohos.utils.BasePacMap: void putRemoteObject(java.lang.String,java.lang.Object)>
<ohos.utils.Parcel: short readShort()>
<ohos.media.camera.device.CameraDeviceCallback: void onCameraStatus(java.lang.String,int)>
<ohos.miscservices.download.DownloadSession: boolean remove()>
<java.util.Scanner: boolean hasNextInt()>
<javax.sql.RowSet: void setLong(java.lang.String,long)>
<ohos.event.notification.NotificationSlot: int getLedLightColor()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,java.lang.String[])>
<java.security.cert.PKIXCertPathBuilderResult: java.lang.String toString()>
<ohos.data.search.schema.PhotoItem: void <init>()>
<java.nio.channels.SelectionKey: java.lang.Object attachment()>
<ohos.global.icu.text.IDNA.Error: ohos.global.icu.text.IDNA.Error[] values()>
<java.util.ArrayList: java.util.List subList(int,int)>
<ohos.javax.xml.stream.StreamFilter: boolean accept(ohos.javax.xml.stream.XMLStreamReader)>
<ohos.org.xml.sax.Attributes: int getLength()>
<ohos.agp.components.Component: void setPaddingBottom(int)>
<javax.tools.Diagnostic: long getEndPosition()>
<java.security.PrivilegedActionException: java.lang.String toString()>
<ohos.agp.components.Picker: void setSelectorItemNum(int)>
<ohos.org.w3c.dom.TypeInfo: java.lang.String getTypeNamespace()>
<java.time.Period: java.time.Period withMonths(int)>
<javax.crypto.KeyAgreementSpi: void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<java.util.Properties: void storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)>
<java.util.concurrent.ForkJoinPool: boolean isTerminating()>
<ohos.agp.render.Paint: void setStrokeMiter(float)>
<ohos.biometrics.authentication.BiometricAuthentication: void setSecureObjectCipher(javax.crypto.Cipher)>
<ohos.event.notification.ReminderRequestTimer: boolean marshalling(ohos.utils.Parcel)>
<java.net.SocketImpl: int getLocalPort()>
<ohos.agp.transition.TransitionScheduler: void startNewRootTransition(ohos.agp.components.ComponentContainer,ohos.agp.components.ComponentContainer)>
<ohos.media.camera.device.FrameConfig: boolean equals(java.lang.Object)>
<java.nio.charset.CoderResult: void throwException()>
<ohos.bundle.AbilityInfo: void <init>(ohos.bundle.AbilityInfo)>
<java.sql.Connection: boolean isClosed()>
<java.util.stream.IntStream: java.util.OptionalInt findFirst()>
<ohos.agp.render.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,float[])>
<ohos.hiviewdfx.HiChecker.Rule: ohos.hiviewdfx.HiChecker.Rule valueOf(java.lang.String)>
<ohos.media.camera.CameraKit: ohos.media.camera.device.CameraAbility getCameraAbility(java.lang.String)>
<ohos.media.common.Format: void <init>()>
<ohos.aafwk.ability.continuation.ExtraParams: java.lang.String[] getDevType()>
<ohos.bluetooth.ble.BlePeripheralManager: boolean notifyCharacteristicChanged(ohos.bluetooth.ble.BlePeripheralDevice,ohos.bluetooth.ble.GattCharacteristic,boolean)>
<ohos.accessibility.AccessibilityStateEvent: int getEventResult()>
<ohos.agp.utils.DimensFloat: int getMedianToInt()>
<ohos.net.DataFlowStatistics: long getCellularTxBytes()>
<ohos.agp.database.DataSetSubscriber: void onChanged()>
<ohos.utils.PlainBooleanArray: void setValueAt(int,boolean)>
<ohos.agp.components.Component: void setRight(int)>
<ohos.global.i18n.utils.TextRecognitionUtils: int[] getAddress(java.lang.String)>
<java.time.chrono.IsoChronology: java.time.Period period(int,int,int)>
<java.util.concurrent.DelayQueue: int drainTo(java.util.Collection)>
<ohos.agp.components.element.ShapeElement: void setRgbColor(ohos.agp.colors.RgbColor)>
<ohos.system.version.SystemVersion: java.lang.String getReleaseType()>
<java.lang.reflect.Array: boolean getBoolean(java.lang.Object,int)>
<javax.sql.RowSetListener: void rowChanged(javax.sql.RowSetEvent)>
<java.nio.CharBuffer: java.nio.CharBuffer append(java.lang.CharSequence,int,int)>
<ohos.global.icu.text.BreakIterator: int preceding(int)>
<ohos.event.commonevent.CommonEventSubscribeInfo: java.lang.String getPermission()>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate date(int,int,int)>
<java.lang.Short: int compareTo(java.lang.Short)>
<java.time.Duration: java.time.Duration minusDays(long)>
<java.util.EnumMap: java.util.Set entrySet()>
<java.util.concurrent.AbstractExecutorService: java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)>
<ohos.agp.components.Component: void setMinHeight(int)>
<ohos.aafwk.ability.AbilitySlice: void onBackPressed()>
<ohos.agp.window.dialog.BaseDialog: void create()>
<java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,short)>
<ohos.data.orm.Clob: int hashCode()>
<java.util.TreeSet: java.util.SortedSet tailSet(java.lang.Object)>
<java.security.PKCS12Attribute: java.lang.String toString()>
<java.util.logging.FileHandler: void <init>(java.lang.String,boolean)>
<ohos.global.icu.text.RuleBasedCollator: void setCaseLevel(boolean)>
<java.security.BasicPermission: void <init>(java.lang.String)>
<ohos.agp.render.Canvas: void scale(float,float)>
<java.math.BigDecimal: void <init>(java.math.BigInteger,int,java.math.MathContext)>
<ohos.agp.render.Texture: ohos.media.image.PixelMap getPixelMap()>
<java.util.Enumeration: java.lang.Object nextElement()>
<javax.lang.model.util.Types: javax.lang.model.element.TypeElement boxedClass(javax.lang.model.type.PrimitiveType)>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
<ohos.aafwk.ability.continuation.DeviceConnectState: void <clinit>()>
<ohos.event.notification.NotificationActionButton: ohos.utils.PacMap getAdditionalData()>
<javax.lang.model.element.Element: java.lang.Object accept(javax.lang.model.element.ElementVisitor,java.lang.Object)>
<ohos.media.audio.ToneDescriptor: void <init>(ohos.media.audio.ToneDescriptor.ToneType)>
<java.util.Date: int getDay()>
<ohos.agp.components.Picker: ohos.agp.components.element.Element getDisplayedBottomElement()>
<ohos.aafwk.ability.ProviderFormInfo: ohos.aafwk.ability.ProviderFormInfo createFromParcel(ohos.utils.Parcel)>
<ohos.global.icu.text.TimeZoneFormat: int parseOffsetLocalizedGMT(java.lang.String,java.text.ParsePosition)>
<java.time.Clock: java.time.Clock systemDefaultZone()>
<ohos.agp.components.webengine.WebView: int getWebPageHeight()>
<ohos.event.commonevent.CommonEventSubscriber: void abortCommonEvent()>
<javax.crypto.spec.DHGenParameterSpec: void <init>(int,int)>
<ohos.wifi.WifiLinkedInfo: int getIpAddress()>
<java.util.AbstractMap.SimpleImmutableEntry: java.lang.Object getValue()>
<java.text.DateFormat: void setLenient(boolean)>
<java.io.BufferedInputStream: int read()>
<ohos.net.HttpResponseCache: int getRequestCount()>
<ohos.data.resultset.ResultSetWrapper: void setAffectedByUris(java.lang.Object,java.util.List)>
<java.nio.ByteBuffer: long getLong()>
<ohos.javax.xml.parsers.SAXParser: void parse(java.io.InputStream,ohos.org.xml.sax.helpers.DefaultHandler,java.lang.String)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.util.TimeZone parse(ohos.global.icu.text.TimeZoneFormat.Style,java.lang.String,java.text.ParsePosition,ohos.global.icu.util.Output)>
<java.io.ObjectInputStream: int read(byte[],int,int)>
<ohos.sysappcomponents.contact.entity.Event: int hashCode()>
<ohos.agp.components.element.FrameAnimationElement: int getNumberOfFrames()>
<java.security.cert.PKIXCertPathChecker: void init(boolean)>
<ohos.bluetooth.ble.GattCharacteristic: boolean setValue(byte[])>
<ohos.media.sessioncore.AVController: ohos.media.sessioncore.AVController.PlayControls getPlayControls()>
<ohos.utils.PlainLongArray: java.lang.Object clone()>
<ohos.eventhandler.InnerEvent: ohos.eventhandler.InnerEvent copyFrom(ohos.eventhandler.InnerEvent)>
<ohos.event.notification.NotificationRequest: void <init>()>
<ohos.agp.components.TabList: void setSelectedTabIndicatorColor(int)>
<ohos.biometrics.authentication.BiometricAuthentication: void setSecureObjectSignature(java.security.Signature)>
<java.time.OffsetDateTime: java.util.Comparator timeLineOrder()>
<javax.crypto.spec.DHPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeProcessingInstruction(java.lang.String)>
<java.sql.Statement: boolean getMoreResults()>
<java.security.cert.TrustAnchor: void <init>(java.lang.String,java.security.PublicKey,byte[])>
<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>
<java.sql.SQLFeatureNotSupportedException: void <init>(java.lang.String,java.lang.String,int)>
<ohos.agp.render.render3d.components.LightComponent: ohos.agp.render.render3d.math.Vector3 getColor()>
<ohos.media.audio.AudioCapturerConfig: void <init>(int,ohos.media.audio.AudioStreamInfo,java.lang.String,int,boolean,ohos.media.audio.AudioCapturerInfo.AudioInputSource)>
<ohos.agp.components.DependentLayout: int getIgnoreAlignment()>
<ohos.agp.components.CornerMark: int getWidth()>
<ohos.agp.render.opengl.EGL: ohos.agp.render.opengl.EGLSurface eglGetCurrentSurface(int)>
<javax.lang.model.util.SimpleAnnotationValueVisitor7: void <init>(java.lang.Object)>
<ohos.global.i18n.utils.LocalesFallback: void <init>()>
<java.time.LocalDate: java.time.LocalDate minusMonths(long)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>
<ohos.app.Context: ohos.bundle.ApplicationInfo getApplicationInfo()>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: ohos.media.common.sessioncore.AVPlaybackState.Builder setAVPlaybackState(int,long,float)>
<java.lang.String: void <init>(byte[],int,int,java.lang.String)>
<ohos.agp.components.element.ShapeElement: void setDashPathEffectValues(float[],float)>
<java.security.SecureRandom: java.lang.String getAlgorithm()>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.io.InputStream)>
<java.util.List: boolean removeAll(java.util.Collection)>
<ohos.global.icu.util.ICUUncheckedIOException: void <init>()>
<java.time.OffsetTime: long getLong(java.time.temporal.TemporalField)>
<ohos.global.icu.text.StringSearch: void setIndex(int)>
<ohos.aafwk.ability.AbilitySlice: boolean castTempForm(long)>
<ohos.data.search.model.IndexForm: int hashCode()>
<ohos.global.icu.util.Calendar: void pinField(int)>
<ohos.data.search.schema.EmailItem: java.lang.String getCcEmail()>
<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>
<java.time.temporal.Temporal: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.animation.AnimatorGroup: int getRoundCount()>
<ohos.net.DataFlowStatistics: long getUidRxBytes(int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,int)>
<ohos.bundle.ElementName: void setBundleName(java.lang.String)>
<java.net.SecureCacheResponse: void <init>()>
<java.sql.SQLIntegrityConstraintViolationException: void <init>()>
<ohos.agp.components.Component: boolean isScrollbarOverlapEnabled()>
<ohos.agp.render.Path: boolean conservativelyContainsRect(ohos.agp.utils.RectFloat)>
<ohos.agp.animation.AnimatorValue: void setCurve(ohos.agp.animation.Animator.TimelineCurve)>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>
<ohos.agp.render.ColorMatrix: void <init>(ohos.agp.render.ColorMatrix)>
<java.sql.Driver: int getMajorVersion()>
<java.util.Currency: java.lang.String toString()>
<ohos.usb.USBDevicePipe: int bulkTransfer(ohos.usb.USBEndpoint,byte[],int,int)>
<java.lang.Runtime: void gc()>
<ohos.eventhandler.Logger: void log(java.lang.String)>
<java.math.BigInteger: int getLowestSetBit()>
<ohos.org.xml.sax.HandlerBase: void characters(char[],int,int)>
<java.security.cert.PKIXParameters: void setRevocationEnabled(boolean)>
<java.lang.SecurityManager: void <init>()>
<java.nio.file.Files: boolean isHidden(java.nio.file.Path)>
<java.util.Calendar: int compareTo(java.util.Calendar)>
<java.lang.reflect.Field: short getShort(java.lang.Object)>
<ohos.data.search.schema.Schema: java.lang.String getName()>
<java.sql.CallableStatement: java.sql.NClob getNClob(int)>
<ohos.agp.render.render3d.resources.MaterialDesc: int getMaterialFlags()>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setContent(java.lang.String)>
<java.net.Socket: void <init>(java.net.InetAddress,int)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneFormat setTimeZoneNames(ohos.global.icu.text.TimeZoneNames)>
<java.nio.channels.spi.AbstractSelector: void begin()>
<java.security.cert.X509CertSelector: void setBasicConstraints(int)>
<ohos.agp.render.opengl.GLES1X: void glRotatex(int,int,int,int)>
<ohos.agp.components.TimePicker: void setTimeChangedListener(ohos.agp.components.TimePicker.TimeChangedListener)>
<ohos.event.notification.NotificationHelper: boolean areNotificationsSuspended()>
<ohos.agp.window.service.ComponentPadding: boolean isPaddingFullyUsed()>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion conjugate(float,float,float,float)>
<ohos.data.resultset.AbsSharedResultSet: java.lang.String getString(int)>
<ohos.utils.net.UrlQueryFilter: ohos.utils.net.UrlQueryFilter.ValueFilter filterEncodedUrl()>
<java.text.DecimalFormatSymbols: java.util.Locale[] getAvailableLocales()>
<ohos.ai.cv.common.CvPoint: void negate()>
<ohos.global.icu.text.TimeZoneNames: ohos.global.icu.text.TimeZoneNames getInstance(java.util.Locale)>
<java.security.SignatureSpi: void engineSetParameter(java.lang.String,java.lang.Object)>
<ohos.agp.components.SlideDrawer: void <init>(ohos.app.Context)>
<ohos.dcall.CallStateObserver: void onVoiceMailMsgIndicatorUpdated(boolean)>
<ohos.usb.USBEndpoint: int getEndpointNumber()>
<ohos.org.xml.sax.AttributeList: java.lang.String getValue(java.lang.String)>
<ohos.media.image.common.Filter: long applyToSource(ohos.media.image.ImageSource)>
<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>
<ohos.data.distributed.common.Options: ohos.data.distributed.common.Options setBackup(boolean)>
<java.lang.Long: int compareUnsigned(long,long)>
<java.security.cert.X509CertSelector: void setPathToNames(java.util.Collection)>
<java.lang.Short: java.lang.Short valueOf(java.lang.String,int)>
<java.nio.file.Files: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.nio.file.OpenOption[])>
<ohos.global.icu.lang.UCharacter: java.lang.String toLowerCase(java.util.Locale,java.lang.String)>
<javax.lang.model.util.SimpleTypeVisitor6: java.lang.Object visitArray(javax.lang.model.type.ArrayType,java.lang.Object)>
<java.time.chrono.ChronoPeriod: java.time.temporal.Temporal addTo(java.time.temporal.Temporal)>
<ohos.global.i18n.LocaleHelperUtils: java.lang.String getCountryName(java.util.Locale,java.util.Locale,boolean)>
<ohos.global.icu.text.Edits: void reset()>
<java.lang.String: java.lang.String valueOf(char[],int,int)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: void <init>()>
<ohos.agp.render.Path: void updateBoundsCache()>
<java.util.concurrent.ForkJoinTask: void quietlyJoin()>
<ohos.location.Location: boolean marshalling(ohos.utils.Parcel)>
<ohos.aafwk.ability.DataAbilityRemoteException: void <init>(java.lang.String)>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale acceptLanguage(java.lang.String,boolean[])>
<java.util.Scanner: boolean hasNextByte()>
<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getLocalCertificates()>
<ohos.utils.geo.RectFloat.RotationEnum: ohos.utils.geo.RectFloat.RotationEnum[] values()>
<ohos.rpc.RemoteObject: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<java.lang.Math: long max(long,long)>
<java.nio.channels.AsynchronousByteChannel: void read(java.nio.ByteBuffer,java.lang.Object,java.nio.channels.CompletionHandler)>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>
<java.util.stream.Collectors: java.util.stream.Collector summarizingInt(java.util.function.ToIntFunction)>
<ohos.media.audio.SoundEffect.SoundEffectInfo: java.util.UUID getUid()>
<java.util.concurrent.ConcurrentSkipListMap: void <init>(java.util.SortedMap)>
<ohos.aafwk.ability.Ability: void setResult(int,ohos.aafwk.content.Intent)>
<ohos.media.common.AVMetadata.Builder: ohos.media.common.AVMetadata.Builder setLong(java.lang.String,long)>
<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>
<java.util.concurrent.CompletableFuture: int getNumberOfDependents()>
<ohos.utils.BasePacMap: byte getByteValue(java.lang.String)>
<java.util.SortedSet: java.util.Spliterator spliterator()>
<ohos.media.camera.device.Camera: ohos.media.camera.device.CameraConfig.Builder getCameraConfigBuilder()>
<ohos.miscservices.pasteboard.PasteData.DataProperty: ohos.utils.PacMap getAdditions()>
<javax.net.ssl.TrustManagerFactorySpi: javax.net.ssl.TrustManager[] engineGetTrustManagers()>
<ohos.miscservices.inputmethod.RichContent: java.lang.String getDataDetail()>
<ohos.account.app.AppAccount: boolean marshalling(ohos.utils.Parcel)>
<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>
<ohos.bundle.IBundleManager: java.util.List getFormsByApp(java.lang.String)>
<java.lang.ProcessBuilder.Redirect: java.lang.ProcessBuilder.Redirect.Type type()>
<ohos.aafwk.ability.AbilitySlice: void terminate()>
<java.util.concurrent.LinkedBlockingDeque: boolean offerFirst(java.lang.Object)>
<java.lang.InterruptedException: void <init>()>
<ohos.agp.render.opengl.GLES20: void glVertexAttrib1f(int,float)>
<java.io.PrintStream: void <init>(java.io.OutputStream,boolean)>
<java.lang.Character: boolean equals(java.lang.Object)>
<java.time.Month: int maxLength()>
<java.time.Month: int length(boolean)>
<ohos.data.search.model.IndexData: java.lang.Long getAsLong(java.lang.String)>
<java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>
<ohos.net.HttpResponseCache: int getNetworkCount()>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: java.lang.String getAdditionalText()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates beginsWith(java.lang.String,java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationNormalContent: java.lang.String getText()>
<ohos.utils.zson.ZSONReader: java.lang.String readName()>
<java.io.StringReader: int read()>
<java.lang.Long: long lowestOneBit(long)>
<java.time.Duration: java.time.Duration between(java.time.temporal.Temporal,java.time.temporal.Temporal)>
<ohos.global.resource.solidxml.TypedAttribute: int getType()>
<java.security.interfaces.RSAMultiPrimePrivateCrtKey: java.math.BigInteger getPrimeP()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThanOrEqualTo(java.lang.String,long)>
<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
<ohos.global.icu.lang.UCharacter: java.lang.String toUpperCase(java.lang.String)>
<ohos.agp.components.Component: int getHeight()>
<ohos.agp.utils.Rect: void scale(float)>
<java.nio.charset.CoderMalfunctionError: void <init>(java.lang.Exception)>
<ohos.utils.Ashmem: void closeAshmem()>
<ohos.utils.BasePacMap: long[] getLongValueArray(java.lang.String)>
<ohos.utils.net.UrlQueryFilter.ValueFilter: java.lang.String filterUrl(java.lang.String)>
<java.util.concurrent.ForkJoinPool: int drainTasksTo(java.util.Collection)>
<ohos.sysappcomponents.contact.entity.Email: void <clinit>()>
<java.io.CharArrayReader: void mark(int)>
<java.sql.SQLInput: java.io.InputStream readBinaryStream()>
<java.sql.ResultSetMetaData: int getColumnType(int)>
<java.security.IdentityScope: void <init>(java.lang.String,java.security.IdentityScope)>
<java.sql.SQLDataException: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glGetShaderInfoLog(int,int,java.nio.IntBuffer,java.lang.StringBuffer)>
<ohos.ai.cv.common.ICvBase: int prepare()>
<ohos.global.icu.util.ULocale: java.lang.String getLanguage()>
<java.text.ParsePosition: boolean equals(java.lang.Object)>
<java.lang.ClassLoader: void setSigners(java.lang.Class,java.lang.Object[])>
<ohos.agp.components.ProgressBar: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendInstant()>
<ohos.agp.utils.Matrix44: void setDouble(int,int,double)>
<java.sql.DatabaseMetaData: java.lang.String getSystemFunctions()>
<ohos.global.icu.util.Calendar: int internalGet(int,int)>
<java.lang.Character: char[] toChars(int)>
<java.net.DatagramSocket: void connect(java.net.SocketAddress)>
<javax.net.ssl.HandshakeCompletedEvent: void <init>(javax.net.ssl.SSLSocket,javax.net.ssl.SSLSession)>
<ohos.utils.Parcel: boolean writeShortArray(short[])>
<ohos.eventhandler.EventHandler: ohos.eventhandler.EventRunner getEventRunner()>
<javax.tools.Diagnostic.Kind: void <clinit>()>
<ohos.agp.render.opengl.GLES1X: void glScalex(int,int,int)>
<ohos.utils.Parcel: boolean writeBytes(byte[])>
<java.time.chrono.Era: int getValue()>
<ohos.multimodalinput.event.SpeechEvent: long getOccurredTime()>
<ohos.agp.render.opengl.GLES1X: void <init>()>
<ohos.sysappcomponents.contact.entity.PostalAddress: void setPostalAddress(java.lang.String)>
<ohos.data.resultset.ResultSetWrapper: java.util.List getAffectedByUris()>
<ohos.utils.Ashmem: void unmapAShmem()>
<ohos.agp.components.SlideDrawer.DisplayMode: void <clinit>()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThan(java.lang.String,java.lang.String)>
<ohos.telephony.TdscdmaSignalInformation: boolean equals(java.lang.Object)>
<ohos.location.GeoAddress: void setRoadName(java.lang.String)>
<java.lang.Character: boolean isSpaceChar(int)>
<ohos.telephony.TdscdmaSignalInformation: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.Instant: java.time.OffsetDateTime atOffset(java.time.ZoneOffset)>
<java.util.PropertyResourceBundle: void <init>(java.io.Reader)>
<javax.crypto.CipherSpi: void engineUpdateAAD(byte[],int,int)>
<java.io.PrintWriter: void print(double)>
<ohos.global.icu.util.JapaneseCalendar: int getActualMaximum(int)>
<ohos.multimodalinput.event.KeyEvent: void <init>()>
<ohos.accessibility.AccessibilityEventInfo: void setViewId(int)>
<java.util.zip.Checksum: void reset()>
<java.time.chrono.ChronoLocalDateTime: boolean isSupported(java.time.temporal.TemporalField)>
<java.util.concurrent.ThreadPoolExecutor.AbortPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>
<ohos.global.i18n.text.MeasureFormatter: ohos.global.i18n.text.MeasureFormatter getInstance()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,byte)>
<ohos.media.photokit.metadata.AVStorage.Audio.Media: ohos.utils.net.Uri fetchResource(java.lang.String)>
<java.util.ArrayList: int indexOf(java.lang.Object)>
<ohos.media.common.Source: void <init>(java.io.FileDescriptor,long,long)>
<javax.crypto.spec.DHParameterSpec: int getL()>
<ohos.agp.components.AbsButton: void setChecked(boolean)>
<java.time.LocalDateTime: int getDayOfMonth()>
<java.security.cert.CertPathBuilderResult: java.lang.Object clone()>
<ohos.bluetooth.ble.BleAdvertiseData.Builder: ohos.bluetooth.ble.BleAdvertiseData.Builder addServiceUuid(ohos.utils.SequenceUuid)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterReturnValue(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>
<javax.sql.RowSet: void setDouble(int,double)>
<java.util.TreeSet: java.util.Spliterator spliterator()>
<java.security.cert.X509Certificate: java.util.Date getNotAfter()>
<ohos.utils.zson.ZSONReader: void startObject()>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>
<java.time.chrono.Era: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage exceptionally(java.util.function.Function)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notIn(java.lang.String,java.sql.Time[])>
<ohos.agp.components.Picker.ScrolledListener: void onScrollStateUpdated(ohos.agp.components.Picker,int)>
<ohos.global.icu.text.TimeZoneNames: java.lang.String getTimeZoneDisplayName(java.lang.String,ohos.global.icu.text.TimeZoneNames.NameType)>
<ohos.global.icu.number.FormattedNumber: java.lang.CharSequence subSequence(int,int)>
<java.time.chrono.AbstractChronology: java.time.chrono.ChronoLocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<javax.net.ssl.SSLEngine: void setUseClientMode(boolean)>
<java.lang.Package: boolean isAnnotationPresent(java.lang.Class)>
<ohos.agp.components.ProgressBar: int getStep()>
<java.sql.CallableStatement: void setCharacterStream(java.lang.String,java.io.Reader)>
<java.nio.file.spi.FileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>
<java.time.OffsetDateTime: java.time.OffsetDateTime of(int,int,int,int,int,int,int,java.time.ZoneOffset)>
<ohos.sensor.agent.SensorAgent: java.util.List getAllSensors(int)>
<ohos.data.resultset.ResultSet.ColumnType: int getValue()>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>
<ohos.agp.render.render3d.util.SceneUtil: void updateCameraViewport(ohos.agp.render.render3d.Entity,int,int,boolean,float)>
<ohos.data.rdb.RawRdbPredicates: java.util.List getWhereArgs()>
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>
<ohos.aafwk.ability.continuation.ExtraParams: void setDevType(java.lang.String[])>
<ohos.data.resultset.AbsResultSet: boolean goToPreviousRow()>
<ohos.telephony.TelephoneNumberUtils: java.lang.String normalizePhoneNumber(java.lang.String)>
<java.time.Duration: long toDays()>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty scaleXBy(float)>
<java.nio.ByteBuffer: java.nio.ShortBuffer asShortBuffer()>
<ohos.utils.PacMap: void putBooleanValue(java.lang.String,boolean)>
<ohos.agp.components.PageSlider: ohos.agp.components.PageSlider.ReboundEffectParams getReboundEffectParams()>
<java.net.InetAddress: boolean isMCGlobal()>
<ohos.media.image.PixelMap: void readPixels(int[],int,int,ohos.media.image.common.Rect)>
<javax.lang.model.type.TypeVariable: javax.lang.model.element.Element asElement()>
<ohos.agp.components.Slider: void <init>(ohos.app.Context)>
<java.sql.Connection: java.sql.Statement createStatement()>
<java.util.stream.IntStream: java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)>
<java.lang.Math: float signum(float)>
<ohos.data.DatabaseFileConfig: java.lang.String getName()>
<java.net.DatagramSocket: boolean getReuseAddress()>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getExponentMultiplicationSign()>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getScientificInstance()>
<java.io.File: java.io.File getAbsoluteFile()>
<javax.crypto.spec.RC5ParameterSpec: void <init>(int,int,int,byte[])>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getWordPos(java.lang.String,int)>
<ohos.bluetooth.ble.BleScanFilter: void setPeripheralManufacturerData(int,byte[],byte[])>
<java.math.BigDecimal: int hashCode()>
<java.time.format.DateTimeFormatter: java.time.ZoneId getZone()>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: ohos.media.common.sessioncore.AVPlaybackState.Builder setCurrentBufferedPosition(long)>
<java.io.PrintWriter: void print(char[])>
<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>
<ohos.account.app.AppAccountAbility: java.util.List getAllAccounts(java.lang.String)>
<ohos.nfc.tag.MifareClassicTag: boolean authenSectorUseKey(int,byte[],byte)>
<ohos.agp.components.PageSliderProvider: void notifyDataChanged()>
<java.sql.Driver: java.sql.DriverPropertyInfo[] getPropertyInfo(java.lang.String,java.util.Properties)>
<java.util.concurrent.locks.StampedLock: long readLockInterruptibly()>
<java.beans.PropertyChangeListener: void propertyChange(java.beans.PropertyChangeEvent)>
<java.lang.StringBuffer: int codePointCount(int,int)>
<ohos.aafwk.ability.AbilitySlice: void onForeground(ohos.aafwk.content.Intent)>
<ohos.telephony.NrSignalInformation: void <init>()>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo.Builder requestDeviceIdleType(boolean,int)>
<ohos.agp.components.Component: ohos.agp.components.Component.DraggedListener getDraggedListener()>
<java.time.Duration: boolean isZero()>
<java.util.List: java.util.List subList(int,int)>
<java.util.zip.Checksum: void update(int)>
<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>
<ohos.sysappcomponents.calendar.entity.Accounts: java.lang.String getAccType()>
<java.util.LongSummaryStatistics: long getSum()>
<ohos.agp.components.Picker: void setValue(int)>
<ohos.global.icu.util.GregorianCalendar: void setGregorianChange(java.util.Date)>
<ohos.media.photokit.metadata.AVMetadataHelper: void release()>
<java.util.StringJoiner: java.util.StringJoiner setEmptyValue(java.lang.CharSequence)>
<ohos.agp.components.Rating.RatingChangedListener: void onStartTrackingTouch(ohos.agp.components.Rating)>
<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap.KeySetView newKeySet(int)>
<ohos.media.audio.AudioManager: boolean setAudioParameter(java.lang.String,java.lang.String)>
<java.sql.SQLWarning: void <init>()>
<java.security.cert.X509CRL: java.security.Principal getIssuerDN()>
<java.util.concurrent.CountedCompleter: void setPendingCount(int)>
<ohos.data.search.schema.Schema: java.lang.String getUrl()>
<java.sql.SQLSyntaxErrorException: void <init>(java.lang.Throwable)>
<ohos.global.icu.text.Bidi: void setPara(java.text.AttributedCharacterIterator)>
<ohos.agp.components.webengine.WebAgent: void <init>()>
<java.net.Inet6Address: java.lang.String getHostAddress()>
<java.io.PipedOutputStream: void <init>()>
<java.time.chrono.ChronoLocalDate: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>
<java.util.concurrent.ForkJoinPool.ManagedBlocker: boolean block()>
<ohos.data.distributed.device.DeviceKvStore: void unRegisterSyncCallback()>
<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>
<ohos.global.icu.util.IndianCalendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<ohos.utils.geo.Point: void <init>(ohos.utils.geo.Point)>
<ohos.global.icu.text.CompactDecimalFormat: ohos.global.icu.text.CompactDecimalFormat getInstance(ohos.global.icu.util.ULocale,ohos.global.icu.text.CompactDecimalFormat.CompactStyle)>
<ohos.agp.utils.DimensFloat: void <init>(int,int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,int)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: boolean isConversationGroup()>
<java.awt.font.NumericShaper: void shape(char[],int,int)>
<java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable)>
<ohos.agp.render.render3d.Scene: ohos.agp.render.render3d.Engine getEngine()>
<ohos.media.audio.AudioCapturerInfo.Builder: ohos.media.audio.AudioCapturerInfo.Builder audioStreamInfo(ohos.media.audio.AudioStreamInfo)>
<ohos.agp.components.TabList: int getTabMargin()>
<ohos.global.resource.ResourceType: ohos.global.resource.ResourceType valueOf(java.lang.String)>
<java.util.Comparator: java.util.Comparator reverseOrder()>
<ohos.agp.render.Path: void addRoundRect(ohos.agp.utils.RectFloat,float[],ohos.agp.render.Path.Direction)>
<java.util.ArrayDeque: java.lang.Object getLast()>
<javax.tools.DiagnosticCollector: void <init>()>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: java.lang.String toString()>
<java.security.SignedObject: java.lang.Object getObject()>
<java.util.stream.DoubleStream: java.util.stream.Stream mapToObj(java.util.function.DoubleFunction)>
<ohos.agp.components.ScrollHelper: float getCurrVelocity()>
<java.io.StringReader: boolean markSupported()>
<java.text.BreakIterator: java.text.BreakIterator getSentenceInstance(java.util.Locale)>
<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
<ohos.agp.render.opengl.GLES1X: void glScalef(float,float,float)>
<java.io.FileInputStream: void finalize()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)>
<ohos.agp.components.ComponentContainer: void setArrangeListener(ohos.agp.components.ComponentContainer.ArrangeListener)>
<ohos.media.audio.SoundPlayer: boolean play(ohos.media.audio.ToneDescriptor.ToneType,int)>
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>
<java.util.concurrent.locks.LockSupport: void park()>
<ohos.aafwk.ability.AbilitySlice: void postTask(java.lang.Runnable,long)>
<ohos.global.i18n.text.MeasureOptions.Unit: ohos.global.icu.util.MeasureUnit getMeasureUnit()>
<java.security.Key: java.lang.String getAlgorithm()>
<java.sql.CallableStatement: void setBinaryStream(java.lang.String,java.io.InputStream)>
<java.io.DataOutputStream: void writeShort(int)>
<ohos.org.xml.sax.SAXParseException: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int)>
<ohos.global.icu.text.Collator: ohos.global.icu.text.Collator cloneAsThawed()>
<ohos.data.orm.OrmContext: java.lang.Double sum(ohos.data.orm.OrmPredicates,java.lang.String)>
<ohos.data.orm.Clob: java.io.OutputStream setAsciiStream(long)>
<ohos.miscservices.timeutility.Time: long getRealTime()>
<java.text.DateFormat: java.text.DateFormat getInstance()>
<ohos.net.NetHandle: java.lang.String toString()>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getKeywords(java.lang.String,int,ohos.ai.nlu.OnResultListener)>
<ohos.global.i18n.phonenumbers.InputFormatter: ohos.global.i18n.phonenumbers.InputFormatter getInstance(java.lang.String)>
<java.time.Instant: java.time.Instant ofEpochSecond(long)>
<java.math.BigDecimal: java.math.BigDecimal abs()>
<java.security.cert.CertPathValidatorSpi: java.security.cert.CertPathChecker engineGetRevocationChecker()>
<java.sql.Date: void <init>(long)>
<ohos.utils.Scope: java.lang.Comparable getLower()>
<java.util.LinkedList: boolean remove(java.lang.Object)>
<javax.tools.FileObject: java.lang.CharSequence getCharContent(boolean)>
<ohos.event.notification.NotificationSubscribeInfo: void <init>()>
<ohos.agp.render.render3d.components.RenderMeshComponent: void setCastShadowsEnabled(boolean)>
<ohos.agp.components.DatePicker: boolean isMonthFixed()>
<java.util.TimeZone: java.time.ZoneId toZoneId()>
<java.lang.Package: java.lang.Package getPackage(java.lang.String)>
<ohos.data.search.schema.AppItem: ohos.data.search.schema.AppItem setAppCategory(java.lang.String)>
<ohos.aafwk.ability.RunningProcessInfo: int getLastMemoryLevel()>
<ohos.wifi.WifiScanInfo: int getSecurityType()>
<ohos.agp.components.TextField: void <init>(ohos.app.Context)>
<ohos.miscservices.timeutility.Timer: void <init>()>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,float)>
<ohos.agp.components.webengine.ScaleController: void setScaleChangeListener(ohos.agp.components.webengine.ScaleChangeListener)>
<java.time.LocalDateTime: java.time.LocalDateTime minusWeeks(long)>
<ohos.ai.cv.common.CvPoint: boolean marshalling(ohos.utils.Parcel)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeReturnType(java.lang.Class)>
<ohos.agp.render.opengl.GLES2Ext: void glTexParameterIivEXT(int,int,int[])>
<ohos.media.audio.SoundPlayer: void <init>(java.lang.String)>
<java.sql.ResultSet: java.lang.Object getObject(java.lang.String)>
<ohos.agp.window.dialog.ListDialog: void setProvider(ohos.agp.components.BaseItemProvider)>
<java.security.MessageDigestSpi: int engineGetDigestLength()>
<ohos.agp.utils.Circle: void stretch(float)>
<ohos.agp.render.Vertices: int getIndexCount()>
<java.util.concurrent.ScheduledThreadPoolExecutor: void setContinueExistingPeriodicTasksAfterShutdownPolicy(boolean)>
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)>
<java.nio.DoubleBuffer: boolean hasArray()>
<ohos.agp.render.render3d.SceneNode: void setName(java.lang.String)>
<ohos.global.resource.solidxml.Theme: void <init>()>
<ohos.media.common.AudioProperty.Builder: ohos.media.common.AudioProperty build()>
<ohos.agp.render.Canvas: void scale(float,float,float,float)>
<java.math.BigInteger: int compareTo(java.lang.Object)>
<java.security.cert.X509CertSelector: void setPolicy(java.util.Set)>
<ohos.global.icu.text.UnicodeSet: void <init>(java.lang.String)>
<java.time.Period: java.time.Period withYears(int)>
<java.nio.channels.spi.AbstractSelector: void <init>(java.nio.channels.spi.SelectorProvider)>
<java.security.Provider: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<ohos.aafwk.ability.Ability: void onInactive()>
<java.util.concurrent.ConcurrentSkipListSet: java.util.Spliterator spliterator()>
<ohos.net.RouteInfo: java.lang.String getInterface()>
<java.lang.StrictMath: double signum(double)>
<ohos.agp.render.BlendMode: ohos.agp.render.BlendMode[] values()>
<ohos.utils.zson.ZSONArray: java.lang.String toString()>
<ohos.agp.render.Path: void <init>()>
<java.security.DomainLoadStoreParameter: java.util.Map getProtectionParams()>
<java.nio.file.attribute.BasicFileAttributeView: java.lang.String name()>
<javax.net.ssl.SSLSessionBindingEvent: javax.net.ssl.SSLSession getSession()>
<java.sql.PreparedStatement: void setLong(int,long)>
<java.net.Inet6Address: byte[] getAddress()>
<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setText(int,java.lang.String)>
<javax.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThanOrEqualTo(java.lang.String,java.lang.String)>
<ohos.data.resultset.TableResultSet: void <init>(java.lang.String[],int)>
<ohos.global.icu.text.MeasureFormat: java.lang.StringBuilder formatMeasures(java.lang.StringBuilder,java.text.FieldPosition,ohos.global.icu.util.Measure[])>
<java.lang.invoke.LambdaConversionException: void <init>()>
<ohos.org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>
<ohos.agp.components.IndexBar: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.colors.HslColor: ohos.agp.colors.HslColor assign(ohos.agp.colors.HslColor)>
<ohos.agp.components.AbsButton: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.utils.IntArray: void <init>()>
<javax.sql.RowSet: void setObject(int,java.lang.Object,int)>
<ohos.ai.tts.TtsListener: void onSpeechFinish(java.lang.String)>
<javax.sql.RowSet: void setShort(java.lang.String,short)>
<ohos.data.distributed.common.KvManagerConfig: void <init>(ohos.app.Context)>
<java.nio.file.DirectoryNotEmptyException: void <init>(java.lang.String)>
<java.security.KeyStore: void load(java.security.KeyStore.LoadStoreParameter)>
<java.lang.reflect.Array: void setFloat(java.lang.Object,int,float)>
<java.security.cert.PKIXCertPathValidatorResult: java.lang.String toString()>
<java.sql.CallableStatement: byte[] getBytes(int)>
<ohos.agp.render.Canvas: void drawRegion(ohos.agp.render.Region,ohos.agp.render.Paint)>
<ohos.media.camera.params.FaceDetectionResult: ohos.media.camera.params.Face[] getFaces()>
<java.util.concurrent.atomic.AtomicLongArray: long getAndSet(int,long)>
<ohos.aafwk.ability.Ability: boolean isTerminating()>
<javax.tools.JavaFileManager: javax.tools.JavaFileObject getJavaFileForOutput(javax.tools.JavaFileManager.Location,java.lang.String,javax.tools.JavaFileObject.Kind,javax.tools.FileObject)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setTextSize(int,int,ohos.agp.components.Text.TextSizeType)>
<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>
<java.awt.font.NumericShaper.Range: void <clinit>()>
<ohos.accessibility.AccessibilityAbilityInfo: int getAccessibilityAbilityType()>
<ohos.media.photokit.metadata.AVMetadataHelper: boolean setSource(java.lang.String)>
<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<ohos.agp.utils.Point: int hashCode()>
<java.util.ArrayList: void sort(java.util.Comparator)>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.ResourceBundle.Control)>
<ohos.agp.render.Paint: void horizontalZoom(float)>
<ohos.agp.components.AbsSlider.Formatter: java.lang.String format(int)>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getCharacterInstance()>
<ohos.event.commonevent.CommonEventSubscribeInfo: void setPermission(java.lang.String)>
<java.lang.StringBuffer: int capacity()>
<java.util.TreeSet: java.util.SortedSet headSet(java.lang.Object)>
<java.time.Period: java.time.chrono.ChronoPeriod multipliedBy(int)>
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)>
<ohos.global.i18n.text.MeasureOptions.Unit: java.lang.String getUnitType()>
<java.nio.file.Files: boolean notExists(java.nio.file.Path,java.nio.file.LinkOption[])>
<java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>
<ohos.agp.render.opengl.GLES1X: void glFlush()>
<ohos.agp.window.dialog.CommonDialog: void setDestroyedListener(ohos.agp.window.dialog.CommonDialog.DestroyedListener)>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getLineInstance(java.util.Locale)>
<ohos.agp.utils.Color: int alpha(int)>
<ohos.utils.IntervalTimer: void onInterval(long)>
<ohos.utils.PlainLongArray: int indexOfKey(int)>
<ohos.agp.components.element.ShapeElement: void <init>(ohos.app.Context,int)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int get(java.lang.Object)>
<ohos.bluetooth.ble.BlePeripheralDevice: boolean writeCharacteristic(ohos.bluetooth.ble.GattCharacteristic)>
<ohos.agp.utils.Matrix: void transpose()>
<java.util.Arrays: void setAll(java.lang.Object[],java.util.function.IntFunction)>
<ohos.agp.render.render3d.SceneNode: java.util.Optional lookupNodeByPath(java.lang.String)>
<java.io.InterruptedIOException: void <init>(java.lang.String)>
<ohos.agp.components.Component.ScaledListener: void onScaleUpdate(ohos.agp.components.Component,ohos.agp.components.ScaleInfo)>
<ohos.agp.components.SlideDrawer: ohos.agp.components.SlideDrawer.DrawerState getSlideState()>
<ohos.media.camera.params.PropertyKey.Key: void <init>(java.lang.String,java.lang.Class)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<java.sql.DatabaseMetaData: boolean supportsConvert()>
<ohos.media.sessioncore.AVController.PlayControls: void sendAVPlaybackCustomAction(java.lang.String,ohos.utils.PacMap)>
<java.security.Provider.Service: void <init>(java.security.Provider,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.Map)>
<java.util.prefs.Preferences: long getLong(java.lang.String,long)>
<ohos.interwork.utils.PacMapEx: void <init>()>
<java.lang.reflect.Executable: java.lang.Class[] getParameterTypes()>
<ohos.distributedhardware.devicemanager.DeviceInfo.DeviceType: ohos.distributedhardware.devicemanager.DeviceInfo.DeviceType valueOf(java.lang.String)>
<java.time.ZonedDateTime: java.time.ZonedDateTime withDayOfYear(int)>
<ohos.location.RequestParam: int getPriorityLevel()>
<java.util.LinkedHashSet: void <init>()>
<ohos.media.image.common.AllocatorType: void <clinit>()>
<java.io.BufferedReader: void close()>
<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>
<java.lang.Short: double doubleValue()>
<java.net.Authenticator: java.net.InetAddress getRequestingSite()>
<ohos.javax.xml.stream.events.XMLEvent: ohos.javax.xml.stream.events.StartElement asStartElement()>
<ohos.accessibility.ability.AccessibilityInfo: void setLongClickable(boolean)>
<java.net.Authenticator: java.lang.String getRequestingScheme()>
<ohos.agp.components.Component: void unsubscribeVoiceEvents()>
<ohos.app.Context: void startAbilities(ohos.aafwk.content.Intent[])>
<java.text.Bidi: int getRunLevel(int)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setSpecularFactor(ohos.agp.render.render3d.math.Vector3)>
<ohos.agp.render.opengl.GLES1X: void glMultMatrixf(java.nio.FloatBuffer)>
<ohos.data.distributed.user.SingleKvStore: double getDouble(java.lang.String)>
<java.security.KeyStoreSpi: boolean engineContainsAlias(java.lang.String)>
<ohos.ai.cv.text.Text: int getPageLanguage()>
<java.time.chrono.JapaneseDate: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<ohos.javax.xml.stream.XMLStreamReader: int getTextCharacters(int,char[],int,int)>
<ohos.utils.zson.ZSONArray: float getFloatValue(int)>
<java.time.chrono.ThaiBuddhistChronology: java.util.List eras()>
<java.net.Inet4Address: boolean isMCNodeLocal()>
<ohos.miscservices.inputmethod.EditingText: void setOffset(int)>
<javax.lang.model.util.AbstractElementVisitor6: void <init>()>
<java.lang.Thread: java.lang.Thread.UncaughtExceptionHandler getUncaughtExceptionHandler()>
<ohos.ai.asr.AsrClient: java.util.Optional createAsrClient(ohos.app.Context)>
<java.io.PrintStream: java.io.PrintStream printf(java.util.Locale,java.lang.String,java.lang.Object[])>
<ohos.agp.window.service.ComponentPadding: int getUnchangedPaddingRight()>
<java.util.regex.Matcher: java.lang.String group()>
<ohos.agp.components.ComponentTransition: ohos.agp.animation.AnimatorProperty getAnimatorProperty(int)>
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>
<java.text.FieldPosition: void <init>(java.text.Format.Field)>
<ohos.bundle.ApplicationInfo: java.lang.String getEntryDir()>
<ohos.agp.components.Picker: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.sql.ResultSet: void updateCharacterStream(int,java.io.Reader,int)>
<java.util.Vector: boolean addAll(java.util.Collection)>
<ohos.media.player.Player.IPlayerCallback: void onBufferingChange(int)>
<javax.sql.RowSetMetaData: void setTableName(int,java.lang.String)>
<ohos.global.icu.text.UnicodeSet: int span(java.lang.CharSequence,int,ohos.global.icu.text.UnicodeSet.SpanCondition)>
<java.net.Socket: int getSoLinger()>
<ohos.global.icu.text.CaseMap.Upper: ohos.global.icu.text.CaseMap.Upper omitUnchangedText()>
<ohos.global.icu.text.SimpleDateFormat: void <init>(java.lang.String,java.lang.String,ohos.global.icu.util.ULocale)>
<ohos.agp.render.opengl.GLES1X: void glGenBuffers(int,int[],int)>
<java.sql.CallableStatement: double getDouble(java.lang.String)>
<javax.sql.RowSet: int getMaxRows()>
<ohos.location.Locator: void stopLocating(ohos.location.LocatorCallback)>
<ohos.global.icu.text.NumberFormat: int getMinimumIntegerDigits()>
<ohos.data.distributed.common.SubscribeType: void <clinit>()>
<ohos.global.icu.text.UnicodeSet: void addMatchSetTo(ohos.global.icu.text.UnicodeSet)>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>
<java.sql.ResultSet: byte getByte(java.lang.String)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()>
<ohos.telephony.ShortMessage: boolean isReplaceMessage()>
<java.lang.Float: int hashCode(float)>
<java.io.InputStreamReader: java.lang.String getEncoding()>
<ohos.data.resultset.ResultSet: void unregisterObserver(ohos.data.rdb.DataObserver)>
<ohos.multimodalinput.event.TouchEvent: int getAction()>
<ohos.org.xml.sax.helpers.DefaultHandler: ohos.org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
<java.nio.file.attribute.DosFileAttributeView: void setSystem(boolean)>
<java.io.File: long lastModified()>
<java.lang.ProcessBuilder.Redirect: java.lang.ProcessBuilder.Redirect appendTo(java.io.File)>
<ohos.bluetooth.ble.BlePeripheralCallback: void connectionStateChangeEvent(int)>
<ohos.agp.render.opengl.GLES30: void glClearBufferiv(int,int,int[])>
<ohos.agp.render.render3d.SceneNode: void setRotation(ohos.agp.render.render3d.math.Quaternion)>
<java.text.BreakIterator: java.text.BreakIterator getWordInstance()>
<ohos.agp.components.Component: float getContentPositionX()>
<ohos.utils.LongPlainArray: java.lang.Object clone()>
<java.security.cert.PolicyNode: java.util.Iterator getChildren()>
<ohos.media.image.common.Filter: void <init>()>
<ohos.agp.components.ProgressBar: ohos.agp.utils.Color getProgressColor()>
<ohos.javax.xml.parsers.ParserConfigurationException: void <init>(java.lang.String)>
<java.util.DoubleSummaryStatistics: void combine(java.util.DoubleSummaryStatistics)>
<java.lang.Math: double cos(double)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getPatternInstance(ohos.global.icu.util.Calendar,java.lang.String,java.util.Locale)>
<ohos.global.icu.text.MeasureFormat.FormatWidth: ohos.global.icu.text.MeasureFormat.FormatWidth valueOf(java.lang.String)>
<javax.tools.ForwardingFileObject: void <init>(javax.tools.FileObject)>
<java.lang.String: void <init>(byte[],int,int)>
<javax.net.ssl.SSLSession: void invalidate()>
<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage exceptionally(java.util.function.Function)>
<ohos.nfc.oma.SEService.OnCallback: void serviceConnected()>
<java.nio.channels.AsynchronousSocketChannel: java.nio.channels.AsynchronousSocketChannel open(java.nio.channels.AsynchronousChannelGroup)>
<ohos.media.image.ImageSource.SourceOptions: void <init>()>
<ohos.data.rdb.RdbMismatchException: void <init>(java.lang.String)>
<java.time.Period: java.time.chrono.ChronoPeriod normalized()>
<java.time.zone.ZoneOffsetTransitionRule: int getDayOfMonthIndicator()>
<ohos.utils.geo.DimensFloat: float getMax()>
<ohos.global.icu.text.UCharacterIterator: int next()>
<ohos.utils.BasePacMap: boolean getBooleanValue(java.lang.String,boolean)>
<java.io.File: boolean canWrite()>
<ohos.media.image.common.ColorSpace: ohos.media.image.common.ColorSpace[] values()>
<ohos.app.GeneralReceiver: void onReceive(int,ohos.utils.PacMap)>
<ohos.wifi.p2p.WifiP2pGroup: java.lang.String getGroupName()>
<java.io.ObjectOutputStream: void useProtocolVersion(int)>
<ohos.media.muxer.Muxer: int appendTrack(ohos.media.common.Format)>
<ohos.multimodalinput.event.ManipulationEvent: ohos.multimodalinput.event.MmiPoint getPointerScreenPosition(int)>
<java.nio.LongBuffer: java.nio.LongBuffer compact()>
<ohos.event.notification.NotificationSlotGroup: void <init>()>
<java.net.Authenticator: java.lang.String getRequestingHost()>
<javax.lang.model.element.PackageElement: javax.lang.model.element.Element getEnclosingElement()>
<ohos.utils.RationalNumber: int getNumerator()>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle identity(java.lang.Class)>
<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>
<java.io.DataOutput: void writeBoolean(boolean)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThanOrEqualTo(java.lang.String,java.util.Date)>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter getInstance()>
<ohos.javax.xml.stream.XMLEventWriter: java.lang.String getPrefix(java.lang.String)>
<ohos.net.NetCapabilities: int hashCode()>
<ohos.agp.animation.Animator: int getLoopedCount()>
<java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>
<ohos.media.common.sessioncore.AVSubscriptionCallback: void onAVElementListLoaded(java.lang.String,java.util.List)>
<java.beans.PropertyChangeListenerProxy: void propertyChange(java.beans.PropertyChangeEvent)>
<ohos.global.icu.text.UnicodeSet: void <init>()>
<ohos.org.xml.sax.DocumentHandler: void characters(char[],int,int)>
<ohos.global.icu.text.CaseMap.Lower: ohos.global.icu.text.CaseMap omitUnchangedText()>
<ohos.ai.cv.common.CvPoint: boolean equals(int,int)>
<java.net.URL: java.lang.String toExternalForm()>
<java.time.ZonedDateTime: java.time.ZonedDateTime withFixedOffsetZone()>
<java.util.Base64: java.util.Base64.Encoder getMimeEncoder(int,byte[])>
<ohos.global.icu.text.Transliterator: java.lang.String getDisplayName(java.lang.String)>
<ohos.event.notification.NotificationHelper: void publishNotification(ohos.event.notification.NotificationRequest,java.lang.String)>
<ohos.utils.IntArray: boolean empty()>
<java.net.MulticastSocket: void joinGroup(java.net.SocketAddress,java.net.NetworkInterface)>
<java.sql.CallableStatement: java.sql.Ref getRef(java.lang.String)>
<ohos.org.xml.sax.XMLReader: ohos.org.xml.sax.EntityResolver getEntityResolver()>
<java.net.DatagramSocketImpl: int peekData(java.net.DatagramPacket)>
<javax.net.ssl.SSLSocket: boolean getNeedClientAuth()>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getEndTimezone()>
<ohos.agp.components.SlideDrawer: void <clinit>()>
<ohos.utils.LongPlainArray: void append(long,java.lang.Object)>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>
<ohos.miscservices.download.IDownloadListener: void onCompleted()>
<java.util.ArrayList: void ensureCapacity(int)>
<java.util.HashMap: void putAll(java.util.Map)>
<ohos.app.AbilityContext: ohos.bundle.AbilityInfo getAbilityInfo()>
<ohos.utils.LightweightMap: java.lang.Object keyAt(int)>
<java.lang.Package: java.lang.String getSpecificationVersion()>
<java.util.zip.ZipEntry: java.nio.file.attribute.FileTime getCreationTime()>
<ohos.javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.String,java.lang.Exception)>
<ohos.workscheduler.WorkInfo: boolean isWorkInfoValid()>
<ohos.javax.xml.parsers.SAXParser: void reset()>
<ohos.media.common.sessioncore.AVSubscriptionCallback: void onError(java.lang.String)>
<java.time.chrono.ChronoZonedDateTime: java.util.Comparator timeLineOrder()>
<ohos.telephony.LteSignalInformation: void <init>()>
<ohos.event.notification.ReminderRequest: java.lang.String getContent()>
<ohos.utils.Parcel: java.io.Serializable readSerializable(java.lang.Class)>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getChatIntention(java.lang.String,int,ohos.ai.nlu.OnResultListener)>
<java.util.concurrent.ArrayBlockingQueue: java.lang.String toString()>
<ohos.agp.components.Text.TextSizeType: void <clinit>()>
<java.nio.file.attribute.DosFileAttributes: boolean isArchive()>
<ohos.agp.render.PathEffect: void <init>(ohos.agp.render.PathEffect,ohos.agp.render.PathEffect)>
<ohos.global.icu.text.PluralFormat: void <init>(java.util.Locale,ohos.global.icu.text.PluralRules)>
<ohos.agp.render.render3d.gltf.GltfLoader: ohos.agp.render.render3d.gltf.GltfData loadGltf(java.lang.String)>
<java.util.stream.DoubleStream: java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)>
<ohos.agp.render.render3d.resources.GpuResourceHandle: boolean isValid()>
<java.util.stream.Collector: java.util.function.BinaryOperator combiner()>
<java.util.TreeSet: java.lang.Object pollFirst()>
<javax.lang.model.util.Types: javax.lang.model.type.DeclaredType getDeclaredType(javax.lang.model.type.DeclaredType,javax.lang.model.element.TypeElement,javax.lang.model.type.TypeMirror[])>
<java.security.cert.LDAPCertStoreParameters: java.lang.String toString()>
<java.lang.Long: long longValue()>
<java.util.stream.Collectors: java.util.stream.Collector groupingByConcurrent(java.util.function.Function)>
<javax.tools.SimpleJavaFileObject: javax.tools.JavaFileObject.Kind getKind()>
<java.lang.SecurityManager: void checkAccess(java.lang.ThreadGroup)>
<ohos.agp.components.ComponentProvider: void <init>(int,ohos.app.Context)>
<ohos.agp.components.IndexBar: void setSelectedCallback(ohos.agp.components.IndexBar.OnSelectedListener)>
<ohos.data.orm.EntityHelper: java.lang.Object createInstance(ohos.data.resultset.ResultSet)>
<java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>
<ohos.telephony.TelephoneNumberUtils: boolean isReallyDialableKey(char)>
<java.lang.invoke.MethodHandleInfo: java.lang.invoke.MethodType getMethodType()>
<ohos.agp.window.service.Display: ohos.agp.window.service.DisplayAttributes getRealAttributes()>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getEntity(java.lang.String,int,ohos.ai.nlu.OnResultListener)>
<ohos.sensor.agent.CategoryLightAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryLightDataCallback,ohos.sensor.bean.CategoryLight,int,long)>
<ohos.agp.utils.Matrix44: void postTranslate(float,float,float)>
<ohos.agp.components.Text: void setPaddingForText(boolean)>
<java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<ohos.global.icu.text.Normalizer2: java.lang.String getRawDecomposition(int)>
<ohos.rpc.RemoteObject: boolean isObjectDead()>
<java.util.Vector: boolean containsAll(java.util.Collection)>
<ohos.sysappcomponents.contact.entity.ImAddress: void <init>(ohos.app.Context,java.lang.String,int)>
<ohos.aafwk.ability.AbilitySlice: void onOrientationChanged(ohos.bundle.AbilityInfo.DisplayOrientation)>
<java.io.PrintStream: void <init>(java.io.File)>
<java.util.HashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>
<ohos.data.distributed.common.KvManager: void deleteKvStore(java.lang.String)>
<ohos.accessibility.ability.AccessibilityInfo: void setScrollable(boolean)>
<ohos.agp.render.render3d.math.Vector3: float getLengthSquared()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,java.lang.CharSequence[])>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence,int,int)>
<java.time.OffsetTime: java.time.OffsetTime minusNanos(long)>
<javax.crypto.Mac: byte[] doFinal()>
<ohos.agp.render.opengl.GLES30: void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)>
<ohos.agp.utils.Line: void set(float,float,float,float)>
<ohos.light.bean.LightBrightness: int getBlueBrightness()>
<ohos.media.common.sessioncore.AVSessionCallback: void onCommand(java.lang.String,ohos.utils.PacMap,ohos.app.GeneralReceiver)>
<java.util.concurrent.CopyOnWriteArrayList: java.util.Spliterator spliterator()>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat setSizeY(float)>
<ohos.bundle.OnPermissionChangedCallback: void onChanged(int)>
<ohos.distributedhardware.devicemanager.DeviceInfo.DeviceType: int value()>
<ohos.org.xml.sax.helpers.DefaultHandler: void startDocument()>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)>
<ohos.media.audio.AudioRenderer: int getRendererSessionId()>
<java.math.BigInteger: java.math.BigInteger andNot(java.math.BigInteger)>
<java.time.Duration: java.time.Duration minusMillis(long)>
<java.io.StreamTokenizer: void pushBack()>
<ohos.event.notification.ReminderRequest: long getRingDuration()>
<ohos.agp.components.Text: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.os.ProcessManager: int[] getAvailableCores()>
<ohos.media.common.AVDescription: ohos.utils.net.Uri getMediaUri()>
<ohos.nfc.cardemulation.CardEmulation: boolean isDefaultForType(ohos.bundle.ElementName,java.lang.String)>
<java.util.logging.Handler: void setErrorManager(java.util.logging.ErrorManager)>
<javax.lang.model.util.AbstractElementVisitor6: java.lang.Object visitUnknown(javax.lang.model.element.Element,java.lang.Object)>
<java.io.ByteArrayOutputStream: java.lang.String toString()>
<ohos.ai.cv.common.CvRect: void <init>()>
<ohos.agp.components.TabList.Tab: ohos.agp.components.TabList.Tab setIconElement(ohos.agp.components.element.Element)>
<ohos.event.intentagent.IntentAgentConstant.OperationType: void <clinit>()>
<java.io.Console: java.io.Console format(java.lang.String,java.lang.Object[])>
<java.net.Inet4Address: boolean isLoopbackAddress()>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitVariableAsParameter(javax.lang.model.element.VariableElement,java.lang.Object)>
<ohos.agp.colors.RgbPalette: void <clinit>()>
<ohos.miscservices.timeutility.Timer.OneShotTimer: void stop()>
<ohos.usb.USBDevicePipe: java.lang.String getSerial()>
<ohos.aafwk.ability.Ability: boolean reverseContinueAbility()>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.IntStream ints(long)>
<ohos.agp.render.render3d.resources.MaterialDesc.MaterialType: ohos.agp.render.render3d.resources.MaterialDesc.MaterialType valueOf(java.lang.String)>
<java.util.stream.IntStream: boolean noneMatch(java.util.function.IntPredicate)>
<ohos.media.audio.SoundPlayer.AudioVolumes: void setFrontLeftVolume(float)>
<java.util.Date: long parse(java.lang.String)>
<java.io.DataOutputStream: void writeChar(int)>
<ohos.media.audio.AudioManager.AudioVolumeType: ohos.media.audio.AudioManager.AudioVolumeType valueOf(java.lang.String)>
<ohos.javax.xml.stream.XMLStreamWriter: java.lang.Object getProperty(java.lang.String)>
<java.time.temporal.ChronoField: long checkValidValue(long)>
<java.time.zone.ZoneOffsetTransition: java.lang.String toString()>
<ohos.global.icu.lang.UScript: int[] getCode(ohos.global.icu.util.ULocale)>
<ohos.global.icu.text.NumberFormat: void setMinimumIntegerDigits(int)>
<ohos.agp.components.PageSlider: boolean getReboundEffect()>
<ohos.agp.utils.RectFloat: void setPivotXCoordinate(float)>
<ohos.distributedschedule.interwork.DeviceInfo: void <init>()>
<ohos.agp.utils.Matrix: void setTranslateX(float)>
<java.io.PipedInputStream: void receive(int)>
<ohos.agp.animation.Animator.StateChangedListener: void onStart(ohos.agp.animation.Animator)>
<ohos.agp.animation.AnimatorGroup.Builder: ohos.agp.animation.AnimatorGroup.Builder addAnimators(ohos.agp.animation.Animator[])>
<ohos.sysappcomponents.contact.entity.Contact: void addPhoneNumber(ohos.sysappcomponents.contact.entity.PhoneNumber)>
<java.util.concurrent.ConcurrentHashMap: void replaceAll(java.util.function.BiFunction)>
<ohos.aafwk.ability.AbilityForm: boolean marshalling(ohos.utils.Parcel)>
<java.util.logging.Filter: boolean isLoggable(java.util.logging.LogRecord)>
<java.util.prefs.AbstractPreferences: java.util.prefs.Preferences parent()>
<java.util.List: boolean equals(java.lang.Object)>
<ohos.miscservices.pasteboard.PasteData.DataProperty: java.util.List getMimeTypes()>
<ohos.media.common.Source: void setRecorderVideoSource(int)>
<java.nio.file.Files: java.nio.file.Path walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)>
<ohos.utils.geo.RectFloat: float getHeight()>
<java.sql.Time: void setMonth(int)>
<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>
<ohos.wifi.p2p.WifiP2pGroup: int getFrequency()>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofLocalizedDate(java.time.format.FormatStyle)>
<ohos.agp.animation.Animator: long getDuration()>
<ohos.agp.components.ProgressBar: void setProgressHintText(java.lang.String)>
<ohos.event.notification.ReminderRequestAlarm: void <init>(int,int,int[])>
<ohos.agp.components.IndexBar: void setMinCountAndMaxCount(int,int)>
<ohos.distributedschedule.interwork.DeviceManager: java.util.List getDeviceList(int)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>
<ohos.utils.Ashmem: boolean mapAshmem(int)>
<ohos.data.distributed.common.SecurityLevel: ohos.data.distributed.common.SecurityLevel valueOf(java.lang.String)>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: ohos.media.common.sessioncore.AVPlaybackState.Builder setAVPlaybackState(int,long,float,long)>
<java.lang.reflect.Modifier: boolean isStrict(int)>
<ohos.agp.components.ComponentParent: ohos.agp.components.ComponentContainer.LayoutConfig verifyLayoutConfig(ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.time.chrono.MinguoDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<java.nio.file.attribute.UserPrincipalLookupService: java.nio.file.attribute.UserPrincipal lookupPrincipalByName(java.lang.String)>
<javax.sql.RowSet: void setLong(int,long)>
<ohos.agp.utils.RectFloat: ohos.agp.utils.RectFloat obtainIntersectRect(ohos.agp.utils.RectFloat)>
<ohos.data.orm.OrmConfig.Builder: ohos.data.orm.OrmConfig build()>
<ohos.net.DataFlowStatistics: void addOperation(int,int)>
<ohos.hiviewdfx.Debug: int getProcessPrivateDirtySum()>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<ohos.usb.USBEndpoint: int getAttributes()>
<java.nio.file.FileSystems: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map,java.lang.ClassLoader)>
<java.nio.channels.SocketChannel: int validOps()>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setSize(java.lang.Integer)>
<java.time.LocalTime: int hashCode()>
<ohos.bundle.IBundleManager: java.util.List getFormsInfoByApp(java.lang.String)>
<ohos.accessibility.ability.AccessibilityInfo: boolean isDeletable()>
<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission valueOf(java.lang.String)>
<ohos.agp.components.SearchBar: void setSearchTextColor(ohos.agp.utils.Color)>
<ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime: char charAt(int)>
<java.nio.file.Paths: java.nio.file.Path get(java.net.URI)>
<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>
<ohos.global.icu.lang.UCharacter: int getIntPropertyMaxValue(int)>
<java.time.LocalTime: java.time.LocalTime now()>
<java.time.ZonedDateTime: java.time.LocalDate toLocalDate()>
<ohos.agp.animation.Animator.StateChangedListener: void onCancel(ohos.agp.animation.Animator)>
<ohos.utils.PersistablePacMap: float getFloatValue(java.lang.String)>
<java.text.BreakIterator: int next()>
<java.util.UUID: void <init>(long,long)>
<java.util.zip.ZipEntry: boolean isDirectory()>
<ohos.agp.components.Component: void setMinWidth(int)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet applyPattern(java.lang.String,boolean)>
<ohos.media.audio.SoundPlayer.AudioVolumes: float getFrontRightVolume()>
<ohos.global.icu.util.BuddhistCalendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<ohos.global.icu.text.SearchIterator: java.text.CharacterIterator getTarget()>
<ohos.sensor.data.SensorData: float[] getValues()>
<java.security.cert.X509Certificate: java.util.Date getNotBefore()>
<ohos.global.icu.text.Bidi: byte getDirection()>
<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror erasure(javax.lang.model.type.TypeMirror)>
<ohos.agp.render.Paint: ohos.agp.render.Paint.StrokeCap getStrokeCap()>
<ohos.agp.render.opengl.GLES31: void glBindImageTexture(int,int,int,boolean,int,int,int)>
<ohos.media.sessioncore.AVBrowserService: ohos.media.common.sessioncore.AVBrowserRoot onGetRoot(java.lang.String,int,ohos.utils.PacMap)>
<ohos.agp.components.MagicLayout.LayoutConfig: void <init>(int,int)>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate minus(long,java.time.temporal.TemporalUnit)>
<ohos.data.search.schema.AppItem: ohos.data.search.schema.AppItem setSize(java.lang.Integer)>
<ohos.ai.cv.sr.ITxtImageSuperResolution: void setVisionConfiguration(ohos.ai.cv.sr.TxtImageSuperResolutionConfiguration)>
<ohos.net.DataFlowStatistics: long getAllTxBytes()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates innerJoin(java.lang.Class)>
<java.lang.ClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>
<ohos.global.icu.text.DateIntervalInfo.PatternInfo: java.lang.String toString()>
<ohos.utils.IntArray: java.lang.Object clone()>
<ohos.global.resource.Element: java.lang.String getConfig()>
<java.sql.DatabaseMetaData: int getMaxStatements()>
<ohos.agp.components.Component: void setPivotX(float)>
<ohos.agp.components.Text: boolean isAdjustInputPanel()>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<ohos.ai.cv.common.VisionConfiguration.Builder: void <init>()>
<java.text.Format: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<java.text.ChoiceFormat: double nextDouble(double,boolean)>
<ohos.ai.tts.TtsListener: void onProgress(java.lang.String,byte[],int)>
<ohos.agp.components.ComponentProvider.Action: int getActionTag()>
<java.util.concurrent.RecursiveAction: java.lang.Void getRawResult()>
<ohos.aafwk.content.Intent: byte[] getByteArrayParam(java.lang.String)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>
<ohos.app.Context: void printDrawnCompleted()>
<ohos.data.usage.StatVfs: long getSpace()>
<ohos.utils.PlainBooleanArray: int indexOfKey(int)>
<ohos.agp.components.ComponentProvider.Action: void apply(ohos.agp.components.ComponentContainer)>
<java.util.concurrent.LinkedBlockingDeque: int remainingCapacity()>
<ohos.agp.render.opengl.GLES20: void glGenRenderbuffers(int,java.nio.IntBuffer)>
<ohos.media.tubecore.AVTubeManager: java.util.Optional tubeInUse(int)>
<java.nio.file.Files: java.nio.file.Path setPosixFilePermissions(java.nio.file.Path,java.util.Set)>
<ohos.agp.render.BlendMode: ohos.agp.render.BlendMode valueOf(java.lang.String)>
<ohos.distributedhardware.devicemanager.DeviceManager: int registerDeviceStateCallback(java.lang.String,java.util.Map,ohos.distributedhardware.devicemanager.DeviceStateCallback)>
<ohos.bundle.LauncherService: java.util.Optional getAbilityList(java.lang.String,int)>
<ohos.agp.components.Component: void setLongClickable(boolean)>
<ohos.global.icu.text.LocaleDisplayNames: ohos.global.icu.text.LocaleDisplayNames getInstance(java.util.Locale,ohos.global.icu.text.DisplayContext[])>
<java.util.Scanner: boolean hasNextShort()>
<ohos.agp.components.ToggleButton: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.util.Arrays: int binarySearch(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator)>
<java.text.DateFormat: java.text.DateFormat getTimeInstance()>
<ohos.media.audio.AudioCapturerInfo.Builder: ohos.media.audio.AudioCapturerInfo build()>
<java.lang.Integer: int highestOneBit(int)>
<ohos.agp.components.Component: void addDrawTask(ohos.agp.components.Component.DrawTask)>
<ohos.agp.render.opengl.EGL: ohos.agp.render.opengl.EGLContext eglGetCurrentContext()>
<ohos.global.icu.util.HebrewCalendar: void <init>(ohos.global.icu.util.ULocale)>
<ohos.global.resource.Resource: int read()>
<java.sql.DatabaseMetaData: boolean supportsOrderByUnrelated()>
<ohos.agp.components.Text: int getSelectionLeftBubbleHeight()>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onShowMenu(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.location.GeoAddress: void setDescriptions(int,java.lang.String)>
<ohos.global.icu.text.PluralFormat: void <init>(java.util.Locale,ohos.global.icu.text.PluralRules.PluralType)>
<ohos.vibrator.bean.VibrationPattern: int getCount()>
<ohos.global.icu.text.DateFormat: void setContext(ohos.global.icu.text.DisplayContext)>
<ohos.global.icu.util.Currency: java.lang.String getName(java.util.Locale,int,boolean[])>
<java.sql.PreparedStatement: void setByte(int,byte)>
<ohos.net.LocalSocket: void closeOutputStream()>
<java.security.cert.PKIXCertPathBuilderResult: java.security.cert.CertPath getCertPath()>
<java.text.Bidi: int getLength()>
<ohos.distributedschedule.interwork.DeviceInfo.DeviceType: ohos.distributedschedule.interwork.DeviceInfo.DeviceType[] values()>
<java.lang.CloneNotSupportedException: void <init>()>
<java.text.BreakIterator: boolean isBoundary(int)>
<java.nio.charset.Charset: boolean equals(java.lang.Object)>
<ohos.global.icu.text.PluralRules: java.lang.String select(double)>
<java.security.cert.CertificateFactory: java.lang.String getType()>
<ohos.ai.cv.sr.IImageSuperResolution: void setVisionConfiguration(ohos.ai.cv.sr.SisrConfiguration)>
<ohos.global.icu.text.DecimalFormat: java.lang.String getPositiveSuffix()>
<java.sql.CallableStatement: void setClob(java.lang.String,java.sql.Clob)>
<java.util.ResourceBundle.Control: java.lang.String toResourceName(java.lang.String,java.lang.String)>
<ohos.accessibility.ability.GesturePathDefine: int getDurationTime()>
<ohos.event.notification.NotificationRequest.NotificationContent: void <init>(ohos.event.notification.NotificationRequest.NotificationMultiLineContent)>
<ohos.org.xml.sax.XMLReader: ohos.org.xml.sax.ContentHandler getContentHandler()>
<ohos.aafwk.content.Intent: java.lang.String getBundle()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture applyToEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Function,java.util.concurrent.Executor)>
<ohos.global.icu.text.Bidi: int getReorderingOptions()>
<ohos.bluetooth.ble.GattService: boolean addService(ohos.bluetooth.ble.GattService)>
<ohos.biometrics.authentication.IFaceAuthentication.FaceAuthResultCode: void <init>()>
<ohos.global.icu.text.ScientificNumberFormatter: ohos.global.icu.text.ScientificNumberFormatter getMarkupInstance(ohos.global.icu.text.DecimalFormat,java.lang.String,java.lang.String)>
<ohos.global.icu.util.Calendar: int julianDayToDayOfWeek(int)>
<ohos.javax.xml.stream.XMLStreamReader: int getTextLength()>
<ohos.agp.components.PageSlider.PageChangedListener: void onPageSliding(int,float,int)>
<ohos.event.notification.NotificationActionButton: boolean isAutoCreatedReplies()>
<java.util.logging.SocketHandler: void <init>(java.lang.String,int)>
<java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>
<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendLiteral(java.lang.String)>
<ohos.data.rdb.ValuesBucket: byte[] getByteArray(java.lang.String)>
<ohos.ai.nlu.NluClient: void init(ohos.app.Context,ohos.ai.nlu.OnResultListener,boolean)>
<ohos.aafwk.ability.AbilitySlice: boolean releaseForm(long,boolean)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: java.lang.String toString()>
<ohos.global.icu.util.ULocale: java.lang.String getScript()>
<ohos.utils.PacMap: void putShortValueArray(java.lang.String,short[])>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<java.text.CharacterIterator: char setIndex(int)>
<javax.lang.model.element.ElementKind: boolean isClass()>
<ohos.app.Context: int verifySelfPermission(java.lang.String)>
<java.net.Proxy.Type: java.net.Proxy.Type[] values()>
<java.text.DecimalFormat: java.util.Currency getCurrency()>
<ohos.utils.LightweightMap: int size()>
<ohos.agp.components.AdaptiveBoxLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>
<ohos.agp.components.Slider: void setValueChangedListener(ohos.agp.components.Slider.ValueChangedListener)>
<java.text.AttributedCharacterIterator.Attribute: void <init>(java.lang.String)>
<java.nio.file.spi.FileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>
<ohos.agp.components.SlideDrawer: void setDisplayMode(ohos.agp.components.SlideDrawer.DisplayMode)>
<ohos.global.icu.util.IndianCalendar: int handleGetMonthLength(int,int)>
<javax.tools.ToolProvider: java.lang.Object trace(java.util.logging.Level,java.lang.Object)>
<ohos.media.photokit.metadata.AVMetadataHelper: ohos.media.image.PixelMap fetchImagePixelMapByIndex(int)>
<ohos.usb.USBInterface: void <init>(int,int,java.lang.String,int,int,int)>
<java.nio.channels.Channels: java.io.Reader newReader(java.nio.channels.ReadableByteChannel,java.nio.charset.CharsetDecoder,int)>
<java.net.DatagramSocket: void disconnect()>
<ohos.agp.render.Path: void set(ohos.agp.render.Path)>
<java.time.LocalDateTime: java.time.LocalDateTime plusWeeks(long)>
<ohos.media.recorder.Recorder: boolean resume()>
<ohos.media.camera.device.FrameResult: ohos.media.camera.device.FrameConfig getFrameConfig()>
<ohos.data.distributed.common.KvStoreResultSet: boolean goToPreviousRow()>
<ohos.agp.render.opengl.GLES1X: void glFinish()>
<ohos.bundle.BundleInfo: java.util.List getReqPermissions()>
<ohos.data.orm.UpgradeComparator: int compare(ohos.data.orm.OrmMigration,ohos.data.orm.OrmMigration)>
<ohos.data.distributed.common.KvManagerConfig: void setUserInfo(ohos.data.distributed.common.UserInfo)>
<ohos.event.notification.NotificationRequest: boolean isPermitSystemGeneratedContextualActionButtons()>
<ohos.agp.components.element.ElementContainer: boolean isStateful()>
<ohos.global.resource.RawFileEntry: ohos.global.resource.Entry.Type getType()>
<java.security.KeyStoreException: void <init>(java.lang.Throwable)>
<ohos.global.icu.text.MeasureFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<java.io.FileWriter: void <init>(java.io.File,boolean)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,int)>
<java.math.BigInteger: boolean testBit(int)>
<java.util.concurrent.FutureTask: boolean isCancelled()>
<ohos.account.app.AppAccount: java.lang.String getName()>
<java.lang.Double: byte byteValue()>
<java.net.URLClassLoader: void <init>(java.net.URL[])>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void acquireShared(int)>
<java.sql.ResultSet: void updateBlob(java.lang.String,java.io.InputStream)>
<ohos.agp.components.Text: int getMaxTextHeight()>
<ohos.media.audio.AudioRenderer.SpeedPara: float getPitch()>
<ohos.utils.geo.Rect: void set(int,int,int,int)>
<ohos.media.player.Player: void setPlayerCallback(ohos.media.player.Player.IPlayerCallback)>
<ohos.agp.components.Component: void arrange(int,int,int,int)>
<ohos.aafwk.ability.PipeFileWriter: void write(java.io.FileDescriptor,ohos.utils.net.Uri,java.lang.String,ohos.utils.PacMap,java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.Iterator iterator()>
<java.net.ServerSocket: void bind(java.net.SocketAddress,int)>
<java.lang.IllegalMonitorStateException: void <init>()>
<java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)>
<javax.tools.JavaFileManager: void flush()>
<ohos.bundle.BundleInfo: java.lang.String getVersionName()>
<ohos.global.icu.util.IndianCalendar: void <init>(int,int,int)>
<ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder: ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder setSecKeySizeInBits(int)>
<ohos.global.icu.text.MessageFormat: void applyPattern(java.lang.String,ohos.global.icu.text.MessagePattern.ApostropheMode)>
<ohos.agp.components.Component: void setGesturePriority(ohos.agp.components.Component.GestureType,int)>
<java.net.URI: java.lang.String getHost()>
<java.util.OptionalDouble: double orElseGet(java.util.function.DoubleSupplier)>
<java.util.ArrayList: void add(int,java.lang.Object)>
<ohos.aafwk.ability.Ability: boolean isTemporary()>
<java.text.DecimalFormat: java.lang.String getPositiveSuffix()>
<java.time.chrono.ChronoLocalDateTime: boolean isBefore(java.time.chrono.ChronoLocalDateTime)>
<ohos.utils.LightweightMap: boolean isEmpty()>
<java.nio.channels.SeekableByteChannel: long size()>
<ohos.global.icu.util.DateInterval: int hashCode()>
<java.security.cert.CertPathParameters: java.lang.Object clone()>
<javax.crypto.Cipher: int update(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<java.io.StreamCorruptedException: void <init>(java.lang.String)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: void lazySet(java.lang.Object,long)>
<ohos.data.usage.StatVfs: long getAvailableSpace()>
<java.lang.Math: float ulp(float)>
<ohos.system.OsHelper: void changeFileName(java.lang.String,java.lang.String)>
<ohos.utils.IntArray: void <init>(ohos.utils.IntArray)>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setSnoozeTimes(int)>
<ohos.accessibility.AccessibilityEventInfo: int getViewId()>
<ohos.agp.components.ProgressBar: int getDividerLinesNumber()>
<java.net.Authenticator.RequestorType: java.net.Authenticator.RequestorType valueOf(java.lang.String)>
<ohos.event.notification.NotificationRequest: int getCreatorUid()>
<java.time.Instant: java.time.Instant plusMillis(long)>
<ohos.utils.net.UrlQueryFilter: ohos.utils.net.UrlQueryFilter.ValueFilter getUnregisteredParamFilter()>
<java.text.NumberFormat: java.lang.String format(long)>
<java.io.PrintWriter: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.global.icu.util.MeasureUnit: int hashCode()>
<ohos.aafwk.ability.Ability: void onPostActive()>
<java.util.Vector: java.util.Iterator iterator()>
<javax.net.ssl.SSLServerSocket: void <init>(int,int)>
<java.lang.reflect.Field: byte getByte(java.lang.Object)>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate dateYearDay(int,int)>
<ohos.agp.render.opengl.GLES1X: void glLightModelx(int,int)>
<ohos.global.icu.text.PluralRules.PluralType: ohos.global.icu.text.PluralRules.PluralType valueOf(java.lang.String)>
<javax.sql.RowSetMetaData: void setColumnType(int,int)>
<ohos.ai.cv.docrefine.DocRefineConfiguration.Builder: void <init>()>
<ohos.hiviewdfx.Debug: java.lang.String getRuntimeStatistic(java.lang.String)>
<ohos.javax.xml.stream.events.StartElement: java.lang.String getNamespaceURI(java.lang.String)>
<ohos.interwork.eventhandler.CourierEx: void <init>(ohos.interwork.eventhandler.EventHandlerEx)>
<java.nio.file.attribute.AclEntry: int hashCode()>
<java.sql.SQLInput: java.sql.Blob readBlob()>
<java.nio.channels.DatagramChannel: long write(java.nio.ByteBuffer[])>
<java.time.LocalTime: java.time.LocalTime of(int,int,int)>
<ohos.agp.components.PageSliderProvider: void startUpdate(ohos.agp.components.ComponentContainer)>
<java.net.JarURLConnection: java.util.jar.JarEntry getJarEntry()>
<javax.lang.model.util.SimpleTypeVisitor7: void <init>(java.lang.Object)>
<java.util.concurrent.Phaser: java.util.concurrent.Phaser getParent()>
<ohos.global.icu.util.ULocale: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<ohos.global.icu.text.UnicodeSet: int indexOf(int)>
<ohos.media.camera.device.FrameConfig.Builder: int getAeTrigger()>
<java.util.Scanner: boolean hasNext(java.lang.String)>
<ohos.utils.Parcel: void finalize()>
<java.security.DigestOutputStream: void write(byte[],int,int)>
<javax.sql.RowSet: void setBlob(java.lang.String,java.sql.Blob)>
<ohos.media.audio.AudioCapturerInfo.Builder: void <init>()>
<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.AsynchronousServerSocketChannel setOption(java.net.SocketOption,java.lang.Object)>
<ohos.agp.components.element.AnimatedStateElement: void addStateTransition(int[],int[],ohos.agp.components.element.Element)>
<java.security.KeyStore.Builder: java.security.KeyStore.ProtectionParameter getProtectionParameter(java.lang.String)>
<ohos.global.icu.util.Currency.CurrencyUsage: ohos.global.icu.util.Currency.CurrencyUsage[] values()>
<java.sql.Date: void setMinutes(int)>
<java.security.cert.CRLReason: java.security.cert.CRLReason valueOf(java.lang.String)>
<ohos.agp.components.element.FrameAnimationElement: void setDisposeMode(boolean)>
<ohos.wifi.WifiDeviceConfig: java.lang.String getBssid()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notIn(java.lang.String,java.util.Date[])>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThanOrEqualTo(java.lang.String,double)>
<ohos.agp.render.ColorMatrix: void setScale(float,float,float,float)>
<java.time.LocalDateTime: int hashCode()>
<java.time.chrono.ChronoZonedDateTime: boolean isEqual(java.time.chrono.ChronoZonedDateTime)>
<ohos.telephony.NetworkState: boolean marshalling(ohos.utils.Parcel)>
<java.sql.Connection: java.sql.SQLWarning getWarnings()>
<java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>
<java.util.Locale: java.lang.String getISO3Country()>
<java.security.acl.AclEntry: boolean isNegative()>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectOutput(java.io.File)>
<javax.crypto.Cipher: java.lang.String getAlgorithm()>
<ohos.agp.render.render3d.Engine.RenderNodeGraph: boolean isValid()>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.time.ZoneId)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.global.icu.text.Edits.Iterator: int oldLength()>
<ohos.global.icu.util.TimeZone: void <init>()>
<java.lang.reflect.Field: double getDouble(java.lang.Object)>
<ohos.eventhandler.EventHandler: void distributeEvent(ohos.eventhandler.InnerEvent)>
<ohos.global.icu.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.aafwk.ability.ProcessErrorInfo: java.lang.String getStackTrace()>
<ohos.utils.Parcel: java.util.List readStringList()>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long incrementAndGet(java.lang.Object)>
<ohos.global.icu.text.RelativeDateTimeFormatter.Field: void <clinit>()>
<ohos.agp.components.Component: void addScrolledListener(ohos.agp.components.Component.ScrolledListener)>
<ohos.distributedhardware.devicemanager.DeviceInfo.DeviceType: ohos.distributedhardware.devicemanager.DeviceInfo.DeviceType[] values()>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction.Builder: void <init>(java.lang.String,java.lang.CharSequence,int)>
<ohos.agp.text.TextForm: boolean getSubscript()>
<java.io.DataInputStream: void readFully(byte[],int,int)>
<ohos.agp.render.opengl.GLES1X: void glLightModelf(int,float)>
<ohos.javax.xml.stream.Location: java.lang.String getPublicId()>
<java.util.UUID: java.lang.String toString()>
<ohos.utils.BasePacMap: boolean isEmpty()>
<java.util.AbstractCollection: int size()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenComposeAsync(java.util.function.Function)>
<ohos.agp.components.Component: ohos.agp.utils.DimensFloat getComponentSize()>
<ohos.data.resultset.ResultSetWrapper: int getRowIndex()>
<ohos.miscservices.inputmethod.RichContent: void <init>(ohos.utils.net.Uri,ohos.utils.net.Uri,java.lang.String[],java.lang.String)>
<java.time.chrono.ThaiBuddhistChronology: boolean isLeapYear(long)>
<ohos.ai.tts.TtsParams: int getSpeaker()>
<java.lang.Long: java.lang.String toOctalString(long)>
<java.nio.IntBuffer: java.nio.ByteOrder order()>
<ohos.agp.render.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,float[])>
<ohos.global.icu.text.DateTimePatternGenerator: java.util.Set getBaseSkeletons(java.util.Set)>
<java.lang.reflect.Method: java.lang.String toGenericString()>
<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.Hashtable: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: int size()>
<java.nio.file.Files: java.util.List readAllLines(java.nio.file.Path,java.nio.charset.Charset)>
<ohos.ai.asr.AsrIntent.AsrEngineType: void <clinit>()>
<java.net.NoRouteToHostException: void <init>()>
<ohos.ace.ability.AceAbility: void onConfigurationUpdated(ohos.global.configuration.Configuration)>
<ohos.global.icu.util.Calendar: int gregorianMonthLength(int,int)>
<ohos.system.OsHelper: void changeFilePermission(java.lang.String,int)>
<java.util.zip.ZipInputStream: void closeEntry()>
<ohos.data.orm.OrmConfig.Builder: void <init>(ohos.data.orm.OrmConfig)>
<java.text.DecimalFormat: void setNegativePrefix(java.lang.String)>
<ohos.aafwk.content.Operation: int getFlags()>
<ohos.agp.components.SearchBar: void setTextSize(int)>
<java.net.URL: void <init>(java.net.URL,java.lang.String)>
<ohos.aafwk.ability.AbilityForm: void setTextSize(int,int)>
<java.security.cert.PKIXCertPathChecker: void <init>()>
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<ohos.data.DatabaseHelper: ohos.data.orm.OrmContext getOrmContext(ohos.data.orm.OrmConfig,java.lang.Class,ohos.data.orm.OrmMigration[])>
<ohos.global.icu.text.UnicodeSet: boolean containsSome(java.lang.CharSequence)>
<ohos.agp.components.Text: ohos.agp.text.RichText getRichText()>
<java.io.LineNumberReader: java.lang.String readLine()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet removeAll(ohos.global.icu.text.UnicodeSet)>
<ohos.global.icu.util.CopticCalendar: void <init>(java.util.Locale)>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: ohos.media.common.sessioncore.AVPlaybackState.Builder setOptions(ohos.utils.PacMap)>
<ohos.agp.window.dialog.BaseDialog: boolean isShowing()>
<ohos.sensor.agent.CategoryBodyAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int,long)>
<ohos.nfc.oma.SEService: void <init>(ohos.app.Context,ohos.nfc.oma.SEService.OnCallback)>
<ohos.multimodalinput.event.MouseEvent: void setCursorOffset(float,float)>
<ohos.powermanager.DevicePowerStatusInfo: ohos.batterymanager.BatteryInfo.BatteryLevel getBatteryLevel()>
<java.util.concurrent.ForkJoinTask: short setForkJoinTaskTag(short)>
<java.sql.SQLXML: java.io.InputStream getBinaryStream()>
<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>
<javax.net.ssl.SSLException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>
<ohos.wifi.WifiDeviceConfig: boolean isRestricted()>
<java.util.concurrent.atomic.LongAccumulator: long getThenReset()>
<ohos.global.icu.util.GregorianCalendar: void <init>(java.util.Locale)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayLanguage()>
<java.text.DecimalFormat: void setMultiplier(int)>
<ohos.location.Locator: boolean unregisterSwitchCallback(ohos.location.SwitchCallback)>
<java.sql.SQLTransientConnectionException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.net.NetworkInterface: java.net.NetworkInterface getByIndex(int)>
<ohos.agp.components.Attr: java.lang.String getName()>
<java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<javax.crypto.CipherInputStream: int read()>
<ohos.agp.render.Canvas: void drawPixelMapHolder(ohos.agp.render.PixelMapHolder,float,float,ohos.agp.render.Paint)>
<java.sql.DatabaseMetaData: int getJDBCMajorVersion()>
<ohos.nfc.cardemulation.CardEmulation: boolean removeAids(ohos.bundle.ElementName,java.lang.String)>
<ohos.accessibility.ability.AccessibilityInfo: boolean isLongClickable()>
<ohos.agp.render.render3d.Engine.RenderMode: ohos.agp.render.render3d.Engine.RenderMode[] values()>
<java.lang.Boolean: int compare(boolean,boolean)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThanOrEqualTo(java.lang.String,java.sql.Timestamp)>
<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>
<ohos.agp.components.Component: java.lang.String getName()>
<java.lang.Float: int compareTo(java.lang.Float)>
<ohos.aafwk.ability.continuation.ContinuationDeviceInfo: java.lang.String getDeviceName()>
<java.text.ChoiceFormat: boolean equals(java.lang.Object)>
<java.util.Collections: java.util.Map checkedMap(java.util.Map,java.lang.Class,java.lang.Class)>
<ohos.net.DataFlowStatistics: void setSocketTag(java.net.Socket)>
<ohos.usb.USBDevicePipe: ohos.usb.USBRequest requestWait()>
<java.lang.Package: boolean isSealed(java.net.URL)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.String getGMTPattern()>
<ohos.distributedschedule.interwork.IInitCallback: void onInitFailure(java.lang.String,int)>
<ohos.agp.components.ComponentContainer: void setFocusOrder(int)>
<java.sql.DatabaseMetaData: boolean isReadOnly()>
<ohos.agp.render.opengl.GLES31: void glGetFramebufferParameteriv(int,int,int[])>
<ohos.location.GeoAddress: java.lang.String getCountryName()>
<ohos.agp.render.opengl.GLES20: void glScissor(int,int,int,int)>
<java.util.Vector: boolean isEmpty()>
<java.util.SortedMap: java.util.Set keySet()>
<ohos.eventhandler.EventHandler: boolean hasInnerEvent(int)>
<javax.net.ssl.SSLEngine: void closeOutbound()>
<java.util.regex.MatchResult: int start()>
<ohos.data.search.schema.EventItem: ohos.data.search.schema.EventItem setEndDate(java.lang.Long)>
<ohos.ai.asr.AsrClient: void writePcm(byte[],int)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject)>
<ohos.global.icu.math.MathContext: int getForm()>
<ohos.data.rdb.RdbStore: void close()>
<ohos.thermallistener.ThermalListener: void <init>()>
<ohos.telephony.WcdmaSignalInformation: void <init>()>
<ohos.data.async.DataAbilityAsyncHandler: void addDeleteJob(ohos.data.async.JobParams,ohos.utils.net.Uri,ohos.data.dataability.DataAbilityPredicates,ohos.data.async.DeleteCallback)>
<java.sql.ResultSet: void updateDate(java.lang.String,java.sql.Date)>
<ohos.agp.components.Text: ohos.agp.components.element.Element getTopElement()>
<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<ohos.sensor.agent.CategoryBodyAgent: void <init>()>
<ohos.media.audio.AudioCapturerConfig: boolean isSilenced()>
<java.util.Spliterators.AbstractIntSpliterator: int characteristics()>
<java.security.cert.TrustAnchor: byte[] getNameConstraints()>
<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption valueOf(java.lang.String)>
<java.text.SimpleDateFormat: void <init>()>
<java.util.concurrent.ConcurrentSkipListSet: java.lang.Object last()>
<java.net.Proxy: void <init>(java.net.Proxy.Type,java.net.SocketAddress)>
<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>
<java.util.prefs.AbstractPreferences: java.lang.String absolutePath()>
<ohos.agp.components.TimePicker: void setPmString(java.lang.String)>
<ohos.global.icu.text.MessagePattern.Part: int getLimit()>
<java.lang.Class: java.lang.Class getSuperclass()>
<javax.net.ssl.HttpsURLConnection: java.security.Principal getLocalPrincipal()>
<javax.security.auth.x500.X500Principal: java.lang.String getName()>
<ohos.agp.render.opengl.GLES31: void glMemoryBarrier(int)>
<ohos.agp.utils.Matrix: boolean isFixedStepInX()>
<ohos.global.icu.text.UnicodeSet: boolean containsAll(java.lang.Iterable)>
<java.net.URLClassLoader: void addURL(java.net.URL)>
<ohos.agp.render.opengl.EGL: boolean eglQuerySurface(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLSurface,int,int[])>
<ohos.agp.utils.Circle: boolean isInclude(float,float,float)>
<ohos.media.codec.Codec: ohos.agp.graphics.Surface obtainInputSurface()>
<java.util.prefs.AbstractPreferences: void <init>(java.util.prefs.AbstractPreferences,java.lang.String)>
<java.lang.UnknownError: void <init>()>
<java.security.cert.CertificateFactorySpi: void <init>()>
<ohos.agp.components.PageSlider: boolean getSlidingPossible()>
<ohos.agp.components.Text: void setRightBubbleWidth(int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates isNotNull(java.lang.String)>
<java.security.cert.CertStore: java.lang.String getType()>
<java.sql.CallableStatement: void registerOutParameter(int,int,java.lang.String)>
<ohos.agp.render.Region: boolean setRegion(ohos.agp.render.Region)>
<java.lang.Short: int hashCode(short)>
<ohos.media.camera.params.Face: boolean equals(java.lang.Object)>
<ohos.agp.render.opengl.GLES1X: void glLoadMatrixf(float[])>
<java.sql.Connection: java.lang.String getClientInfo(java.lang.String)>
<java.security.cert.CertPath.CertPathRep: void <init>(java.lang.String,byte[])>
<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>
<java.nio.FloatBuffer: java.nio.FloatBuffer compact()>
<java.util.DuplicateFormatFlagsException: void <init>(java.lang.String)>
<ohos.event.notification.NotificationRequest: void <init>(ohos.event.notification.NotificationRequest)>
<java.io.File: int hashCode()>
<java.util.PrimitiveIterator.OfDouble: void forEachRemaining(java.lang.Object)>
<java.net.MulticastSocket: java.net.InetAddress getInterface()>
<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>
<javax.crypto.SealedObject: java.lang.Object getObject(java.security.Key)>
<ohos.agp.window.service.Window: int replicateFrom(ohos.agp.window.service.WindowManager.LayoutConfig)>
<ohos.data.distributed.common.Value: byte[] getByteArray()>
<java.security.cert.X509CertSelector: void setSubjectAlternativeNames(java.util.Collection)>
<ohos.agp.render.render3d.resources.AnimationPlayback: void setSpeed(float)>
<ohos.data.resultset.ResultSet: boolean goTo(int)>
<ohos.agp.render.opengl.Utils: boolean nearZero(float,float)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getPercentInstance()>
<java.lang.Double: java.lang.String toString()>
<ohos.net.HttpProxy: java.lang.String[] getExclusionList()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent makeMainAbilityPicker(java.lang.String,java.lang.String)>
<ohos.global.icu.util.VersionInfo: int getMicro()>
<ohos.agp.components.ComponentContainer: ohos.agp.components.ComponentContainer.LayoutConfig createLayoutConfig(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.util.concurrent.ConcurrentHashMap: int reduceEntriesToInt(long,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator)>
<ohos.app.Context: boolean stopAbility(ohos.aafwk.content.Intent)>
<javax.crypto.MacSpi: java.lang.Object clone()>
<ohos.data.resultset.CombinedResultSet: byte[] getBlob(int)>
<ohos.agp.render.render3d.ViewHolder.SurfaceListener: void onSurfaceDestroyed()>
<ohos.bluetooth.ble.BlePeripheralManagerCallback: void mtuUpdateEvent(ohos.bluetooth.ble.BlePeripheralDevice,int)>
<java.security.cert.CRLException: void <init>(java.lang.String)>
<ohos.agp.components.Text: void setAdjustInputPanel(boolean)>
<java.time.chrono.HijrahDate: int hashCode()>
<ohos.global.icu.util.Calendar: void computeTime()>
<java.lang.Character: boolean isMirrored(char)>
<java.util.Arrays: void fill(byte[],int,int,byte)>
<ohos.event.notification.NotificationHelper: int getActiveNotificationNums()>
<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>
<java.time.OffsetDateTime: int getNano()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates offset(int)>
<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>
<javax.lang.model.element.Modifier: javax.lang.model.element.Modifier[] values()>
<ohos.global.icu.text.DateFormat: void setCalendar(ohos.global.icu.util.Calendar)>
<ohos.security.fileprotect.SfpPolicyManager: ohos.security.fileprotect.ISfpPolicyManager getInstance()>
<ohos.rpc.IRemoteObject: ohos.rpc.IRemoteBroker queryLocalInterface(java.lang.String)>
<javax.crypto.Cipher: byte[] update(byte[],int,int)>
<ohos.agp.components.Picker: ohos.agp.components.Picker.ScrolledListener getScrollListener()>
<java.net.NetworkInterface: java.lang.String getDisplayName()>
<ohos.agp.render.Canvas: void drawOval(ohos.agp.utils.RectFloat,ohos.agp.render.Paint)>
<java.time.LocalTime: long getLong(java.time.temporal.TemporalField)>
<java.time.OffsetDateTime: java.time.OffsetDateTime withMinute(int)>
<ohos.aafwk.ability.DataAbilityResult: void <init>(ohos.utils.Parcel)>
<ohos.agp.components.Image.ScaleMode: ohos.agp.components.Image.ScaleMode[] values()>
<ohos.utils.PlainIntArray: int locate(int)>
<ohos.global.icu.text.DecimalFormat: int getMinimumIntegerDigits()>
<java.security.interfaces.RSAMultiPrimePrivateCrtKey: java.math.BigInteger getPrimeExponentP()>
<ohos.aafwk.ability.Ability: void dispatchAccessibilityEventInfo(ohos.accessibility.AccessibilityEventInfo)>
<javax.lang.model.type.TypeKind: void <clinit>()>
<ohos.agp.components.Component: boolean getSelfVisibleRect(ohos.agp.utils.Rect)>
<ohos.agp.components.Component: void invalidate()>
<javax.crypto.CipherSpi: byte[] engineGetIV()>
<java.net.URI: java.lang.String getUserInfo()>
<java.util.jar.Manifest: java.util.Map getEntries()>
<ohos.ai.asr.AsrIntent: int getVadFrontWaitMs()>
<ohos.global.icu.text.Normalizer: int compare(char[],int,int,char[],int,int,int)>
<ohos.data.distributed.device.DeviceKvStore: float getFloat(java.lang.String,java.lang.String)>
<java.io.InputStreamReader: int read()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<java.time.Year: int hashCode()>
<ohos.global.icu.text.Bidi: void setContext(java.lang.String,java.lang.String)>
<java.util.concurrent.locks.ReentrantReadWriteLock: boolean hasQueuedThreads()>
<java.sql.DatabaseMetaData: boolean supportsTransactionIsolationLevel(int)>
<java.lang.Runtime: void runFinalizersOnExit(boolean)>
<ohos.usb.USBConfig: boolean isRemoteWakeup()>
<ohos.app.dispatcher.TaskDispatcher: ohos.app.dispatcher.task.Revocable asyncGroupDispatch(ohos.app.dispatcher.Group,java.lang.Runnable)>
<ohos.agp.render.render3d.components.CameraComponent: void <init>()>
<java.lang.StringBuffer: void ensureCapacity(int)>
<java.io.DataInputStream: float readFloat()>
<java.time.chrono.MinguoDate: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<ohos.agp.components.Component: ohos.agp.components.Component.ComponentStateChangedListener getComponentStateChangedListener()>
<java.security.cert.PolicyNode: java.util.Set getExpectedPolicies()>
<ohos.agp.components.Component: void setTag(java.lang.Object)>
<ohos.agp.components.ListContainer: void setLayoutManager(ohos.agp.components.LayoutManager)>
<ohos.data.search.schema.PhotoItem: java.lang.String getHoliday()>
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDate minus(java.time.temporal.TemporalAmount)>
<java.util.concurrent.ForkJoinPool: void execute(java.lang.Runnable)>
<java.net.DatagramSocket: void bind(java.net.SocketAddress)>
<ohos.agp.render.PathMeasure: boolean getMatrix(float,ohos.agp.utils.Matrix,int)>
<java.util.concurrent.locks.ReentrantLock: java.lang.Thread getOwner()>
<javax.tools.SimpleJavaFileObject: java.io.InputStream openInputStream()>
<java.nio.file.attribute.PosixFilePermissions: java.lang.String toString(java.util.Set)>
<ohos.global.configuration.DeviceCapability: void <init>()>
<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>
<java.io.FileWriter: void <init>(java.lang.String)>
<javax.net.ssl.SSLParameters: void setNeedClientAuth(boolean)>
<ohos.agp.components.webengine.WebAgent: void onSslError(ohos.agp.components.webengine.WebView,ohos.net.http.SslError)>
<java.util.concurrent.atomic.AtomicReferenceArray: void lazySet(int,java.lang.Object)>
<java.util.concurrent.CountedCompleter: void compute()>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate date(int,int,int)>
<java.util.concurrent.ConcurrentLinkedDeque: void addFirst(java.lang.Object)>
<java.net.DatagramPacket: void setData(byte[])>
<java.net.ProtocolException: void <init>(java.lang.String)>
<ohos.agp.render.layoutboost.LayoutBoostUtils: ohos.agp.text.Font getTextFont(ohos.agp.components.Text,java.lang.String)>
<java.time.OffsetDateTime: boolean isEqual(java.time.OffsetDateTime)>
<javax.tools.DocumentationTool.DocumentationTask: void setLocale(java.util.Locale)>
<ohos.global.icu.text.LocaleDisplayNames: java.lang.String localeDisplayName(java.lang.String)>
<ohos.agp.colors.CmykColor: int hashCode()>
<ohos.global.icu.util.ChineseCalendar: void <init>(ohos.global.icu.util.TimeZone)>
<java.util.Spliterator.OfInt: void forEachRemaining(java.lang.Object)>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.text.DateIntervalFormat getInstance(java.lang.String,java.util.Locale)>
<java.util.Vector: boolean removeAll(java.util.Collection)>
<java.sql.Array: void free()>
<ohos.utils.PersistablePacMap: int[] getIntValueArray(java.lang.String)>
<ohos.accessibility.ability.AccessibilityInfo: java.lang.String getClassName()>
<ohos.global.icu.text.PluralFormat: void applyPattern(java.lang.String)>
<ohos.global.icu.text.RuleBasedCollator: boolean isLowerCaseFirst()>
<ohos.data.resultset.AbsSharedResultSet: void checkState(int)>
<ohos.media.audio.AudioCapturerInfo.Builder: ohos.media.audio.AudioCapturerInfo.Builder audioInputSource(ohos.media.audio.AudioCapturerInfo.AudioInputSource)>
<java.util.AbstractList: void <init>()>
<ohos.net.NetCapabilities: int getLinkUpstreamBandwidthKbps()>
<ohos.vibrator.bean.VibrationPattern: void setDuration(int)>
<java.io.InputStreamReader: int read(char[],int,int)>
<ohos.media.photokit.metadata.AVStorage: ohos.utils.net.Uri appendPendingResource(ohos.utils.net.Uri)>
<java.beans.IndexedPropertyChangeEvent: int getIndex()>
<ohos.media.image.PixelMap: void setUseMipmap(boolean)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getInstance(java.util.Locale,int)>
<ohos.agp.render.render3d.math.Vector4: boolean equals(java.lang.Object)>
<ohos.global.icu.text.DecimalFormatSymbols: void setNaN(java.lang.String)>
<java.lang.invoke.MethodHandle: java.lang.Object invoke(java.lang.Object[])>
<java.time.Period: long toTotalMonths()>
<ohos.agp.components.Text: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.util.concurrent.ConcurrentSkipListSet: void <init>()>
<java.text.SimpleDateFormat: void <init>(java.lang.String)>
<ohos.event.notification.MessageUser: java.lang.String getName()>
<java.text.FieldPosition: void setEndIndex(int)>
<ohos.global.icu.text.NumberFormat: java.lang.StringBuffer format(ohos.global.icu.util.CurrencyAmount,java.lang.StringBuffer,java.text.FieldPosition)>
<java.util.EnumMap: void <init>(java.lang.Class)>
<ohos.aafwk.ability.RunningProcessInfo: java.lang.String toString()>
<java.security.cert.X509CertSelector: void setPrivateKeyValid(java.util.Date)>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setUnderline(boolean)>
<java.time.LocalTime: int getHour()>
<ohos.powermanager.PowerManager.RunningLockType: ohos.powermanager.PowerManager.RunningLockType valueOf(java.lang.String)>
<ohos.sensor.agent.CategoryBodyAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getCrossReference(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.nio.DoubleBuffer: java.lang.String toString()>
<ohos.bundle.LauncherAbilityInfo: ohos.bundle.ApplicationInfo getApplicationInfo()>
<ohos.agp.components.Component: int getMarginTop()>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setPixelMap(int,java.lang.String,ohos.media.image.PixelMap)>
<java.security.IdentityScope: java.security.IdentityScope getSystemScope()>
<ohos.nfc.tag.NfcBTag: byte[] getRespProtocol()>
<ohos.data.resultset.AbsResultSet: void finalize()>
<ohos.ai.cv.common.ConnectionCallback: void onServiceDisconnect()>
<java.util.SplittableRandom: int nextInt(int,int)>
<java.io.PrintStream: java.lang.Appendable append(java.lang.CharSequence)>
<ohos.sysappcomponents.contact.entity.ImAddress: int hashCode()>
<ohos.agp.components.SlideDrawer: ohos.agp.components.ComponentContainer.LayoutConfig verifyLayoutConfig(ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.media.audio.SoundPlayer: boolean play()>
<java.lang.reflect.Field: void setChar(java.lang.Object,char)>
<ohos.data.distributed.user.SingleKvStore: int getResultSize(ohos.data.distributed.common.Query)>
<java.util.concurrent.ConcurrentLinkedDeque: java.util.Iterator iterator()>
<java.util.regex.MatchResult: int start(int)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setTextAlignment(int,int)>
<ohos.rpc.MessageParcel: ohos.rpc.MessageParcel obtain()>
<javax.tools.SimpleJavaFileObject: java.io.OutputStream openOutputStream()>
<ohos.data.orm.Clob: java.io.Reader getCharacterStream(long,long)>
<ohos.global.resource.BaseFileDescriptor: void <init>()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: void signalAll()>
<ohos.javax.xml.stream.XMLStreamWriter: void writeStartDocument(java.lang.String,java.lang.String)>
<ohos.agp.render.Vertices: short[] getIndices()>
<ohos.miscservices.pasteboard.PasteData.Record: boolean marshalling(ohos.utils.Parcel)>
<ohos.location.Location: void setDirection(double)>
<java.io.BufferedReader: boolean ready()>
<ohos.global.icu.text.DecimalFormat: ohos.global.icu.number.LocalizedNumberFormatter toNumberFormatter()>
<javax.net.ssl.SSLServerSocketFactory: java.lang.String[] getSupportedCipherSuites()>
<java.lang.reflect.Modifier: boolean isPublic(int)>
<java.time.Year: boolean isBefore(java.time.Year)>
<java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<ohos.data.search.schema.EmailItem: java.lang.String getToEmail()>
<ohos.global.icu.text.UnicodeSet: boolean isFrozen()>
<java.nio.LongBuffer: long get(int)>
<ohos.agp.render.opengl.GLES30: void glGetInteger64iV(int,int,long[])>
<java.sql.DatabaseMetaData: int getMaxRowSize()>
<ohos.ai.cv.common.VisionCallback: void onError(int)>
<java.util.logging.LogRecord: java.util.ResourceBundle getResourceBundle()>
<ohos.agp.components.TimePicker: void enableSecond(boolean)>
<java.lang.ClassLoader: java.lang.String findLibrary(java.lang.String)>
<ohos.data.usage.CachePolicy: void setCacheCleanXattr(java.io.File)>
<java.util.Random: java.util.stream.DoubleStream doubles()>
<ohos.ace.ability.AceInternalAbility: void setInternalAbilityHandler(ohos.ace.ability.AceInternalAbility.AceInternalAbilityHandler,ohos.ace.ability.AceAbility)>
<java.security.cert.X509CRLSelector: void setDateAndTime(java.util.Date)>
<java.sql.SQLException: java.lang.String getSQLState()>
<ohos.event.notification.NotificationSubscribeInfo: void <init>(ohos.event.notification.NotificationSubscribeInfo)>
<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>
<java.util.jar.JarOutputStream: void <init>(java.io.OutputStream,java.util.jar.Manifest)>
<ohos.data.resultset.SharedBlock: byte[] getBlob(int,int)>
<java.util.concurrent.ForkJoinWorkerThread: java.util.concurrent.ForkJoinPool getPool()>
<ohos.agp.render.opengl.GLES20: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<ohos.eventhandler.EventHandler: void postTask(java.lang.Runnable,long)>
<java.lang.Thread: void destroy()>
<java.lang.reflect.Modifier: boolean isStatic(int)>
<java.time.LocalDate: java.time.LocalDate plus(java.time.temporal.TemporalAmount)>
<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>
<ohos.global.resource.BaseFileDescriptor: long getFileSize()>
<ohos.agp.components.element.Element.ConstantState: void <init>()>
<java.util.Scanner: java.util.regex.MatchResult match()>
<ohos.media.audio.Timestamp: void <init>()>
<java.time.format.DecimalStyle: void <clinit>()>
<java.security.KeyRep: java.lang.Object readResolve()>
<java.util.concurrent.ThreadLocalRandom: double nextDouble(double)>
<java.time.chrono.JapaneseDate: int lengthOfYear()>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat divisionAll(int)>
<java.util.jar.Attributes: boolean containsKey(java.lang.Object)>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.math.Vector4 getBaseColorFactor()>
<ohos.global.icu.text.DecimalFormat: void setSecondaryGroupingSize(int)>
<java.util.Scanner: boolean hasNextShort(int)>
<java.time.LocalTime: java.time.LocalTime minus(java.time.temporal.TemporalAmount)>
<ohos.miscservices.pasteboard.PasteData.DataProperty: java.lang.CharSequence getTag()>
<ohos.global.icu.lang.UCharacter: int toLowerCase(int)>
<ohos.global.icu.number.LocalizedNumberFormatter: ohos.global.icu.number.FormattedNumber format(long)>
<javax.lang.model.util.SimpleElementVisitor6: java.lang.Object visitTypeParameter(javax.lang.model.element.TypeParameterElement,java.lang.Object)>
<ohos.global.icu.lang.UCharacter: int getType(int)>
<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>
<java.io.Reader: int read(char[],int,int)>
<ohos.sensor.agent.CategoryOtherAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryOtherDataCallback)>
<java.net.ContentHandler: java.lang.Object getContent(java.net.URLConnection,java.lang.Class[])>
<java.io.BufferedInputStream: int read(byte[],int,int)>
<java.nio.channels.Selector: java.nio.channels.Selector open()>
<javax.lang.model.type.TypeMirror: int hashCode()>
<java.util.concurrent.ForkJoinTask: boolean isDone()>
<ohos.agp.window.service.WindowManager.LayoutConfig: void <init>()>
<java.sql.ResultSetMetaData: java.lang.String getColumnClassName(int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notBetween(java.lang.String,java.util.Date,java.util.Date)>
<ohos.distributedschedule.interwork.DeviceManager: java.util.List queryRemoteAbilityByIntent(ohos.aafwk.content.Intent)>
<ohos.app.dispatcher.task.TaskPriority: ohos.app.dispatcher.task.TaskPriority[] values()>
<ohos.ai.asr.AsrClient: void cancel()>
<java.util.concurrent.SynchronousQueue: boolean containsAll(java.util.Collection)>
<java.sql.ResultSet: void updateInt(java.lang.String,int)>
<ohos.event.commonevent.CommonEventManager: void publishCommonEvent(ohos.event.commonevent.CommonEventData,ohos.event.commonevent.CommonEventPublishInfo)>
<ohos.bundle.LauncherService: void <init>(ohos.app.Context)>
<ohos.sysappcomponents.contact.entity.Event: void <clinit>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object reduceEntries(long,java.util.function.Function,java.util.function.BiFunction)>
<ohos.media.image.common.PixelFormat: void <clinit>()>
<ohos.telephony.LteSignalInformation: boolean marshalling(ohos.utils.Parcel)>
<java.time.LocalDateTime: int getNano()>
<ohos.global.icu.text.MessagePattern.Part.Type: void <clinit>()>
<ohos.agp.components.ComponentParent: boolean onDrag(ohos.agp.components.Component,ohos.agp.components.DragEvent)>
<ohos.agp.render.opengl.EGLSurface: boolean equals(java.lang.Object)>
<ohos.agp.render.render3d.components.CameraComponent: void setCustomProjection(ohos.agp.render.render3d.math.Matrix4x4)>
<ohos.global.icu.lang.UCharacter: double getUnicodeNumericValue(int)>
<ohos.agp.render.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,int)>
<ohos.aafwk.content.IntentParams: java.lang.ClassLoader getClassLoader()>
<ohos.utils.geo.Rect: void fuse(int,int)>
<ohos.ai.cv.sr.SisrConfiguration.Builder: ohos.ai.cv.sr.SisrConfiguration build()>
<java.text.DateFormatSymbols: void setWeekdays(java.lang.String[])>
<ohos.media.common.AVMetadata: ohos.media.common.AVDescription getAVDescription()>
<ohos.agp.render.opengl.GLES20: void glUniform2iv(int,int,java.nio.IntBuffer)>
<ohos.agp.render.Path: void arcTo(ohos.agp.utils.RectFloat,float,float,boolean)>
<ohos.data.resultset.SharedBlock: boolean putDouble(double,int,int)>
<ohos.media.image.ImagePacker.PackingOptions: void <init>()>
<ohos.location.GeoAddress: void setCountryName(java.lang.String)>
<java.security.acl.Acl: java.lang.String toString()>
<ohos.accessibility.ability.DisplayResizeController: void <init>(int,int,java.lang.Object)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: void set(java.lang.Object,int)>
<java.util.stream.LongStream: java.util.stream.LongStream.Builder builder()>
<ohos.data.file.FileAbility: int insert(ohos.utils.net.Uri,ohos.data.rdb.ValuesBucket)>
<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>
<ohos.net.NetStatusCallback: void onLost(ohos.net.NetHandle)>
<ohos.sysappcomponents.contact.entity.Relation: java.lang.String getRelationName()>
<java.lang.String: java.lang.String valueOf(double)>
<java.time.ZonedDateTime: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.time.chrono.ThaiBuddhistEra: int getValue()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet removeAll(java.lang.CharSequence)>
<ohos.utils.PlainArray: int removeBatchAt(int,int)>
<java.lang.Float: float sum(float,float)>
<ohos.agp.components.AttrHelper: long convertValueToLong(java.lang.String,long)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateTimeInstance(int,int,ohos.global.icu.util.ULocale)>
<ohos.hiviewdfx.Debug: void functionTraceBegin(java.lang.String,int)>
<ohos.media.audio.AudioDeviceDescriptor: void <init>(int,java.lang.String,java.lang.String,ohos.media.audio.AudioDeviceDescriptor.DeviceType,ohos.media.audio.AudioDeviceDescriptor.DeviceRole,int[],int[],int[],java.util.List)>
<java.sql.Statement: java.sql.ResultSet getResultSet()>
<ohos.event.commonevent.CommonEventData: java.lang.String toString()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayCountry()>
<java.text.Normalizer.Form: java.text.Normalizer.Form[] values()>
<ohos.agp.render.ColorMatrix: void setMatrix(float[])>
<ohos.javax.xml.parsers.SAXParserFactory: ohos.javax.xml.validation.Schema getSchema()>
<ohos.agp.utils.Rect: void <init>(int,int,int,int)>
<java.time.OffsetTime: java.time.OffsetTime truncatedTo(java.time.temporal.TemporalUnit)>
<ohos.agp.render.PdfGenerator: void <init>()>
<java.io.ObjectInputStream.GetField: double get(java.lang.String,double)>
<ohos.global.icu.util.Measure: java.lang.Number getNumber()>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty scaleY(float)>
<ohos.event.notification.IAdvancedNotificationManager: void cancelAllNotifications(java.lang.String,int)>
<java.nio.channels.FileChannel: java.nio.channels.SeekableByteChannel truncate(long)>
<java.util.GregorianCalendar: int getLeastMaximum(int)>
<java.lang.Boolean: int compareTo(java.lang.Object)>
<java.util.zip.DeflaterOutputStream: void close()>
<java.util.Comparator: java.util.Comparator comparingInt(java.util.function.ToIntFunction)>
<ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime: int length()>
<java.io.StreamTokenizer: void parseNumbers()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: ohos.event.notification.NotificationRequest.NotificationConversationalContent addConversationalMessage(ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage)>
<java.security.cert.PKIXRevocationChecker.Option: java.security.cert.PKIXRevocationChecker.Option valueOf(java.lang.String)>
<ohos.data.rdb.RdbStore: java.lang.String getPath()>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onRefresh(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.aafwk.ability.LifecycleObserver: void onInactive()>
<ohos.global.icu.text.DecimalFormatSymbols: void setDigitStrings(java.lang.String[])>
<ohos.media.audio.AudioRenderer.State: ohos.media.audio.AudioRenderer.State valueOf(java.lang.String)>
<java.util.stream.IntStream: java.util.stream.IntStream rangeClosed(int,int)>
<ohos.media.audio.AudioRenderer: boolean setVolume(ohos.media.audio.AudioRenderer.ChannelVolume)>
<ohos.event.notification.NotificationUserInput: ohos.utils.PacMap getAdditionalData()>
<java.lang.Math: double max(double,double)>
<ohos.agp.render.opengl.GLES32: void glColorMaski(int,boolean,boolean,boolean,boolean)>
<java.sql.DatabaseMetaData: int getMaxIndexLength()>
<java.lang.Math: long addExact(long,long)>
<java.sql.DriverManager: java.io.PrintWriter getLogWriter()>
<ohos.agp.components.Component: int getScrollbarFadingDelay()>
<ohos.batterymanager.BatteryInfo.BatteryLevel: void <clinit>()>
<java.util.stream.Collectors: java.util.stream.Collector toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)>
<ohos.data.file.FileAbility: ohos.data.resultset.ResultSet query(ohos.utils.net.Uri,java.lang.String[],ohos.data.dataability.DataAbilityPredicates)>
<ohos.agp.render.Insets: ohos.agp.render.Insets setValue(ohos.agp.utils.Rect)>
<ohos.miscservices.download.DownloadSession.DownloadInfo: int getPausedReason()>
<java.time.YearMonth: java.time.YearMonth parse(java.lang.CharSequence)>
<ohos.miscservices.pasteboard.IPasteDataChangedListener: void onChanged()>
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer)>
<ohos.agp.render.opengl.GLES20: void glUniform1fv(int,int,java.nio.FloatBuffer)>
<java.util.Collections: java.util.SortedMap checkedSortedMap(java.util.SortedMap,java.lang.Class,java.lang.Class)>
<java.util.function.ToDoubleFunction: double applyAsDouble(java.lang.Object)>
<javax.net.ssl.SSLEngine: java.lang.Runnable getDelegatedTask()>
<java.io.PrintStream: java.io.PrintStream append(java.lang.CharSequence)>
<java.time.chrono.ChronoLocalDate: int hashCode()>
<ohos.data.orm.Blob: int hashCode()>
<ohos.data.orm.OrmObject: int hashCode()>
<ohos.media.common.sessioncore.AVPlaybackState: java.lang.String toString()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet set(ohos.global.icu.text.UnicodeSet)>
<ohos.agp.components.Slider: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.media.image.common.PixelFormat: ohos.media.image.common.PixelFormat[] values()>
<ohos.eventhandler.EventHandler: void sendSyncEvent(int,ohos.eventhandler.EventHandler.Priority)>
<java.util.concurrent.atomic.AtomicLongArray: long getAndAccumulate(int,long,java.util.function.LongBinaryOperator)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,float)>
<ohos.global.icu.util.Calendar: int get(int)>
<ohos.javax.xml.transform.Result: void setSystemId(java.lang.String)>
<ohos.agp.components.ListContainer: void setReboundEffect(boolean)>
<ohos.bundle.IBundleInstaller: boolean uninstall(java.lang.String,ohos.bundle.InstallParam,ohos.bundle.InstallerCallback)>
<ohos.agp.components.element.Element: ohos.agp.components.element.Element.OnChangeListener getCallback()>
<java.net.HttpCookie: java.util.List parse(java.lang.String)>
<java.util.concurrent.RecursiveTask: java.lang.Object compute()>
<java.time.chrono.IsoChronology: java.time.LocalDate dateNow(java.time.ZoneId)>
<ohos.agp.render.Canvas: void drawArc(ohos.agp.utils.RectFloat,ohos.agp.render.Arc,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<ohos.media.common.sessioncore.AVSubscriptionCallback: void onAVElementListLoaded(java.lang.String,java.util.List,ohos.utils.PacMap)>
<ohos.multimodalinput.standard.SystemEventHandle: boolean onMute(ohos.multimodalinput.event.MultimodalEvent)>
<java.lang.invoke.LambdaConversionException: void <init>(java.lang.Throwable)>
<java.sql.Time: int getYear()>
<java.util.Collections: java.util.NavigableSet checkedNavigableSet(java.util.NavigableSet,java.lang.Class)>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer duplicate()>
<java.nio.channels.AsynchronousSocketChannel: java.nio.channels.NetworkChannel setOption(java.net.SocketOption,java.lang.Object)>
<java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<java.lang.Character: int getNumericValue(int)>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<ohos.org.w3c.dom.ls.LSInput: java.io.Reader getCharacterStream()>
<java.sql.PreparedStatement: void setString(int,java.lang.String)>
<java.text.DecimalFormat: void applyLocalizedPattern(java.lang.String)>
<java.time.ZonedDateTime: java.time.ZonedDateTime ofStrict(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)>
<java.time.zone.ZoneRules: java.util.List getValidOffsets(java.time.LocalDateTime)>
<java.nio.Buffer: int capacity()>
<java.time.LocalTime: boolean isAfter(java.time.LocalTime)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThanOrEqualTo(java.lang.String,java.sql.Time)>
<ohos.accessibility.AccessibilityEventInfo: int getPresentIndex()>
<ohos.org.xml.sax.InputSource: void <init>(java.io.Reader)>
<java.lang.String: void getChars(int,int,char[],int)>
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)>
<ohos.agp.components.Picker: int getMaxValue()>
<ohos.global.icu.text.Collator: java.lang.String getDisplayName(java.util.Locale,java.util.Locale)>
<ohos.app.Context: ohos.app.Context getApplicationContext()>
<ohos.bluetooth.BluetoothHost: int getProfileConnState(int)>
<ohos.data.search.schema.Schema: java.lang.String getAlternateName()>
<java.time.chrono.MinguoChronology: java.lang.String getCalendarType()>
<java.time.ZonedDateTime: java.time.ZonedDateTime minusYears(long)>
<ohos.miscservices.inputmethodability.TextInputClient: boolean unsubscribeCursorContext()>
<java.nio.channels.Pipe: java.nio.channels.Pipe open()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: java.lang.String getThreadName()>
<ohos.agp.components.webengine.CookieStore: void setCookieEnable(boolean)>
<ohos.global.icu.text.Collator: ohos.global.icu.text.Collator setMaxVariable(int)>
<java.io.CharArrayWriter: void close()>
<ohos.nfc.tag.TagInfo: int[] getTagSupportedProfiles()>
<ohos.distributedhardware.devicemanager.DeviceInfo.DeviceType: ohos.distributedhardware.devicemanager.DeviceInfo.DeviceType valueOf(int)>
<java.net.SocketImpl: boolean supportsUrgentData()>
<java.util.DoubleSummaryStatistics: double getSum()>
<ohos.sysappcomponents.calendar.entity.Events: int getEventStatus()>
<java.util.concurrent.CopyOnWriteArrayList: boolean removeAll(java.util.Collection)>
<ohos.global.icu.util.Calendar: long getTimeInMillis()>
<ohos.utils.PersistablePacMap: ohos.utils.PersistablePacMap fromJsonString(java.lang.String)>
<java.time.Instant: java.time.Instant minus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.components.Component: int getAccessibility()>
<java.io.PushbackReader: boolean ready()>
<ohos.miscservices.timeutility.Timer.TimerIntent: int getAbilityType()>
<ohos.data.orm.BindUtils: byte[] bindBlob(java.sql.Blob)>
<ohos.agp.components.Component: int getPaddingLeft()>
<java.time.OffsetDateTime: java.time.Month getMonth()>
<ohos.accessibility.ability.AccessibleAbility: java.util.List getWindows()>
<ohos.utils.zson.ZSONArray: long getLongValue(int)>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
<java.time.chrono.MinguoDate: java.time.chrono.Chronology getChronology()>
<java.util.concurrent.SynchronousQueue: int drainTo(java.util.Collection)>
<java.util.logging.LogRecord: void setResourceBundle(java.util.ResourceBundle)>
<javax.sql.RowSet: void setNull(int,int,java.lang.String)>
<ohos.miscservices.timeutility.Timer.TimerIntent: ohos.aafwk.content.Intent getIntent()>
<java.time.OffsetDateTime: java.time.OffsetTime toOffsetTime()>
<ohos.media.player.Player: boolean setSource(ohos.global.resource.BaseFileDescriptor)>
<java.util.function.Predicate: java.util.function.Predicate or(java.util.function.Predicate)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>
<ohos.usb.USBDevicePipe: int getFileDescriptor()>
<ohos.data.resultset.AbsSharedResultSet: ohos.data.resultset.ResultSet.ColumnType getColumnTypeForIndex(int)>
<ohos.agp.render.PdfDisplay: void <init>(java.io.FileInputStream)>
<ohos.data.preferences.Preferences: java.util.Map getAll()>
<java.time.Duration: java.time.Duration plusMillis(long)>
<java.time.LocalDateTime: java.time.LocalDateTime minusYears(long)>
<ohos.media.tubecore.AVTubeManager: java.util.Optional createAVTubeEx(ohos.media.tubecore.AVTube.SetInfo)>
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet complementAll(ohos.global.icu.text.UnicodeSet)>
<java.lang.reflect.Modifier: int parameterModifiers()>
<ohos.bundle.CommonEventInfo: java.lang.String getClassName()>
<java.util.concurrent.TimeUnit: long toDays(long)>
<java.util.AbstractMap: int size()>
<ohos.location.Location: float calculateDistance(double,double,double,double)>
<ohos.media.codec.Codec: boolean stop()>
<java.security.DigestInputStream: java.lang.String toString()>
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notIn(java.lang.String,java.lang.String[])>
<ohos.rpc.RemoteObjectCallbackList: void <init>()>
<java.util.LinkedList: boolean add(java.lang.Object)>
<ohos.data.rdb.RdbStore: boolean isHoldingConnection()>
<ohos.agp.utils.Line: float getStartPointX()>
<java.security.Provider.Service: java.lang.String toString()>
<ohos.telephony.RadioInfoManager: boolean isRoaming(int)>
<ohos.aafwk.ability.DataAbilityHelper: java.io.InputStream obtainInputStream(ohos.utils.net.Uri)>
<ohos.agp.render.RadialShader: ohos.agp.utils.Point getShaderPoint()>
<java.sql.DataTruncation: void <init>(int,boolean,boolean,int,int,java.lang.Throwable)>
<java.sql.PreparedStatement: void setCharacterStream(int,java.io.Reader,int)>
<javax.crypto.spec.DESKeySpec: boolean isWeak(byte[],int)>
<ohos.agp.components.Component.DraggedListener: boolean onDragPreAccept(ohos.agp.components.Component,int)>
<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag valueOf(java.lang.String)>
<javax.net.ssl.SSLEngine: void <init>()>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType unwrap()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates beginWrap()>
<java.util.TreeMap: java.util.Map.Entry floorEntry(java.lang.Object)>
<java.util.OptionalInt: boolean equals(java.lang.Object)>
<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty scaleYFrom(float)>
<ohos.app.Context: ohos.app.Context createBundleContext(java.lang.String,int)>
<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater,int)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform4f(int,int,float,float,float,float)>
<ohos.media.tubecore.AVTube.DeviceType: int getValue()>
<ohos.javax.xml.transform.Source: void setSystemId(java.lang.String)>
<ohos.aafwk.ability.FormState: void <clinit>()>
<java.sql.SQLInput: java.net.URL readURL()>
<ohos.aafwk.ability.AbilityForm: void <clinit>()>
<ohos.global.icu.text.BidiRun: int getLimit()>
<ohos.agp.render.render3d.resources.MaterialDesc: float getGlossinessFactor()>
<java.text.SimpleDateFormat: java.text.DateFormatSymbols getDateFormatSymbols()>
<ohos.data.rdb.RdbCorruptException: void <init>()>
<ohos.agp.window.service.DisplayNotch: int getPaddingRight()>
<javax.net.ssl.SSLSession: java.lang.String[] getValueNames()>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<ohos.media.audio.AudioRenderer: ohos.media.audio.AudioStreamInfo.StreamType getStreamType()>
<ohos.bluetooth.BluetoothRemoteDevice: ohos.utils.SequenceUuid[] getDeviceUuids()>
<ohos.agp.render.opengl.GLES30: void glClearBufferfi(int,int,float,int)>
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeExponentP()>
<ohos.bluetooth.ble.GattDescriptor: ohos.bluetooth.ble.GattCharacteristic getCharacteristic()>
<java.time.ZonedDateTime: java.time.ZonedDateTime minusDays(long)>
<ohos.sysappcomponents.calendar.entity.Events: void setEventColourIndex(java.lang.String)>
<java.util.concurrent.atomic.AtomicMarkableReference: void set(java.lang.Object,boolean)>
<javax.lang.model.util.TypeKindVisitor7: void <init>(java.lang.Object)>
<java.io.StringWriter: void <init>(int)>
<java.time.Instant: java.lang.String toString()>
<java.lang.BootstrapMethodError: void <init>(java.lang.String)>
<ohos.global.icu.text.BreakIterator: int next(int)>
<ohos.sysappcomponents.calendar.entity.Participants: void setParticipantStatus(int)>
<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>(boolean)>
<ohos.global.icu.text.Edits.Iterator: boolean findDestinationIndex(int)>
<ohos.agp.components.MagicLayout.LayoutConfig: void <init>()>
<ohos.org.xml.sax.SAXParseException: java.lang.String toString()>
<java.nio.channels.spi.SelectorProvider: java.nio.channels.DatagramChannel openDatagramChannel(java.net.ProtocolFamily)>
<java.sql.DatabaseMetaData: boolean supportsMixedCaseIdentifiers()>
<java.time.ZonedDateTime: java.time.ZoneOffset getOffset()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates between(java.lang.String,java.util.Date,java.util.Date)>
<java.lang.Character: boolean isDefined(int)>
<ohos.agp.components.DatePicker: int getDateOrder()>
<java.util.concurrent.ForkJoinTask: java.lang.Object getRawResult()>
<java.nio.ShortBuffer: java.nio.ShortBuffer slice()>
<ohos.data.rdb.RdbDoneException: void <init>()>
<javax.security.cert.X509Certificate: void <init>()>
<ohos.utils.PacMap: java.util.Map getAll()>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: void setTexCoords(java.nio.FloatBuffer)>
<java.util.prefs.AbstractPreferences: void putBoolean(java.lang.String,boolean)>
<java.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.utils.LightweightSet: boolean removeAll(java.util.Collection)>
<java.security.Signature: void <init>(java.lang.String)>
<ohos.agp.components.Switch: void setThumbPadding(int,int)>
<java.lang.Character: java.lang.Character valueOf(char)>
<ohos.data.distributed.common.Schema: java.util.List getIndexes()>
<ohos.agp.render.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,float[])>
<ohos.hiviewdfx.HiLog: boolean isLoggable(int,java.lang.String,int)>
<java.net.URL: java.lang.Object getContent(java.lang.Class[])>
<java.sql.Statement: int getUpdateCount()>
<ohos.utils.PacMap: java.util.ArrayList getSequenceableList(java.lang.String)>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate now()>
<ohos.event.notification.NotificationRequest: ohos.media.image.PixelMap getBigIcon()>
<ohos.global.icu.util.HebrewCalendar: void handleComputeFields(int)>
<ohos.ai.cv.common.ICvBase: void loadPlugin(ohos.ai.engine.pluginservice.ILoadPluginCallback)>
<ohos.data.distributed.common.KvStoreErrorCode: ohos.data.distributed.common.KvStoreErrorCode[] values()>
<ohos.media.common.StorageProperty: void <clinit>()>
<ohos.agp.render.Canvas: void rotate(float,float,float)>
<ohos.accessibility.ability.AccessibleAbility: boolean gestureSimulate(java.util.List,ohos.accessibility.ability.GestureResultListener)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<ohos.agp.components.TableLayout.LayoutConfig: void <init>(ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.agp.components.PageSliderProvider: void onUpdateFinished(ohos.agp.components.ComponentContainer)>
<ohos.ai.cv.text.TextConfiguration.Builder: ohos.ai.cv.text.TextConfiguration.Builder setTextShape(ohos.ai.cv.text.TextConfiguration.TextShape)>
<java.time.format.TextStyle: void <clinit>()>
<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>
<ohos.agp.components.ListContainer: void setReboundEffectParams(int,float,int)>
<ohos.agp.components.AttrHelper: int convertDimensionToPix(java.lang.String,float,int)>
<java.time.Instant: boolean isAfter(java.time.Instant)>
<java.util.Vector: void removeElementAt(int)>
<java.security.cert.PKIXParameters: void addCertPathChecker(java.security.cert.PKIXCertPathChecker)>
<java.security.Policy: void <init>()>
<java.sql.Array: java.sql.ResultSet getResultSet()>
<ohos.sysappcomponents.calendar.entity.Events: void setDescription(java.lang.String)>
<java.nio.file.Files: java.nio.file.Path createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[])>
<ohos.utils.Parcel: void readBooleanArray(boolean[])>
<ohos.system.OsHelper: void removeFileExtendedAttribute(java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES2Ext: void glFramebufferTextureEXT(int,int,int,int)>
<java.nio.ShortBuffer: java.nio.ShortBuffer duplicate()>
<java.util.Collections: java.util.ListIterator emptyListIterator()>
<ohos.multimodalinput.event.MmiPoint: float getY()>
<ohos.aafwk.ability.Ability: void onDeleteForm(long)>
<ohos.agp.render.Vertices: float[] getTexs()>
<java.util.concurrent.LinkedTransferQueue: int size()>
<java.sql.ResultSet: void updateDouble(java.lang.String,double)>
<java.lang.Integer: short shortValue()>
<ohos.data.rdb.RdbUtils: void appendStringToSqlAndEscapeQuote(java.lang.StringBuilder,java.lang.String)>
<java.lang.Long: java.lang.Long decode(java.lang.String)>
<ohos.global.icu.text.IDNA.Info: java.util.Set getErrors()>
<java.security.acl.Acl: java.util.Enumeration getPermissions(java.security.Principal)>
<ohos.accessibility.ability.SoftKeyBoardController: boolean setShowMode(int)>
<ohos.agp.components.SlideDrawer: boolean openSmoothly(ohos.agp.components.SlideDrawer.SlideDirection,int)>
<ohos.agp.transition.TransitionAlpha: void setDuration(float)>
<ohos.event.notification.NotificationActionButton.Builder: ohos.event.notification.NotificationActionButton.Builder addNotificationUserInput(ohos.event.notification.NotificationUserInput)>
<ohos.nfc.tag.MifareClassicTag: void restoreBlock(int)>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.PluralFormat: void <init>(java.util.Locale)>
<ohos.agp.components.Component: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glScissor(int,int,int,int)>
<ohos.agp.render.render3d.math.Matrix4x4: void makeRotation(ohos.agp.render.render3d.math.Quaternion)>
<java.lang.Double: java.lang.Double valueOf(double)>
<ohos.global.icu.text.Bidi: int[] reorderVisual(byte[])>
<java.util.HashMap: int size()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notIn(java.lang.String,int[])>
<ohos.global.icu.text.DateIntervalInfo: void setFallbackIntervalPattern(java.lang.String)>
<ohos.javax.xml.validation.Validator: ohos.org.w3c.dom.ls.LSResourceResolver getResourceResolver()>
<java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<ohos.utils.net.Uri: boolean equals(java.lang.Object)>
<ohos.data.distributed.device.DeviceInfo: java.lang.String getType()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
<java.nio.file.Files: long size(java.nio.file.Path)>
<ohos.sysappcomponents.contact.entity.Name: void setFamilyName(java.lang.String)>
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>
<ohos.event.notification.NotificationSubscriber: void onConsumed(ohos.event.notification.NotificationRequest)>
<java.lang.Integer: java.lang.String toOctalString(int)>
<ohos.agp.graphics.TextureHolder: void bindToGPUContext(int)>
<java.sql.DatabaseMetaData: java.lang.String getSQLKeywords()>
<java.security.AccessController: void checkPermission(java.security.Permission)>
<ohos.media.audio.AudioCapturerConfig: int getSessionId()>
<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>
<java.time.MonthDay: java.lang.String toString()>
<ohos.agp.components.ComponentContainer: void setComponentTransition(ohos.agp.components.ComponentTransition)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet complement(int)>
<java.util.Arrays: void fill(double[],double)>
<java.time.chrono.ChronoZonedDateTime: int compareTo(java.time.chrono.ChronoZonedDateTime)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: boolean triggerKeyEvent(ohos.aafwk.ability.Ability,ohos.multimodalinput.event.KeyEvent)>
<ohos.telephony.WcdmaSignalInformation: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.Spliterator.OfInt: java.util.Spliterator trySplit()>
<java.text.NumberFormat: java.lang.Object clone()>
<ohos.sysappcomponents.calendar.entity.Events: boolean isWholeDay()>
<ohos.bluetooth.ble.BleAdvertiseSettings.Builder: ohos.bluetooth.ble.BleAdvertiseSettings build()>
<ohos.data.resultset.ResultSetHook: void createHook(java.lang.String,java.lang.String[],ohos.data.resultset.ResultSet)>
<java.security.acl.Acl: boolean removeEntry(java.security.Principal,java.security.acl.AclEntry)>
<ohos.event.notification.NotificationUserInput.Builder: ohos.event.notification.NotificationUserInput.Builder setOptions(java.util.List)>
<ohos.utils.ConditionHelper: void wakeup()>
<ohos.media.common.sessioncore.AVConnectionCallback: void <init>()>
<ohos.agp.components.Text: void setSelectionLeftBubbleElement(ohos.agp.components.element.Element)>
<ohos.global.icu.text.PluralFormat: java.lang.String format(double)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder.Redirect redirectError()>
<ohos.media.photokit.metadata.AVStorage.Downloads: void <clinit>()>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneNames getTimeZoneNames()>
<java.sql.Date: int getMinutes()>
<java.sql.ResultSet: boolean relative(int)>
<java.security.cert.X509CertSelector: byte[] getSubjectAsBytes()>
<java.util.concurrent.ForkJoinPool: java.lang.String toString()>
<ohos.miscservices.download.DownloadSession: boolean removeListener(ohos.miscservices.download.IDownloadListener)>
<ohos.aafwk.ability.AbilitySliceLifecycleExecutor.LifecycleState: ohos.aafwk.ability.AbilitySliceLifecycleExecutor.LifecycleState valueOf(java.lang.String)>
<ohos.agp.components.SlideDrawer.SlideDirection: ohos.agp.components.SlideDrawer.SlideDirection valueOf(java.lang.String)>
<java.util.TreeMap: java.util.Map.Entry ceilingEntry(java.lang.Object)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CodingErrorAction unmappableCharacterAction()>
<ohos.media.sessioncore.AVSession: ohos.media.common.sessioncore.AVCallerUserInfo getCurrentControllerInfo()>
<javax.tools.FileObject: java.net.URI toUri()>
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>
<ohos.media.audio.AudioRenderer.SpeedPara.Builder: ohos.media.audio.AudioRenderer.SpeedPara.Builder pitch(float)>
<ohos.net.NetHandle: void <init>(int)>
<ohos.data.search.model.IndexData: boolean isEmpty()>
<ohos.agp.colors.Color: boolean equals(java.lang.Object)>
<ohos.data.search.schema.PhotoItem: java.lang.String getDistrict()>
<java.lang.Character: int codePointAt(char[],int)>
<javax.net.ssl.KeyStoreBuilderParameters: void <init>(java.security.KeyStore.Builder)>
<javax.sql.RowSet: void setClob(java.lang.String,java.io.Reader,long)>
<java.io.ObjectInputStream: boolean readBoolean()>
<java.text.DateFormat: java.util.Locale[] getAvailableLocales()>
<ohos.bluetooth.BluetoothRemoteDevice: java.util.Optional getDeviceName()>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: ohos.event.notification.NotificationRequest.NotificationPictureContent setTitle(java.lang.String)>
<java.util.concurrent.CompletionService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>
<ohos.media.audio.AudioManager: java.util.List getActiveCapturerConfigs()>
<java.lang.Character.Subset: void <init>(java.lang.String)>
<ohos.aafwk.ability.DataAbilityOperation.Builder: ohos.aafwk.ability.DataAbilityOperation.Builder withValuesBucket(ohos.data.rdb.ValuesBucket)>
<ohos.usb.USBDevicePipe: boolean setInterface(ohos.usb.USBInterface)>
<javax.lang.model.element.ElementVisitor: java.lang.Object visitVariable(javax.lang.model.element.VariableElement,java.lang.Object)>
<java.nio.channels.AsynchronousChannelGroup: boolean isTerminated()>
<ohos.data.resultset.SharedBlock: boolean setColumnCount(int)>
<ohos.global.icu.text.Normalizer2: java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.CharSequence)>
<ohos.data.orm.OrmConfig: ohos.data.DatabaseFileType getDatabaseFileType()>
<java.time.YearMonth: java.time.YearMonth of(int,java.time.Month)>
<ohos.media.image.ImageSource: void finalize()>
<java.lang.ThreadGroup: boolean isDestroyed()>
<java.util.Locale: java.lang.String getUnicodeLocaleType(java.lang.String)>
<ohos.agp.colors.RgbColor: int getGreen()>
<java.nio.file.attribute.UserDefinedFileAttributeView: int read(java.lang.String,java.nio.ByteBuffer)>
<ohos.location.LocatorCallback: void onLocationReport(ohos.location.Location)>
<ohos.net.NetHandle: void <init>(int,boolean)>
<ohos.aafwk.ability.continuation.ExtraParams: java.lang.String getJsonParams()>
<java.sql.ResultSet: int getHoldability()>
<javax.sql.StatementEvent: java.sql.SQLException getSQLException()>
<ohos.agp.components.Component.DraggedListener: void onDragStart(ohos.agp.components.Component,ohos.agp.components.DragInfo)>
<ohos.global.icu.text.CollationKey: void <init>(java.lang.String,byte[])>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getAttributeNamespace(int)>
<java.io.PrintStream: void clearError()>
<javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind valueOf(java.lang.String)>
<ohos.accessibility.ability.AccessibilityWindow: ohos.accessibility.ability.AccessibilityWindow get(ohos.accessibility.ability.AccessibilityWindow)>
<ohos.global.icu.lang.UCharacter: int toChars(int,char[],int)>
<java.security.KeyRep.Type: void <clinit>()>
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getP()>
<java.security.Provider: java.util.Enumeration keys()>
<ohos.agp.components.ComponentContainer: void <init>(ohos.app.Context)>
<ohos.agp.components.Component: void setFocusBorderPadding(int)>
<javax.lang.model.type.TypeMirror: boolean equals(java.lang.Object)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query inDouble(java.lang.String,java.util.List)>
<java.io.CharArrayWriter: int size()>
<ohos.agp.components.TableLayout.CellSpan: void <init>(int,int)>
<java.time.temporal.ChronoUnit: java.time.temporal.Temporal addTo(java.time.temporal.Temporal,long)>
<java.security.cert.PKIXRevocationChecker: void <init>()>
<java.util.zip.ZipInputStream: void close()>
<ohos.eventhandler.InnerEvent: long getHandleTime()>
<java.lang.ThreadGroup: void list()>
<ohos.data.resultset.ResultSetWrapper: boolean goToFirstRow()>
<java.math.BigDecimal: java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal,java.math.MathContext)>
<ohos.data.search.schema.AppItem: java.lang.String getComment()>
<ohos.usb.USBDevice: java.lang.String getDeviceName(int)>
<ohos.net.NetHandle: int hashCode()>
<java.nio.file.SimpleFileVisitor: java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)>
<java.time.chrono.JapaneseDate: boolean equals(java.lang.Object)>
<ohos.accessibility.ability.AccessibilityWindow: java.util.Optional getRootAccessibilityInfo()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<ohos.global.icu.lang.UCharacter: boolean isLegal(int)>
<ohos.agp.components.DirectionalLayout.LayoutConfig: void <init>(int,int,int,float)>
<java.util.Arrays: void fill(float[],int,int,float)>
<java.net.ResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)>
<ohos.event.commonevent.CommonEventPublishInfo: java.lang.String[] getSubscriberPermissions()>
<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>
<javax.crypto.ExemptionMechanismSpi: void engineInit(java.security.Key,java.security.AlgorithmParameters)>
<ohos.distributedhardware.devicemanager.DeviceManager: void releaseInstance()>
<ohos.vibrator.bean.VibrationPattern: ohos.vibrator.bean.VibrationPattern createPeriod(int[],int[],int)>
<java.time.temporal.TemporalAdjuster: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<ohos.agp.render.Paint: void setAntiAlias(boolean)>
<ohos.global.icu.text.Bidi: void <init>(char[],int,byte[],int,int,int)>
<java.nio.channels.FileChannel: java.nio.channels.FileLock lock(long,long,boolean)>
<java.io.ObjectInputStream.GetField: java.lang.Object get(java.lang.String,java.lang.Object)>
<ohos.multimodalinput.event.MultimodalEvent: long getOccurredTime()>
<ohos.utils.Parcel: boolean rewindRead(int)>
<java.util.stream.Stream: java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)>
<ohos.agp.components.webengine.WebView: boolean executeLongClick()>
<ohos.miscservices.inputmethod.EditingCapability: void <init>()>
<java.io.ObjectInputStream: java.lang.String readUTF()>
<java.util.concurrent.locks.ReentrantReadWriteLock: boolean isWriteLockedByCurrentThread()>
<java.util.zip.Adler32: long getValue()>
<java.util.List: int size()>
<java.time.format.DecimalStyle: java.time.format.DecimalStyle ofDefaultLocale()>
<ohos.media.extractor.Extractor: ohos.media.common.Format getStreamFormat(int)>
<java.nio.file.attribute.PosixFilePermissions: java.nio.file.attribute.FileAttribute asFileAttribute(java.util.Set)>
<ohos.app.IAbilityManager: void updateDeviceLocale(ohos.global.configuration.LocaleProfile)>
<ohos.agp.render.render3d.ViewHolder.SurfaceListener: void onSurfaceAvailable()>
<javax.tools.ForwardingJavaFileManager: java.lang.ClassLoader getClassLoader(javax.tools.JavaFileManager.Location)>
<ohos.agp.render.Paint.ShaderType: ohos.agp.render.Paint.ShaderType valueOf(java.lang.String)>
<java.security.CodeSigner: boolean equals(java.lang.Object)>
<java.lang.invoke.VolatileCallSite: void setTarget(java.lang.invoke.MethodHandle)>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate plus(java.time.temporal.TemporalAmount)>
<ohos.ai.asr.AsrIntent: int getVadEndWaitMs()>
<javax.crypto.interfaces.DHPublicKey: java.math.BigInteger getY()>
<ohos.distributedschedule.interwork.DeviceManager: boolean registerDeviceStateCallback(ohos.distributedschedule.interwork.IDeviceStateCallback)>
<ohos.sysappcomponents.contact.entity.Email: java.lang.String getEmail()>
<java.text.Collator: void setStrength(int)>
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<ohos.miscservices.timeutility.Timer.TimerIntent: boolean isValid()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean tryAcquireNanos(long,long)>
<ohos.global.icu.text.Collator: boolean isFrozen()>
<ohos.utils.LightweightSet: boolean retainAll(java.util.Collection)>
<ohos.app.GeneralReceiver: void <init>(ohos.eventhandler.EventHandler)>
<ohos.agp.components.Switch: ohos.agp.components.element.Element getThumbElement()>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandles.Lookup in(java.lang.Class)>
<java.util.concurrent.RejectedExecutionException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.utils.Matrix: boolean preRotate(float)>
<java.security.spec.EncodedKeySpec: void <init>(byte[])>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle explicitCastArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>
<java.time.YearMonth: java.time.YearMonth withMonth(int)>
<ohos.bluetooth.BluetoothRemoteDevice: boolean equals(java.lang.Object)>
<java.lang.VirtualMachineError: void <init>()>
<java.lang.StringBuffer: java.lang.StringBuffer reverse()>
<ohos.media.audio.AudioCapturer: boolean addSoundEffect(java.util.UUID,java.lang.String)>
<ohos.net.NetHotspot: java.lang.String[] getHotspotIfaces()>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: boolean marshalling(ohos.utils.Parcel)>
<java.lang.StrictMath: int getExponent(double)>
<java.text.Format: java.lang.Object parseObject(java.lang.String)>
<ohos.global.icu.text.DateFormat.Field: java.lang.Object readResolve()>
<java.util.PrimitiveIterator.OfDouble: void forEachRemaining(java.util.function.DoubleConsumer)>
<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
<ohos.media.player.Player: boolean rewindTo(long)>
<ohos.agp.components.MagicLayout: void setFoldEnabled(boolean)>
<ohos.telephony.ShortMessage.ShortMessageClass: ohos.telephony.ShortMessage.ShortMessageClass valueOf(java.lang.String)>
<java.io.StreamTokenizer: int nextToken()>
<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(java.lang.String,int)>
<java.sql.ResultSet: void insertRow()>
<java.util.prefs.Preferences: java.lang.String get(java.lang.String,java.lang.String)>
<java.sql.ResultSet: void updateAsciiStream(java.lang.String,java.io.InputStream,long)>
<ohos.storageinfomgr.StorageInfo: long getAppSize()>
<ohos.sysappcomponents.contact.entity.PostalAddress: void setCity(java.lang.String)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(java.lang.String)>
<ohos.app.Context: ohos.app.Context getAbilityPackageContext()>
<ohos.light.bean.LightEffect: void setOnDuration(int)>
<java.sql.Savepoint: int getSavepointId()>
<ohos.agp.utils.Circle: ohos.agp.utils.Point getCenter()>
<java.security.MessageDigest: void update(byte)>
<java.io.PipedWriter: void flush()>
<ohos.global.icu.text.Collator: java.lang.String[] getKeywordValuesForLocale(java.lang.String,ohos.global.icu.util.ULocale,boolean)>
<java.net.HttpCookie: java.lang.String getCommentURL()>
<ohos.event.notification.IAdvancedNotificationManager: ohos.event.notification.NotificationSlotGroup getNotificationSlotGroup(java.lang.String,java.lang.String)>
<ohos.data.orm.OrmContext: void rollback()>
<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
<ohos.ai.cv.common.CvRect: void <init>(ohos.ai.cv.common.CvRect)>
<java.util.Scanner: java.lang.String findWithinHorizon(java.lang.String,int)>
<ohos.agp.render.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,int[],int,int,int,int)>
<java.time.chrono.ChronoPeriod: java.time.chrono.ChronoPeriod minus(java.time.temporal.TemporalAmount)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage applyToEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Function,java.util.concurrent.Executor)>
<ohos.agp.render.opengl.GLES30: void glGenVertexArrays(int,int[])>
<ohos.media.photokit.MediaLibrary: ohos.media.photokit.support.FetchResult getAlbumListInfo(java.lang.String[])>
<java.sql.Statement: int getMaxFieldSize()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates between(java.lang.String,java.util.Date,java.util.Date)>
<java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>
<ohos.agp.utils.RectFloat: ohos.agp.utils.DimensFloat getRectSize()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setClassification(java.lang.String)>
<java.util.IdentityHashMap: void forEach(java.util.function.BiConsumer)>
<ohos.aafwk.ability.Ability: ohos.rpc.IRemoteObject onConnect(ohos.aafwk.content.Intent)>
<ohos.agp.render.opengl.EGLConfig: int hashCode()>
<java.util.List: java.lang.Object get(int)>
<javax.crypto.EncryptedPrivateKeyInfo: java.lang.String getAlgName()>
<javax.crypto.spec.PSource.PSpecified: byte[] getValue()>
<ohos.accessibility.ability.GestureResultListener: void <init>()>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal negate()>
<ohos.media.common.AVMetadata.Builder: ohos.media.common.AVMetadata.Builder setText(java.lang.String,java.lang.CharSequence)>
<java.util.LinkedList: java.lang.Object removeFirst()>
<ohos.agp.window.dialog.ListDialog: void setOnSingleSelectListener(ohos.agp.window.dialog.IDialog.ClickedListener)>
<java.text.DateFormatSymbols: void setLocalPatternChars(java.lang.String)>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void set(java.lang.Object,java.lang.Object)>
<ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder: void <init>(java.lang.String)>
<ohos.global.icu.util.ChineseCalendar: int[][][] getFieldResolutionTable()>
<java.util.SimpleTimeZone: boolean useDaylightTime()>
<ohos.hiviewdfx.HiChecker.Rule: ohos.hiviewdfx.HiChecker.Rule[] values()>
<ohos.media.image.common.DecodeEvent: void <clinit>()>
<ohos.workscheduler.WorkInfo: int getRequestBatteryLevel()>
<ohos.org.xml.sax.helpers.DefaultHandler: void startPrefixMapping(java.lang.String,java.lang.String)>
<ohos.data.distributed.common.KvManager: void unRegisterDeviceChangeCallback(ohos.data.distributed.device.DeviceChangeCallback)>
<java.nio.charset.CharsetEncoder: void <init>(java.nio.charset.Charset,float,float,byte[])>
<ohos.event.commonevent.CommonEventPublishInfo: boolean isSticky()>
<ohos.miscservices.inputmethodability.TextInputClient: ohos.miscservices.inputmethod.EditingText getEditingText(int,ohos.miscservices.inputmethod.EditingCapability)>
<javax.crypto.CipherOutputStream: void write(byte[],int,int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates in(java.lang.String,long[])>
<ohos.utils.net.Uri: java.lang.String getEncodedAuthority()>
<ohos.bluetooth.ble.BlePeripheralDevice: java.lang.String getDeviceAddr()>
<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>
<ohos.agp.text.Layout: float getCoordinateInMainDir(int)>
<ohos.global.icu.util.Calendar: boolean after(java.lang.Object)>
<ohos.event.notification.NotificationConstant.SemanticActionButton: ohos.event.notification.NotificationConstant.SemanticActionButton valueOf(java.lang.String)>
<ohos.media.image.common.MemoryUsagePreference: int getValue()>
<ohos.sensor.agent.CategoryEnvironmentAgent: java.util.List getAllSensors()>
<ohos.agp.render.Region: boolean getBoundaryPath(ohos.agp.render.Path)>
<ohos.data.rdb.ValuesBucket: void putNull(java.lang.String)>
<java.lang.StrictMath: double nextUp(double)>
<ohos.agp.components.IndexBar: void languageSwitch(java.lang.String[])>
<ohos.agp.render.opengl.GLES31: void glUseProgramStages(int,int,int)>
<ohos.global.icu.util.TimeZone: java.lang.String getID()>
<java.lang.Runtime: void traceMethodCalls(boolean)>
<ohos.distributedhardware.devicemanager.DeviceManager.DeviceManagerCallback: void onDied()>
<ohos.global.icu.text.UnicodeSet.SpanCondition: ohos.global.icu.text.UnicodeSet.SpanCondition[] values()>
<ohos.global.icu.number.FormattedNumber: int length()>
<ohos.aafwk.ability.AbilitySliceLifecycleExecutor.LifecycleState: void <clinit>()>
<java.io.PushbackInputStream: void unread(byte[])>
<java.security.spec.ECPrivateKeySpec: void <init>(java.math.BigInteger,java.security.spec.ECParameterSpec)>
<ohos.aafwk.ability.ProcessErrorInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.sysappcomponents.contact.entity.SipAddress: boolean equals(java.lang.Object)>
<java.util.Collections: void <clinit>()>
<ohos.media.audio.SoundPlayer: boolean setLoop(int,int)>
<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer load()>
<ohos.aafwk.ability.DeviceConfigInfo: int getTouchScreenType()>
<ohos.org.xml.sax.XMLReader: ohos.org.xml.sax.DTDHandler getDTDHandler()>
<ohos.sysappcomponents.calendar.entity.CalendarEntity: int getId()>
<java.net.URI: java.lang.String getFragment()>
<java.text.RuleBasedCollator: void <init>(java.lang.String)>
<java.util.Vector: java.lang.Object set(int,java.lang.Object)>
<ohos.data.orm.OrmDatabase: ohos.data.rdb.RdbOpenCallback getHelper()>
<ohos.data.search.schema.VideoItem: ohos.data.search.schema.VideoItem setSize(java.lang.Integer)>
<java.lang.ClassLoader: java.lang.Class findLoadedClass(java.lang.String)>
<java.time.LocalDateTime: java.time.chrono.ChronoLocalDateTime plus(java.time.temporal.TemporalAmount)>
<java.io.DataOutput: void writeDouble(double)>
<ohos.agp.components.Text.TruncationMode: ohos.agp.components.Text.TruncationMode valueOf(java.lang.String)>
<java.lang.Compiler: boolean compileClass(java.lang.Class)>
<ohos.utils.system.SystemCapability.Account: void <init>()>
<java.nio.LongBuffer: java.nio.LongBuffer put(long[],int,int)>
<java.time.temporal.TemporalUnit: boolean isTimeBased()>
<java.util.Spliterators: java.util.Spliterator.OfLong spliterator(long[],int,int,int)>
<ohos.agp.components.webengine.CookieStore: void setCookie(java.lang.String,java.lang.String)>
<ohos.security.permission.PermissionDef: void <init>(ohos.security.permission.PermissionDef)>
<ohos.agp.render.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<ohos.agp.components.webengine.WebConfig: boolean isLoadsImagesPermitted()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet addAll(java.lang.CharSequence)>
<java.lang.NumberFormatException: void <init>()>
<ohos.agp.utils.Line: void translate(ohos.agp.utils.Point)>
<ohos.global.icu.text.RelativeDateTimeFormatter.Style: ohos.global.icu.text.RelativeDateTimeFormatter.Style[] values()>
<java.lang.InterruptedException: void <init>(java.lang.String)>
<java.security.cert.PKIXParameters: boolean isAnyPolicyInhibited()>
<ohos.agp.window.dialog.ListDialog: void setOnMultiSelectListener(ohos.agp.window.dialog.IDialog.CheckBoxClickedListener)>
<ohos.global.icu.util.HebrewCalendar: void <init>(int,int,int,int,int,int)>
<javax.lang.model.element.Modifier: java.lang.String toString()>
<ohos.agp.components.webengine.WebView: ohos.agp.components.webengine.Navigator getNavigator()>
<ohos.agp.components.Component: int getScrollbarFadingDuration()>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal add(ohos.global.icu.math.BigDecimal)>
<ohos.utils.geo.Rect: int hashCode()>
<java.util.BitSet: void clear(int)>
<java.util.stream.Collector.Characteristics: java.util.stream.Collector.Characteristics[] values()>
<ohos.usb.USBDevicePipe: int controlTransfer(int,int,int,int,byte[],int,int)>
<java.lang.ThreadLocal: void <init>()>
<ohos.app.Context: int verifyCallingOrSelfPermission(java.lang.String)>
<ohos.agp.colors.CmykColor: void setMagenta(float)>
<java.lang.InstantiationError: void <init>()>
<ohos.data.resultset.CombinedResultSet: java.lang.String getString(int)>
<java.nio.file.Files: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>
<java.util.prefs.PreferenceChangeEvent: java.lang.String getNewValue()>
<java.io.BufferedInputStream: void mark(int)>
<ohos.agp.render.MaskFilter: void <init>(float,ohos.agp.render.MaskFilter.Blur)>
<java.util.SplittableRandom: java.util.stream.IntStream ints(long,int,int)>
<java.lang.reflect.Parameter: boolean isImplicit()>
<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal getSubject()>
<java.util.Collections: java.util.Queue checkedQueue(java.util.Queue,java.lang.Class)>
<ohos.media.sessioncore.AVController.PlayControls: void playByMediaId(java.lang.String,ohos.utils.PacMap)>
<ohos.utils.BasePacMap: java.util.Optional getObjectValue(java.lang.String)>
<ohos.agp.render.Picture: void <init>()>
<java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[],int,int)>
<ohos.agp.components.DirectionalLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime formatToValue(double,ohos.global.icu.text.RelativeDateTimeFormatter.Direction,ohos.global.icu.text.RelativeDateTimeFormatter.RelativeUnit)>
<java.util.concurrent.ConcurrentHashMap: void forEachEntry(long,java.util.function.Consumer)>
<ohos.net.ConnectionProperties: boolean equals(java.lang.Object)>
<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>
<java.security.cert.TrustAnchor: javax.security.auth.x500.X500Principal getCA()>
<ark.system.ClassLoaderCreator: void <init>()>
<java.lang.Double: long doubleToLongBits(double)>
<ohos.agp.window.service.ComponentPadding: boolean isRoundCorner()>
<ohos.agp.render.opengl.GLES20: void glEnableVertexAttribArray(int)>
<ohos.nfc.cardemulation.HostService: void disabledCallback(int)>
<java.util.logging.FileHandler: void <init>(java.lang.String,int,int)>
<java.sql.SQLOutput: void writeObject(java.sql.SQLData)>
<java.nio.channels.ServerSocketChannel: int validOps()>
<javax.crypto.Cipher: byte[] update(byte[])>
<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>
<java.security.Identity: boolean identityEquals(java.security.Identity)>
<ohos.media.sessioncore.AVBrowser: ohos.media.common.sessioncore.AVToken getAVToken()>
<ohos.agp.text.Font.Builder: ohos.agp.text.Font build()>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryEnvironmentDataCallback,ohos.sensor.bean.CategoryEnvironment,int)>
<ohos.data.search.schema.EmailItem: java.util.List getEmailSchema()>
<java.util.jar.Attributes: int size()>
<javax.crypto.CipherInputStream: int available()>
<java.math.BigDecimal: byte byteValueExact()>
<javax.security.auth.DestroyFailedException: void <init>(java.lang.String)>
<ohos.agp.utils.Matrix: void multiply(ohos.agp.utils.Matrix)>
<java.util.concurrent.atomic.AtomicStampedReference: boolean attemptStamp(java.lang.Object,int)>
<ohos.eventhandler.EventRunner: boolean stop()>
<ohos.global.icu.text.RelativeDateTimeFormatter.Direction: ohos.global.icu.text.RelativeDateTimeFormatter.Direction valueOf(java.lang.String)>
<java.util.BitSet: java.util.stream.IntStream stream()>
<ohos.utils.Parcel: void readByteArray(byte[])>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: boolean hasWaiters()>
<ohos.agp.render.render3d.util.BoundingBox: void <init>()>
<javax.crypto.EncryptedPrivateKeyInfo: byte[] getEncryptedData()>
<ohos.utils.net.Uri: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.Spliterator.OfDouble: boolean tryAdvance(java.util.function.DoubleConsumer)>
<ohos.agp.utils.Matrix: void rotate(float)>
<java.util.prefs.PreferencesFactory: java.util.prefs.Preferences userRoot()>
<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedCipherSuites()>
<ohos.media.image.Image.Component: int seek(int)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayVariant()>
<java.util.PrimitiveIterator.OfLong: java.lang.Long next()>
<ohos.sysappcomponents.contact.entity.PostalAddress: java.lang.String getPostalAddress()>
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>
<java.util.HashSet: void clear()>
<ohos.agp.utils.Circle: void setCenter(float,float)>
<java.util.ArrayDeque: java.lang.Object pollFirst()>
<java.util.concurrent.Executors: java.util.concurrent.Callable privilegedCallableUsingCurrentClassLoader(java.util.concurrent.Callable)>
<ohos.aafwk.ability.Ability: int update(ohos.utils.net.Uri,ohos.data.rdb.ValuesBucket,ohos.data.dataability.DataAbilityPredicates)>
<java.time.LocalDate: java.time.chrono.ChronoPeriod until(java.time.chrono.ChronoLocalDate)>
<ohos.data.distributed.common.Options: ohos.data.distributed.common.Options setEncrypt(boolean)>
<ohos.global.icu.text.SymbolTable: java.lang.String parseReference(java.lang.String,java.text.ParsePosition,int)>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.LongStream longs(long,long)>
<ohos.agp.render.Path: boolean isVolatile()>
<ohos.wifi.p2p.WifiP2pCallback: void eventP2pControllerDisconnected()>
<ohos.agp.utils.Point: boolean isInRect(ohos.agp.utils.Rect)>
<ohos.global.icu.text.MessagePattern.Part: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>
<java.util.Optional: void ifPresent(java.util.function.Consumer)>
<java.lang.Character: char toTitleCase(char)>
<java.util.Scanner: java.lang.String toString()>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>
<ohos.miscservices.inputmethodability.TextInputClient: boolean requestCurrentCursorContext()>
<ohos.interwork.ui.RemoteViewEx: void marshallingEx(ohos.utils.Parcel)>
<ohos.data.search.schema.PhotoItem: java.lang.Double getLongitude()>
<ohos.utils.PacMap: long getLongValue(java.lang.String)>
<ohos.location.GeoAddress: java.util.Locale getLocale()>
<ohos.media.audio.AudioDeviceDescriptor.DeviceRole: ohos.media.audio.AudioDeviceDescriptor.DeviceRole valueOf(java.lang.String)>
<ohos.event.notification.NotificationSorting: java.lang.String getGroupKeyOverride()>
<java.util.stream.StreamSupport: java.util.stream.Stream stream(java.util.function.Supplier,int,boolean)>
<ohos.data.search.schema.Schema: java.lang.Object setPotentialAction(java.lang.String)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates between(java.lang.String,double,double)>
<java.util.stream.Collectors: java.util.stream.Collector partitioningBy(java.util.function.Predicate,java.util.stream.Collector)>
<ohos.ace.ability.AceAbility: boolean onTouchEvent(ohos.multimodalinput.event.TouchEvent)>
<java.net.Proxy: java.net.Proxy.Type type()>
<javax.crypto.Cipher: int doFinal(byte[],int)>
<java.util.Objects: int compare(java.lang.Object,java.lang.Object,java.util.Comparator)>
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>
<ohos.accessibility.ability.AccessibilityInfo: boolean isFocusable()>
<java.util.BitSet: java.util.BitSet valueOf(long[])>
<ohos.event.commonevent.CommonEventData: boolean marshalling(ohos.utils.Parcel)>
<ohos.event.notification.NotificationSlot: java.lang.String getName()>
<java.util.SimpleTimeZone: void setStartRule(int,int,int,int)>
<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>
<java.sql.DatabaseMetaData: boolean supportsGroupByBeyondSelect()>
<ohos.global.icu.text.RuleBasedCollator: void setAlternateHandlingShifted(boolean)>
<ohos.powermanager.PowerManager.RunningLock: boolean isUsed()>
<java.util.Random: double nextDouble()>
<ohos.utils.Scope: java.lang.String toString()>
<java.util.Arrays: java.util.stream.LongStream stream(long[])>
<ohos.agp.render.opengl.GLES1X: void glColorMask(boolean,boolean,boolean,boolean)>
<ohos.miscservices.download.DownloadSession.DownloadInfo: int getFailedReason()>
<ohos.utils.zson.ZSONReader: void <init>(java.io.Reader)>
<ohos.agp.render.Paint: void setTextAlign(int)>
<ohos.global.icu.text.Edits.Iterator: int sourceIndexFromDestinationIndex(int)>
<ohos.accessibility.ability.AccessibilityWindow: int getChildNum()>
<ohos.aafwk.ability.AbilityForm.OnAcquiredCallback: void onDestroyed(ohos.aafwk.ability.AbilityForm)>
<ohos.bundle.IBundleManager: java.util.Optional getAllPermissionGroupDefs()>
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>
<ohos.sysappcomponents.calendar.CalendarDataHelper: boolean delete(int)>
<ohos.utils.zson.ZSONReader: int readInt()>
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>
<java.lang.System: void setIn(java.io.InputStream)>
<ohos.utils.BasePacMap: void putShortValue(java.lang.String,short)>
<ohos.agp.components.Component: void setBottom(int)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
<java.util.stream.IntStream: java.util.stream.BaseStream sequential()>
<java.util.concurrent.ThreadPoolExecutor: boolean isTerminating()>
<ohos.agp.components.Rating: void <init>(ohos.app.Context)>
<ohos.global.resource.solidxml.Theme: java.util.HashMap getThemeHash(java.lang.String[])>
<ohos.javax.xml.namespace.QName: java.lang.String getNamespaceURI()>
<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<ohos.org.w3c.dom.ls.LSInput: void setEncoding(java.lang.String)>
<java.util.prefs.PreferenceChangeListener: void preferenceChange(java.util.prefs.PreferenceChangeEvent)>
<ohos.aafwk.ability.delegation.TestRunner: boolean prepare()>
<ohos.agp.render.render3d.SceneNode: java.lang.String getName()>
<java.util.NavigableMap: java.util.SortedMap tailMap(java.lang.Object)>
<ohos.agp.components.webengine.ResourceResponse: java.lang.String getMimeType()>
<ohos.global.icu.number.FormattedNumber: char charAt(int)>
<ohos.agp.utils.RectFloat: boolean isEmpty()>
<java.net.HttpURLConnection: java.lang.String getHeaderFieldKey(int)>
<java.time.chrono.JapaneseEra: void <clinit>()>
<java.util.Vector: java.lang.Object[] toArray()>
<ohos.org.xml.sax.DocumentHandler: void setDocumentLocator(ohos.org.xml.sax.Locator)>
<javax.crypto.CipherSpi: byte[] engineWrap(java.security.Key)>
<javax.lang.model.util.ElementFilter: java.util.List packagesIn(java.lang.Iterable)>
<java.nio.ByteBuffer: short getShort()>
<java.time.temporal.ChronoField: java.time.temporal.TemporalUnit getRangeUnit()>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 add(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<ohos.event.notification.NotificationActionButton.Builder: ohos.event.notification.NotificationActionButton build()>
<java.lang.UnsupportedClassVersionError: void <init>(java.lang.String)>
<java.lang.RuntimePermission: void <init>(java.lang.String,java.lang.String)>
<java.util.LinkedList: int indexOf(java.lang.Object)>
<ohos.data.resultset.ResultSet: int getColumnCount()>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<java.net.DatagramSocketImpl: void joinGroup(java.net.SocketAddress,java.net.NetworkInterface)>
<java.net.InetAddress: boolean isMCSiteLocal()>
<java.util.prefs.Preferences: java.util.prefs.Preferences systemRoot()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setPermitSystemGeneratedContextualActionButtons(boolean)>
<ohos.global.icu.text.DecimalFormat: int getMinimumGroupingDigits()>
<java.util.stream.Collectors: java.util.stream.Collector averagingInt(java.util.function.ToIntFunction)>
<java.io.ByteArrayOutputStream: void write(int)>
<java.util.Arrays: void fill(char[],int,int,char)>
<ohos.os.ProcessManager: int getTid()>
<ohos.ace.ability.AceAbility: void onInactive()>
<ohos.agp.render.opengl.GLES20: void glFlush()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>
<ohos.global.icu.text.RuleBasedCollator: java.lang.String getRules()>
<ohos.agp.render.opengl.GLES20: void glGetProgramInfoLog(int,int,java.nio.IntBuffer,java.lang.StringBuffer)>
<ohos.data.resultset.TableResultSet: float getFloat(int)>
<java.util.BitSet: void flip(int,int)>
<ohos.data.distributed.common.KvStore: void subscribe(ohos.data.distributed.common.SubscribeType,ohos.data.distributed.common.KvStoreObserver)>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getDuration()>
<java.util.Arrays: java.lang.String toString(int[])>
<java.util.zip.ZipInputStream: int read(byte[],int,int)>
<java.time.Instant: boolean isSupported(java.time.temporal.TemporalField)>
<ohos.media.audio.AudioStreamInfo.Builder: ohos.media.audio.AudioStreamInfo build()>
<ohos.telephony.ShortMessage: java.util.Optional createMessage(byte[],java.lang.String)>
<ohos.utils.geo.DimensFloat: int getMinToInt()>
<java.net.MulticastSocket: java.net.NetworkInterface getNetworkInterface()>
<java.util.PriorityQueue: java.lang.Object[] toArray()>
<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<ohos.agp.animation.Animator: void setLoopedListenerInternal(ohos.agp.animation.Animator.LoopedListener)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: boolean isEmpty()>
<java.io.CharArrayWriter: void <init>()>
<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>
<ohos.agp.render.opengl.GLES20: void glGenTextures(int,int[])>
<ohos.global.icu.util.Currency: ohos.global.icu.util.Currency getInstance(java.util.Locale)>
<ohos.global.icu.text.Transliterator: void transliterate(ohos.global.icu.text.Replaceable,ohos.global.icu.text.Transliterator.Position,java.lang.String)>
<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>
<java.io.RandomAccessFile: long getFilePointer()>
<java.time.Instant: java.time.Instant ofEpochSecond(long,long)>
<java.util.NavigableSet: java.util.Iterator descendingIterator()>
<java.sql.CallableStatement: void setObject(java.lang.String,java.lang.Object,int)>
<ohos.agp.render.opengl.GLES1X: void glRotatef(float,float,float,float)>
<java.lang.invoke.MethodType: java.lang.String toMethodDescriptorString()>
<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption valueOf(java.lang.String)>
<ohos.sysappcomponents.contact.entity.Email: void setDisplayName(java.lang.String)>
<java.lang.String: boolean contentEquals(java.lang.CharSequence)>
<ohos.agp.window.service.ComponentPadding: boolean hasUnchangedPadding()>
<java.lang.Class: java.lang.Class forName(java.lang.String)>
<ohos.bundle.InstallParam: void <clinit>()>
<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel shutdownOutput()>
<java.net.Inet6Address: java.net.NetworkInterface getScopedInterface()>
<ohos.vibrator.agent.VibratorAgent: boolean start(java.lang.String,boolean)>
<java.util.prefs.Preferences: boolean getBoolean(java.lang.String,boolean)>
<java.nio.file.Files: java.nio.file.Path readSymbolicLink(java.nio.file.Path)>
<javax.sql.ConnectionEvent: java.sql.SQLException getSQLException()>
<ohos.data.distributed.common.KvManagerConfig: boolean isInvalid()>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getRecurRule()>
<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>
<ohos.miscservices.inputmethodability.TextInputClient: boolean deleteBackward(int)>
<ohos.event.notification.NotificationUserInput: boolean unmarshalling(ohos.utils.Parcel)>
<java.net.URLConnection: java.security.Permission getPermission()>
<ohos.agp.components.element.ShapeElement: ohos.agp.render.Arc getArc()>
<ohos.data.rdb.RdbLockedException: void <init>(java.lang.String)>
<ohos.bundle.AbilityInfo.AbilitySubType: void <clinit>()>
<ohos.agp.render.opengl.GLES30: void glGenTransformFeedbacks(int,int[])>
<java.nio.channels.IllegalBlockingModeException: void <init>()>
<java.nio.file.spi.FileSystemProvider: java.nio.file.Path readSymbolicLink(java.nio.file.Path)>
<ohos.media.audio.AudioWaver: int getMinInterval()>
<ohos.utils.PacMap: double getDoubleValue(java.lang.String,double)>
<ohos.agp.utils.Point: void translate(float,float)>
<ohos.net.NetHandle: java.net.InetAddress getByName(java.lang.String)>
<ohos.agp.components.Component: void setForegroundGravity(int)>
<ohos.data.resultset.TableResultSet: int getColumnCount()>
<ohos.utils.PlainBooleanArray: int size()>
<java.util.ResourceBundle.Control: java.lang.String toBundleName(java.lang.String,java.util.Locale)>
<ohos.system.OsHelper: void trimFile(long,java.io.FileDescriptor)>
<ohos.media.audio.AudioStreamInfo: ohos.media.audio.AudioStreamInfo.ContentType getContentType()>
<ohos.location.Locator: ohos.location.Location getCachedLocation()>
<ohos.media.image.Image: void setClipRect(ohos.media.image.common.Rect)>
<ohos.agp.components.TableLayout: int getAlignmentType()>
<java.sql.Statement: java.sql.Connection getConnection()>
<java.lang.Math: long negateExact(long)>
<java.lang.ThreadDeath: void <init>()>
<java.util.concurrent.atomic.AtomicLongArray: long addAndGet(int,long)>
<ohos.utils.geo.RectFloat: boolean isIntersect(float,float,float,float)>
<java.security.KeyStore.PrivateKeyEntry: java.security.PrivateKey getPrivateKey()>
<ohos.event.notification.IAdvancedNotificationManager: void addNotificationSlotGroup(java.lang.String,ohos.event.notification.NotificationSlotGroup)>
<ohos.global.i18n.text.MeasureOptions.Style: void <clinit>()>
<java.util.ArrayDeque: java.lang.Object peekLast()>
<java.util.Collections: java.util.SortedMap emptySortedMap()>
<java.security.interfaces.RSAPublicKey: java.math.BigInteger getPublicExponent()>
<java.util.concurrent.CopyOnWriteArraySet: void <init>()>
<ohos.media.image.Image: ohos.media.image.common.Size getImageSize()>
<java.util.Calendar.Builder: void <init>()>
<ohos.agp.render.render3d.Engine: void deactivateContext()>
<ohos.eventhandler.Courier: boolean marshalling(ohos.utils.Parcel)>
<ohos.media.audio.SoundEffect.SoundEffectInfo: void setUid(java.util.UUID)>
<ohos.aafwk.ability.fraction.FractionScheduler: ohos.aafwk.ability.fraction.FractionScheduler show(ohos.aafwk.ability.fraction.Fraction)>
<java.nio.charset.CharsetDecoder: void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)>
<java.sql.SQLOutput: void writeInt(int)>
<java.util.Spliterators: java.util.Spliterator.OfDouble spliterator(double[],int,int,int)>
<ohos.agp.utils.Matrix: boolean preSkew(float,float)>
<java.util.zip.InflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Inflater)>
<ohos.media.player.Player.AudioHandler: void <clinit>()>
<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>
<javax.sql.RowSet: void clearParameters()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getTimeInstance()>
<java.util.logging.LogRecord: int getThreadID()>
<java.util.concurrent.AbstractExecutorService: java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object)>
<ohos.agp.components.webengine.WebView: void executeJs(java.lang.String,ohos.agp.components.webengine.AsyncCallback)>
<ohos.event.notification.NotificationRequest: long getAutoDeletedTime()>
<ohos.account.AccountAbility: java.lang.String getDistributedVirtualDeviceId()>
<java.io.StreamTokenizer: void lowerCaseMode(boolean)>
<ohos.utils.geo.Rect: void modify(ohos.utils.geo.Rect)>
<java.time.chrono.Chronology: int compareTo(java.lang.Object)>
<java.text.Bidi: int getRunLimit(int)>
<ohos.global.icu.util.MeasureUnit: void <clinit>()>
<ohos.global.icu.text.Bidi: int getLength()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setStringArrayListParam(java.lang.String,java.util.ArrayList)>
<ohos.agp.render.Paint: void setTextSize(int)>
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>
<ohos.agp.render.opengl.GLES2Ext: void glBlendFuncSeparateiEXT(int,int,int,int,int)>
<java.util.Calendar: int getActualMaximum(int)>
<ohos.utils.RationalNumber: boolean isZero()>
<ohos.bluetooth.BluetoothRemoteDevice: int getDeviceType()>
<java.text.AttributedCharacterIterator.Attribute: java.lang.String getName()>
<ohos.agp.components.Slider.ValueChangedListener: void onTouchEnd(ohos.agp.components.Slider)>
<ohos.agp.window.service.Window: void setBoundRect(ohos.agp.utils.Rect)>
<java.io.PrintWriter: java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object[])>
<ohos.global.icu.lang.UCharacter: char forDigit(int,int)>
<ohos.agp.render.opengl.GLES1X: void glClear(int)>
<javax.sql.RowSet: void setAsciiStream(int,java.io.InputStream,int)>
<javax.crypto.spec.PSource.PSpecified: void <clinit>()>
<java.time.YearMonth: java.time.YearMonth withYear(int)>
<java.io.CharArrayWriter: java.io.CharArrayWriter append(java.lang.CharSequence)>
<java.security.cert.LDAPCertStoreParameters: void <init>()>
<ohos.hiviewdfx.Debug: int getProcessRss(ohos.hiviewdfx.Debug.MemType)>
<ohos.light.agent.LightAgent: boolean turnOn(java.lang.String)>
<java.io.OutputStream: void flush()>
<ohos.global.icu.text.UnicodeSet.SpanCondition: void <clinit>()>
<ohos.global.icu.text.DateFormat: void setNumberFormat(ohos.global.icu.text.NumberFormat)>
<java.util.SplittableRandom: boolean nextBoolean()>
<java.lang.Class: boolean isArray()>
<ohos.global.icu.text.DecimalFormat: int getFormatWidth()>
<ohos.agp.utils.RectFloat: void <init>(ohos.agp.utils.RectFloat)>
<ohos.global.icu.text.Transliterator: ohos.global.icu.text.UnicodeSet getTargetSet()>
<java.lang.Character: int toCodePoint(char,char)>
<ohos.event.commonevent.AsyncCommonEventResult: void setData(java.lang.String)>
<ohos.javax.xml.validation.TypeInfoProvider: ohos.org.w3c.dom.TypeInfo getElementTypeInfo()>
<ohos.org.xml.sax.ContentHandler: void characters(char[],int,int)>
<java.security.PolicySpi: java.security.PermissionCollection engineGetPermissions(java.security.CodeSource)>
<ohos.utils.zson.ZSONType: ohos.utils.zson.ZSONType[] values()>
<ohos.agp.components.Attr: float getFloatValue()>
<java.lang.reflect.Array: int getLength(java.lang.Object)>
<java.util.Arrays: boolean equals(long[],long[])>
<ohos.global.icu.lang.UCharacter: java.lang.String toString(int)>
<java.util.stream.LongStream: java.util.LongSummaryStatistics summaryStatistics()>
<java.net.HttpCookie: java.lang.String getComment()>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: ohos.event.notification.NotificationRequest.NotificationLongTextContent setAdditionalText(java.lang.String)>
<java.security.GuardedObject: java.lang.Object getObject()>
<ohos.data.search.model.IndexData: java.lang.Float getAsFloat(java.lang.String)>
<ohos.utils.PacMap: java.util.Optional getObjectValue(java.lang.String)>
<ohos.bundle.ShortcutInfo: boolean isStatic()>
<javax.sql.ConnectionEvent: void <init>(javax.sql.PooledConnection,java.sql.SQLException)>
<java.lang.Character: char highSurrogate(int)>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<ohos.global.icu.util.ULocale: java.lang.String getVariant()>
<java.util.logging.Logger: void <init>(java.lang.String,java.lang.String)>
<ohos.agp.components.Text: int getBubbleWidth()>
<java.time.chrono.MinguoChronology: java.lang.String getId()>
<java.util.zip.CheckedInputStream: long skip(long)>
<ohos.telephony.SignalInformation: void <init>(int)>
<ohos.global.configuration.DeviceCapability: boolean equals(java.lang.Object)>
<java.net.URI: java.lang.String toASCIIString()>
<java.security.KeyFactory: java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)>
<java.sql.DatabaseMetaData: int getDriverMinorVersion()>
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeP()>
<java.time.temporal.ChronoField: java.time.temporal.ChronoField valueOf(java.lang.String)>
<ohos.agp.utils.RectFloat: ohos.agp.utils.Point getCenter()>
<ohos.global.icu.text.DecimalFormat: boolean isSignAlwaysShown()>
<java.nio.ShortBuffer: java.nio.ShortBuffer put(short[])>
<ohos.interwork.utils.ParcelableEx: void unmarshallingEx(ohos.utils.Parcel)>
<ohos.sysappcomponents.calendar.entity.Accounts: void setName(java.lang.String)>
<java.security.Security: int addProvider(java.security.Provider)>
<java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>
<ohos.location.Location: float calculateBearing(double,double,double,double)>
<ohos.data.search.schema.AppItem: void <init>()>
<java.security.cert.PKIXParameters: boolean isExplicitPolicyRequired()>
<ohos.agp.components.element.FrameAnimationElement: void setElementState(ohos.agp.components.element.ElementContainer.ElementState)>
<ohos.agp.render.Region: boolean setPath(ohos.agp.render.Path,ohos.agp.render.Region)>
<java.lang.StringBuffer: void <init>(java.lang.String)>
<java.time.temporal.ChronoUnit: boolean isSupportedBy(java.time.temporal.Temporal)>
<ohos.media.common.VideoProperty: int getRecorderRate()>
<ohos.agp.render.Texture.ColorType: void <clinit>()>
<java.sql.ResultSet: int getFetchDirection()>
<ohos.agp.components.webengine.WebConfig: boolean isDataAbilityPermitted()>
<javax.sql.RowSet: void setNCharacterStream(int,java.io.Reader,long)>
<ohos.rpc.RemoteObject: boolean onRemoteRequest(int,ohos.rpc.MessageParcel,ohos.rpc.MessageParcel,ohos.rpc.MessageOption)>
<ohos.utils.Ashmem: byte[] readFromAShmem(int,int)>
<ohos.global.icu.util.CopticCalendar: void <init>()>
<ohos.data.distributed.file.DistFile: java.lang.String getDevice()>
<ohos.agp.animation.AnimatorScatterException: void <init>(java.lang.String)>
<ohos.agp.components.Component: ohos.agp.components.CornerMark bindCornerMark()>
<ohos.miscservices.pasteboard.PasteData.DataProperty: void setLocalOnly(boolean)>
<javax.crypto.CipherOutputStream: void write(int)>
<ohos.ai.asr.AsrIntent: void <init>()>
<javax.crypto.SealedObject: void <init>(java.io.Serializable,javax.crypto.Cipher)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>
<ohos.agp.render.render3d.Engine: void activateContext()>
<java.net.HttpCookie: void setComment(java.lang.String)>
<ohos.global.icu.text.IDNA: java.lang.StringBuilder labelToASCII(java.lang.CharSequence,java.lang.StringBuilder,ohos.global.icu.text.IDNA.Info)>
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>
<ohos.global.icu.text.DateFormatSymbols: void setShortWeekdays(java.lang.String[])>
<java.lang.Long: int hashCode()>
<ohos.agp.components.TimePicker: void showHour(boolean)>
<java.security.SignatureSpi: int engineSign(byte[],int,int)>
<ohos.aafwk.ability.Form: long getId()>
<ohos.ai.cv.text.TextLine: int getLanguageType()>
<java.net.PortUnreachableException: void <init>()>
<java.sql.PreparedStatement: void setUnicodeStream(int,java.io.InputStream,int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThan(java.lang.String,long)>
<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey getPublicKey()>
<java.sql.CallableStatement: void setBytes(java.lang.String,byte[])>
<java.util.ArrayDeque: boolean remove(java.lang.Object)>
<ohos.aafwk.content.Intent: boolean unmarshalling(ohos.utils.Parcel)>
<java.io.ObjectOutputStream: void writeDouble(double)>
<ohos.agp.render.render3d.gltf.GltfImportData: void release()>
<java.nio.file.attribute.DosFileAttributeView: java.nio.file.attribute.BasicFileAttributes readAttributes()>
<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>
<java.sql.DatabaseMetaData: boolean supportsOpenStatementsAcrossRollback()>
<java.util.concurrent.LinkedBlockingQueue: boolean offer(java.lang.Object)>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void <init>()>
<javax.net.ssl.SSLException: void <init>(java.lang.String)>
<ohos.aafwk.ability.delegation.AbilityDelegatorRegistry: ohos.aafwk.ability.delegation.IAbilityDelegatorArgs getArguments()>
<ohos.agp.components.TabList: int getSelectedTabIndex()>
<ohos.data.resultset.SharedBlock: ohos.data.resultset.ResultSet.ColumnType getType(int,int)>
<java.nio.file.attribute.PosixFileAttributeView: java.lang.String name()>
<java.sql.SQLXML: java.io.OutputStream setBinaryStream()>
<ohos.global.icu.text.TimeZoneNames: java.lang.String getMetaZoneDisplayName(java.lang.String,ohos.global.icu.text.TimeZoneNames.NameType)>
<ohos.aafwk.ability.Ability: void onReconnect(ohos.aafwk.content.Intent)>
<ohos.ai.cv.text.TextLine: void setLanguageType(int)>
<java.util.zip.InflaterOutputStream: void write(byte[],int,int)>
<ohos.agp.render.render3d.math.Vector3: float lengthSquared(float,float,float)>
<ark.system.ClassLoaderCreator: java.lang.ClassLoader createClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)>
<ohos.global.icu.lang.UCharacter: boolean isLowSurrogate(char)>
<ohos.global.icu.text.DateFormatSymbols: void <init>(ohos.global.icu.util.ULocale)>
<java.nio.charset.CharacterCodingException: void <init>()>
<ohos.global.icu.util.JapaneseCalendar: void handleComputeFields(int)>
<java.net.ResponseCache: void setDefault(java.net.ResponseCache)>
<ohos.agp.render.opengl.GLES31: int glGetProgramResourceLocation(int,int,java.lang.String)>
<java.security.Identity: void <init>()>
<java.nio.channels.AsynchronousSocketChannel: java.nio.channels.AsynchronousSocketChannel shutdownOutput()>
<javax.sql.ConnectionEventListener: void connectionErrorOccurred(javax.sql.ConnectionEvent)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThan(java.lang.String,double)>
<javax.security.cert.Certificate: void verify(java.security.PublicKey)>
<ohos.aafwk.ability.DataUriUtils: long getId(ohos.utils.net.Uri)>
<java.nio.file.FileSystemException: void <init>(java.lang.String)>
<ohos.agp.utils.Matrix: void setSkewX(float)>
<ohos.data.distributed.common.UserInfo: boolean equals(java.lang.Object)>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.ToastDialog setOffset(int,int)>
<ohos.agp.components.ListContainer: void onItemSelected(ohos.agp.components.ListContainer,ohos.agp.components.Component,int,long)>
<ohos.data.search.SearchAbility: int deleteByQuery(java.lang.String,java.lang.String,java.lang.String)>
<ohos.aafwk.ability.startsetting.AbilityStartSetting: java.util.Set getPropertiesKey()>
<ohos.media.common.sessioncore.AVQueueElement: long getElementId()>
<ohos.global.icu.text.BreakIterator: int getRuleStatusVec(int[])>
<ohos.agp.render.Path: void incReserve(int)>
<ohos.media.player.Player.IPlayerCallback: void onPlayBackComplete()>
<ohos.utils.geo.RectFloat: int hashCode()>
<ohos.agp.render.Path: void lineTo(float,float)>
<ohos.global.resource.ResourceManager: ohos.global.configuration.DeviceCapability getDeviceCapability()>
<java.security.cert.CertificateFactorySpi: java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream)>
<java.time.Instant: java.time.Instant minusSeconds(long)>
<java.security.KeyRep: void <init>(java.security.KeyRep.Type,java.lang.String,java.lang.String,byte[])>
<ohos.global.icu.text.DateFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<ohos.global.icu.util.TimeZone: boolean equals(java.lang.Object)>
<java.security.AllPermission: void <init>()>
<ohos.aafwk.ability.DataUriUtils: ohos.utils.net.Uri attachId(ohos.utils.net.Uri,long)>
<java.sql.Timestamp: void setTime(long)>
<java.util.Spliterators.AbstractIntSpliterator: long estimateSize()>
<ohos.agp.render.Paint: float ascent()>
<ohos.agp.utils.RectFloat: void rounding(ohos.agp.utils.Rect)>
<ohos.aafwk.ability.Ability.LayoutParamsHelper: ohos.aafwk.ability.Ability.LayoutParamsHelper setX(int)>
<ohos.global.icu.text.UnicodeSet: int spanBack(java.lang.CharSequence,int,ohos.global.icu.text.UnicodeSet.SpanCondition)>
<ohos.miscservices.inputmethodability.KeyboardController: void hideKeyboard()>
<ohos.agp.render.opengl.GLES20: void glClearColor(float,float,float,float)>
<ohos.accessibility.ability.AccessibilityInfo: java.lang.CharSequence getBundleName()>
<ohos.rpc.ReliableFileDescriptor: void close()>
<java.text.ParsePosition: java.lang.String toString()>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getWordSegment(java.lang.String,int)>
<ohos.media.audio.SoundEffect.SoundEffectInfo: java.lang.String getMode()>
<java.math.BigInteger: java.math.BigInteger pow(int)>
<java.util.prefs.Preferences: float getFloat(java.lang.String,float)>
<ohos.ai.cv.sr.TxtImageSuperResolutionConfiguration.Builder: void <init>()>
<ohos.miscservices.inputmethod.EditingText: void setTextContent(java.lang.String)>
<ohos.aafwk.ability.OperationExecuteException: void <init>(java.lang.String)>
<java.time.LocalDateTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.utils.xml.XmlUtils: java.lang.String currentDescription(ohos.javax.xml.stream.XMLStreamReader)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getPIData()>
<ohos.agp.utils.DimensFloat: java.lang.String toString()>
<java.util.Deque: boolean removeFirstOccurrence(java.lang.Object)>
<ohos.agp.text.Layout: int getTop(int)>
<ohos.org.xml.sax.SAXParseException: int getLineNumber()>
<ohos.agp.utils.Matrix: boolean isSimilarity()>
<ohos.usb.USBDevice: int getInterfaceCount()>
<ohos.app.Context: java.lang.ClassLoader getClassloader()>
<java.util.WeakHashMap: void <init>(int)>
<java.security.DigestInputStream: void setMessageDigest(java.security.MessageDigest)>
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getRemoveOnCancelPolicy()>
<ohos.agp.components.VelocityDetector.VelocityDetectorCleaner: void run()>
<java.net.URLStreamHandler: boolean sameFile(java.net.URL,java.net.URL)>
<ohos.agp.components.ComponentProvider: void applyAction(ohos.agp.components.ComponentContainer)>
<ohos.app.Context: int getColor(int)>
<ohos.media.common.sessioncore.AVSessionCallback: void onPlayPrevious()>
<ohos.net.DataFlowStatistics: void addOperation(int)>
<java.time.LocalTime: java.time.LocalTime withNano(int)>
<ohos.agp.components.SearchBar: void addComponent(ohos.agp.components.Component)>
<ohos.media.player.Player: boolean reset()>
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: ohos.utils.net.Uri getUri()>
<ohos.agp.components.ComponentContainer: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.app.Context: ohos.bundle.ElementName getElementName()>
<ohos.miscservices.inputmethodability.InputMethodAbility: void onConfigurationUpdated(ohos.global.configuration.Configuration)>
<javax.tools.JavaFileManager: boolean isSameFile(javax.tools.FileObject,javax.tools.FileObject)>
<java.time.chrono.ChronoLocalDateTime: java.time.chrono.ChronoLocalDateTime minus(java.time.temporal.TemporalAmount)>
<ohos.data.search.model.IndexData: java.lang.Integer getAsInteger(java.lang.String)>
<ohos.agp.components.StackLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.nio.file.Files: byte[] readAllBytes(java.nio.file.Path)>
<ohos.bundle.IBundleManager: boolean hasSystemCapability(java.lang.String)>
<ohos.agp.components.ListContainer: void <init>(ohos.app.Context)>
<ohos.global.icu.util.EthiopicCalendar: void <init>(java.util.Date)>
<ohos.net.NetStatusCallback: void onUnavailable()>
<ohos.aafwk.ability.continuation.ExtraParams: void setJsonParams(java.lang.String)>
<ohos.net.NetManager: boolean setupSpecificNet(ohos.net.NetSpecifier,ohos.net.NetStatusCallback)>
<ohos.utils.PlainBooleanArray: boolean get(int,boolean)>
<ohos.agp.render.opengl.ETC1: boolean isValid(java.nio.Buffer)>
<ohos.accessibility.AccessibilitySystemAbilityClient: boolean isEnabled()>
<ohos.agp.components.DatePicker: long getMaxDate()>
<ohos.agp.render.opengl.GLES30: void glBindSampler(int,int)>
<ohos.bundle.ApplicationInfo: java.lang.String getLabel()>
<ohos.ai.cv.common.CvPoint: void set(int,int)>
<ohos.sensor.agent.CategoryLightAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int)>
<javax.sql.RowSet: void setBinaryStream(java.lang.String,java.io.InputStream,int)>
<java.time.Period: java.time.Period plusDays(long)>
<ohos.sensor.agent.CategoryOtherAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryOtherDataCallback,ohos.sensor.bean.CategoryOther,int,long)>
<java.util.zip.ZipEntry: java.util.zip.ZipEntry setLastModifiedTime(java.nio.file.attribute.FileTime)>
<java.nio.file.FileStore: void <init>()>
<ohos.agp.animation.Animator: void release()>
<ohos.global.i18n.text.MeasureOptions.Usage: java.lang.String getUsageName()>
<java.time.chrono.MinguoDate: int lengthOfMonth()>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource.SourceInfo getSourceInfo()>
<ohos.utils.Parcel: void addAppClassLoader(java.lang.ClassLoader)>
<ohos.bundle.IBundleManager: void cleanBundleCacheFiles(java.lang.String,ohos.bundle.ICleanCacheCallback)>
<java.nio.file.attribute.FileOwnerAttributeView: java.lang.String name()>
<ohos.data.IllegalPredicateException: void <init>(java.lang.Throwable)>
<java.util.zip.InflaterInputStream: int read(byte[],int,int)>
<ohos.global.icu.util.EthiopicCalendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,java.io.Serializable)>
<java.lang.Short: int hashCode()>
<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,boolean,boolean)>
<ohos.data.search.schema.VideoItem: ohos.data.search.schema.VideoItem setDuration(java.lang.Integer)>
<ohos.agp.render.opengl.EGL: boolean eglGetConfigAttrib(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLConfig,int,int[])>
<ohos.ai.engine.pluginservice.ILoadPluginCallback: void onResult(int)>
<ohos.agp.components.Picker: ohos.agp.text.Font getSelectedTextFont()>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence,int,int)>
<ohos.agp.render.Path: void setIsVolatile(boolean)>
<ohos.agp.render.opengl.GLES1X: void glPolygonOffset(float,float)>
<ohos.agp.render.render3d.components.LightComponent: float getSpotInnerAngle()>
<java.security.KeyFactory: java.lang.String getAlgorithm()>
<ohos.media.audio.SoundPlayer.SoundPlayerParameters: void <init>()>
<java.util.Random: java.util.stream.LongStream longs(long,long,long)>
<ohos.sysappcomponents.contact.entity.Note: java.lang.String getNoteContent()>
<java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>
<ohos.utils.LightweightMap: java.util.Set entrySet()>
<ohos.system.OsHelper: long getSystemConfig(int)>
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence,int,int)>
<ohos.global.icu.text.DecimalFormat: void setRoundingIncrement(double)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates orderByAsc(java.lang.String)>
<ohos.telephony.TelephoneNumberUtils: java.lang.String formatPhoneNumber(java.lang.String)>
<ohos.smartcomm.MultiPathManager: ohos.smartcomm.MultiPathManager getInstance()>
<java.net.URLConnection: void setDefaultAllowUserInteraction(boolean)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
<java.io.ObjectOutputStream: void writeBoolean(boolean)>
<ohos.miscservices.screenlock.ScreenLockController: boolean isScreenLocked()>
<java.io.ObjectOutputStream: boolean enableReplaceObject(boolean)>
<java.util.ArrayList: boolean removeIf(java.util.function.Predicate)>
<java.security.CodeSigner: void <init>(java.security.cert.CertPath,java.security.Timestamp)>
<java.time.Clock: java.time.Clock tick(java.time.Clock,java.time.Duration)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query or()>
<ohos.media.audio.AudioDeviceDescriptor: ohos.media.audio.AudioDeviceDescriptor.DeviceRole getRole()>
<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>
<java.security.acl.AclEntry: java.util.Enumeration permissions()>
<ohos.location.GeoAddress: boolean hasLongitude()>
<ohos.security.permission.PermissionGroupDef: void <init>()>
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator.Attribute[],int,int)>
<ohos.agp.render.opengl.GLES30: void glGetVertexAttribIiv(int,int,int[])>
<ohos.media.sessioncore.AVSession: void <clinit>()>
<ohos.miscservices.timeutility.Time: long setTimeZone(ohos.app.Context,java.lang.String)>
<java.time.Month: void <clinit>()>
<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[])>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder padNext(int,char)>
<java.lang.reflect.GenericDeclaration: java.lang.reflect.TypeVariable[] getTypeParameters()>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object updateAndGet(java.lang.Object,java.util.function.UnaryOperator)>
<java.util.IntSummaryStatistics: void accept(int)>
<ohos.agp.render.render3d.components.SceneComponent: float getEnvironmentDiffuseIntensity()>
<ohos.media.audio.SoundPlayer: int play(int,ohos.media.audio.SoundPlayer.SoundPlayerParameters)>
<ohos.javax.xml.validation.Validator: ohos.org.xml.sax.ErrorHandler getErrorHandler()>
<ohos.media.common.AVMetadata: ohos.media.image.PixelMap getPixelMap(java.lang.String)>
<java.io.File: boolean createNewFile()>
<ohos.sysappcomponents.contact.entity.Event: java.lang.String getEventDate()>
<ohos.agp.window.service.WindowManager: int getWindowCount(ohos.app.Context)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThan(java.lang.String,java.util.Date)>
<java.util.logging.Logger: void setFilter(java.util.logging.Filter)>
<java.io.DataOutput: void writeUTF(java.lang.String)>
<ohos.agp.render.render3d.components.LightComponent.LightType: ohos.agp.render.render3d.components.LightComponent.LightType[] values()>
<java.util.zip.InflaterInputStream: long skip(long)>
<ohos.agp.components.Component: ohos.app.Context getContext()>
<ohos.ai.asr.AsrIntent.AsrEngineType: int getValue()>
<java.util.concurrent.ConcurrentHashMap: double reduceEntriesToDouble(long,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator)>
<ohos.global.resource.Entry: ohos.global.resource.Entry.Type getType()>
<java.util.ArrayList: boolean removeAll(java.util.Collection)>
<ohos.agp.render.MaskFilter.Blur: int value()>
<java.io.Reader: int read(java.nio.CharBuffer)>
<ohos.aafwk.ability.Form: java.lang.String getFormName()>
<ohos.data.search.schema.MessageItem: java.lang.String getAttachment()>
<java.sql.CallableStatement: java.lang.Object getObject(int)>
<ohos.system.version.SystemVersion: int getMajorVersion()>
<java.lang.StrictMath: double expm1(double)>
<ohos.utils.zson.ZSONWriter: void writeString(java.lang.String)>
<java.sql.ParameterMetaData: int getParameterMode(int)>
<ohos.global.icu.text.Edits.Iterator: int sourceIndex()>
<ohos.telephony.SignalInformation: int getSignalLevel()>
<ohos.global.icu.text.PluralFormat: boolean equals(java.lang.Object)>
<ohos.aafwk.ability.PathMatcher: int getPathId(java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glLoadMatrixx(int[])>
<java.util.concurrent.CountedCompleter: void <init>()>
<java.net.CookieStore: java.util.List getURIs()>
<java.sql.SQLData: void writeSQL(java.sql.SQLOutput)>
<ohos.utils.PacMap: java.lang.String getString(java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES2Ext: void glDisableiEXT(int,int)>
<ohos.ace.ability.AceAbility: void setInstanceName(java.lang.String)>
<java.util.SplittableRandom: int nextInt(int)>
<java.net.SocketImpl: java.io.FileDescriptor getFileDescriptor()>
<java.util.concurrent.RecursiveTask: void setRawResult(java.lang.Object)>
<java.time.Duration: java.lang.String toString()>
<ohos.agp.components.ComponentTreeObserver.GlobalFocusUpdatedListener: void onGlobalFocusUpdated(ohos.agp.components.Component,ohos.agp.components.Component)>
<ohos.workscheduler.WorkInfo: int getRequestIdleWaitTime()>
<java.io.PrintWriter: void write(char[])>
<javax.sql.RowSet: void setEscapeProcessing(boolean)>
<java.io.PrintStream: void println(java.lang.Object)>
<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>
<java.nio.charset.CodingErrorAction: void <clinit>()>
<ohos.light.agent.LightAgent: boolean turnOff()>
<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>
<ohos.agp.render.render3d.components.CameraComponent: void setOrthoHeight(float)>
<ohos.aafwk.ability.Ability: ohos.global.resource.RawFileDescriptor openRawFile(ohos.utils.net.Uri,java.lang.String)>
<ohos.ai.cv.text.Text: void setValue(java.lang.String)>
<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setSlotId(java.lang.String)>
<java.util.Base64.Encoder: java.io.OutputStream wrap(java.io.OutputStream)>
<java.sql.SQLIntegrityConstraintViolationException: void <init>(java.lang.Throwable)>
<ohos.global.icu.math.BigDecimal: int intValueExact()>
<ohos.event.intentagent.IntentAgentHelper: int getUid(ohos.event.intentagent.IntentAgent)>
<ohos.bundle.IBundleManager: void startShortcut(java.lang.String,java.lang.String)>
<java.time.Duration: java.time.Duration dividedBy(long)>
<java.net.Inet6Address: boolean isIPv4CompatibleAddress()>
<java.sql.DatabaseMetaData: boolean supportsSchemasInProcedureCalls()>
<ohos.global.icu.text.DecimalFormatSymbols: void setSignificantDigit(char)>
<java.net.HttpCookie: void setHttpOnly(boolean)>
<ohos.data.resultset.AbsResultSet: void <init>()>
<java.util.Locale: java.lang.String getISO3Language()>
<ohos.agp.components.Component: int[] getLocationOnScreen()>
<ohos.agp.utils.Rect: int hashCode()>
<javax.sql.RowSet: void setNCharacterStream(java.lang.String,java.io.Reader,long)>
<java.nio.file.attribute.AclEntry: java.nio.file.attribute.AclEntryType type()>
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>
<java.io.StringWriter: java.lang.String toString()>
<java.util.jar.Attributes: java.lang.Object remove(java.lang.Object)>
<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>
<java.time.chrono.IsoChronology: java.time.LocalDate date(java.time.chrono.Era,int,int,int)>
<ohos.global.icu.text.UnicodeSetSpanner: java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence,ohos.global.icu.text.UnicodeSetSpanner.CountMethod,ohos.global.icu.text.UnicodeSet.SpanCondition)>
<ohos.miscservices.pasteboard.PasteData: ohos.miscservices.pasteboard.PasteData creatPlainTextData(java.lang.CharSequence)>
<java.net.MulticastSocket: void setLoopbackMode(boolean)>
<java.util.Formatter: void <init>(java.io.OutputStream,java.lang.String)>
<ohos.interwork.event.intentagent.IntentAgentEx: void <clinit>()>
<ohos.event.notification.NotificationActionButton: java.lang.String toString()>
<java.net.SocketImpl: void bind(java.net.InetAddress,int)>
<ohos.aafwk.ability.ContinuationState: ohos.aafwk.ability.ContinuationState valueOf(java.lang.String)>
<java.lang.invoke.LambdaConversionException: void <init>(java.lang.String)>
<java.util.Locale: boolean hasExtensions()>
<java.time.LocalDateTime: java.time.LocalDateTime withYear(int)>
<ohos.javax.xml.stream.XMLStreamException: java.lang.Throwable getNestedException()>
<java.util.stream.DoubleStream: java.util.Spliterator.OfDouble spliterator()>
<ohos.agp.render.render3d.resources.MaterialDesc: void setClearCoatRoughness(float)>
<ohos.global.resource.ResourceManager: ohos.global.resource.solidxml.Theme createTheme(java.util.List)>
<java.time.format.TextStyle: java.time.format.TextStyle asStandalone()>
<ohos.data.resultset.ResultSet: byte[] getBlob(int)>
<ohos.data.rdb.RdbStore: ohos.data.resultset.ResultSet querySqlWithHook(java.lang.String,java.lang.String[],ohos.data.resultset.ResultSetHook)>
<ohos.media.audio.AudioStreamInfo.EncodingFormat: int getValue()>
<java.lang.Throwable: void <init>()>
<java.net.JarURLConnection: java.net.URL getJarFileURL()>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLStreamReader createFilteredReader(ohos.javax.xml.stream.XMLStreamReader,ohos.javax.xml.stream.StreamFilter)>
<java.text.DateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>
<javax.crypto.spec.DESedeKeySpec: void <init>(byte[],int)>
<java.lang.Short: short shortValue()>
<ohos.agp.colors.ColorConverter: ohos.agp.colors.HslColor toHsl(ohos.agp.colors.Color)>
<java.time.zone.ZoneOffsetTransition: java.time.Duration getDuration()>
<ohos.data.orm.OrmDatabase: int getVersion()>
<java.security.cert.CertStoreParameters: java.lang.Object clone()>
<ohos.media.audio.AudioWaver: int getMinDataSize()>
<ohos.agp.utils.TextTool: boolean isEqual(java.lang.CharSequence,java.lang.CharSequence)>
<java.lang.ClassFormatError: void <init>(java.lang.String)>
<ohos.utils.Parcel: void writeTypedSequenceable(ohos.utils.Sequenceable)>
<java.lang.RuntimeException: void <init>(java.lang.String)>
<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>
<ohos.miscservices.inputmethodability.KeyboardController: int getScreenOrientation()>
<ohos.global.icu.lang.UScript.ScriptUsage: ohos.global.icu.lang.UScript.ScriptUsage valueOf(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: java.lang.String getBriefText()>
<java.util.concurrent.locks.Condition: boolean await(long,java.util.concurrent.TimeUnit)>
<javax.sql.RowSet: void setQueryTimeout(int)>
<javax.tools.JavaFileManager: javax.tools.FileObject getFileForInput(javax.tools.JavaFileManager.Location,java.lang.String,java.lang.String)>
<ohos.global.icu.math.BigDecimal: java.lang.String toString()>
<ohos.agp.components.ListContainer: void setOrientation(int)>
<ohos.ai.cv.sr.TxtImageSuperResolutionConfiguration.Builder: ohos.ai.cv.sr.TxtImageSuperResolutionConfiguration build()>
<ohos.global.i18n.text.MeasureOptions.Unit: void <clinit>()>
<ohos.data.rdb.StoreConfig.JournalMode: ohos.data.rdb.StoreConfig.JournalMode[] values()>
<java.util.FormatterClosedException: void <init>()>
<java.sql.PreparedStatement: void setCharacterStream(int,java.io.Reader)>
<javax.security.auth.callback.PasswordCallback: void clearPassword()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet remove(int)>
<ohos.media.photokit.metadata.AVLoggerConnection: void disconnect()>
<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndAccumulate(java.lang.Object,java.util.function.BinaryOperator)>
<ohos.agp.render.opengl.GLES1X: void glTexEnvxv(int,int,int[])>
<ohos.agp.components.Component: void setComponentStateChangedListener(ohos.agp.components.Component.ComponentStateChangedListener)>
<javax.crypto.CipherSpi: int engineUpdate(byte[],int,int,byte[],int)>
<ohos.global.icu.text.UnicodeSetSpanner: int countIn(java.lang.CharSequence,ohos.global.icu.text.UnicodeSetSpanner.CountMethod)>
<ohos.global.icu.text.Edits.Iterator: boolean hasChange()>
<ohos.net.NetStatusCallback: void onLosing(ohos.net.NetHandle,long)>
<java.net.InetAddress: boolean isLoopbackAddress()>
<ohos.aafwk.ability.DataAbilityOperation: boolean isAssertOperation()>
<java.lang.String: int indexOf(java.lang.String)>
<java.util.zip.ZipEntry: void setTime(long)>
<java.util.Timer: void schedule(java.util.TimerTask,long)>
<java.util.concurrent.atomic.AtomicInteger: boolean weakCompareAndSet(int,int)>
<java.util.BitSet: void <init>()>
<ohos.agp.render.Paint: void setMaxLines(int)>
<ohos.agp.window.service.Window: void setWindowFlags(int,int)>
<java.util.function.LongConsumer: void accept(long)>
<java.io.RandomAccessFile: char readChar()>
<ohos.bluetooth.ble.BleAdvertiseSettings.Builder: ohos.bluetooth.ble.BleAdvertiseSettings.Builder setConnectable(boolean)>
<ohos.app.dispatcher.TaskDispatcher: boolean groupDispatchWait(ohos.app.dispatcher.Group,long)>
<ohos.global.icu.util.CurrencyAmount: void <init>(java.lang.Number,java.util.Currency)>
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.spi.SelectorProvider provider()>
<java.util.concurrent.locks.ReentrantReadWriteLock: boolean hasQueuedThread(java.lang.Thread)>
<ohos.global.icu.text.DecimalFormatSymbols: ohos.global.icu.text.DecimalFormatSymbols getInstance(ohos.global.icu.util.ULocale)>
<ohos.aafwk.ability.Ability: void startAbilityForResult(ohos.aafwk.content.Intent,int,ohos.aafwk.ability.startsetting.AbilityStartSetting)>
<ohos.agp.components.DependentLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.util.logging.SimpleFormatter: void <init>()>
<java.time.Year: java.time.Year now(java.time.ZoneId)>
<ohos.agp.components.ListContainer: boolean getFooterBoundarySwitch()>
<ohos.agp.components.TimePicker: void setNormalTextSize(int)>
<ohos.bundle.ShortcutIntent: java.lang.String getTargetBundle()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>
<ohos.data.resultset.ResultSet: boolean isAtLastRow()>
<ohos.utils.LruBuffer: java.util.List values()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThanOrEqualTo(java.lang.String,java.util.Calendar)>
<ohos.global.icu.util.Freezable: java.lang.Object freeze()>
<java.nio.file.attribute.FileOwnerAttributeView: void setOwner(java.nio.file.attribute.UserPrincipal)>
<ohos.global.icu.util.Currency: ohos.global.icu.util.Currency getInstance(ohos.global.icu.util.ULocale)>
<ohos.javax.xml.stream.XMLStreamReader: boolean isStartElement()>
<ohos.global.icu.util.TaiwanCalendar: void <init>(ohos.global.icu.util.ULocale)>
<ohos.bundleactive.BundleActiveInfos: long queryInfosEndMs()>
<ohos.media.common.Source: void <init>(java.io.FileDescriptor)>
<ohos.telephony.RadioInfoManager: boolean isNsaState()>
<ohos.agp.animation.AnimatorValue: void setCurveType(int)>
<java.security.cert.X509CertSelector: boolean getMatchAllSubjectAltNames()>
<java.nio.file.attribute.BasicFileAttributes: java.nio.file.attribute.FileTime lastModifiedTime()>
<javax.crypto.CipherSpi: java.security.AlgorithmParameters engineGetParameters()>
<ohos.system.OsHelper: int readFile(java.io.FileDescriptor,java.nio.ByteBuffer)>
<ohos.global.icu.text.DecimalFormat: java.math.BigDecimal getRoundingIncrement()>
<java.time.chrono.IsoChronology: java.util.List eras()>
<java.time.temporal.ChronoField: int checkValidIntValue(long)>
<java.security.cert.CertificateParsingException: void <init>(java.lang.String,java.lang.Throwable)>
<java.io.DataInput: void readFully(byte[],int,int)>
<java.security.cert.PKIXRevocationChecker: java.security.cert.X509Certificate getOcspResponderCert()>
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getShaper(java.awt.font.NumericShaper.Range)>
<javax.net.ssl.SSLEngine: java.lang.String[] getSupportedProtocols()>
<java.io.PrintStream: void print(java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glLoadMatrixx(java.nio.IntBuffer)>
<ohos.miscservices.download.DownloadConfig.Builder: ohos.miscservices.download.DownloadConfig.Builder setPath(java.lang.String,java.lang.String)>
<java.util.concurrent.ForkJoinTask: boolean tryUnfork()>
<ohos.bundle.LauncherAbilityInfo: int getUserId()>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer wrap(double[])>
<ohos.utils.PlainLongArray: ohos.utils.PlainLongArray clone()>
<java.net.URL: int getPort()>
<java.util.concurrent.DelayQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<java.io.ObjectInputStream: int read()>
<java.lang.String: char charAt(int)>
<ohos.agp.components.Component: void setPivotY(float)>
<java.io.InputStream: boolean markSupported()>
<ohos.agp.render.render3d.util.SceneUtil: java.util.List rayCastFromCamera(ohos.agp.render.render3d.Entity,ohos.agp.render.render3d.math.Vector2)>
<ohos.agp.render.Path: void offset(float,float)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThan(java.lang.String,float)>
<ohos.agp.text.Font: java.lang.String getName()>
<java.util.GregorianCalendar: void computeFields()>
<javax.lang.model.element.UnknownAnnotationValueException: java.lang.Object getArgument()>
<java.util.AbstractMap.SimpleEntry: java.lang.String toString()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notBetween(java.lang.String,float,float)>
<ohos.javax.xml.stream.XMLStreamReader: boolean isStandalone()>
<java.lang.SecurityManager: int classLoaderDepth()>
<ohos.global.icu.text.PluralRules: java.lang.String select(ohos.global.icu.number.FormattedNumber)>
<ohos.media.common.AudioProperty.Builder: void <init>(ohos.media.common.AudioProperty)>
<java.nio.charset.spi.CharsetProvider: java.util.Iterator charsets()>
<ohos.agp.components.ComponentProvider: void mergeAction(ohos.agp.components.ComponentProvider.Action)>
<ohos.security.keystore.KeyStoreKeySpec: int getSecKeyUsagePurposes()>
<java.security.AllPermission: java.lang.String getActions()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture supplyAsync(java.util.function.Supplier)>
<java.io.ByteArrayOutputStream: void close()>
<ohos.global.icu.text.DecimalFormat: java.lang.String getPositivePrefix()>
<java.nio.charset.spi.CharsetProvider: void <init>()>
<ohos.agp.components.ComponentTransition: boolean hasTransitionType(int)>
<ohos.bundle.AbilityInfo: java.lang.String getReadPermission()>
<java.util.prefs.PreferenceChangeEvent: java.util.prefs.Preferences getNode()>
<ohos.aafwk.content.IntentParams: void <clinit>()>
<java.time.OffsetDateTime: long toEpochSecond()>
<ohos.net.NetStatusCallback: void <init>()>
<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>
<ohos.global.icu.util.Calendar: int getMinimalDaysInFirstWeek()>
<ohos.global.resource.solidxml.Node: java.util.List getTypedAttribute(ohos.global.resource.ResourceManager)>
<ohos.agp.components.PageSliderIndicator: void removeOnSelectionChangedListener(ohos.agp.components.PageSlider.PageChangedListener)>
<java.lang.Class: boolean isAnonymousClass()>
<ohos.agp.window.dialog.CommonDialog: void <init>(ohos.app.Context)>
<java.util.Arrays: void sort(char[],int,int)>
<java.sql.DatabaseMetaData: boolean locatorsUpdateCopy()>
<ohos.utils.Parcel: void writeList(java.util.List)>
<java.security.cert.PKIXParameters: java.util.Date getDate()>
<java.util.GregorianCalendar: void add(int,int)>
<ohos.utils.zson.ZSONArray: void <init>(java.util.List)>
<java.sql.Statement: java.sql.ResultSet getGeneratedKeys()>
<java.nio.LongBuffer: java.nio.LongBuffer wrap(long[],int,int)>
<ohos.global.icu.math.BigDecimal: java.math.BigDecimal toBigDecimal()>
<ohos.javax.xml.namespace.QName: java.lang.String getLocalPart()>
<ohos.agp.window.service.ComponentPadding: boolean hasNonZeroPadding()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notBetween(java.lang.String,int,int)>
<ohos.utils.LightweightMap: void putAll(ohos.utils.LightweightMap)>
<ohos.agp.render.Path: ohos.agp.render.Path.FillType getFillType()>
<java.util.concurrent.ArrayBlockingQueue: int drainTo(java.util.Collection)>
<java.util.logging.MemoryHandler: java.util.logging.Level getPushLevel()>
<java.time.chrono.ChronoZonedDateTime: boolean equals(java.lang.Object)>
<javax.crypto.CipherSpi: void engineSetPadding(java.lang.String)>
<ohos.agp.components.Text: void delete(int)>
<ohos.global.icu.text.SearchIterator: ohos.global.icu.text.SearchIterator.ElementComparisonType getElementComparisonType()>
<java.util.LinkedList: java.lang.Object peek()>
<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>
<java.io.ObjectStreamClass: java.io.ObjectStreamClass lookup(java.lang.Class)>
<ohos.data.rdb.RdbFullException: void <init>()>
<ohos.media.camera.device.CameraConfig.Builder: ohos.media.camera.device.CameraConfig.Builder removeSurface(ohos.agp.graphics.Surface)>
<java.util.EnumMap: void <init>(java.util.Map)>
<ohos.media.common.AudioProperty.Builder: void <init>()>
<java.net.IDN: java.lang.String toASCII(java.lang.String,int)>
<ohos.aafwk.content.Intent: java.lang.String getStringParam(java.lang.String)>
<ohos.agp.utils.Matrix: void setPerspX(float)>
<java.util.Calendar: void add(int,int)>
<ohos.sysappcomponents.contact.entity.ImAddress: void setImAddress(java.lang.String)>
<java.security.cert.TrustAnchor: java.lang.String getCAName()>
<ohos.media.tubecore.AVTube.DeviceType: ohos.media.tubecore.AVTube.DeviceType[] values()>
<ohos.event.notification.NotificationRequest.NotificationContent: void <clinit>()>
<ohos.agp.components.DirectionalLayout: int getOrientation()>
<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>
<java.nio.file.Files: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>
<java.util.concurrent.atomic.DoubleAdder: double doubleValue()>
<ohos.agp.render.render3d.Engine: boolean isDebugBuild()>
<ohos.data.rdb.RdbStore: void markAsCommit()>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.temporal.TemporalAccessor)>
<java.util.stream.LongStream: java.util.stream.LongStream parallel()>
<ohos.agp.components.element.FrameAnimationElement: int getDuration(int)>
<java.lang.StrictMath: long addExact(long,long)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>
<ohos.miscservices.timeutility.Timer.OneShotTimer: ohos.miscservices.timeutility.Timer.OneShotTimer getTimer(ohos.app.Context,ohos.miscservices.timeutility.Timer.ITimerListener)>
<ohos.aafwk.ability.Ability: void onForeground(ohos.aafwk.content.Intent)>
<ohos.agp.components.Component: ohos.agp.utils.DimensFloat getComponentMinSize()>
<java.util.concurrent.ForkJoinPool: boolean getAsyncMode()>
<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>
<javax.lang.model.util.SimpleTypeVisitor6: java.lang.Object visitNull(javax.lang.model.type.NullType,java.lang.Object)>
<java.util.Date: java.lang.String toLocaleString()>
<ohos.hiviewdfx.Debug: void dumpLoadClasses(int)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getPrimaryKeys(java.lang.String,java.lang.String,java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates between(java.lang.String,long,long)>
<java.time.chrono.Chronology: java.lang.String toString()>
<javax.crypto.CipherSpi: int engineGetOutputSize(int)>
<java.sql.ResultSet: boolean wasNull()>
<java.lang.StrictMath: double max(double,double)>
<ohos.global.icu.text.UnicodeSetIterator: void <clinit>()>
<java.io.File: long getTotalSpace()>
<java.lang.CharSequence: java.util.stream.IntStream chars()>
<ohos.bluetooth.HandsFreeAudioGateway: java.util.List getDevicesByStates(int[])>
<ohos.wifi.p2p.WifiP2pController: ohos.wifi.p2p.WifiP2pController getInstance(ohos.app.Context)>
<ohos.rpc.RemoteProxy: boolean equals(java.lang.Object)>
<ohos.wifi.WifiScanInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.render.render3d.Task: void initialize()>
<java.util.stream.IntStream: java.util.stream.BaseStream parallel()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getFunctions(java.lang.String,java.lang.String,java.lang.String)>
<ohos.media.common.sessioncore.AVElement: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.resource.RawFileEntry: ohos.global.resource.Resource openRawFile()>
<ohos.agp.window.service.Display: int getDisplayId()>
<ohos.global.icu.lang.UCharacter: int getPropertyEnum(java.lang.CharSequence)>
<java.util.StringJoiner: java.util.StringJoiner merge(java.util.StringJoiner)>
<ohos.aafwk.ability.fraction.Fraction: void onInactive()>
<java.util.SimpleTimeZone: void setDSTSavings(int)>
<ohos.agp.render.PdfGenerator.PageInfo.Builder: void <init>(int,int,int)>
<java.util.concurrent.PriorityBlockingQueue: void <init>()>
<ohos.agp.render.render3d.components.SceneComponent: void setIrradianceCoefficients(ohos.agp.render.render3d.math.Vector3[])>
<ohos.ai.asr.AsrIntent: java.lang.String getFilePath()>
<java.util.logging.MemoryHandler: void publish(java.util.logging.LogRecord)>
<ohos.agp.utils.DimensFloat: float getMin()>
<java.io.FilterInputStream: void mark(int)>
<ohos.bluetooth.BluetoothDeviceClass: int hashCode()>
<java.sql.SQLFeatureNotSupportedException: void <init>(java.lang.String,java.lang.String)>
<ohos.sysappcomponents.settings.AppSettings: boolean checkSetPermission(ohos.app.Context)>
<ohos.bundle.IBundleManager: boolean addHomeShortcut(ohos.bundle.ShortcutInfo)>
<java.nio.file.attribute.PosixFileAttributes: java.nio.file.attribute.UserPrincipal owner()>
<ohos.utils.Parcel: boolean writeCharArray(char[])>
<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum)>
<ohos.data.resultset.ResultSet: ohos.data.resultset.ResultSet.ColumnType getColumnTypeForIndex(int)>
<ohos.agp.components.IndexBar: java.lang.String getSelectedString()>
<javax.tools.Diagnostic: javax.tools.Diagnostic.Kind getKind()>
<java.util.GregorianCalendar: int getMinimum(int)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.Comparator comparator()>
<java.util.concurrent.Future: boolean cancel(boolean)>
<ohos.agp.render.render3d.resources.MaterialDesc: float getAlphaCutoff()>
<ohos.sysappcomponents.contact.entity.Portrait: ohos.utils.net.Uri getUri()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>
<ohos.bluetooth.ble.BleAdvertiseData: ohos.utils.PlainArray getManufacturerData()>
<ohos.media.common.AVDescription: java.lang.CharSequence getDescription()>
<ohos.agp.render.opengl.GLES1X: void glEGLImageTargetTexture2DOES(int,java.nio.Buffer)>
<ohos.agp.window.dialog.IDialog.ClickedListener: void onClick(ohos.agp.window.dialog.IDialog,int)>
<ohos.app.AbilityContext: boolean deleteFile(java.lang.String)>
<java.time.LocalDate: java.time.chrono.IsoChronology getChronology()>
<javax.lang.model.util.Elements: javax.lang.model.element.PackageElement getPackageElement(java.lang.CharSequence)>
<ohos.agp.render.opengl.EGLConfig: boolean equals(java.lang.Object)>
<ohos.ai.cv.sr.SisrConfiguration: void setQuality()>
<ohos.agp.components.TabList: void setTabTextSize(int)>
<ohos.agp.components.IndexBar: void setSelectedPaint(ohos.agp.render.Paint)>
<ohos.agp.components.Text: void setAroundElementsRelative(ohos.agp.components.element.Element,ohos.agp.components.element.Element,ohos.agp.components.element.Element,ohos.agp.components.element.Element)>
<ohos.global.icu.util.IslamicCalendar: int handleGetLimit(int,int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates in(java.lang.String,java.sql.Time[])>
<java.time.OffsetTime: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.time.LocalDate: long toEpochDay()>
<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>
<ohos.agp.components.Text: ohos.agp.components.element.Element getEndElement()>
<ohos.wifi.WifiDevice: java.lang.String getCountryCode()>
<java.time.Period: java.time.Period between(java.time.LocalDate,java.time.LocalDate)>
<ohos.media.audio.Timestamp.Timebase: void <clinit>()>
<java.util.concurrent.locks.LockSupport: void parkNanos(long)>
<ohos.aafwk.ability.AbilitySlice: void startAbility(ohos.aafwk.content.Intent)>
<ohos.nfc.tag.MifareClassicTag: int getSectorId(int)>
<ohos.agp.components.MagicLayout: void setFoldDirection(int)>
<ohos.data.distributed.common.Options: boolean isEncrypt()>
<java.text.Format: void <init>()>
<java.security.Provider: java.util.Set getServices()>
<javax.sql.RowSet: void setClob(int,java.io.Reader,long)>
<ohos.agp.window.dialog.CommonDialog: void setBoundRect(ohos.agp.utils.Rect)>
<ohos.aafwk.ability.AbilitySlice: void <init>()>
<ohos.agp.render.Region.Op: int value()>
<ohos.miscservices.pasteboard.PasteData: void addUriRecord(ohos.utils.net.Uri)>
<ohos.data.search.SearchAbility: java.util.List update(java.lang.String,java.lang.String,java.util.List)>
<java.io.DataOutput: void writeFloat(float)>
<ohos.media.common.sessioncore.AVControllerCallback: void onAVPlaybackStateChanged(ohos.media.common.sessioncore.AVPlaybackState)>
<ohos.media.tubecore.AVTubeEx: void cmdSetVolume(int)>
<java.util.Spliterators.AbstractIntSpliterator: java.util.Spliterator trySplit()>
<ohos.data.search.model.SearchableEntity: int getVersionCode()>
<javax.lang.model.util.Elements: java.util.List getAllMembers(javax.lang.model.element.TypeElement)>
<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>
<ohos.org.xml.sax.InputSource: void setSystemId(java.lang.String)>
<java.lang.Character: boolean isBmpCodePoint(int)>
<ohos.agp.utils.Rect: boolean isInclude(ohos.agp.utils.Point)>
<ohos.global.icu.text.DecimalFormat: void setSignAlwaysShown(boolean)>
<ohos.agp.components.DependentLayout.LayoutConfig: int getRule(int)>
<ohos.bundle.IBundleManager: java.lang.String getAppType(java.lang.String)>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitByte(byte,java.lang.Object)>
<java.util.Calendar: boolean isLenient()>
<java.util.zip.DeflaterInputStream: int available()>
<ohos.media.tubecore.AVTubeManager.TubeObserver: void onTubeInsert(ohos.media.tubecore.AVTubeManager,ohos.media.tubecore.AVTube)>
<ohos.event.notification.NotificationUserInput: boolean marshalling(ohos.utils.Parcel)>
<java.time.LocalDateTime: long getLong(java.time.temporal.TemporalField)>
<ohos.agp.utils.Matrix: void setRotate(float)>
<java.security.PolicySpi: void <init>()>
<java.lang.Exception: void <init>()>
<java.time.Duration: java.time.Duration plusHours(long)>
<ohos.agp.utils.Matrix: boolean postRotate(float,float,float)>
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>
<ohos.data.distributed.common.Schema: java.util.List getCompositeIndexes()>
<ohos.data.distributed.common.KvStoreException: ohos.data.distributed.common.KvStoreErrorCode getKvStoreErrorCode()>
<ohos.agp.components.IndexBar: ohos.agp.render.Paint getIndexPaint()>
<ohos.wifi.p2p.WifiP2pDevice: boolean isGroupOwner()>
<java.sql.DatabaseMetaData: boolean storesLowerCaseIdentifiers()>
<ohos.media.common.AVDescription.Builder: ohos.media.common.AVDescription.Builder setIconUri(ohos.utils.net.Uri)>
<ohos.agp.render.Paint: ohos.agp.render.Paint.Join getStrokeJoin()>
<java.time.Duration: long toMillis()>
<ohos.event.intentagent.IntentAgent: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenApplyAsync(java.util.function.Function)>
<java.security.interfaces.DSAParams: java.math.BigInteger getP()>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey translateKey(javax.crypto.SecretKey)>
<ohos.media.camera.device.FrameResult: int getState()>
<ohos.miscservices.inputmethodability.KeyboardDelegate: void onSelectionChanged(int,int,int,int)>
<ohos.utils.Stopwatch: void <init>(ohos.hiviewdfx.HiLogLabel,java.lang.String)>
<ohos.data.resultset.AbsResultSet: void close()>
<ohos.global.icu.text.StringPrepParseException: boolean equals(java.lang.Object)>
<ohos.utils.LongPlainArray: void put(long,java.lang.Object)>
<ohos.data.search.model.ChangedIndexContent: java.util.List getUpdatedItems()>
<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>
<java.lang.StringBuffer: int length()>
<java.text.MessageFormat: void setLocale(java.util.Locale)>
<ohos.agp.render.opengl.GLES20: void glUniform2fv(int,int,java.nio.FloatBuffer)>
<ohos.global.icu.util.GregorianCalendar: int getActualMinimum(int)>
<ohos.miscservices.wallpaper.WallpaperController: void setPadding(ohos.agp.utils.Rect)>
<ohos.rpc.MessageParcel: byte[] readRawData(int)>
<java.util.zip.ZipFile: java.lang.String getName()>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getAttributePrefix(int)>
<ohos.rpc.RemoteProxy: int hashCode()>
<ohos.multimodalinput.event.MouseEvent: float getCursorDelta(int)>
<ohos.location.GeoAddress: void setSubRoadName(java.lang.String)>
<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>
<ohos.agp.render.Canvas.ClipOp: ohos.agp.render.Canvas.ClipOp valueOf(java.lang.String)>
<ohos.app.AbilityContext: ohos.app.dispatcher.TaskDispatcher getUITaskDispatcher()>
<java.sql.DataTruncation: int getTransferSize()>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate of(int,int,int)>
<ohos.agp.render.Paint: ohos.agp.render.ColorFilter getColorFilter()>
<ohos.global.icu.text.UnicodeSet: void <init>(int,int)>
<ohos.agp.components.element.AnimatedStateElement: void <init>()>
<java.security.GeneralSecurityException: void <init>(java.lang.String)>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: boolean isJointDataDefined()>
<ohos.global.resource.Element: java.lang.String getString()>
<java.util.TreeSet: java.util.Iterator iterator()>
<ohos.data.file.FileAbility: java.lang.String[] getFileTypes(ohos.utils.net.Uri,java.lang.String)>
<java.time.LocalTime: int get(java.time.temporal.TemporalField)>
<ohos.media.audio.SoundEffect: boolean isEffectAvailable(java.util.UUID)>
<java.net.CacheRequest: void <init>()>
<ohos.event.notification.NotificationHelper: void publishNotification(java.lang.String,ohos.event.notification.NotificationRequest)>
<ohos.sysappcomponents.calendar.entity.Instances: long getInstanceEndMinute()>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setAccessibilityDescription(int,java.lang.String)>
<ohos.agp.components.webengine.ResourceResponse: void setMimeType(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>()>
<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>
<ohos.event.notification.IAdvancedNotificationManager: void addNotificationSlot(java.lang.String,ohos.event.notification.NotificationSlot)>
<java.util.prefs.AbstractPreferences: void putByteArray(java.lang.String,byte[])>
<java.util.stream.DoubleStream: java.util.OptionalDouble average()>
<java.util.concurrent.atomic.LongAdder: void decrement()>
<ohos.batterymanager.BatteryInfo: void <init>()>
<ohos.global.resource.solidxml.Node: java.util.List getAttributes()>
<ohos.global.resource.solidxml.TypedAttribute: int getColorValue()>
<ohos.agp.render.PixelMapHolder: void uploadTexture()>
<java.text.ParseException: int getErrorOffset()>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitVariable(javax.lang.model.element.VariableElement,java.lang.Object)>
<ohos.media.extractor.Extractor: boolean setSource(ohos.media.common.Source)>
<ohos.global.icu.util.BuddhistCalendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,int,int,int)>
<java.text.AttributedCharacterIterator.Attribute: java.lang.Object readResolve()>
<ohos.aafwk.ability.fraction.FractionScheduler: ohos.aafwk.ability.fraction.FractionScheduler add(int,ohos.aafwk.ability.fraction.Fraction,java.lang.String)>
<ohos.utils.zson.ZSONArray: java.util.ListIterator listIterator()>
<javax.lang.model.util.Types: boolean isSubsignature(javax.lang.model.type.ExecutableType,javax.lang.model.type.ExecutableType)>
<ohos.agp.render.opengl.GLES30: void glDrawElementsInstanced(int,int,int,java.nio.Buffer,int)>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: java.lang.String getLongText()>
<ohos.bundle.AbilityInfo.LaunchMode: void <clinit>()>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.DoubleStream doubles(long,double,double)>
<ohos.global.icu.text.UnicodeSet: int size()>
<ohos.security.keystore.KeyStoreProtectionParameter: java.lang.String[] getSecKeyCryptoAttrs(int)>
<ohos.storageinfomgr.StorageInfoManager: ohos.storageinfomgr.StorageInfo queryInfoByPackageName(java.util.UUID,java.lang.String,int)>
<ohos.global.i18n.text.MeasureOptions.FormatStyle: ohos.global.i18n.text.MeasureOptions.FormatStyle[] values()>
<javax.crypto.spec.DESKeySpec: byte[] getKey()>
<java.time.temporal.ValueRange: long getMinimum()>
<java.sql.ResultSet: java.sql.Ref getRef(int)>
<ohos.ai.cv.common.VisionManager: int init(ohos.app.Context,ohos.ai.cv.common.ConnectionCallback)>
<ohos.accessibility.AccessibilitySystemAbilityClient: boolean sendEvent(int,int)>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visit(javax.lang.model.element.AnnotationValue)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.concurrent.ConcurrentSkipListSet clone()>
<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>
<java.security.KeyFactorySpi: java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)>
<java.time.format.DateTimeFormatter: java.text.Format toFormat()>
<ohos.event.commonevent.ICommonEventManager: void unsubscribeCommonEvent(ohos.event.commonevent.ICommonEventSubscriber)>
<ohos.aafwk.ability.Lifecycle.Event: ohos.aafwk.ability.Lifecycle.Event[] values()>
<java.sql.PreparedStatement: void setObject(int,java.lang.Object,int)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage handleAsync(java.util.function.BiFunction)>
<ohos.agp.render.PdfGenerator.PageInfo: int getPageHeight()>
<ohos.utils.SequenceUuid: java.util.UUID getUuid()>
<java.security.KeyStoreSpi: void engineLoad(java.io.InputStream,char[])>
<java.util.SplittableRandom: java.util.stream.DoubleStream doubles(long)>
<ohos.agp.components.StackLayout.LayoutConfig: void <init>(ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.miscservices.inputmethod.EditingText: java.lang.String getTextContent()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<java.nio.file.FileVisitor: java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException)>
<java.lang.reflect.Constructor: java.lang.String toGenericString()>
<ohos.hiviewdfx.Debug: java.util.Map getRuntimeStatistics()>
<ohos.aafwk.ability.delegation.IAbilityDelegatorArgs: java.lang.String getTestCaseNames()>
<ohos.aafwk.ability.DataAbilityHelper: void notifyChange(ohos.utils.net.Uri)>
<ohos.miscservices.pasteboard.PasteData.Record: ohos.miscservices.pasteboard.PasteData.Record createIntentRecord(ohos.aafwk.content.Intent)>
<ohos.bundle.FormInfo: java.lang.String getModuleName()>
<ohos.media.audio.AudioCapturer.State: ohos.media.audio.AudioCapturer.State valueOf(java.lang.String)>
<java.text.NumberFormat: void setMinimumIntegerDigits(int)>
<javax.sql.RowSet: void setAsciiStream(java.lang.String,java.io.InputStream)>
<ohos.sysappcomponents.contact.entity.SipAddress: java.lang.String getSipAddress()>
<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>
<java.util.concurrent.CompletionException: void <init>(java.lang.String)>
<java.util.zip.ZipFile: void <init>(java.io.File)>
<java.lang.StringBuffer: java.lang.Appendable append(java.lang.CharSequence)>
<java.lang.reflect.AccessibleObject: boolean isAnnotationPresent(java.lang.Class)>
<ohos.utils.SequenceUuid: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.render.Canvas.VertexMode: ohos.agp.render.Canvas.VertexMode[] values()>
<ohos.media.camera.device.FrameStateCallback: void onCaptureTriggerInterrupted(ohos.media.camera.device.Camera,int)>
<ohos.agp.render.Canvas: void clipRect(float,float,float,float)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(int)>
<ohos.data.preferences.Preferences.PreferencesObserver: void onChange(ohos.data.preferences.Preferences,java.lang.String)>
<ohos.agp.components.DirectionalLayout: void setTotalWeight(float)>
<ohos.media.camera.params.ParameterKey.Key: java.lang.String getName()>
<java.util.Formatter: void <init>(java.io.File,java.lang.String,java.util.Locale)>
<java.security.cert.CertPathBuilder: java.lang.String getDefaultType()>
<java.util.function.Supplier: java.lang.Object get()>
<ohos.utils.zson.ZSONReader: long readLong()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThanOrEqualTo(java.lang.String,java.sql.Timestamp)>
<javax.net.ssl.SSLSession: java.lang.String getProtocol()>
<ohos.bluetooth.ble.BleScanFilter: boolean marshalling(ohos.utils.Parcel)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<ohos.aafwk.ability.LifecycleObserver: void onStart(ohos.aafwk.content.Intent)>
<ohos.bundle.AbilityInfo: java.lang.String getBundleName()>
<ohos.agp.render.render3d.math.Vector4: int hashCode()>
<java.sql.PreparedStatement: void setBlob(int,java.io.InputStream)>
<ohos.sysappcomponents.calendar.entity.Participants: void setParticipantRoleType(int)>
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDate plus(java.time.temporal.TemporalAmount)>
<ohos.utils.geo.RectFloat: boolean verifyRectFloat()>
<java.text.NumberFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<java.util.zip.Inflater: void setDictionary(byte[])>
<ohos.media.image.ImagePacker: boolean initializePacking(java.io.OutputStream,ohos.media.image.ImagePacker.PackingOptions)>
<java.util.ArrayList: boolean add(java.lang.Object)>
<java.sql.Connection: void setAutoCommit(boolean)>
<ohos.bluetooth.ble.BleAdvertiseData.Builder: ohos.bluetooth.ble.BleAdvertiseData.Builder addServiceData(ohos.utils.SequenceUuid,byte[])>
<ohos.miscservices.download.DownloadSession.DownloadInfo: long getDownloadId()>
<java.time.Year: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<javax.security.cert.X509Certificate: java.util.Date getNotBefore()>
<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum)>
<ohos.agp.components.MagicLayout: int getOrientation()>
<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>
<java.util.stream.DoubleStream: java.util.OptionalDouble min()>
<ohos.org.xml.sax.Locator: java.lang.String getSystemId()>
<java.util.concurrent.ForkJoinPool.ManagedBlocker: boolean isReleasable()>
<java.util.concurrent.ConcurrentHashMap: double reduceKeysToDouble(long,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator)>
<java.lang.Thread: void sleep(long)>
<ohos.media.sessioncore.AVController: ohos.utils.PacMap getOptions()>
<java.util.ResourceBundle: java.lang.Object handleGetObject(java.lang.String)>
<ohos.global.icu.text.ListFormatter: ohos.global.icu.text.ListFormatter getInstance()>
<java.nio.file.spi.FileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>
<ohos.data.search.schema.NoticeItem: java.lang.String getContent()>
<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>
<ohos.org.w3c.dom.ls.LSInput: java.lang.String getPublicId()>
<java.util.zip.DeflaterInputStream: long skip(long)>
<ohos.global.icu.util.UniversalTimeScale: long toLong(long,int)>
<ohos.utils.geo.RectFloat: float getHorizontalCenter()>
<java.lang.Long: long rotateLeft(long,int)>
<ohos.org.xml.sax.SAXException: void <init>()>
<ohos.app.IAbilityManager: int getHomeScreenIconDensity()>
<java.security.cert.Certificate: void verify(java.security.PublicKey,java.lang.String)>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.math.Vector3 worldToScreen(ohos.agp.render.render3d.Entity,ohos.agp.render.render3d.math.Vector3)>
<java.util.concurrent.locks.AbstractOwnableSynchronizer: void setExclusiveOwnerThread(java.lang.Thread)>
<ohos.aafwk.content.Intent: ohos.bundle.ElementName getElement()>
<ohos.data.orm.Clob: int setString(long,java.lang.String)>
<ohos.ai.asr.AsrListener: void onEvent(int,ohos.utils.PacMap)>
<ohos.data.resultset.AbsSharedResultSet: void finalize()>
<ohos.sysappcomponents.contact.entity.Contact: java.util.List getEvents()>
<javax.tools.JavaFileManager: java.lang.Iterable list(javax.tools.JavaFileManager.Location,java.lang.String,java.util.Set,boolean)>
<java.nio.ByteBuffer: boolean hasArray()>
<java.time.format.DateTimeParseException: void <init>(java.lang.String,java.lang.CharSequence,int,java.lang.Throwable)>
<ohos.agp.window.service.Window: void addFlags(int)>
<ohos.light.agent.LightAgent: boolean turnOff(int)>
<ohos.agp.components.Text: boolean isScrollable()>
<ohos.event.notification.IAdvancedNotificationManager: boolean isAllowedNotify()>
<java.util.ArrayDeque: java.lang.Object pop()>
<javax.net.ssl.SSLEngineResult: java.lang.String toString()>
<java.lang.reflect.Executable: java.lang.reflect.TypeVariable[] getTypeParameters()>
<ohos.agp.window.dialog.CommonDialog: void onCreate()>
<javax.sql.RowSet: void setTime(int,java.sql.Time,java.util.Calendar)>
<ohos.agp.render.Canvas: void drawRect(ohos.agp.utils.RectFloat,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<ohos.agp.animation.timelinecurves.SpringCurve: void <init>(float,float,float)>
<ohos.agp.render.Canvas: boolean quickRejectPath(ohos.agp.render.Path)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<ohos.media.audio.AudioRenderer: void setSendEffectLevel(float)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: boolean doAbilitySliceStart(ohos.aafwk.ability.Ability,ohos.aafwk.ability.AbilitySlice)>
<java.util.Calendar.Builder: java.util.Calendar.Builder setLocale(java.util.Locale)>
<ohos.global.icu.util.ULocale: java.lang.String getFallback(java.lang.String)>
<java.time.LocalDateTime: java.time.LocalDateTime plusMonths(long)>
<ohos.vibrator.bean.VibrationPattern.EffectFlagType: ohos.vibrator.bean.VibrationPattern.EffectFlagType valueOf(java.lang.String)>
<ohos.data.rdb.StoreConfig.SyncMode: ohos.data.rdb.StoreConfig.SyncMode valueOf(java.lang.String)>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLEventWriter createXMLEventWriter(ohos.javax.xml.transform.Result)>
<ohos.media.camera.device.CameraAbility: int[] getSupportedAfMode()>
<java.io.RandomAccessFile: void writeDouble(double)>
<java.sql.DataTruncation: boolean getRead()>
<java.sql.DatabaseMetaData: boolean supportsMultipleTransactions()>
<java.io.File: java.lang.String getParent()>
<java.util.concurrent.ConcurrentHashMap: boolean remove(java.lang.Object,java.lang.Object)>
<java.io.ObjectInputStream: java.io.ObjectInputStream.GetField readFields()>
<java.security.Certificate: java.security.Principal getPrincipal()>
<ohos.miscservices.timeutility.Time: java.lang.String getTimeZone()>
<java.time.ZonedDateTime: java.time.ZonedDateTime minusSeconds(long)>
<ohos.bundle.BundleInfo: java.lang.String getType()>
<ohos.global.icu.util.Calendar: void setTimeInMillis(long)>
<java.sql.CallableStatement: void registerOutParameter(int,int)>
<java.time.OffsetDateTime: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates in(java.lang.String,int[])>
<java.lang.ClassCircularityError: void <init>(java.lang.String)>
<java.util.Spliterators: java.util.Spliterator emptySpliterator()>
<ohos.agp.components.Component: void estimateSize(int,int)>
<ohos.bundle.ModuleInfo: java.lang.String getModuleSourceDir()>
<ohos.event.notification.IAdvancedNotificationManager: java.util.List getNotificationSlots(java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,long)>
<ohos.interwork.utils.PacMapEx: boolean hasFileDescriptor()>
<ohos.global.icu.util.Calendar: ohos.global.icu.util.Calendar getInstance(ohos.global.icu.util.ULocale)>
<ohos.agp.components.ListContainer: int getCenterFocusablePosition()>
<java.time.chrono.MinguoChronology: java.util.List eras()>
<ohos.utils.geo.RectFloat: void setPivot(ohos.utils.geo.Point)>
<java.security.CodeSigner: java.security.cert.CertPath getSignerCertPath()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.global.icu.text.AlphabeticIndex.Bucket: ohos.global.icu.text.AlphabeticIndex.Bucket.LabelType getLabelType()>
<java.io.ObjectStreamField: char getTypeCode()>
<ohos.aafwk.ability.Ability: boolean onKeyUp(int,ohos.multimodalinput.event.KeyEvent)>
<java.security.PKCS12Attribute: void <init>(java.lang.String,java.lang.String)>
<ohos.global.icu.text.NumberingSystem: void <init>()>
<ohos.telephony.NetworkState: java.lang.String getShortOperatorName()>
<ohos.bluetooth.BluetoothHost: java.util.List getPairedDevices()>
<ohos.media.photokit.support.AlbumList: java.lang.String getAlbumId()>
<ohos.agp.render.render3d.systems.MorphingSystem: float[] getTargetWeights(long)>
<ohos.data.search.SearchResult: void <clinit>()>
<ohos.aafwk.content.Intent: long[] getLongArrayParam(java.lang.String)>
<java.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: ohos.event.notification.NotificationRequest.NotificationMultiLineContent setText(java.lang.String)>
<ohos.telephony.NetworkState: java.lang.String getPlmnNumeric()>
<java.io.PrintStream: void print(boolean)>
<java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<java.sql.DatabaseMetaData: boolean doesMaxRowSizeIncludeBlobs()>
<java.util.ListIterator: boolean hasNext()>
<java.util.concurrent.BlockingQueue: int remainingCapacity()>
<java.util.IllformedLocaleException: void <init>(java.lang.String)>
<ohos.light.agent.LightAgent: boolean isSupport(int)>
<ohos.telephony.SignalInformation: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.Component: void setScrollbarOverlapEnabled(boolean)>
<ohos.hiviewdfx.Debug.MemType: void <clinit>()>
<ohos.wifi.p2p.WifiP2pConfig: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.animation.Animator.CurveType: boolean checkTypeValue(int)>
<ohos.media.common.sessioncore.AVSessionCallback: void onPlayByMediaId(java.lang.String,ohos.utils.PacMap)>
<java.lang.StrictMath: double IEEEremainder(double,double)>
<ohos.agp.components.webengine.WebConfig: boolean isTextAutoSizing()>
<java.util.List: void add(int,java.lang.Object)>
<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>
<java.nio.file.Path: java.util.Iterator iterator()>
<ohos.aafwk.ability.AbilityPackage: void registerCallbacks(ohos.aafwk.ability.AbilityLifecycleCallbacks,ohos.app.ElementsCallback)>
<ohos.data.distributed.common.SchemaMode: void <clinit>()>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 min(ohos.agp.render.render3d.math.Vector4,ohos.agp.render.render3d.math.Vector4)>
<java.lang.ThreadGroup: int enumerate(java.lang.Thread[],boolean)>
<java.io.ByteArrayOutputStream: java.lang.String toString(int)>
<javax.net.ssl.HttpsURLConnection: java.security.cert.Certificate[] getServerCertificates()>
<java.text.ChoiceFormat: void setChoices(double[],java.lang.String[])>
<ohos.data.resultset.AbsResultSet: void registerObserver(ohos.data.rdb.DataObserver)>
<java.util.Arrays: void parallelPrefix(java.lang.Object[],java.util.function.BinaryOperator)>
<ohos.agp.render.Shader.TileMode: int value()>
<ohos.agp.render.opengl.GLES20: void glGetShaderiv(int,int,java.nio.IntBuffer)>
<java.util.jar.Attributes: java.util.Set entrySet()>
<ohos.agp.utils.Rect: void fuse(ohos.agp.utils.Rect)>
<ohos.org.xml.sax.XMLReader: void setEntityResolver(ohos.org.xml.sax.EntityResolver)>
<java.time.LocalDateTime: java.time.LocalDateTime minusHours(long)>
<java.io.StreamCorruptedException: void <init>()>
<ohos.data.orm.OrmContext: boolean insert(ohos.data.orm.OrmObject)>
<ohos.rpc.RemoteObject: boolean addDeathRecipient(ohos.rpc.IRemoteObject.DeathRecipient,int)>
<java.nio.ShortBuffer: short get(int)>
<java.time.temporal.ChronoUnit: void <clinit>()>
<java.nio.channels.AsynchronousSocketChannel: void read(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)>
<ohos.data.search.schema.ContactItem: ohos.data.search.schema.ContactItem setGender(java.lang.String)>
<java.util.LinkedList: java.lang.Object peekFirst()>
<ohos.data.preferences.Preferences: long getLong(java.lang.String,long)>
<ohos.global.icu.text.CurrencyPluralInfo: ohos.global.icu.util.ULocale getLocale()>
<ohos.data.resultset.CombinedResultSet: short getShort(int)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream,java.lang.String)>
<ohos.aafwk.ability.Form: java.lang.String getBundleName()>
<java.util.LinkedList: java.lang.Object removeLast()>
<java.util.Scanner: void <init>(java.io.InputStream)>
<java.nio.channels.Selector: java.util.Set selectedKeys()>
<javax.lang.model.util.Types: boolean isSameType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>
<java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel setOption(java.net.SocketOption,java.lang.Object)>
<ohos.interwork.eventhandler.CourierEx: ohos.rpc.IRemoteObject getRemoteObject()>
<ohos.media.camera.device.Camera: ohos.media.camera.device.FrameConfig.Builder getFrameConfigBuilder(int)>
<ohos.media.common.StorageProperty: java.io.File getRecorderFile()>
<ohos.sysappcomponents.calendar.entity.Instances: void setDeleted(boolean)>
<java.util.Arrays: int hashCode(short[])>
<java.lang.Float: void <clinit>()>
<ohos.agp.components.ListContainer: boolean executeItemClick(ohos.agp.components.Component,int,long)>
<ohos.system.DeviceInfo: java.lang.String getLocaleLanguage()>
<ohos.agp.components.ListContainer.ItemSelectedListener: void onItemSelected(ohos.agp.components.ListContainer,ohos.agp.components.Component,int,long)>
<ohos.app.Context: int verifyPermission(java.lang.String,int,int)>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLOutputFactory newFactory(java.lang.String,java.lang.ClassLoader)>
<java.net.CookieManager: java.net.CookieStore getCookieStore()>
<ohos.agp.components.BaseItemProvider: void onItemMoved(int,int)>
<ohos.agp.render.Texture.ColorType: ohos.agp.render.Texture.ColorType valueOf(java.lang.String)>
<ohos.global.icu.util.HebrewCalendar: void <init>(java.util.Date)>
<java.lang.StrictMath: double tanh(double)>
<java.awt.font.TextAttribute: java.lang.Object readResolve()>
<java.io.CharArrayReader: boolean ready()>
<ohos.global.icu.text.DecimalFormat: void applyPattern(java.lang.String)>
<java.time.Clock: int hashCode()>
<java.nio.channels.spi.AsynchronousChannelProvider: java.nio.channels.AsynchronousChannelGroup openAsynchronousChannelGroup(int,java.util.concurrent.ThreadFactory)>
<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<ohos.agp.render.opengl.GLES2Ext: void glTexBufferEXT(int,int,int)>
<java.sql.SQLDataException: void <init>(java.lang.Throwable)>
<java.util.Collections: java.util.Map emptyMap()>
<java.util.concurrent.ForkJoinWorkerThread: void onStart()>
<java.time.Period: java.time.Period plusYears(long)>
<java.util.Scanner: java.util.Scanner useDelimiter(java.util.regex.Pattern)>
<java.util.concurrent.ExecutionException: void <init>(java.lang.String,java.lang.Throwable)>
<java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()>
<ohos.data.search.schema.NotepadItem: void <init>()>
<ohos.agp.transition.TransitionZoomingMove: void <init>(int)>
<java.util.zip.Inflater: int inflate(byte[],int,int)>
<java.time.LocalDate: java.time.DayOfWeek getDayOfWeek()>
<java.util.stream.Stream.Builder: java.util.stream.Stream build()>
<ohos.agp.components.Component: void setComponentPosition(int,int,int,int)>
<ohos.media.player.Player.StreamInfo: ohos.media.common.Format getStreamFormat()>
<ohos.data.rdb.AbsRdbPredicates: java.lang.String getTableName()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getTablePrivileges(java.lang.String,java.lang.String,java.lang.String)>
<java.util.TreeMap: void forEach(java.util.function.BiConsumer)>
<ohos.data.distributed.common.KvManager: java.util.List getAllKvStoreId()>
<ohos.utils.PlainArray: int size()>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitPrimitiveAsShort(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<javax.crypto.KeyAgreementSpi: void <init>()>
<ohos.agp.components.Text.TruncationMode: void <clinit>()>
<ohos.agp.render.render3d.math.Matrix4x4: boolean invert(ohos.agp.render.render3d.math.Matrix4x4,ohos.agp.render.render3d.math.Matrix4x4)>
<ohos.agp.components.DatePicker: ohos.agp.components.DatePicker.ValueChangedListener getValueChangedListener()>
<ohos.bundle.CommonEventInfo: void <init>()>
<ohos.agp.render.Paint.StrokeCap: void <clinit>()>
<ohos.media.audio.AudioManager: boolean isDeviceActive(int)>
<java.lang.Character: java.lang.String getName(int)>
<java.util.Arrays: int binarySearch(float[],int,int,float)>
<ohos.agp.transition.TransitionScheduler: void setTransitionEndListener(ohos.agp.transition.TransitionScheduler.ITransitionEndListener)>
<ohos.agp.utils.Rect: boolean isInclude(ohos.agp.utils.Rect)>
<java.io.PushbackInputStream: long skip(long)>
<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>
<java.net.InterfaceAddress: int hashCode()>
<java.text.BreakIterator: java.text.BreakIterator getLineInstance()>
<ohos.global.i18n.utils.CalendarUtils: java.lang.String getCalendarName(ohos.global.icu.util.Calendar,java.util.Locale)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.Object cloneAsThawed()>
<java.security.spec.PSSParameterSpec: void <clinit>()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet retainAll(ohos.global.icu.text.UnicodeSet)>
<ohos.global.icu.text.Collator: int compare(java.lang.String,java.lang.String)>
<ohos.global.icu.util.BuddhistCalendar: void <init>(int,int,int,int,int,int)>
<ohos.javax.xml.validation.Schema: ohos.javax.xml.validation.Validator newValidator()>
<ohos.sysappcomponents.calendar.entity.Accounts: void setAccTimezone(java.lang.String)>
<ohos.telephony.SimInfoManager: java.lang.String getSimOperatorNumeric(int)>
<java.net.HttpCookie: java.lang.Object clone()>
<ohos.net.ConnectionProperties: java.util.List getDnsServers()>
<ohos.event.commonevent.CommonEventData: void setCode(int)>
<java.util.Locale: java.lang.String getScript()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThanOrEqualTo(java.lang.String,java.sql.Timestamp)>
<ohos.multimodalinput.event.TouchEvent: int getIndex()>
<ohos.global.icu.util.Calendar: int handleComputeJulianDay(int)>
<ohos.wifi.IpInfo: int getLeaseDuration()>
<ohos.event.notification.NotificationSlotGroup: boolean unmarshalling(ohos.utils.Parcel)>
<java.text.MessageFormat: boolean equals(java.lang.Object)>
<ohos.global.icu.util.Calendar: void setMinimalDaysInFirstWeek(int)>
<ohos.agp.components.Slider: void setAdjustButtons(ohos.agp.components.element.Element,ohos.agp.components.Component.ClickedListener,ohos.agp.components.element.Element,ohos.agp.components.Component.ClickedListener)>
<ohos.global.icu.util.TaiwanCalendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<ohos.global.icu.util.TimeZone: void setID(java.lang.String)>
<java.time.Period: int getMonths()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValue(java.time.temporal.TemporalField,int)>
<java.util.Locale: boolean equals(java.lang.Object)>
<java.security.SecureRandom: java.security.SecureRandom getInstanceStrong()>
<java.util.Locale.Builder: java.util.Locale.Builder clearExtensions()>
<ohos.agp.render.opengl.GLES2Ext: void glDebugMessageControlKHR(int,int,int,int,int[],boolean)>
<java.io.Writer: void write(char[])>
<java.util.concurrent.ConcurrentMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>
<ohos.agp.render.render3d.SceneNode: java.util.List lookupNodesByComponent(java.lang.Class)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getTypeInfo()>
<javax.security.auth.Subject: int hashCode()>
<java.net.URL: java.lang.String toString()>
<ohos.event.notification.NotificationSlot: java.lang.String getSlotGroup()>
<java.sql.Array: java.sql.ResultSet getResultSet(long,int)>
<java.time.OffsetDateTime: java.time.OffsetDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
<ohos.wifi.WifiLinkedInfo.ConnState: ohos.wifi.WifiLinkedInfo.ConnState valueOf(java.lang.String)>
<ohos.data.distributed.common.FieldValueType: void <clinit>()>
<ohos.bundle.LauncherService: void registerCallback(ohos.bundle.LauncherService.BundleStatusCallback)>
<java.sql.CallableStatement: void setAsciiStream(java.lang.String,java.io.InputStream)>
<java.text.Collator: void setDecomposition(int)>
<java.util.SplittableRandom: java.util.stream.LongStream longs(long,long,long)>
<ohos.agp.render.RadialShader: void <init>(ohos.agp.utils.Point,float,float[],ohos.agp.utils.Color[],ohos.agp.render.Shader.TileMode)>
<ohos.media.audio.SoundEffect.SoundEffectInfo: void setName(java.lang.String)>
<java.time.OffsetTime: java.lang.String toString()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenRunAsync(java.lang.Runnable,java.util.concurrent.Executor)>
<ohos.aafwk.ability.fraction.FractionAbility: ohos.aafwk.ability.fraction.FractionManager getFractionManager()>
<ohos.media.audio.SoundPlayer: void <init>()>
<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeQ()>
<ohos.global.icu.text.UnicodeSet: boolean containsNone(ohos.global.icu.text.UnicodeSet)>
<ohos.bundle.IBundleManager: void enableHomeShortcuts(java.util.List)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty alphaFrom(float)>
<ohos.agp.components.SearchBar: ohos.agp.components.Image getSearchButton()>
<ohos.global.icu.text.DateFormat.Field: int getCalendarField()>
<ohos.net.DataFlowStatistics: void setDataFlowTag(int)>
<ohos.utils.PacMap: short[] getShortValueArray(java.lang.String)>
<ohos.agp.components.element.VectorElement: void <init>(ohos.app.Context,int)>
<ohos.vibrator.bean.VibrationPattern: void setCount(int)>
<ohos.media.extractor.Extractor: int readBuffer(java.nio.ByteBuffer,int)>
<java.io.RandomAccessFile: int readUnsignedByte()>
<java.util.Optional: java.lang.Object orElseGet(java.util.function.Supplier)>
<java.nio.DoubleBuffer: boolean isDirect()>
<ohos.agp.components.Component.ScaledListener: void onScaleStart(ohos.agp.components.Component,ohos.agp.components.ScaleInfo)>
<java.util.SplittableRandom: double nextDouble(double,double)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: void forEach(java.util.function.Consumer)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: void <init>()>
<java.util.prefs.Preferences: void clear()>
<ohos.agp.render.opengl.GLES2Ext: void glBlendFunciEXT(int,int,int)>
<java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel bind(java.net.SocketAddress,int)>
<ohos.agp.components.AttrHelper: void <init>()>
<ohos.global.icu.text.Normalizer2: ohos.global.icu.text.Normalizer2 getNFCInstance()>
<ohos.utils.Parcel: int getWritePosition()>
<javax.tools.JavaFileManager: boolean handleOption(java.lang.String,java.util.Iterator)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThan(java.lang.String,java.lang.String)>
<java.lang.Integer: java.lang.String toUnsignedString(int)>
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLSessionContext engineGetServerSessionContext()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query lessThan(java.lang.String,int)>
<ohos.distributedschedule.interwork.DeviceInfo: java.lang.String getDeviceName()>
<ohos.rpc.ReliableFileDescriptor: int getNativeFd()>
<java.nio.file.attribute.UserDefinedFileAttributeView: void delete(java.lang.String)>
<java.text.DateFormat: void <init>()>
<ohos.agp.components.Component.VoiceEvent: java.util.List getBadge()>
<java.time.format.DecimalStyle: java.util.Set getAvailableLocales()>
<ohos.agp.components.ListContainer: int getChildCount()>
<ohos.agp.render.opengl.GLES20: int glCreateProgram()>
<ohos.utils.LightweightSet: java.lang.Object valueAt(int,java.lang.Object)>
<ohos.global.icu.text.BreakIterator: int previous()>
<ohos.miscservices.inputmethod.EditingText: int getSelectionEnd()>
<ohos.event.notification.NotificationSorting: ohos.event.notification.NotificationSlot getSlot()>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter.Style getFormatStyle()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: java.lang.String getTitle()>
<ohos.global.icu.text.MessagePattern: java.lang.String toString()>
<java.time.LocalDateTime: java.time.chrono.ChronoLocalDate toLocalDate()>
<java.sql.DatabaseMetaData: boolean supportsSchemasInDataManipulation()>
<ohos.media.audio.AudioInterrupt.InterruptListener: void onInterrupt(int,int)>
<ohos.agp.components.ComponentContainer: void removeAllComponents()>
<ohos.agp.components.DatePicker: void setShaderColor(ohos.agp.utils.Color)>
<ohos.utils.net.Uri: int getPort()>
<java.util.concurrent.TimeoutException: void <init>()>
<java.nio.channels.DatagramChannel: boolean isConnected()>
<java.util.PropertyResourceBundle: java.util.Enumeration getKeys()>
<java.util.IllformedLocaleException: void <init>()>
<ohos.bundle.BackupBundleInfo: boolean equals(java.lang.Object)>
<java.net.URLStreamHandlerFactory: java.net.URLStreamHandler createURLStreamHandler(java.lang.String)>
<java.sql.ResultSet: java.sql.Ref getRef(java.lang.String)>
<java.util.concurrent.CyclicBarrier: int getParties()>
<java.util.concurrent.ThreadPoolExecutor: int getActiveCount()>
<ohos.telephony.WcdmaSignalInformation: int hashCode()>
<java.util.TreeMap: java.lang.Object floorKey(java.lang.Object)>
<ohos.agp.components.ComponentParent: void postLayout()>
<ohos.agp.components.ComponentContainer.LayoutConfig: int getMarginBottom()>
<ohos.aafwk.ability.delegation.IAbilityDelegatorArgs: java.lang.String getTestBundleName()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,java.util.Calendar)>
<ohos.agp.components.Component: void setScale(float,float)>
<ohos.sensor.listener.ISensorDataCallback: void onSensorDataModified(ohos.sensor.data.SensorData)>
<java.lang.Package: java.lang.String toString()>
<java.sql.DriverManager: java.io.PrintStream getLogStream()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean release(int)>
<ohos.net.ConnectionProperties: int hashCode()>
<ohos.sensor.agent.SensorAgent: int runCommand(int,int,int)>
<ohos.thermallistener.ThermalConnection: void thermalStatusChanged(ohos.thermallistener.ThermalConnection.ThermalSeverityLevel)>
<ohos.app.AbilityContext: int[] getIntArray(int)>
<java.time.chrono.ChronoLocalDateTime: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty setCurveType(int)>
<ohos.media.common.AVMetadata.Builder: ohos.media.common.AVMetadata.Builder setPixelMap(java.lang.String,ohos.media.image.PixelMap)>
<java.lang.Byte: byte parseByte(java.lang.String,int)>
<ohos.global.icu.util.Calendar: int getGreatestMinimum(int)>
<ohos.bundle.BundleInfo: boolean marshalling(ohos.utils.Parcel)>
<javax.security.auth.x500.X500Principal: void <init>(byte[])>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object accumulateAndGet(java.lang.Object,java.lang.Object,java.util.function.BinaryOperator)>
<java.security.KeyStore: java.security.Provider getProvider()>
<ohos.utils.zson.ZSONArray: java.util.List toJavaList(java.lang.Class)>
<java.util.zip.CheckedOutputStream: void <init>(java.io.OutputStream,java.util.zip.Checksum)>
<java.util.concurrent.LinkedBlockingDeque: int size()>
<ohos.javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType dropParameterTypes(int,int)>
<ohos.net.RouteInfo: java.net.InetAddress getGateway()>
<ohos.security.keystore.KeyStoreProtectionParameter: int getSecKeyUsagePurposes()>
<ohos.utils.zson.ZSONWriter: void writeNumber(java.lang.Number)>
<ohos.agp.utils.Matrix: boolean invert(ohos.agp.utils.Matrix)>
<ohos.agp.components.DirectionalLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glTransformFeedbackVaryings(int,int,java.lang.String[],int)>
<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[],int,int)>
<ohos.agp.render.render3d.RenderLoop: void setVsyncCount(int)>
<java.time.ZonedDateTime: java.time.chrono.ChronoZonedDateTime minus(java.time.temporal.TemporalAmount)>
<ohos.media.sessioncore.AVSession: void enableAVSessionActive(boolean)>
<java.lang.ThreadGroup: void checkAccess()>
<ohos.agp.components.webengine.ResourceError: int getErrorCode()>
<ohos.data.usage.MountState: ohos.data.usage.MountState valueOf(java.lang.String)>
<ohos.global.icu.text.LocaleDisplayNames: ohos.global.icu.text.LocaleDisplayNames getInstance(java.util.Locale)>
<ohos.agp.render.Paint.Join: void <clinit>()>
<ohos.aafwk.content.Intent: short getShortParam(java.lang.String,short)>
<ohos.bluetooth.ble.BlePeripheralCallback: void characteristicChangedEvent(ohos.bluetooth.ble.GattCharacteristic)>
<ohos.global.icu.text.TimeZoneNames.NameType: void <clinit>()>
<ohos.sensor.agent.CategoryOrientationAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryOrientationDataCallback,ohos.sensor.bean.CategoryOrientation)>
<ohos.utils.net.Uri: java.lang.String toString()>
<ohos.global.i18n.text.DateFormatUtil: boolean is24HourClock(ohos.app.Context)>
<ohos.org.xml.sax.XMLReader: void parse(java.lang.String)>
<ohos.media.image.common.MemoryUsagePreference: ohos.media.image.common.MemoryUsagePreference[] values()>
<ohos.bundle.HapModuleInfo: java.lang.String getName()>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.text.MeasureFormat getCurrencyFormat(ohos.global.icu.util.ULocale)>
<java.sql.DatabaseMetaData: boolean storesLowerCaseQuotedIdentifiers()>
<ohos.bluetooth.ble.BlePeripheralCallback: void descriptorReadEvent(ohos.bluetooth.ble.GattDescriptor,int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates contains(java.lang.String,java.lang.String)>
<ohos.aafwk.ability.Ability: void continueAbilityReversibly(java.lang.String)>
<java.sql.Driver: java.sql.Connection connect(java.lang.String,java.util.Properties)>
<javax.net.ssl.X509KeyManager: java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)>
<java.security.cert.CertPathValidatorException: void <init>(java.lang.Throwable)>
<ohos.agp.render.opengl.GLES1X: void glPointSizex(int)>
<ohos.hiviewdfx.Debug: int getProcessPssSum()>
<ohos.net.LinkAddress: int getPrefixLength()>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles.Lookup lookup()>
<ohos.agp.components.SearchBar: ohos.agp.components.SearchBar.QueryListener getQueryListener()>
<ohos.miscservices.pasteboard.PasteData: ohos.miscservices.pasteboard.PasteData creatIntentData(ohos.aafwk.content.Intent)>
<ohos.agp.colors.HslColor: void setLightness(float)>
<javax.security.auth.DestroyFailedException: void <init>()>
<java.lang.Integer: int compareTo(java.lang.Integer)>
<javax.net.ssl.SSLEngineResult.Status: javax.net.ssl.SSLEngineResult.Status[] values()>
<ohos.rpc.IRemoteObject: boolean removeDeathRecipient(ohos.rpc.IRemoteObject.DeathRecipient,int)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withChronology(java.time.chrono.Chronology)>
<ohos.security.permission.NeedsPermission: boolean partial()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,byte)>
<java.net.SocketImpl: void shutdownInput()>
<ohos.global.i18n.phonenumbers.InputFormatter: java.lang.String inputNumber(char)>
<java.nio.channels.AsynchronousFileChannel: java.nio.channels.FileLock tryLock(long,long,boolean)>
<ohos.event.notification.MessageUser: java.lang.String getUri()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet fromAll(java.lang.CharSequence)>
<ohos.global.resource.Element: ohos.global.resource.solidxml.Pattern getPattern()>
<ohos.rpc.ReliableFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<ohos.location.Location: void setTimeSinceBoot(long)>
<ohos.agp.window.dialog.PopupDialog: void onShow()>
<java.lang.Package: java.lang.Package[] getPackages()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>
<ohos.utils.zson.ZSONArray: void add(int,java.lang.Object)>
<java.io.FilterInputStream: boolean markSupported()>
<ohos.net.HttpResponseCache: void delete()>
<java.lang.reflect.Parameter: java.lang.reflect.Type getParameterizedType()>
<ohos.utils.LightweightSet: boolean equals(java.lang.Object)>
<ohos.global.icu.text.UnicodeSet: void <init>(ohos.global.icu.text.UnicodeSet)>
<java.time.chrono.ChronoLocalDateTime: boolean equals(java.lang.Object)>
<ohos.agp.components.ListContainer: void addComponent(ohos.agp.components.Component,int)>
<ohos.agp.render.PdfGenerator: void close()>
<ohos.location.GeoAddress: java.lang.String getPhoneNumber()>
<java.net.NetworkInterface: int hashCode()>
<ohos.agp.utils.Rect: void clear()>
<ohos.ai.asr.AsrIntent: void setVadEndWaitMs(int)>
<java.io.ObjectInputStream: float readFloat()>
<ohos.utils.net.UrlQueryFilter: java.util.Set getParamsSetFiltered()>
<javax.net.ssl.SSLContext: java.security.Provider getProvider()>
<ohos.utils.zson.ZSONArray: java.lang.Object[] toArray()>
<ohos.global.icu.text.MessagePattern: ohos.global.icu.text.MessagePattern.Part getPart(int)>
<java.sql.CallableStatement: java.io.Reader getCharacterStream(java.lang.String)>
<java.sql.CallableStatement: java.sql.Clob getClob(int)>
<java.net.URLConnection: java.lang.String toString()>
<java.io.ObjectStreamClass: java.lang.String toString()>
<ohos.agp.render.opengl.GLES1X: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean releaseShared(int)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean tryAcquireSharedNanos(long,long)>
<ohos.agp.components.webengine.LocationAccessController.Response: void apply(java.lang.String,boolean,boolean)>
<ohos.data.search.model.ChangedIndexContent: void <init>(java.util.List,java.util.List,java.util.List)>
<java.io.NotSerializableException: void <init>(java.lang.String)>
<javax.tools.ForwardingJavaFileManager: void close()>
<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>
<java.util.zip.ZipEntry: void setCompressedSize(long)>
<ohos.data.distributed.common.FieldNode: boolean setDefaultNull()>
<ohos.utils.net.UrlQueryFilter: void allowUnregisteredParameters(boolean)>
<java.util.Random: int next(int)>
<ohos.agp.render.opengl.GLES20: void glGenRenderbuffers(int,int[])>
<ohos.agp.components.IndexBar: ohos.agp.components.IndexBar.OnSelectedListener getSelectedCallback()>
<javax.sql.RowSet: void setNull(java.lang.String,int)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object element()>
<java.security.cert.PKIXParameters: void setAnyPolicyInhibited(boolean)>
<java.util.zip.Deflater: int deflate(byte[],int,int)>
<java.sql.ResultSet: java.sql.Clob getClob(int)>
<ohos.global.icu.text.SimpleDateFormat: void <init>(java.lang.String,ohos.global.icu.util.ULocale)>
<java.io.ObjectInputStream.GetField: int get(java.lang.String,int)>
<ohos.data.orm.Clob: boolean equals(java.lang.Object)>
<ohos.org.xml.sax.InputSource: java.io.InputStream getByteStream()>
<ohos.media.photokit.metadata.AVMetadataHelper: ohos.media.image.PixelMap fetchVideoPixelMapByTime(long)>
<ohos.system.OsHelperConstants: void <clinit>()>
<ohos.data.orm.AllChangeToTarget: java.util.List getUpdatedList()>
<ohos.sensor.bean.SensorBase: int getVersion()>
<java.io.DataInputStream: int read(byte[])>
<java.math.BigDecimal: java.math.BigDecimal min(java.math.BigDecimal)>
<java.lang.StrictMath: double floor(double)>
<ohos.agp.render.render3d.components.SceneComponent: void setEnvironmentRotation(ohos.agp.render.render3d.math.Quaternion)>
<java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>
<ohos.media.player.Player: boolean setAudioPitch(float)>
<ohos.global.i18n.LocaleHelperUtils: java.lang.String getCountryName(java.util.Locale,java.util.Locale)>
<ohos.utils.Scope: ohos.utils.Scope create(java.lang.Comparable,java.lang.Comparable)>
<ohos.media.camera.device.FrameConfig: int getFrameConfigType()>
<java.time.OffsetTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>
<java.sql.ResultSet: java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar)>
<java.util.concurrent.LinkedTransferQueue: void <init>(java.util.Collection)>
<ohos.aafwk.ability.AbilitySlice: void releaseAbilityForm(ohos.aafwk.ability.AbilityForm)>
<ohos.agp.render.opengl.GLES30: void glDeleteQueries(int,java.nio.IntBuffer)>
<ohos.agp.graphics.Surface: boolean showRawImage(byte[],ohos.agp.graphics.Surface.PixelFormat,int,int)>
<java.nio.channels.SelectableChannel: java.lang.Object blockingLock()>
<java.nio.channels.AsynchronousServerSocketChannel: java.util.concurrent.Future accept()>
<java.util.Locale: java.util.Locale getDefault(java.util.Locale.Category)>
<ohos.media.photokit.MediaLibrary: void <init>(ohos.app.Context)>
<java.math.BigDecimal: void <clinit>()>
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asCollector(java.lang.Class,int)>
<ohos.data.search.schema.PhotoItem: java.lang.String getOcrText()>
<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer)>
<java.util.logging.LogManager: void checkAccess()>
<ohos.net.NetSpecifier: boolean equals(java.lang.Object)>
<javax.lang.model.util.SimpleElementVisitor6: java.lang.Object visitExecutable(javax.lang.model.element.ExecutableElement,java.lang.Object)>
<java.sql.CallableStatement: java.sql.Time getTime(java.lang.String,java.util.Calendar)>
<ohos.accessibility.ability.AccessibilityWindow: boolean isActive()>
<java.security.cert.X509Certificate: java.lang.String getSigAlgOID()>
<java.security.spec.X509EncodedKeySpec: java.lang.String getFormat()>
<ohos.utils.LightweightSet: boolean contains(java.lang.Object)>
<ohos.global.i18n.phonenumbers.InputFormatter: int getPosition()>
<ohos.wifi.p2p.WifiP2pCallback: void eventP2pGroup(ohos.wifi.p2p.WifiP2pGroup)>
<ohos.aafwk.ability.DataAbilityOperation: ohos.aafwk.ability.DataAbilityOperation.Builder newDeleteBuilder(ohos.utils.net.Uri)>
<ohos.global.icu.util.Currency: java.lang.String getDisplayName()>
<ohos.agp.window.dialog.IDialog: void destroy()>
<ohos.media.image.common.PixelFormat: int getValue()>
<java.net.Authenticator: java.net.Authenticator.RequestorType getRequestorType()>
<ohos.agp.components.Component: boolean isClickable()>
<ohos.agp.render.opengl.GLES30: void glBindVertexArray(int)>
<java.time.Clock: java.time.Instant instant()>
<java.util.prefs.Preferences: void putInt(java.lang.String,int)>
<ohos.utils.BasePacMap: java.util.Optional getObjectValue(java.lang.String,java.lang.Class)>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource create(byte[],ohos.media.image.ImageSource.SourceOptions)>
<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
<javax.sql.ConnectionEventListener: void connectionClosed(javax.sql.ConnectionEvent)>
<java.io.ByteArrayInputStream: boolean markSupported()>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setAfTrigger(int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThan(java.lang.String,java.lang.String)>
<java.time.OffsetDateTime: java.time.OffsetDateTime minusMinutes(long)>
<ohos.agp.components.ListContainer: void setContentOffSet(int,int)>
<java.util.List: boolean remove(java.lang.Object)>
<ohos.utils.Parcel: boolean writeLongArray(long[])>
<ohos.aafwk.ability.fraction.FractionScheduler: ohos.aafwk.ability.fraction.FractionScheduler add(int,ohos.aafwk.ability.fraction.Fraction)>
<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>
<java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>
<ohos.aafwk.content.Intent: ohos.utils.geo.Rect getBordersRect()>
<ohos.storageinfomgr.StorageInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.SearchIterator: ohos.global.icu.text.BreakIterator getBreakIterator()>
<ohos.agp.components.ProgressBar: ohos.agp.components.element.Element getProgressElement()>
<ohos.agp.window.service.Window: int getStatusBarVisibility()>
<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>
<java.time.zone.ZoneOffsetTransitionRule.TimeDefinition: java.time.zone.ZoneOffsetTransitionRule.TimeDefinition[] values()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notBetween(java.lang.String,java.lang.String,java.lang.String)>
<ohos.eventhandler.EventHandler: boolean hasInnerEvent(int,java.lang.Object)>
<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp,java.util.Calendar)>
<ohos.org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>
<java.time.DayOfWeek: java.time.DayOfWeek plus(long)>
<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>
<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty scaleXFrom(float)>
<java.time.YearMonth: java.time.YearMonth parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
<java.util.concurrent.atomic.AtomicIntegerArray: int decrementAndGet(int)>
<ohos.powermanager.PowerManager: void <init>()>
<java.security.KeyManagementException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.aafwk.ability.FormState: ohos.aafwk.ability.FormState[] values()>
<ohos.miscservices.pasteboard.PasteData: void <init>()>
<ohos.data.resultset.AbsSharedResultSet: void closeBlock()>
<java.util.Queue: java.lang.Object element()>
<java.time.ZonedDateTime: java.time.ZonedDateTime minusMinutes(long)>
<ohos.media.audio.AudioCapturer: void setFrameIntervalObserver(ohos.media.audio.FrameIntervalObserver,int,ohos.eventhandler.EventHandler)>
<java.nio.channels.DatagramChannel: long read(java.nio.ByteBuffer[])>
<ohos.agp.render.Canvas: void getMatrix(ohos.agp.utils.Matrix)>
<ohos.global.icu.text.BidiRun: java.lang.String toString()>
<javax.net.ssl.SSLSocket: void <init>(java.lang.String,int,java.net.InetAddress,int)>
<ohos.ai.cv.text.TextConfiguration.TextShape: int getShapeType()>
<java.util.UUID: java.util.UUID fromString(java.lang.String)>
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream,boolean)>
<ohos.usb.USBCore: java.util.HashMap getDevices()>
<ohos.agp.utils.Rect: void sort()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getTimeInstance(int,java.util.Locale)>
<java.util.logging.Logger: java.lang.String getResourceBundleName()>
<java.io.DataOutput: void writeLong(long)>
<java.sql.DatabaseMetaData: java.lang.String getCatalogSeparator()>
<ohos.data.rdb.RdbStore.ConflictResolution: void <clinit>()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<java.security.cert.X509CRLSelector: void addIssuerName(java.lang.String)>
<ohos.accessibility.ability.AccessibilityWindow: java.lang.CharSequence getWindowTitle()>
<ohos.data.resultset.ResultSetWrapper: boolean goToPreviousRow()>
<java.io.FileInputStream: int read(byte[],int,int)>
<java.security.KeyStore.SecretKeyEntry: void <init>(javax.crypto.SecretKey,java.util.Set)>
<java.lang.StringBuffer: java.lang.String toString()>
<java.util.Set: int size()>
<java.util.zip.InflaterInputStream: int available()>
<java.net.HttpCookie: boolean equals(java.lang.Object)>
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLSessionContext engineGetClientSessionContext()>
<ohos.javax.xml.parsers.ParserConfigurationException: void <init>()>
<java.text.StringCharacterIterator: java.lang.Object clone()>
<ohos.agp.components.webengine.Navigator: boolean canGoBack()>
<ohos.media.tubecore.AVTubeEx: void setPlayMode(ohos.media.tubecore.AVTube.PlayMode)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal pow(ohos.global.icu.math.BigDecimal)>
<java.util.ResourceBundle.Control: java.util.List getFormats(java.lang.String)>
<ohos.global.icu.util.IslamicCalendar: void <init>(java.util.Date)>
<ohos.multimodalinput.event.MmiPoint: void <init>(float,float,float)>
<ohos.location.GeoAddress: void setSubLocality(java.lang.String)>
<ohos.nfc.NfcController.ReaderModeCallback: void onTagDiscovered(ohos.nfc.tag.TagInfo)>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setSlotId(java.lang.String)>
<ohos.agp.window.service.DisplayNotch: ohos.agp.utils.Rect getNotchRectRight()>
<java.util.concurrent.ForkJoinPool: void <init>(int)>
<java.security.Signer: void setKeyPair(java.security.KeyPair)>
<ohos.workscheduler.WorkScheduler: boolean stopWork(ohos.workscheduler.WorkInfo)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate dateEpochDay(long)>
<ohos.global.icu.util.IslamicCalendar: int handleGetYearLength(int)>
<ohos.global.icu.text.ConstrainedFieldPosition: void setInt64IterationContext(long)>
<ohos.global.i18n.text.DateFormatUtil: java.lang.String[] getShortMonthNames(java.util.Locale)>
<java.util.Calendar: void set(int,int,int,int,int,int)>
<ohos.bluetooth.ble.BleScanResult: boolean marshalling(ohos.utils.Parcel)>
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
<java.text.StringCharacterIterator: int hashCode()>
<ohos.accessibility.ability.AccessibilityInfo: void setEditable(boolean)>
<java.util.SortedSet: java.util.SortedSet headSet(java.lang.Object)>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)>
<ohos.global.icu.text.UCharacterIterator: ohos.global.icu.text.UCharacterIterator getInstance(java.lang.String)>
<java.security.AccessControlException: void <init>(java.lang.String,java.security.Permission)>
<ohos.agp.animation.Animator: void cancel()>
<ohos.media.common.Format: float getFloatValue(java.lang.String)>
<java.time.LocalDateTime: boolean isBefore(java.time.chrono.ChronoLocalDateTime)>
<java.time.chrono.Chronology: java.lang.String getId()>
<java.util.stream.Stream: java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)>
<ohos.agp.components.Text: ohos.agp.text.Font getFont()>
<ohos.agp.components.Text: void setBubbleWidth(int)>
<ohos.media.camera.device.CameraAbility: java.util.List getSupportedParameters()>
<java.text.Bidi: boolean isLeftToRight()>
<java.util.concurrent.ThreadPoolExecutor: java.util.List shutdownNow()>
<ohos.utils.CommonPattern: void <init>()>
<java.net.ProxySelector: void setDefault(java.net.ProxySelector)>
<ohos.global.icu.text.PluralFormat: void <init>(ohos.global.icu.text.PluralRules,java.lang.String)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent addFlags(int)>
<java.util.ServiceConfigurationError: void <init>(java.lang.String)>
<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
<java.util.concurrent.ThreadPoolExecutor: boolean remove(java.lang.Runnable)>
<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>
<ohos.agp.utils.Rect: boolean isEmpty()>
<java.time.temporal.WeekFields: java.time.DayOfWeek getFirstDayOfWeek()>
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getPercentInstance(java.util.Locale)>
<ohos.agp.utils.Rect: void setPivotXCoordinate(int)>
<ohos.system.OsHelper: int setProcessOption(int,long,long,long,long)>
<java.util.Deque: java.lang.Object pollFirst()>
<java.sql.PreparedStatement: void setTime(int,java.sql.Time)>
<javax.crypto.ExemptionMechanism: void <init>(javax.crypto.ExemptionMechanismSpi,java.security.Provider,java.lang.String)>
<ohos.event.notification.NotificationRequest: boolean isUnremovable()>
<javax.net.ssl.SNIServerName: void <init>(int,byte[])>
<java.security.cert.Certificate: void verify(java.security.PublicKey)>
<ohos.utils.Parcel: java.lang.Object readValue()>
<ohos.agp.components.SearchBar.QueryListener: boolean onQueryChanged(java.lang.String)>
<ohos.accessibility.ability.AccessibilityInfo: void setPluralLineSupported(boolean)>
<java.lang.ThreadGroup: void setDaemon(boolean)>
<java.lang.String: void <init>(byte[],java.lang.String)>
<ohos.miscservices.inputmethodability.InputMethodAbility: ohos.miscservices.inputmethodability.KeyboardDelegate onCreateKeyboardInterface()>
<java.util.stream.LongStream: java.util.stream.DoubleStream asDoubleStream()>
<ohos.powermanager.PowerManager.PowerState: void <clinit>()>
<ohos.agp.components.ComponentHolder: void hide()>
<ohos.media.player.Player: boolean isNowPlaying()>
<ohos.bundle.IBundleManager: java.util.List getShortcutInfos(java.lang.String)>
<java.util.Spliterators.AbstractLongSpliterator: void <init>(long,int)>
<java.security.KeyStore.Builder: java.security.KeyStore.Builder newInstance(java.lang.String,java.security.Provider,java.io.File,java.security.KeyStore.ProtectionParameter)>
<ohos.utils.geo.Rect: void setPivot(int,int)>
<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>
<ohos.miscservices.pasteboard.PasteData: void addIntentRecord(ohos.aafwk.content.Intent)>
<java.sql.PreparedStatement: void setClob(int,java.sql.Clob)>
<ohos.utils.zson.ZSONObject: double getDoubleValue(java.lang.String)>
<ohos.wifi.WifiDeviceConfig: boolean isHiddenSsid()>
<ohos.agp.components.element.Element: void setBounds(ohos.agp.utils.Rect)>
<java.time.LocalDate: java.time.LocalDate withMonth(int)>
<ohos.media.image.common.DecodeEvent: ohos.media.image.common.DecodeEvent[] values()>
<ohos.aafwk.ability.Ability: ohos.agp.components.Component getCurrentFocus()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasWaiters(java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject)>
<javax.tools.JavaCompiler.CompilationTask: java.lang.Boolean call()>
<ohos.data.async.DataAbilityAsyncHandler: void <init>(ohos.app.Context,ohos.utils.net.Uri)>
<ohos.global.icu.text.DateTimePatternGenerator.DisplayWidth: ohos.global.icu.text.DateTimePatternGenerator.DisplayWidth valueOf(java.lang.String)>
<ohos.agp.render.MaskFilter.Blur: ohos.agp.render.MaskFilter.Blur[] values()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet applyPropertyAlias(java.lang.String,java.lang.String)>
<ohos.usb.USBDevicePipe: boolean claimInterface(ohos.usb.USBInterface,boolean)>
<java.lang.Float: boolean isNaN()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getClientSessionContext()>
<ohos.ai.cv.common.CvPoint: boolean equals(java.lang.Object)>
<java.security.PolicySpi: boolean engineImplies(java.security.ProtectionDomain,java.security.Permission)>
<ohos.agp.text.Font.Builder: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glTexParameterf(int,int,float)>
<ohos.agp.components.Clock: java.lang.CharSequence getFormatIn24HourMode()>
<ohos.agp.render.render3d.components.RenderMeshComponent: boolean isCastShadowsEnabled()>
<java.sql.SQLDataException: void <init>(java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES32: int glGetGraphicsResetStatus()>
<ohos.global.icu.text.Collator: ohos.global.icu.util.ULocale[] getAvailableULocales()>
<java.util.Calendar: boolean before(java.lang.Object)>
<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>
<java.lang.Runtime: int availableProcessors()>
<ohos.agp.components.Clock: void setFormatIn24HourMode(java.lang.CharSequence)>
<java.time.LocalTime: java.time.LocalTime minusSeconds(long)>
<java.time.Period: boolean isNegative()>
<ohos.data.distributed.device.DeviceStatus: ohos.data.distributed.device.DeviceStatus[] values()>
<java.nio.CharBuffer: java.nio.CharBuffer put(int,char)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char[],int,int)>
<ohos.bundle.AbilityInfo: int getDefaultFormWidth()>
<ohos.net.NetCapabilities: void <init>(ohos.net.NetCapabilities)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query greaterThanOrEqualTo(java.lang.String,int)>
<ohos.aafwk.content.IntentParams: void setParam(java.lang.String,java.lang.Object)>
<ohos.utils.PacMap: void putObjectValue(java.lang.String,java.lang.Object)>
<java.time.ZonedDateTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<javax.net.ssl.SSLSession: long getLastAccessedTime()>
<ohos.system.OsHelper: int getUID()>
<java.net.URLDecoder: void <init>()>
<ohos.agp.render.ThreeDimView: void rotateX(float)>
<java.nio.channels.SelectionKey: int interestOps()>
<ohos.workscheduler.WorkScheduler: boolean stopAndClearWorks()>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getLineInstance()>
<ohos.event.notification.NotificationConstant.InputsSource: ohos.event.notification.NotificationConstant.InputsSource valueOf(java.lang.String)>
<java.util.stream.DoubleStream: java.util.stream.Stream boxed()>
<ohos.rpc.MessageParcel: boolean writeRawData(byte[],int)>
<java.time.ZonedDateTime: java.time.ZonedDateTime minusHours(long)>
<ohos.event.notification.NotificationRequest: ohos.aafwk.content.IntentParams getAdditionalData()>
<ohos.media.extractor.Extractor: long getFrameTimestamp()>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitPrimitiveAsChar(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<ohos.agp.render.render3d.util.SceneUtil: java.util.List rayCast(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<ohos.media.audio.SoundPlayer: boolean createSound(ohos.media.audio.ToneDescriptor.ToneType,int)>
<java.util.jar.JarException: void <init>(java.lang.String)>
<java.lang.String: void <clinit>()>
<java.nio.file.WatchService: void close()>
<java.util.regex.Matcher: int groupCount()>
<ohos.javax.xml.stream.XMLInputFactory: void setProperty(java.lang.String,java.lang.Object)>
<java.time.LocalDate: java.time.LocalDate minusWeeks(long)>
<ohos.sysappcomponents.contact.entity.NickName: void setNickName(java.lang.String)>
<java.util.concurrent.atomic.AtomicLong: long getAndSet(long)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,float[])>
<java.util.AbstractMap.SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>
<ohos.global.icu.lang.UScript: boolean isCased(int)>
<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>
<ohos.app.AbilityContext: ohos.global.resource.solidxml.Pattern getPattern()>
<ohos.global.icu.util.Calendar: java.lang.String[] getKeywordValuesForLocale(java.lang.String,ohos.global.icu.util.ULocale,boolean)>
<java.text.Normalizer: boolean isNormalized(java.lang.CharSequence,java.text.Normalizer.Form)>
<ohos.event.notification.NotificationSlotGroup: java.lang.String getName()>
<java.util.concurrent.atomic.AtomicIntegerArray: int addAndGet(int,int)>
<java.lang.Enum: int compareTo(java.lang.Object)>
<ohos.agp.components.PageFlipper: void removeAllComponents()>
<ohos.agp.components.TableLayout.Specification: int getMaxSpan()>
<java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)>
<java.util.concurrent.DelayQueue: boolean add(java.util.concurrent.Delayed)>
<ohos.agp.render.opengl.GLES20: void glPixelStorei(int,int)>
<ohos.data.orm.AllChangeToTarget: void addToDeletedList(ohos.data.orm.OrmObject)>
<java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory: java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool)>
<java.lang.Character: int getNumericValue(char)>
<ohos.agp.components.element.PixelMapElement: void <init>(ohos.global.resource.Resource)>
<ohos.media.image.ImageSource: boolean updateData(byte[],int,int,boolean)>
<java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)>
<java.sql.SQLFeatureNotSupportedException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.io.LineNumberInputStream: int read(byte[],int,int)>
<java.net.SocketImpl: java.io.InputStream getInputStream()>
<ohos.sensor.data.CategoryEnvironmentData: float getDeviceAltitude(float,float)>
<ohos.global.icu.text.Transliterator: void finishTransliteration(ohos.global.icu.text.Replaceable,ohos.global.icu.text.Transliterator.Position)>
<java.lang.Integer: int remainderUnsigned(int,int)>
<ohos.agp.render.render3d.resources.AnimationPlayback: void release()>
<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>
<javax.sql.StatementEvent: void <init>(javax.sql.PooledConnection,java.sql.PreparedStatement)>
<ohos.agp.render.opengl.GLES2Ext: void glPatchParameteriEXT(int,int)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>
<java.util.concurrent.Executors: java.util.concurrent.Callable callable(java.security.PrivilegedAction)>
<ohos.agp.components.DatePicker: boolean isYearFixed()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query equalTo(java.lang.String,int)>
<ohos.global.resource.solidxml.TypedAttribute: java.lang.String getOriginalValue()>
<ohos.media.photokit.common.PixelMapConfigs: void <init>()>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitIntersection(javax.lang.model.type.IntersectionType,java.lang.Object)>
<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)>
<java.lang.reflect.Constructor: int getParameterCount()>
<ohos.media.audio.AudioManager: void <clinit>()>
<java.sql.ResultSet: short getShort(int)>
<ohos.data.search.schema.Schema: java.lang.String getPotentialAction()>
<ohos.media.photokit.metadata.AVStorage.Video.Media: ohos.utils.net.Uri fetchResource(java.lang.String)>
<ohos.aafwk.abilityjet.databinding.DataBinding: void setLifecycle(ohos.aafwk.ability.Lifecycle)>
<java.sql.Date: void <init>(int,int,int)>
<ohos.accessibility.ability.AccessibilityInfo: void setHinting(boolean)>
<java.lang.Short: java.lang.Short valueOf(java.lang.String)>
<java.util.concurrent.ConcurrentSkipListSet: java.lang.Object lower(java.lang.Object)>
<java.sql.DatabaseMetaData: int getMaxCursorNameLength()>
<java.sql.DatabaseMetaData: java.lang.String getIdentifierQuoteString()>
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>
<ohos.media.image.ImageSource.DecodingOptions: void <init>()>
<ohos.global.resource.Element: java.lang.String[] getStringArray()>
<java.time.zone.ZoneOffsetTransition: java.time.ZoneOffset getOffsetBefore()>
<ohos.telephony.NetworkState: boolean isCaActive()>
<javax.lang.model.type.TypeMirror: java.lang.String toString()>
<ohos.rpc.IPCSkeleton: void <init>()>
<ohos.media.audio.AudioManager: void unregisterAudioRendererCallback(ohos.media.audio.AudioRendererCallback)>
<ohos.app.Context: boolean isCredentialEncryptedStorage()>
<ohos.media.audio.AudioManager: void setRingerUri(ohos.app.Context,ohos.media.audio.AudioManager.RingtoneType,ohos.utils.net.Uri)>
<ohos.global.icu.text.UnicodeSetSpanner: ohos.global.icu.text.UnicodeSet getUnicodeSet()>
<ohos.hiviewdfx.HiChecker: void removeAllRules()>
<javax.sql.RowSet: void setReadOnly(boolean)>
<ohos.org.xml.sax.SAXException: java.lang.String getMessage()>
<java.sql.Time: java.sql.Time valueOf(java.lang.String)>
<ohos.agp.database.DataSetSubscriber: void onInvalidated()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayKeywordValue(java.lang.String,java.lang.String,ohos.global.icu.util.ULocale)>
<ohos.agp.render.render3d.components.SceneComponent: ohos.agp.render.render3d.resources.GpuResourceHandle getRadianceCubemap()>
<java.sql.DatabaseMetaData: boolean allTablesAreSelectable()>
<java.util.Date: void setSeconds(int)>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: void <init>(ohos.media.common.sessioncore.AVPlaybackState)>
<ohos.global.icu.text.Collator: ohos.global.icu.text.Collator getInstance(java.util.Locale)>
<ohos.data.search.SearchResult: int getRetCode()>
<java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>
<ohos.agp.render.Paint: float getRecommendedLineSpacing()>
<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<ohos.data.distributed.device.DeviceKvStore: ohos.data.distributed.common.KvStoreResultSet getResultSet(java.lang.String,java.lang.String)>
<java.lang.System: void gc()>
<java.lang.Boolean: int hashCode(boolean)>
<java.time.LocalDateTime: java.time.LocalDateTime withMonth(int)>
<ohos.data.orm.OrmObject: long getRowId()>
<ohos.media.audio.AudioDeviceDescriptor: java.lang.String getAddress()>
<ohos.wifi.WifiDeviceConfig: void setSecurityType(int)>
<java.nio.file.FileVisitor: java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)>
<ohos.ai.asr.AsrListener: void onEndOfSpeech()>
<java.io.LineNumberInputStream: void setLineNumber(int)>
<java.lang.StringBuffer: void trimToSize()>
<ohos.agp.utils.Rect: ohos.agp.utils.Point getPreciseCenter()>
<ohos.event.notification.NotificationHelper: java.lang.String getNotificationAgent()>
<ohos.global.icu.text.CollationKey: boolean equals(ohos.global.icu.text.CollationKey)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: long getArrivedTime()>
<ohos.agp.components.SearchBar: void setSubmitButton(int)>
<ohos.nfc.tag.TagManager: boolean connectTag()>
<ohos.data.resultset.ResultSetWrapper: boolean goToNextRow()>
<ohos.distributedschedule.interwork.DeviceInfo.DeviceState: ohos.distributedschedule.interwork.DeviceInfo.DeviceState[] values()>
<ohos.sysappcomponents.calendar.CalendarDataHelper.InstancesDataHelper: boolean release()>
<ohos.global.icu.util.LocaleData: java.lang.String getDelimiter(int)>
<ohos.global.icu.util.Calendar: ohos.global.icu.text.DateFormat handleGetDateFormat(java.lang.String,java.lang.String,java.util.Locale)>
<java.util.stream.Collectors: java.util.stream.Collector maxBy(java.util.Comparator)>
<ohos.sensor.agent.CategoryOrientationAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryOrientationDataCallback,ohos.sensor.bean.CategoryOrientation,long,long)>
<ohos.agp.components.Component: void setPressState(boolean)>
<java.time.LocalDate: int lengthOfYear()>
<ohos.miscservices.wallpaper.WallpaperController: void setWallpaper(java.io.InputStream,int)>
<java.time.OffsetDateTime: java.time.LocalTime toLocalTime()>
<java.security.DigestException: void <init>()>
<java.text.DateFormat: java.util.TimeZone getTimeZone()>
<java.text.DecimalFormat: java.lang.Object clone()>
<java.math.BigDecimal: int signum()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThan(java.lang.String,float)>
<ohos.utils.PlainBooleanArray: java.util.Optional removeAt(int)>
<ohos.bundle.AbilityInfo.AbilitySubType: ohos.bundle.AbilityInfo.AbilitySubType[] values()>
<ohos.utils.net.Uri: boolean hasFileDescriptor()>
<ohos.global.icu.text.DecimalFormat: ohos.global.icu.text.DecimalFormatSymbols getDecimalFormatSymbols()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notBetween(java.lang.String,java.sql.Timestamp,java.sql.Timestamp)>
<ohos.agp.components.webengine.CookieStore: void persist()>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<java.util.regex.Matcher: java.lang.String toString()>
<ohos.agp.components.Text: ohos.agp.components.element.Element getBottonElement()>
<ohos.agp.render.Paint.StrokeCap: ohos.agp.render.Paint.StrokeCap valueOf(java.lang.String)>
<ohos.data.distributed.common.SchemaMode: ohos.data.distributed.common.SchemaMode[] values()>
<java.util.concurrent.ForkJoinTask: boolean cancel(boolean)>
<ohos.media.common.StorageProperty.Builder: ohos.media.common.StorageProperty build()>
<java.util.logging.Logger: void finer(java.lang.String)>
<ohos.bundle.FormInfo: java.lang.String getAbilityName()>
<java.time.LocalDate: java.time.ZonedDateTime atStartOfDay(java.time.ZoneId)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,ohos.utils.Sequenceable)>
<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>
<ohos.agp.render.opengl.GLES20: void glFinish()>
<ohos.agp.colors.HsvColor: float getSaturation()>
<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>
<ohos.media.audio.AudioInterrupt: ohos.media.audio.AudioInterrupt.InterruptListener getInterruptListener()>
<java.sql.ResultSet: void updateBytes(int,byte[])>
<ohos.media.sessioncore.AVBrowserService: void setAVToken(ohos.media.common.sessioncore.AVToken)>
<java.lang.Class: boolean isInterface()>
<java.util.TreeMap: boolean containsValue(java.lang.Object)>
<ohos.data.resultset.TableResultSet: java.lang.String getString(int)>
<ohos.ace.ability.AceAbility: boolean onRestoreData(ohos.aafwk.content.IntentParams)>
<java.util.concurrent.CompletableFuture: boolean isCompletedExceptionally()>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>
<ohos.agp.components.PageFlipper: void removeComponents(int,int)>
<ohos.global.icu.text.DateFormat: java.lang.Object clone()>
<ohos.global.icu.text.UnicodeSetIterator: boolean next()>
<java.io.PrintWriter: void write(java.lang.String,int,int)>
<ohos.global.icu.util.Calendar: int weekNumber(int,int)>
<ohos.global.icu.util.HebrewCalendar: int handleGetMonthLength(int,int)>
<java.lang.Thread: void dumpStack()>
<java.util.Objects: boolean deepEquals(java.lang.Object,java.lang.Object)>
<ohos.agp.utils.Matrix: void setSkew(float,float)>
<ohos.utils.net.Uri: ohos.utils.net.Uri getUriFromParts(java.lang.String,java.lang.String,java.lang.String)>
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>
<ohos.media.image.SourceDataMalformedException: void <init>(java.lang.String)>
<ohos.utils.PacMap: void putStringArray(java.lang.String,java.lang.String[])>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThan(java.lang.String,double)>
<java.io.FilterReader: void <init>(java.io.Reader)>
<java.lang.Thread: int enumerate(java.lang.Thread[])>
<java.net.ServerSocket: void close()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThanOrEqualTo(java.lang.String,java.util.Date)>
<ohos.data.usage.Volume: boolean isEmulated()>
<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction unmappableCharacterAction()>
<java.util.ArrayList: java.lang.Object remove(int)>
<java.security.Provider: void replaceAll(java.util.function.BiFunction)>
<ohos.media.common.Format: double getDoubleValue(java.lang.String)>
<java.io.CharArrayWriter: void writeTo(java.io.Writer)>
<java.security.cert.PolicyNode: java.security.cert.PolicyNode getParent()>
<java.time.Instant: int getNano()>
<ohos.org.xml.sax.InputSource: void setEncoding(java.lang.String)>
<ohos.agp.utils.Rect.RotationEnum: ohos.agp.utils.Rect.RotationEnum getByInt(int)>
<ohos.javax.xml.namespace.QName: int hashCode()>
<ohos.utils.PersistablePacMap: boolean[] getBooleanValueArray(java.lang.String)>
<java.util.GregorianCalendar: void <init>(int,int,int,int,int)>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitNoTypeAsVoid(javax.lang.model.type.NoType,java.lang.Object)>
<ohos.nfc.tag.NdefMessage: boolean marshalling(ohos.utils.Parcel)>
<java.nio.file.spi.FileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>
<ohos.data.orm.OrmContext: java.lang.String getAlias()>
<ohos.media.audio.AudioRenderer: float getMinVolume()>
<ohos.telephony.TelephoneNumberUtils: java.lang.String removeSeparators(java.lang.String)>
<ohos.global.icu.util.TimeZone: java.lang.String getDisplayName(boolean,int,ohos.global.icu.util.ULocale)>
<java.nio.file.FileStore: java.lang.String name()>
<ohos.app.Context: ohos.app.ProcessInfo getProcessInfo()>
<java.util.prefs.Preferences: java.lang.String[] keys()>
<ohos.media.image.ImageSource: java.util.HashSet getSupportedFormats()>
<java.time.OffsetTime: java.time.OffsetTime plusMinutes(long)>
<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>
<ohos.telephony.TelephoneNumberUtils: java.lang.String extractNetworkAddressPortion(java.lang.String)>
<ohos.global.icu.util.ULocale: java.lang.String[] getISOLanguages()>
<ohos.org.xml.sax.SAXException: void <init>(java.lang.Exception)>
<java.lang.StrictMath: float nextAfter(float,double)>
<java.lang.Byte: byte parseByte(java.lang.String)>
<java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>
<ohos.miscservices.download.DownloadConfig.Builder: ohos.miscservices.download.DownloadConfig.Builder setDownloadRange(int,int)>
<java.util.stream.IntStream: java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)>
<ohos.global.i18n.phonenumbers.InputFormatter: void <init>()>
<java.security.Signer: java.security.PrivateKey getPrivateKey()>
<java.util.concurrent.RecursiveTask: java.lang.Object getRawResult()>
<ohos.net.HttpResponseCache: long getMaxSize()>
<ohos.agp.components.ComponentContainer: void addComponent(ohos.agp.components.Component)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getPatternForCurrencySpacing(int,boolean)>
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>
<ohos.aafwk.ability.continuation.ExtraParams: java.lang.String getTargetBundleName()>
<java.net.URL: java.net.URLConnection openConnection()>
<java.time.Period: java.time.Period negated()>
<java.nio.channels.SocketChannel: void <init>(java.nio.channels.spi.SelectorProvider)>
<ohos.data.rdb.RdbStore: void configLocale(java.util.Locale)>
<java.math.BigInteger: boolean isProbablePrime(int)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendLiteral(char)>
<ohos.aafwk.ability.AbilitySlice: void onInactive()>
<ohos.agp.render.render3d.resources.MaterialDesc: void setAlphaMode(ohos.agp.render.render3d.resources.MaterialDesc.MaterialAlphaMode)>
<java.util.Scanner: void <init>(java.io.File)>
<java.time.zone.ZoneOffsetTransition: long toEpochSecond()>
<java.time.chrono.ChronoPeriod: java.time.chrono.ChronoPeriod negated()>
<ohos.media.player.Player.IPlayerCallback: void onMediaTimeIncontinuity(ohos.media.player.Player.MediaTimeInfo)>
<java.util.concurrent.ArrayBlockingQueue: java.lang.Object peek()>
<ohos.ai.cv.docrefine.DocCoordinates: void setBottomLeft(ohos.ai.cv.common.CvPoint)>
<ohos.utils.Ashmem: long getAshmemIdentity()>
<ohos.agp.render.opengl.GLES2Ext: void glTexBufferRangeEXT(int,int,int,int,int)>
<ohos.agp.render.render3d.components.SkinComponent: void <init>()>
<java.util.zip.ZipFile: void <init>(java.lang.String)>
<ohos.data.DatabaseHelper: ohos.data.orm.OrmContext getOrmContext(java.lang.String)>
<ohos.global.icu.util.Calendar: int getMaximum(int)>
<ohos.org.xml.sax.helpers.DefaultHandler: void <init>()>
<java.time.Year: java.time.Year plusYears(long)>
<java.util.Vector: void add(int,java.lang.Object)>
<ohos.app.AbilityContext: java.lang.String getString(int,java.lang.Object[])>
<ohos.data.search.schema.Schema: java.lang.Object setKeywords(java.lang.String)>
<java.time.OffsetDateTime: int getDayOfMonth()>
<javax.tools.Diagnostic.Kind: javax.tools.Diagnostic.Kind valueOf(java.lang.String)>
<ohos.global.icu.text.SearchIterator.ElementComparisonType: ohos.global.icu.text.SearchIterator.ElementComparisonType valueOf(java.lang.String)>
<ohos.global.icu.text.CollationElementIterator: void setOffset(int)>
<ohos.agp.components.Attr: ohos.agp.utils.Color getColorValue()>
<ohos.data.resultset.SharedBlock: int getRowCount()>
<java.nio.BufferOverflowException: void <init>()>
<java.text.DateFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<java.util.logging.Logger: void <clinit>()>
<ohos.event.notification.IAdvancedNotificationManager: boolean areNotificationsSuspended(java.lang.String)>
<ohos.aafwk.ability.Ability: void startAbility(ohos.aafwk.content.Intent,ohos.aafwk.ability.startsetting.AbilityStartSetting)>
<ohos.bundle.IBundleManager: ohos.bundle.IBundleInstaller getBundleInstaller()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet complementAll(java.lang.CharSequence)>
<java.sql.ResultSet: void updateArray(int,java.sql.Array)>
<ohos.agp.render.render3d.math.Vector4: void <clinit>()>
<java.nio.file.FileAlreadyExistsException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.nio.file.InvalidPathException: void <init>(java.lang.String,java.lang.String,int)>
<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>
<ohos.telephony.NrSignalInformation: boolean equals(java.lang.Object)>
<ohos.accessibility.ability.AccessibilityWindow: ohos.accessibility.ability.AccessibilityWindow get()>
<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>
<ohos.agp.components.element.FlexElement: void setCenterBounds(ohos.agp.utils.Rect)>
<java.net.JarURLConnection: void <init>(java.net.URL)>
<ohos.aafwk.ability.continuation.ExtraParams: java.lang.String getDescription()>
<ohos.data.resultset.ResultSetWrapper: ohos.utils.PacMap getExtensions()>
<ohos.data.resultset.TableResultSet: void addRow(java.lang.Object[])>
<ohos.data.usage.DataUsage: boolean isSupported()>
<java.util.OptionalDouble: java.util.OptionalDouble empty()>
<java.util.stream.LongStream: java.util.Iterator iterator()>
<ohos.media.camera.device.FrameConfig: int getAfMode()>
<java.sql.DatabaseMetaData: boolean supportsCorrelatedSubqueries()>
<java.sql.SQLNonTransientConnectionException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<ohos.agp.components.element.Element: void release()>
<java.security.MessageDigestSpi: java.lang.Object clone()>
<java.util.Currency: java.lang.String getSymbol(java.util.Locale)>
<ohos.utils.geo.Rect: boolean getIntersectRect(ohos.utils.geo.Rect,ohos.utils.geo.Rect)>
<ohos.hiviewdfx.FaultLogger.FaultLogQueryResult: boolean hasNext()>
<java.io.StreamTokenizer: void quoteChar(int)>
<ohos.agp.utils.Rect: java.lang.String toString()>
<ohos.hiviewdfx.ResourceTag: void markInUse(java.lang.String)>
<java.lang.String: void <init>(byte[],int)>
<javax.lang.model.element.Element: java.util.List getEnclosedElements()>
<java.time.zone.ZoneRules: java.time.zone.ZoneOffsetTransition nextTransition(java.time.Instant)>
<ohos.data.distributed.device.DeviceInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.net.HttpURLConnection: void setFollowRedirects(boolean)>
<ohos.media.audio.AudioStreamInfo.AudioStreamFlag: ohos.media.audio.AudioStreamInfo.AudioStreamFlag[] values()>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.text.MeasureFormat getInstance(java.util.Locale,ohos.global.icu.text.MeasureFormat.FormatWidth,ohos.global.icu.text.NumberFormat)>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)>
<javax.tools.DiagnosticCollector: void report(javax.tools.Diagnostic)>
<ohos.wifi.WifiLinkedInfo: java.lang.String getSsid()>
<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,short)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValue(java.time.temporal.TemporalField)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder decodedAuthority(java.lang.String)>
<ohos.sensor.agent.SensorAgent: boolean subscribeParamsCheck(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,long,long)>
<ohos.agp.render.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)>
<ohos.security.permission.PermissionGrantMode: void <clinit>()>
<java.util.Spliterator.OfDouble: boolean tryAdvance(java.util.function.Consumer)>
<java.util.HashMap: boolean remove(java.lang.Object,java.lang.Object)>
<ohos.nfc.oma.Reader: java.lang.String getName()>
<ohos.global.icu.util.EthiopicCalendar: boolean isAmeteAlemEra()>
<java.security.AlgorithmParameters: java.security.Provider getProvider()>
<ohos.vibrator.bean.VibrationPattern: void setIntensities(int[])>
<ohos.account.DistributedInfo: java.lang.String getName()>
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>
<ark.system.ClassLoaderHelper: java.util.Enumeration findResources(java.lang.ClassLoader,java.lang.String)>
<ohos.agp.components.Image: ohos.agp.render.PixelMapHolder getPixelMapHolder()>
<ohos.global.icu.text.DateFormatSymbols: int hashCode()>
<ohos.data.distributed.file.DistFiles: ohos.data.distributed.file.DistFile createFile(java.lang.String)>
<ohos.global.resource.solidxml.Node: java.util.List getTypedAttributes(ohos.global.resource.ResourceManager)>
<ohos.agp.components.DependentLayout.LayoutConfig: void removeRule(int)>
<java.io.InputStream: void mark(int)>
<ohos.eventhandler.Courier: void <init>(ohos.eventhandler.EventHandler)>
<ohos.utils.PacMap: boolean equals(java.lang.Object)>
<java.time.LocalDateTime: java.time.LocalDateTime minusMinutes(long)>
<ohos.event.notification.ReminderHelper: void cancelReminder(int)>
<java.time.ZoneOffset: java.lang.String getId()>
<ohos.agp.components.TableLayoutManager: void setRowCount(int)>
<ohos.data.resultset.ResultSet.ColumnType: ohos.data.resultset.ResultSet.ColumnType getByValue(int)>
<java.lang.Thread: java.lang.Thread currentThread()>
<ohos.media.photokit.metadata.AVMetadataHelper: boolean setSource(ohos.app.Context,ohos.utils.net.Uri)>
<java.text.MessageFormat: java.text.Format[] getFormatsByArgumentIndex()>
<java.util.Vector: int hashCode()>
<java.nio.file.attribute.BasicFileAttributeView: void setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)>
<java.util.TimeZone: java.lang.String getDisplayName()>
<ohos.aafwk.abilityjet.databinding.DataBinding: ohos.aafwk.ability.Lifecycle getLifecycle()>
<ohos.nfc.tag.NdefMessage: ohos.nfc.tag.MessageRecord[] getRecords()>
<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>
<ohos.agp.components.Rating.RatingChangedListener: void onProgressChanged(ohos.agp.components.Rating,int,boolean)>
<ohos.global.icu.text.DecimalFormatSymbols: char getZeroDigit()>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder setLanguageTag(java.lang.String)>
<ohos.utils.LongPlainArray: java.util.Optional get(long)>
<java.util.NavigableSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>
<ohos.utils.BasePacMap: java.util.Map getAll()>
<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndUpdate(java.util.function.UnaryOperator)>
<ohos.data.usage.MountState: ohos.data.usage.MountState[] values()>
<java.util.SimpleTimeZone: int hashCode()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getUDTs(java.lang.String,java.lang.String,java.lang.String,int[])>
<java.util.Vector: java.lang.Object get(int)>
<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>
<ohos.data.resultset.AbsResultSet: long getLong(int)>
<ohos.data.resultset.AbsResultSet: int getRowIndex()>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getEventColourIndex()>
<ohos.global.icu.text.MeasureFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>
<java.text.AttributedCharacterIterator: int getRunStart()>
<java.lang.reflect.Parameter: java.lang.String getName()>
<java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()>
<ohos.agp.render.opengl.GLES20: boolean glIsBuffer(int)>
<ohos.media.muxer.Muxer: boolean setMediaLocation(float,float)>
<ohos.media.player.Player.MediaTimedMetaData: ohos.media.player.Player.MediaTimedMetaData createFromParcel(ohos.utils.Parcel)>
<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance()>
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>
<java.util.Collections: void swap(java.util.List,int,int)>
<ohos.data.search.schema.NotepadItem: java.lang.String getNotepadCategory()>
<java.util.NavigableSet: java.util.NavigableSet headSet(java.lang.Object,boolean)>
<java.util.concurrent.locks.StampedLock: boolean isReadLocked()>
<ohos.global.icu.text.DecimalFormatSymbols: void <init>(ohos.global.icu.util.ULocale)>
<ohos.agp.components.ScrollHelper: void doFling(int,int,int,int,int,int,int,int)>
<ohos.global.icu.text.SymbolTable: char[] lookup(java.lang.String)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.invoke.MethodType)>
<java.text.MessageFormat.Field: void <clinit>()>
<ohos.agp.components.Component.FadeEffectEnum: int getValue()>
<ohos.utils.ConditionHelper: void await()>
<java.nio.file.Path: java.nio.file.Path resolveSibling(java.nio.file.Path)>
<java.util.OptionalInt: int orElseThrow(java.util.function.Supplier)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThan(java.lang.String,java.sql.Timestamp)>
<java.io.FilterOutputStream: void write(byte[])>
<java.util.concurrent.ArrayBlockingQueue: boolean remove(java.lang.Object)>
<javax.sql.RowSet: void setCharacterStream(int,java.io.Reader)>
<ohos.org.xml.sax.ContentHandler: void ignorableWhitespace(char[],int,int)>
<java.security.KeyStore.CallbackHandlerProtection: javax.security.auth.callback.CallbackHandler getCallbackHandler()>
<ohos.multimodalinput.event.CompositeEvent: void <init>()>
<ohos.agp.render.opengl.GLES20: boolean glIsEnabled(int)>
<java.util.EnumMap: void clear()>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.resources.ResourceHandle generatePlaneMesh(java.lang.String,ohos.agp.render.render3d.resources.ResourceHandle,float,float)>
<java.util.concurrent.ArrayBlockingQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<ohos.wifi.WifiLinkedInfo.ConnState: void <clinit>()>
<ohos.agp.database.DataSetSubscriber: void onItemRemoved(int)>
<ohos.vibrator.bean.VibrationPattern: void setIntensity(int)>
<javax.crypto.EncryptedPrivateKeyInfo: byte[] getEncoded()>
<ohos.agp.render.render3d.resources.MaterialDesc: void setMaterialFlags(int)>
<java.util.TreeSet: void <init>()>
<ohos.global.icu.text.MessageFormat: java.text.Format getFormatByArgumentName(java.lang.String)>
<java.lang.Class: java.lang.Class getEnclosingClass()>
<ohos.agp.render.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,float[])>
<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()>
<java.text.NumberFormat: void <init>()>
<ohos.utils.Parcel: java.lang.String readString()>
<java.util.concurrent.CopyOnWriteArraySet: void forEach(java.util.function.Consumer)>
<ohos.utils.FloatDimension: void <init>(float,float)>
<java.net.HttpCookie: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.util.Enumeration keys()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean tryReleaseShared(long)>
<ohos.bundle.AbilityInfo: java.lang.String getLabel()>
<java.security.SecurityPermission: void <init>(java.lang.String,java.lang.String)>
<javax.net.ssl.SNIHostName: java.lang.String getAsciiName()>
<ohos.agp.render.Path: void transformToNewPath(ohos.agp.utils.Matrix,ohos.agp.render.Path)>
<java.util.EnumMap: void <init>(java.util.EnumMap)>
<java.security.cert.CertificateFactorySpi: java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream)>
<ohos.agp.render.opengl.GLES1X: void glLightf(int,int,float)>
<ohos.javax.xml.stream.events.XMLEvent: boolean isEndElement()>
<java.security.Signature: void initVerify(java.security.PublicKey)>
<ohos.media.sessioncore.AVBrowserService: ohos.utils.PacMap getBrowserOptions()>
<ohos.app.Context: java.io.File getCodeCacheDir()>
<java.util.PriorityQueue: java.util.Spliterator spliterator()>
<ohos.global.i18n.LocaleHelperUtils: java.util.ArrayList getBlockedCities(ohos.app.Context)>
<ohos.agp.components.webengine.CookieStore: boolean isCookieEnable()>
<java.time.MonthDay: java.time.MonthDay withMonth(int)>
<ohos.global.icu.util.Calendar: void set(int,int)>
<java.nio.channels.Selector: boolean isOpen()>
<ohos.agp.utils.Line: ohos.agp.utils.Point getEndPoint()>
<java.util.PrimitiveIterator.OfDouble: java.lang.Object next()>
<ohos.event.commonevent.CommonEventPublishInfo: void setSticky(boolean)>
<java.sql.DatabaseMetaData: java.lang.String getProcedureTerm()>
<ohos.global.icu.text.UnicodeSet: int charAt(int)>
<ohos.utils.geo.DimensFloat: int getSizeYToInt()>
<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>
<ohos.agp.render.render3d.util.MeshBuilder: void setIndexData(int,java.nio.ByteBuffer)>
<ohos.javax.xml.parsers.SAXParser: void parse(java.io.InputStream,ohos.org.xml.sax.helpers.DefaultHandler)>
<java.time.LocalDateTime: java.time.LocalDateTime minusNanos(long)>
<ohos.global.icu.text.DecimalFormat: int getMaximumSignificantDigits()>
<ohos.data.rdb.StoreConfig: ohos.data.rdb.StoreConfig newReadOnlyConfig(java.lang.String)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.lang.Thread getFirstQueuedThread()>
<ohos.agp.components.webengine.PickFilesParams: java.lang.String getDefaultName()>
<java.util.NavigableMap: java.util.Map.Entry ceilingEntry(java.lang.Object)>
<java.util.Vector: void trimToSize()>
<ohos.media.sessioncore.AVSession: ohos.media.common.sessioncore.AVToken getAVToken()>
<java.security.acl.AclEntry: boolean addPermission(java.security.acl.Permission)>
<ohos.agp.render.render3d.Scene: ohos.agp.render.render3d.SceneNode getRootNode()>
<ohos.agp.render.render3d.components.SceneComponent.BackgroundType: ohos.agp.render.render3d.components.SceneComponent.BackgroundType valueOf(java.lang.String)>
<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>
<ohos.account.AccountAbility: int getOsAccountLocalIdFromProcess()>
<ohos.global.icu.lang.UCharacter.UnicodeBlock: void <clinit>()>
<ohos.agp.components.TimePicker: void setSelectedNormalTextMarginRatio(float)>
<java.lang.Math: long round(double)>
<javax.crypto.KeyAgreementSpi: int engineGenerateSecret(byte[],int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,boolean)>
<ohos.ai.cv.text.TextBlock: void setTextLines(java.util.List)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty setLoopedCount(int)>
<ohos.data.rdb.RdbStore: ohos.data.resultset.ResultSet query(ohos.data.rdb.AbsRdbPredicates,java.lang.String[])>
<java.sql.ClientInfoStatus: void <clinit>()>
<ohos.hiviewdfx.Debug: void emulatorTraceEnd()>
<ohos.app.dispatcher.TaskDispatcher: ohos.app.dispatcher.task.Revocable asyncDispatch(java.lang.Runnable)>
<ohos.agp.components.PageSlider: void setCurrentPage(int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,java.lang.String)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,float)>
<java.util.concurrent.atomic.AtomicIntegerArray: boolean weakCompareAndSet(int,int,int)>
<java.util.concurrent.atomic.AtomicInteger: float floatValue()>
<java.security.Permission: boolean implies(java.security.Permission)>
<java.net.URLConnection: int getReadTimeout()>
<java.sql.ResultSet: java.io.Reader getCharacterStream(java.lang.String)>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object get(java.lang.Object)>
<java.lang.String: int compareToIgnoreCase(java.lang.String)>
<ohos.agp.components.Component: void setFocusBorderWidth(int)>
<java.util.Arrays: void parallelSort(byte[],int,int)>
<java.lang.StrictMath: double log10(double)>
<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>
<ohos.agp.render.LinearShader: ohos.agp.utils.Point[] getShaderPoints()>
<ohos.bundle.LauncherService.BundleStatusCallback: void <init>()>
<ohos.global.icu.text.DecimalFormat: java.lang.Object clone()>
<ohos.global.resource.ResourceType: void <clinit>()>
<java.text.Format: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<java.util.Arrays: void parallelPrefix(int[],int,int,java.util.function.IntBinaryOperator)>
<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<ohos.media.muxer.Muxer: void finalize()>
<java.lang.Byte: int intValue()>
<ohos.global.icu.text.Replaceable: char charAt(int)>
<ohos.agp.components.ToggleButton: void <init>(ohos.app.Context)>
<java.io.Reader: int read()>
<ohos.security.seoperator.SEOperatorAbs: int deleteSSD(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.components.SlideDrawer: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.components.webengine.ResourceResponse: void <init>(java.lang.String,java.io.InputStream,java.lang.String)>
<java.lang.Character: boolean isUnicodeIdentifierPart(int)>
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>
<ohos.global.icu.lang.UCharacter.UnicodeBlock: ohos.global.icu.lang.UCharacter.UnicodeBlock of(int)>
<java.net.Inet6Address: boolean isSiteLocalAddress()>
<java.time.Instant: java.time.Instant plusSeconds(long)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String)>
<java.util.concurrent.CopyOnWriteArraySet: boolean removeAll(java.util.Collection)>
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>
<ohos.data.rdb.RdbStore: void beginTransactionWithObserver(ohos.data.rdb.TransactionObserver)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Map.Entry ceilingEntry(java.lang.Object)>
<ohos.app.Context: java.lang.String getString(int,java.lang.Object[])>
<ohos.data.search.schema.Schema: java.lang.Object setName(java.lang.String)>
<java.util.Collections: java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet)>
<java.util.BitSet: byte[] toByteArray()>
<java.util.stream.LongStream: boolean noneMatch(java.util.function.LongPredicate)>
<ohos.org.xml.sax.helpers.DefaultHandler: void setDocumentLocator(ohos.org.xml.sax.Locator)>
<ohos.global.icu.util.IndianCalendar: void handleComputeFields(int)>
<ohos.media.audio.AudioStreamInfo: ohos.media.audio.AudioStreamInfo.StreamUsage getUsage()>
<java.io.FileInputStream: long skip(long)>
<java.nio.channels.spi.AbstractSelectableChannel: void implConfigureBlocking(boolean)>
<java.util.Dictionary: int size()>
<ohos.event.commonevent.AsyncCommonEventResult: int getCode()>
<ohos.global.icu.util.IslamicCalendar: int handleGetMonthLength(int,int)>
<java.util.Iterator: void remove()>
<ohos.bundle.IBundleManager: java.util.List getAppsGrantedPermissions(java.lang.String[])>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()>
<java.util.regex.Matcher: int start(java.lang.String)>
<javax.lang.model.util.AbstractTypeVisitor8: java.lang.Object visitIntersection(javax.lang.model.type.IntersectionType,java.lang.Object)>
<java.net.URLConnection: long getContentLengthLong()>
<ohos.agp.utils.Line: void <init>(ohos.agp.utils.Point,ohos.agp.utils.Point)>
<ohos.location.GeoAddress: void clearLatitude()>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getScientificInstance(java.util.Locale)>
<ohos.bundle.AbilityInfo: void <clinit>()>
<java.text.StringCharacterIterator: char setIndex(int)>
<ohos.data.search.schema.PlaceItem: java.util.List getPlaceSchema()>
<ohos.nfc.tag.TagManager: boolean isTagConnected()>
<ohos.media.image.common.ScaleMode: void <clinit>()>
<java.nio.DoubleBuffer: int compareTo(java.lang.Object)>
<ohos.agp.render.opengl.GLES30: void glUniform1uiv(int,int,int[])>
<javax.net.ssl.SSLSocket: void <init>(java.net.InetAddress,int,java.net.InetAddress,int)>
<ohos.miscservices.inputmethod.EditingText: int getFlags()>
<ohos.media.image.PixelMap: ohos.media.image.PixelMap create(int[],ohos.media.image.PixelMap.InitializationOptions)>
<ohos.media.common.sessioncore.AVConnectionCallback: void onConnected()>
<javax.tools.SimpleJavaFileObject: boolean isNameCompatible(java.lang.String,javax.tools.JavaFileObject.Kind)>
<ohos.agp.components.element.VectorElement: void setAntiAlias(boolean)>
<java.nio.channels.AsynchronousChannelGroup: void shutdownNow()>
<java.util.AbstractMap: void putAll(java.util.Map)>
<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>
<ohos.data.rdb.ValuesBucket: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.NavigableSet subSet(java.lang.Object,java.lang.Object)>
<ohos.event.notification.ReminderRequestTimer: boolean unmarshalling(ohos.utils.Parcel)>
<java.text.DecimalFormat: void setDecimalSeparatorAlwaysShown(boolean)>
<ohos.agp.render.render3d.resources.ResourceHandle: void release()>
<ohos.data.orm.OrmContext: void changeEncryptKey(byte[])>
<ohos.hiviewdfx.HiChecker.Rule: void <clinit>()>
<ohos.agp.render.opengl.GLES20: void glBlendEquationSeparate(int,int)>
<java.sql.SQLTransientException: void <init>(java.lang.String,java.lang.String)>
<ohos.data.rdb.ValuesBucket: boolean hasColumn(java.lang.String)>
<ohos.media.player.Player: boolean setAudioHandler(ohos.media.player.Player.AudioHandler)>
<ohos.agp.render.Canvas: void drawColor(int,ohos.agp.render.Canvas.PorterDuffMode)>
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale createCanonical(java.lang.String)>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object getFirst()>
<ohos.agp.components.Image: void setCornerRadii(float[])>
<ohos.agp.render.opengl.GLES20: void glVertexAttrib2f(int,float,float)>
<ohos.global.icu.util.LocaleData.PaperSize: int getHeight()>
<java.math.BigInteger: void <clinit>()>
<java.security.DigestOutputStream: java.security.MessageDigest getMessageDigest()>
<ohos.data.rdb.StoreConfig.SyncMode: void <clinit>()>
<java.net.URL: java.lang.String getFile()>
<ohos.agp.window.service.DisplayNotch: ohos.agp.utils.Rect getNotchRectTop()>
<ohos.agp.utils.Matrix: void postRotate(float)>
<ohos.utils.net.Uri: java.lang.String decode(java.lang.String)>
<java.lang.SecurityManager: boolean inClass(java.lang.String)>
<javax.crypto.Mac: void <init>(javax.crypto.MacSpi,java.security.Provider,java.lang.String)>
<ohos.wifi.WifiDeviceConfig: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.Picker: void setDisplayedLinesBottomElement(ohos.agp.components.element.Element)>
<java.util.TimeZone: boolean observesDaylightTime()>
<ohos.data.rdb.DataObservable: void removeAll()>
<java.util.Comparator: java.util.Comparator reversed()>
<java.time.Duration: java.time.Duration parse(java.lang.CharSequence)>
<ohos.utils.Parcel: boolean writeSequenceableArray(ohos.utils.Sequenceable[])>
<ohos.agp.utils.Rect.RotationEnum: ohos.agp.utils.Rect.RotationEnum[] values()>
<ohos.agp.components.Checkbox: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.app.Context: ohos.bundle.HapModuleInfo getHapModuleInfo()>
<ohos.media.image.Image.Component: int remaining()>
<java.net.Proxy: void <clinit>()>
<java.time.Period: void <clinit>()>
<javax.lang.model.element.AnnotationValue: java.lang.Object getValue()>
<ohos.agp.render.Path.FillType: int value()>
<ohos.agp.render.render3d.resources.ResourceManager: ohos.agp.render.render3d.resources.GpuResourceHandle createTexture(java.lang.String,java.lang.String)>
<ohos.agp.components.AbsButton: ohos.agp.utils.Color getTextColorOff()>
<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>
<java.lang.System: java.lang.String lineSeparator()>
<java.util.ArrayList: boolean remove(java.lang.Object)>
<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>
<ohos.data.distributed.common.SecurityLevel: int getCode()>
<java.util.Formatter: java.lang.String toString()>
<java.sql.PreparedStatement: void setShort(int,short)>
<ohos.security.fileprotect.ISfpPolicyManager: java.lang.String getLabel(ohos.app.Context,java.lang.String,java.lang.String)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates isNull(java.lang.String)>
<ohos.agp.components.ComponentTreeObserver: void removeGlobalFocusUpdatedListener(ohos.agp.components.ComponentTreeObserver.GlobalFocusUpdatedListener)>
<java.lang.reflect.MalformedParameterizedTypeException: void <init>()>
<ohos.agp.components.Checkbox: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.net.NetHotspot: long getRxBytes()>
<ohos.agp.render.Path: void arcTo(ohos.agp.utils.RectFloat,float,float)>
<ohos.usb.USBRequest: boolean initialize(ohos.usb.USBDevicePipe,ohos.usb.USBEndpoint)>
<java.lang.Thread: int activeCount()>
<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[])>
<java.time.Period: int getDays()>
<java.util.Locale.Builder: java.util.Locale.Builder setLanguageTag(java.lang.String)>
<java.lang.reflect.Proxy: void <init>(java.lang.reflect.InvocationHandler)>
<java.security.Identity: java.lang.String toString()>
<java.text.DateFormatSymbols: java.lang.Object clone()>
<java.nio.IntBuffer: java.nio.IntBuffer asReadOnlyBuffer()>
<java.util.Deque: java.lang.Object getFirst()>
<java.lang.Long: long parseUnsignedLong(java.lang.String,int)>
<java.util.HashMap: java.util.Collection values()>
<ohos.agp.utils.Matrix44: boolean isScale()>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneFormat getInstance(java.util.Locale)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: java.lang.String getText()>
<ohos.nfc.cardemulation.CardEmulation: java.util.List getAids(ohos.bundle.ElementName,java.lang.String)>
<java.sql.SQLTransactionRollbackException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<javax.crypto.CipherInputStream: void <init>(java.io.InputStream)>
<java.security.cert.X509CRL: void verify(java.security.PublicKey,java.security.Provider)>
<ohos.telephony.RadioInfoManager: void removeObserver(ohos.telephony.RadioStateObserver)>
<ohos.global.icu.text.DecimalFormat: void setPadCharacter(char)>
<ohos.utils.net.Uri: java.lang.String getDecodedAuthority()>
<ohos.agp.graphics.SurfaceOps: void unlockCanvasAndPost(ohos.agp.render.Canvas)>
<ohos.media.audio.AudioRendererInfo.AudioStreamOutputFlag: void <clinit>()>
<java.nio.IntBuffer: java.nio.IntBuffer put(int,int)>
<java.lang.Long: java.lang.String toString()>
<ohos.javax.xml.validation.ValidatorHandler: ohos.javax.xml.validation.TypeInfoProvider getTypeInfoProvider()>
<ohos.ai.asr.AsrListener: void onBufferReceived(byte[])>
<ohos.global.resource.solidxml.Theme: java.lang.String getStringValue(java.lang.String)>
<java.util.Scanner: boolean hasNextBigDecimal()>
<ohos.data.resultset.ResultSetWrapper: boolean goTo(int)>
<ohos.utils.geo.Rect: void fuse(int,int,int,int)>
<javax.tools.StandardJavaFileManager: java.lang.Iterable getJavaFileObjects(java.lang.String[])>
<ohos.event.commonevent.MatchingSkills: void addEvent(java.lang.String)>
<java.io.ObjectInputStream: void readStreamHeader()>
<ohos.agp.components.Component: void setClickedListener(ohos.agp.components.Component.ClickedListener)>
<ohos.bundle.BundleInfo.ReqPermissionDetail.UsedScene: java.lang.String getWhen()>
<ohos.data.rdb.StoreConfig.StorageMode: ohos.data.rdb.StoreConfig.StorageMode[] values()>
<java.util.concurrent.SynchronousQueue: boolean remove(java.lang.Object)>
<ohos.agp.utils.Circle: float getRadius()>
<java.io.PipedInputStream: int available()>
<ohos.media.audio.AudioManager: int getRingerMode()>
<ohos.agp.render.PathEffect: void <init>(float,float)>
<ohos.global.resource.Element: java.lang.String getString(java.lang.Object[])>
<java.security.cert.X509CRLSelector: java.lang.Object clone()>
<java.time.LocalTime: java.time.LocalTime minusHours(long)>
<ohos.nfc.tag.MifareUltralightTag: byte[] readFourPages(int)>
<ohos.agp.render.RegionIterator: void <init>(ohos.agp.render.Region)>
<ohos.agp.render.opengl.GLES20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<ohos.org.xml.sax.helpers.DefaultHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,ohos.org.xml.sax.Attributes)>
<java.text.MessageFormat: void setFormatsByArgumentIndex(java.text.Format[])>
<ohos.global.icu.util.Calendar: void <init>()>
<ohos.system.DeviceInfo: java.lang.String getLocaleRegion()>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitArray(java.util.List,java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int reduceToInt(long,java.util.function.ToIntBiFunction,int,java.util.function.IntBinaryOperator)>
<ohos.aafwk.ability.DataAbilityOperation: ohos.aafwk.ability.DataAbilityOperation.Builder newAssertBuilder(ohos.utils.net.Uri)>
<ohos.bundle.InstallParam: void setKeepData(boolean)>
<ohos.javax.xml.parsers.SAXParser: boolean isXIncludeAware()>
<java.lang.Long: void <clinit>()>
<java.sql.ResultSet: java.lang.String getString(java.lang.String)>
<java.security.AuthProvider: void login(javax.security.auth.Subject,javax.security.auth.callback.CallbackHandler)>
<java.time.chrono.Chronology: boolean equals(java.lang.Object)>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.DoubleStream doubles(long)>
<ohos.agp.render.Region: boolean isEmpty()>
<ohos.global.configuration.Configuration: java.util.Locale getFirstLocale()>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal divideInteger(ohos.global.icu.math.BigDecimal)>
<ohos.agp.utils.Matrix: void setMatrix(ohos.agp.utils.Matrix)>
<java.util.function.IntPredicate: java.util.function.IntPredicate negate()>
<ohos.agp.components.DatePicker: ohos.agp.components.element.Element getSelectedTextBackgroundElement()>
<ohos.agp.components.Picker: ohos.agp.components.Picker.Formatter getFormatter()>
<ohos.global.icu.text.MessagePattern: int getLimitPartIndex(int)>
<java.util.logging.Level: void <init>(java.lang.String,int)>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: ohos.media.common.sessioncore.AVPlaybackState.Builder setAVPlaybackErrorMessage(java.lang.CharSequence)>
<java.nio.file.attribute.UserDefinedFileAttributeView: java.util.List list()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThan(java.lang.String,java.sql.Timestamp)>
<ohos.sysappcomponents.settings.SystemSettings.Wireless: boolean enableAirplaneMode(ohos.app.Context,boolean)>
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>
<ohos.agp.components.webengine.JsCallback: java.lang.String onCallback(java.lang.String)>
<java.util.prefs.AbstractPreferences: void flushSpi()>
<ohos.data.rdb.ValuesBucket: boolean isEmpty()>
<ohos.usb.USBDevicePipe: boolean releaseInterface(ohos.usb.USBInterface)>
<ohos.global.icu.text.RuleBasedCollator: void setNumericCollation(boolean)>
<ohos.agp.components.AdaptiveBoxLayout.LayoutConfig: void <init>(ohos.agp.components.AdaptiveBoxLayout.LayoutConfig)>
<ohos.media.image.PixelMap: boolean isSameImage(ohos.media.image.PixelMap)>
<java.sql.SQLOutput: void writeURL(java.net.URL)>
<ohos.bundle.InstallerCallback: boolean onRemoteRequest(int,ohos.rpc.MessageParcel,ohos.rpc.MessageParcel,ohos.rpc.MessageOption)>
<ohos.media.codec.CodecDescriptionList: java.util.List findEncoder(ohos.media.common.Format)>
<ohos.utils.zson.ZSONObject: java.lang.Float getFloat(java.lang.String)>
<java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int)>
<java.nio.file.spi.FileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>
<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>
<ohos.data.orm.OrmContext: boolean flush()>
<java.lang.Throwable: void printStackTrace()>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.window.dialog.CommonDialog setTitleIcon(int,int)>
<ohos.global.icu.text.RelativeDateTimeFormatter.RelativeUnit: ohos.global.icu.text.RelativeDateTimeFormatter.RelativeUnit[] values()>
<ohos.agp.window.service.ComponentPadding: int getSystemComponentPaddingLeft()>
<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>
<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra valueOf(java.lang.String)>
<java.io.ObjectStreamClass: java.lang.String getName()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.lang.reflect.Constructor: int hashCode()>
<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getPublicExponent()>
<java.time.LocalDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
<java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>
<ohos.agp.render.render3d.Task.State: ohos.agp.render.render3d.Task.State valueOf(java.lang.String)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String)>
<java.nio.channels.SocketChannel: boolean connect(java.net.SocketAddress)>
<ohos.sensor.agent.CategoryMotionAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int,long)>
<java.nio.LongBuffer: java.nio.LongBuffer get(long[])>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitPackage(javax.lang.model.element.PackageElement,java.lang.Object)>
<java.sql.CallableStatement: void setBlob(java.lang.String,java.io.InputStream,long)>
<ohos.agp.render.render3d.SceneNode: java.util.List getChildren()>
<java.util.TreeMap: java.util.Set entrySet()>
<ohos.accessibility.ability.GesturePathPositionDefine: void setPositionX(float)>
<ohos.media.camera.CameraKit: ohos.media.camera.CameraKit getInstance(ohos.app.Context)>
<ohos.ai.cv.text.TextBlock: java.util.List getTextLines()>
<ohos.agp.components.ComponentProvider.ComponentProviderException: void <init>(java.lang.Throwable)>
<java.lang.reflect.Executable: java.lang.String getName()>
<java.sql.Connection: void setClientInfo(java.util.Properties)>
<java.util.stream.Stream: void forEach(java.util.function.Consumer)>
<ohos.media.audio.AudioDeviceDescriptor: void setEncodings(java.util.List)>
<ohos.global.icu.text.Replaceable: void copy(int,int,int)>
<java.util.HashMap: boolean containsKey(java.lang.Object)>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void lazySet(java.lang.Object,java.lang.Object)>
<ohos.agp.render.Paint: void setColorFilter(ohos.agp.render.ColorFilter)>
<ohos.media.photokit.metadata.AVMetadataHelper: ohos.media.image.PixelMap fetchVideoScaledPixelMapByTime(long,int,int,int)>
<java.util.Calendar: void setWeekDate(int,int,int)>
<ohos.agp.utils.Contour: void setConvexPath(ohos.agp.render.Path)>
<java.sql.DatabaseMetaData: boolean supportsDataDefinitionAndDataManipulationTransactions()>
<java.io.PrintStream: void print(int)>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getQuarters(int,int)>
<ohos.net.NetSpecifier.Builder: ohos.net.NetSpecifier.Builder removeCapability(int)>
<java.nio.channels.AsynchronousSocketChannel: java.nio.channels.AsynchronousSocketChannel bind(java.net.SocketAddress)>
<java.nio.ByteBuffer: java.nio.CharBuffer asCharBuffer()>
<ohos.data.rdb.RdbStore: void endTransaction()>
<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<ohos.global.icu.text.Transliterator.Position: void validate(int)>
<ohos.utils.PacMap: byte getByteValue(java.lang.String,byte)>
<java.util.List: void sort(java.util.Comparator)>
<ohos.sensor.agent.SensorAgent: void <init>()>
<java.lang.SecurityManager: void checkRead(java.io.FileDescriptor)>
<java.text.Bidi: int getLevelAt(int)>
<ohos.account.AccountAbility: boolean isOsAccountVerified()>
<ohos.ai.cv.text.TextConfiguration: ohos.ai.cv.text.TextConfiguration.TextShape getTextShape()>
<java.util.BitSet: void and(java.util.BitSet)>
<ohos.data.search.schema.NoticeItem: java.lang.String getImportance()>
<ohos.event.notification.NotificationConstant.SemanticActionButton: ohos.event.notification.NotificationConstant.SemanticActionButton[] values()>
<java.util.IllformedLocaleException: void <init>(java.lang.String,int)>
<java.security.cert.CertPathValidatorException: void <init>()>
<java.lang.Class: java.lang.Object newInstance()>
<ohos.distributedschedule.interwork.DeviceInfo: boolean isDeviceOnline()>
<ohos.global.icu.text.Edits.Iterator: boolean findSourceIndex(int)>
<ohos.aafwk.ability.ViewsStatus: boolean marshalling(ohos.utils.Parcel)>
<java.util.TreeSet: java.lang.Object clone()>
<ohos.bundle.LauncherShortcutInfo: ohos.agp.components.element.Element getIcon()>
<ohos.bluetooth.ble.BlePeripheralManager: boolean sendResponse(ohos.bluetooth.ble.BlePeripheralDevice,int,int,int,byte[])>
<java.io.FileDescriptor: boolean valid()>
<ohos.aafwk.ability.AbilitySliceRuntimeException: void <init>(java.lang.String)>
<ohos.global.icu.text.TimeZoneFormat.Style: void <clinit>()>
<java.util.Locale: java.util.Locale[] getAvailableLocales()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notIn(java.lang.String,java.util.Date[])>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setProgressBar(int,int,int,boolean)>
<java.text.Collator: boolean equals(java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glTexStorage3D(int,int,int,int,int,int)>
<java.lang.StringBuilder: void <init>()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates glob(java.lang.String,java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates in(java.lang.String,int[])>
<java.util.concurrent.Semaphore: void acquire(int)>
<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>
<java.time.chrono.ChronoLocalDate: java.lang.String format(java.time.format.DateTimeFormatter)>
<javax.security.auth.Subject: boolean isReadOnly()>
<ohos.agp.components.DependentLayout.LayoutConfig: void <init>()>
<ohos.location.RequestParam: void setTimeInterval(int)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseStrict()>
<ohos.javax.xml.validation.ValidatorHandler: void setResourceResolver(ohos.org.w3c.dom.ls.LSResourceResolver)>
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>
<ohos.data.distributed.file.DistFile: void <init>(java.lang.String)>
<ohos.global.icu.util.ValueIterator: void reset()>
<ohos.aafwk.ability.Ability: java.io.FileDescriptor createPipeFile(ohos.utils.net.Uri,java.lang.String,ohos.utils.PacMap,java.lang.Object,ohos.aafwk.ability.PipeFileWriter)>
<java.io.Reader: boolean ready()>
<ohos.agp.utils.Color: int getIntColor(java.lang.String)>
<ohos.sensor.agent.CategoryMotionAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryMotionDataCallback)>
<java.nio.file.ProviderMismatchException: void <init>()>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder setScript(java.lang.String)>
<javax.lang.model.type.TypeVisitor: java.lang.Object visit(javax.lang.model.type.TypeMirror)>
<ohos.hiviewdfx.FaultLogger.FaultLogQueryResult: void <init>()>
<java.io.ObjectInputStream: int available()>
<ohos.data.rdb.RdbStore: ohos.data.rdb.Statement buildStatement(java.lang.String)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<java.util.Scanner: boolean hasNextLong(int)>
<ohos.bundle.ElementName: java.lang.String getShortClassName()>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object poll()>
<ohos.org.xml.sax.EntityResolver: ohos.org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
<javax.lang.model.element.NestingKind: javax.lang.model.element.NestingKind[] values()>
<java.lang.Math: double atan2(double,double)>
<java.io.Reader: void reset()>
<java.lang.String: void <init>(java.lang.String)>
<ohos.agp.components.Component: ohos.agp.utils.Color getScrollbarBackgroundColor()>
<java.util.concurrent.ConcurrentSkipListSet: java.lang.Object pollFirst()>
<ohos.utils.geo.RectFloat.RotationEnum: void <clinit>()>
<java.util.logging.Formatter: java.lang.String getHead(java.util.logging.Handler)>
<ohos.security.permission.NeedsPermission: java.lang.String[] any()>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.List shutdownNow()>
<ohos.agp.utils.Matrix: void setPerspY(float)>
<java.nio.channels.spi.AsynchronousChannelProvider: java.nio.channels.AsynchronousSocketChannel openAsynchronousSocketChannel(java.nio.channels.AsynchronousChannelGroup)>
<ohos.utils.geo.RectFloat: void translateCenterTo(ohos.utils.geo.Point)>
<ohos.global.i18n.utils.CalendarUtils: void <init>()>
<java.io.DataOutput: void writeBytes(java.lang.String)>
<ohos.media.photokit.metadata.AVStorage.Audio.Playlists.Members: boolean updatePlaylistItem(ohos.aafwk.ability.DataAbilityHelper,long,int,int)>
<ohos.miscservices.inputmethod.EditorAttribute: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.utils.Matrix: float getScaleY()>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: java.lang.String getAdditionalText()>
<ohos.agp.colors.RgbColor: void <init>(ohos.agp.colors.RgbColor)>
<ohos.global.icu.lang.UCharacter: java.lang.String getPropertyValueName(int,int,int)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getWaitingThreads(java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject)>
<ohos.media.tubecore.AVTube: void cmdDecVolume(int)>
<ohos.javax.xml.stream.XMLEventReader: ohos.javax.xml.stream.events.XMLEvent nextTag()>
<java.io.PipedWriter: void close()>
<ohos.global.icu.text.MeasureFormat: java.lang.String formatMeasures(ohos.global.icu.util.Measure[])>
<java.util.AbstractList: void removeRange(int,int)>
<java.util.SplittableRandom: int nextInt()>
<java.security.Identity: java.lang.String getInfo()>
<java.util.Spliterator: java.util.Spliterator trySplit()>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate date(java.time.chrono.Era,int,int,int)>
<ohos.media.common.Source: int getRecorderVideoSource()>
<ohos.data.orm.OrmConfig: java.lang.String getAlias()>
<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getUpperBound()>
<ohos.agp.window.dialog.CommonDialog: boolean clickKeyUp(ohos.multimodalinput.event.KeyEvent)>
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentP()>
<ohos.aafwk.abilityjet.activedata.ActiveData: void <init>()>
<java.time.chrono.MinguoChronology: void <clinit>()>
<ohos.app.Context: java.io.File getDataDir()>
<ohos.global.icu.util.Calendar: int getMinimum(int)>
<ohos.media.camera.device.CameraStateCallback: void onCaptureIdle(ohos.media.camera.device.Camera)>
<java.security.CodeSigner: java.security.Timestamp getTimestamp()>
<ohos.media.image.PixelMap: long getPixelBytesNumber()>
<ohos.rpc.MessageParcel: boolean writeRemoteObject(ohos.rpc.IRemoteObject)>
<ohos.global.icu.util.Calendar: ohos.global.icu.util.Calendar getInstance(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<ohos.rpc.RemoteObject: void finalize()>
<ohos.net.DataFlowStatistics: long getIfaceRxBytes(java.lang.String)>
<ohos.agp.utils.Contour: void setContourRect(int,int,int,int)>
<ohos.agp.render.Path: void addPath(ohos.agp.render.Path,ohos.agp.utils.Matrix,ohos.agp.render.Path.AddPathMode)>
<ohos.sysappcomponents.contact.entity.Group: void <init>()>
<ohos.data.orm.AllChangeToTarget: java.util.List getInsertedList()>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal valueOf(long,int)>
<java.io.ObjectOutput: void flush()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest addMessageUser(ohos.event.notification.MessageUser)>
<ohos.utils.PlainLongArray: java.lang.String toString()>
<ohos.aafwk.ability.fraction.Fraction: ohos.agp.components.Component onComponentAttached(ohos.agp.components.LayoutScatter,ohos.agp.components.ComponentContainer,ohos.aafwk.content.Intent)>
<java.lang.Runtime: long freeMemory()>
<ohos.agp.components.ScrollHelper: boolean isFinished()>
<ohos.global.icu.util.EthiopicCalendar: int handleGetExtendedYear()>
<ohos.location.Location: double getAltitude()>
<java.time.format.DateTimeFormatter: java.time.format.ResolverStyle getResolverStyle()>
<ohos.global.resource.Element: java.lang.String getPluralString(int)>
<ohos.miscservices.inputmethod.EditingCapability: void setMaxLines(int)>
<ohos.media.audio.SoundEffect: boolean setActivated(boolean)>
<ohos.agp.render.opengl.GLES32: void glPrimitiveBoundingBox(float,float,float,float,float,float,float,float)>
<java.net.DatagramPacket: void setPort(int)>
<java.nio.channels.MulticastChannel: java.nio.channels.MembershipKey join(java.net.InetAddress,java.net.NetworkInterface)>
<java.util.zip.ZipEntry: long getCrc()>
<java.sql.DatabaseMetaData: boolean supportsSchemasInPrivilegeDefinitions()>
<ohos.agp.components.SlideDrawer.DrawerState: ohos.agp.components.SlideDrawer.DrawerState valueOf(java.lang.String)>
<java.util.zip.Deflater: boolean needsInput()>
<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream)>
<ohos.app.Context: int verifyCallingPermission(java.lang.String)>
<ohos.media.tubecore.AVTubeManager: void insertAVTubeEx(ohos.media.tubecore.AVTubeEx)>
<java.nio.channels.MembershipKey: java.net.InetAddress sourceAddress()>
<ohos.agp.utils.Matrix: void mapRectScaleTranslate(ohos.agp.utils.RectFloat,ohos.agp.utils.RectFloat)>
<java.util.concurrent.AbstractExecutorService: java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)>
<java.time.temporal.ChronoUnit: java.time.Duration getDuration()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayKeywordValue(java.lang.String,ohos.global.icu.util.ULocale)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>
<ohos.aafwk.ability.IntentAbility: void <init>(java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates or()>
<ohos.usb.USBDevice: int getVendorId()>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale setKeywordValue(java.lang.String,java.lang.String)>
<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,boolean,boolean)>
<java.util.Timer: void cancel()>
<java.net.DatagramPacket: java.net.SocketAddress getSocketAddress()>
<java.nio.channels.AsynchronousSocketChannel: java.net.SocketAddress getLocalAddress()>
<java.sql.SQLIntegrityConstraintViolationException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<ohos.global.icu.text.MessageFormat: java.lang.StringBuffer format(java.util.Map,java.lang.StringBuffer,java.text.FieldPosition)>
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahEra eraOf(int)>
<java.util.SortedSet: java.util.SortedSet tailSet(java.lang.Object)>
<ohos.event.notification.NotificationSubscriber: void onDied()>
<ohos.miscservices.wallpaper.WallpaperController: boolean isOperationAllowed()>
<ohos.sysappcomponents.calendar.entity.Instances: void setEventId(int)>
<java.lang.Object: void wait(long,int)>
<ohos.global.icu.util.Currency: void <init>(java.lang.String)>
<java.lang.invoke.MethodHandle: java.lang.Object invokeExact(java.lang.Object[])>
<javax.tools.SimpleJavaFileObject: java.io.Writer openWriter()>
<ohos.global.icu.text.DecimalFormatSymbols: void setPlusSign(char)>
<ohos.media.audio.AudioRenderer: ohos.media.audio.AudioRenderer.SpeedPara getPlaybackSpeed()>
<ohos.agp.utils.Rect: boolean getIntersectRect(int,int,int,int)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndDecrement(java.lang.Object)>
<java.util.concurrent.atomic.LongAdder: int intValue()>
<java.io.PipedOutputStream: void flush()>
<ohos.media.audio.SoundPlayer: boolean playSound(ohos.media.audio.SoundPlayer.SoundType,float)>
<ohos.utils.PlainArray: void <init>()>
<java.sql.ResultSet: boolean first()>
<ohos.agp.render.render3d.resources.MaterialDesc.MaterialAlphaMode: ohos.agp.render.render3d.resources.MaterialDesc.MaterialAlphaMode[] values()>
<ohos.agp.components.Checkbox: void <init>(ohos.app.Context)>
<java.net.DatagramSocket: boolean isConnected()>
<java.math.BigDecimal: java.math.BigDecimal stripTrailingZeros()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setBadgeNumber(int)>
<javax.tools.StandardJavaFileManager: java.lang.Iterable getJavaFileObjects(java.io.File[])>
<java.nio.file.InvalidPathException: int getIndex()>
<ohos.global.icu.lang.UCharacter: boolean isSupplementary(int)>
<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>
<ohos.agp.components.webengine.BrowserAgent: void <init>(ohos.app.Context)>
<ohos.agp.components.DatePicker: void updateDate(int,int,int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThan(java.lang.String,int)>
<java.util.concurrent.ForkJoinWorkerThread: void run()>
<java.sql.CallableStatement: void registerOutParameter(int,int,int)>
<ohos.bundle.HapModuleInfo: java.lang.String getIconPath()>
<ohos.global.resource.WrongTypeException: void <init>(java.lang.String)>
<java.time.LocalDateTime: int getMonthValue()>
<ohos.global.icu.text.CollationElementIterator: int getMaxExpansion(int)>
<ohos.media.audio.AudioStreamInfo.StreamType: ohos.media.audio.AudioStreamInfo.StreamType[] values()>
<java.util.Arrays: java.lang.String toString(byte[])>
<java.time.OffsetTime: int getSecond()>
<java.util.Arrays: void sort(double[],int,int)>
<ohos.bundle.BackupBundleInfo: void <clinit>()>
<ohos.telephony.TelephoneNumberUtils: boolean isSuitableSmsAddress(java.lang.String)>
<ohos.agp.colors.HsvColor: void setHue(float)>
<java.security.cert.LDAPCertStoreParameters: void <init>(java.lang.String,int)>
<ohos.aafwk.ability.AbilityLifecycleCallbacks: void onAbilityInactive(ohos.aafwk.ability.Ability)>
<ohos.global.icu.text.DecimalFormat: int getParseMaxDigits()>
<ohos.utils.IntArray: int indexOf(int)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object poll()>
<ark.system.HotFixClassLoader: boolean applyPatch(java.lang.ClassLoader,java.lang.String)>
<ohos.agp.utils.Rect: int[] getCenter()>
<java.nio.file.FileSystem: void close()>
<ohos.global.icu.util.BuddhistCalendar: int handleGetLimit(int,int)>
<java.util.Properties: void storeToXML(java.io.OutputStream,java.lang.String)>
<java.util.stream.IntStream: java.util.stream.IntStream sorted()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getWaitingThreads(java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.window.service.Window getWindow()>
<ohos.media.image.common.MemoryUsagePreference: ohos.media.image.common.MemoryUsagePreference valueOf(java.lang.String)>
<java.util.concurrent.SynchronousQueue: int remainingCapacity()>
<ohos.global.i18n.text.DateFormatUtil: void <init>()>
<java.util.ResourceBundle.Control: boolean needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)>
<java.io.ObjectOutputStream.PutField: void put(java.lang.String,java.lang.Object)>
<ohos.app.Context: void restart()>
<java.nio.Buffer: java.nio.Buffer limit(int)>
<ohos.agp.render.render3d.resources.ResourceManager: java.util.List getMaterials()>
<java.util.Iterator: java.lang.Object next()>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: java.lang.String getAdditionalText()>
<java.text.DecimalFormat: int getMaximumFractionDigits()>
<ohos.location.Locator: void requestEnableLocation()>
<java.time.ZonedDateTime: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<java.lang.Math: float nextUp(float)>
<ohos.media.camera.device.CameraAbility: boolean isSurfaceClassSupported(java.lang.Class)>
<ohos.aafwk.ability.Ability: java.io.FileDescriptor openFile(ohos.utils.net.Uri,java.lang.String)>
<ohos.usb.USBDevicePipe: boolean openByInt(java.lang.String,int)>
<ohos.ai.cv.docrefine.DocCoordinates: void scaleDocCoordinates(float)>
<java.security.cert.CertificateFactory: java.util.Collection generateCRLs(java.io.InputStream)>
<ohos.agp.utils.Circle: void setCenter(ohos.agp.utils.Point)>
<java.lang.Long: int compare(long,long)>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource create(java.util.concurrent.Callable,ohos.media.image.ImageSource.SourceOptions)>
<ohos.agp.components.Component.EstimateSpec: int getMode(int)>
<java.nio.charset.CoderResult: void <clinit>()>
<java.util.stream.Stream: java.util.stream.LongStream flatMapToLong(java.util.function.Function)>
<java.util.zip.ZipInputStream: int available()>
<ohos.aafwk.ability.AbilitySlice: ohos.aafwk.ability.continuation.IContinuationRegisterManager getContinuationRegisterManager()>
<ohos.utils.IntArray: void <init>(int)>
<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()>
<ohos.agp.render.Canvas: void translate(float,float)>
<java.security.spec.PSSParameterSpec: int getSaltLength()>
<java.io.File: boolean delete()>
<ohos.media.camera.device.FrameConfig.Builder: int getFaceDetectionType()>
<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater)>
<java.time.temporal.ChronoField: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal,long)>
<java.nio.file.Path: int compareTo(java.lang.Object)>
<ohos.ai.tts.TtsParams: int getPitch()>
<ohos.event.commonevent.CommonEventSubscribeInfo: boolean marshalling(ohos.utils.Parcel)>
<java.io.StreamTokenizer: java.lang.String toString()>
<ohos.global.icu.text.CurrencyPluralInfo: java.lang.Object clone()>
<ohos.agp.colors.HsvColor: void <init>(float,float,float)>
<javax.crypto.MacSpi: void engineUpdate(byte)>
<ohos.agp.window.service.ComponentPadding: int getSystemComponentPaddingRight()>
<ohos.global.icu.util.Calendar: void roll(int,boolean)>
<ohos.app.AbilityContext: ohos.app.ProcessInfo getProcessInfo()>
<java.util.concurrent.SynchronousQueue: boolean retainAll(java.util.Collection)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayLanguageWithDialect(ohos.global.icu.util.ULocale)>
<ohos.wifi.WifiScanInfo: java.lang.String getCapabilities()>
<ohos.app.Context: boolean isDeviceEncryptedStorage()>
<ohos.org.xml.sax.helpers.DefaultHandler: void skippedEntity(java.lang.String)>
<java.net.CookieHandler: java.net.CookieHandler getDefault()>
<ohos.agp.render.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>
<ohos.media.photokit.metadata.AVStorage.Audio.Playlists: void <clinit>()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.SortedMap headMap(java.lang.Object)>
<ohos.agp.components.Component: void setId(int)>
<ohos.utils.PersistablePacMap: short getShortValue(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)>
<ohos.telephony.RadioInfoManager: int getNetworkSelectionMode(int)>
<ohos.data.resultset.CombinedResultSet: ohos.data.resultset.ResultSet.ColumnType getColumnTypeForIndex(int)>
<ohos.agp.components.TabList: void setIndicatorType(int)>
<ohos.agp.render.opengl.GLES20: void glDeleteTextures(int,java.nio.IntBuffer)>
<ohos.agp.utils.Matrix: void setMatrix(int,int,float)>
<ohos.bundle.CommonEventInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.data.search.schema.PlaceItem: ohos.data.search.schema.PlaceItem setRoad(java.lang.String)>
<ohos.agp.window.dialog.BaseDialog: void onShowing()>
<ohos.aafwk.ability.DataAbilityOperation: boolean isDeleteOperation()>
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.security.Provider)>
<java.util.logging.LoggingMXBean: void setLoggerLevel(java.lang.String,java.lang.String)>
<ohos.agp.utils.Matrix44: void preScale(float)>
<ohos.ai.asr.AsrIntent.AsrAudioSrcType: void <clinit>()>
<java.nio.file.spi.FileSystemProvider: void <init>()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenAcceptBothAsync(java.util.concurrent.CompletionStage,java.util.function.BiConsumer)>
<java.util.ArrayList: java.lang.Object clone()>
<ohos.agp.render.render3d.gltf.GltfImportData: java.util.List getAnimations()>
<java.sql.ResultSet: void setFetchDirection(int)>
<ohos.agp.components.PageSlider: void setCircularModeEnabled(boolean)>
<ohos.agp.render.Canvas: void drawRect(float,float,float,float,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<java.util.concurrent.atomic.AtomicIntegerArray: void set(int,int)>
<ohos.event.notification.NotificationConstant.InputsSource: ohos.event.notification.NotificationConstant.InputsSource[] values()>
<ohos.miscservices.pasteboard.PasteData.Record: ohos.utils.net.Uri getUri()>
<ohos.agp.render.render3d.components.NodeComponent: void <init>()>
<ohos.aafwk.ability.Ability: void onStart(ohos.aafwk.content.Intent)>
<javax.crypto.ExemptionMechanismException: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES32: void glTexParameterIiv(int,int,int[])>
<java.util.BitSet: void set(int,boolean)>
<ohos.agp.components.Text.TextSizeType: ohos.agp.components.Text.TextSizeType valueOf(java.lang.String)>
<ohos.media.camera.params.ParameterKey.Key: int hashCode()>
<java.math.BigInteger: java.math.BigInteger and(java.math.BigInteger)>
<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>
<ohos.media.tubecore.AVTube.DeviceType: void <clinit>()>
<java.lang.Integer: int parseUnsignedInt(java.lang.String,int)>
<ohos.agp.components.Component.RotationEventListener: boolean onRotationEvent(ohos.agp.components.Component,ohos.multimodalinput.event.RotationEvent)>
<ohos.ai.nlu.ResponseResult: void <init>()>
<ohos.accessibility.ability.GesturePathDefine: void setStartPosition(ohos.accessibility.ability.GesturePathPositionDefine)>
<java.lang.Double: int hashCode(double)>
<ohos.aafwk.content.Intent: java.lang.String getAction()>
<ohos.agp.components.Component.DraggedListener: void onDragCancel(ohos.agp.components.Component,ohos.agp.components.DragInfo)>
<java.util.IllegalFormatPrecisionException: void <init>(int)>
<ohos.ai.asr.AsrListener: void onInit(ohos.utils.PacMap)>
<ohos.aafwk.ability.AbilitySlice: boolean stopAbility(ohos.aafwk.content.Intent)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,double)>
<java.util.OptionalDouble: double getAsDouble()>
<ohos.accessibility.ability.DisplayResizeController: float getCenterY()>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,double)>
<java.net.CookieHandler: void <init>()>
<ohos.agp.components.SlideDrawer: boolean isSlideEnabled()>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle collectArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster firstDayOfNextYear()>
<java.sql.Statement: void clearBatch()>
<ohos.agp.components.PageFlipper: ohos.agp.components.Component getCurrentComponent()>
<java.util.SplittableRandom: java.util.SplittableRandom split()>
<ohos.agp.components.MagicLayout.LayoutConfig: void applyToComponent(ohos.agp.components.Component)>
<ohos.media.audio.AudioStreamInfo: int getSampleRate()>
<java.util.ArrayDeque: java.lang.Object removeLast()>
<ohos.net.NetSpecifier: int hashCode()>
<javax.crypto.KeyAgreementSpi: javax.crypto.SecretKey engineGenerateSecret(java.lang.String)>
<ohos.data.distributed.common.FieldNode: boolean isNullable()>
<ohos.global.icu.lang.UCharacter: int digit(int,int)>
<java.lang.Character: int codePointAt(java.lang.CharSequence,int)>
<java.security.SignatureSpi: void engineUpdate(byte)>
<ohos.global.icu.util.Calendar: void internalSet(int,int)>
<ohos.data.rdb.Statement: void setObject(int,java.lang.Object)>
<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel shutdownInput()>
<ohos.agp.utils.Matrix: void mapPoints(float[])>
<ohos.media.common.Format: void <init>(java.util.Map)>
<ohos.global.icu.text.ScientificNumberFormatter: java.lang.String format(java.lang.Object)>
<ohos.data.async.InsertCallback: void onInsertDone(java.lang.Integer,java.lang.Object,java.lang.Long)>
<ohos.agp.utils.Rect: boolean verifyRect()>
<java.security.Identity: void <init>(java.lang.String)>
<java.sql.ResultSet: void updateArray(java.lang.String,java.sql.Array)>
<java.security.cert.PKIXParameters: void setPolicyQualifiersRejected(boolean)>
<java.security.cert.CollectionCertStoreParameters: java.lang.Object clone()>
<ohos.aafwk.content.IntentParams: void <init>()>
<ohos.agp.render.render3d.components.LightComponent: float getIntensity()>
<ohos.nfc.NfcController: boolean closeNfc()>
<ohos.data.resultset.TableResultSet: int getInt(int)>
<ohos.event.notification.NotificationRequest: boolean isShowDeliveryTime()>
<ohos.agp.utils.Matrix: boolean postIDiv(int,int)>
<java.util.Base64.Decoder: byte[] decode(java.lang.String)>
<ohos.global.icu.lang.UCharacter: ohos.global.icu.util.VersionInfo getAge(int)>
<ohos.agp.render.render3d.components.LightComponent: void setSpotInnerAngle(float)>
<ohos.data.rdb.RdbStore: ohos.data.resultset.ResultSet queryWithHook(ohos.data.rdb.AbsRdbPredicates,java.lang.String[],ohos.data.resultset.ResultSetHook)>
<java.sql.Ref: java.lang.Object getObject(java.util.Map)>
<javax.security.cert.Certificate: byte[] getEncoded()>
<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>
<java.time.ZonedDateTime: int getMinute()>
<java.io.PrintWriter: boolean checkError()>
<ohos.agp.render.Path: void moveTo(float,float)>
<ohos.aafwk.ability.continuation.ContinuationDeviceInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.sql.CallableStatement: void setNCharacterStream(java.lang.String,java.io.Reader)>
<ohos.javax.xml.stream.XMLStreamReader: ohos.javax.xml.stream.Location getLocation()>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<ohos.aafwk.ability.Ability: ohos.data.resultset.ResultSet query(ohos.utils.net.Uri,java.lang.String[],ohos.data.dataability.DataAbilityPredicates)>
<java.util.stream.LongStream: boolean anyMatch(java.util.function.LongPredicate)>
<ohos.aafwk.ability.fraction.FractionManager: void popFromStack()>
<ohos.account.OsAccount: ohos.account.OsAccountType getType()>
<ohos.eventhandler.EventHandler: void removeEvent(int,long,java.lang.Object)>
<java.util.Arrays: int binarySearch(short[],int,int,short)>
<ohos.data.search.schema.PlaceItem: java.lang.String getRoad()>
<java.sql.SQLException: void <init>(java.lang.Throwable)>
<java.time.OffsetDateTime: boolean isAfter(java.time.OffsetDateTime)>
<ohos.aafwk.ability.FormBindingData: void addImageData(java.lang.String,byte[])>
<ohos.agp.render.opengl.GLES2Ext: void glGetSamplerParameterIivEXT(int,int,int[])>
<java.nio.channels.SelectionKey: void cancel()>
<java.security.KeyPairGeneratorSpi: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<ohos.agp.components.ComponentTransition: void release()>
<ohos.utils.BasePacMap: void putLongValueArray(java.lang.String,long[])>
<ohos.agp.render.opengl.GLES30: void glProgramBinary(int,int,java.nio.Buffer,int)>
<java.util.Deque: java.lang.Object removeLast()>
<ohos.media.audio.AudioRenderer: boolean write(short[],int,int)>
<ohos.agp.components.Component: void setScaleX(float)>
<ohos.media.audio.AudioRenderer: float getMaxVolume()>
<java.util.concurrent.LinkedBlockingQueue: int size()>
<ohos.sysappcomponents.calendar.entity.Participants: void setParticipantEmail(java.lang.String)>
<ohos.agp.components.Text: void setInputMethodOption(int)>
<ohos.agp.components.ScrollHelper: void startScrollX(int,int)>
<java.nio.file.attribute.DosFileAttributes: boolean isSystem()>
<ohos.agp.components.TimePicker: boolean isSecondShown()>
<ohos.agp.components.ScrollHelper: void <init>()>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 subtract(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<ohos.agp.colors.Color: int hashCode()>
<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>
<ohos.aafwk.ability.fraction.Fraction: ohos.aafwk.ability.Lifecycle getLifecycle()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query greaterThan(java.lang.String,long)>
<java.lang.reflect.Method: boolean equals(java.lang.Object)>
<ohos.telephony.TelephoneNumberUtils: java.lang.String formatPhoneNumber(java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.utils.Matrix44: boolean hasPerspective()>
<java.nio.Buffer: boolean hasArray()>
<ohos.utils.PacMap: void putByteValueArray(java.lang.String,byte[])>
<java.time.Clock: java.time.Clock withZone(java.time.ZoneId)>
<ohos.agp.components.SlideDrawer: void setOpenThreshold(float)>
<ohos.data.preferences.Preferences: ohos.data.preferences.Preferences putFloat(java.lang.String,float)>
<ohos.miscservices.inputmethodability.InputMethodAbility: void onHideKeyboard()>
<java.io.ObjectOutputStream: void close()>
<java.time.LocalDate: java.time.LocalDate minus(long,java.time.temporal.TemporalUnit)>
<java.time.Year: java.time.YearMonth atMonth(int)>
<java.util.Currency: int getDefaultFractionDigits()>
<java.security.KeyStoreSpi: java.security.KeyStore.Entry engineGetEntry(java.lang.String,java.security.KeyStore.ProtectionParameter)>
<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<ohos.bundle.ShortcutInfo: ohos.bundle.ShortcutIntent getIntent()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getPatternInstance(java.lang.String,java.util.Locale)>
<java.util.regex.Pattern: java.lang.String pattern()>
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>
<java.nio.FloatBuffer: int arrayOffset()>
<ohos.utils.zson.ZSONArray: ohos.utils.zson.ZSONArray stringToZSONArray(java.lang.String)>
<java.lang.StringBuffer: java.lang.String substring(int,int)>
<java.util.Optional: int hashCode()>
<java.util.concurrent.locks.ReentrantLock: void lock()>
<java.util.Queue: java.lang.Object poll()>
<java.net.DatagramSocket: void <init>()>
<ohos.global.icu.util.Calendar: int getSkippedWallTimeOption()>
<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>
<java.lang.Thread: void resume()>
<ohos.multimodalinput.event.MmiPoint: float getZ()>
<ohos.aafwk.ability.delegation.TestRunner: void <init>()>
<java.util.logging.Logger: boolean getUseParentHandlers()>
<java.util.SimpleTimeZone: java.lang.String toString()>
<ohos.agp.render.opengl.GLES1X: void glStencilOp(int,int,int)>
<ohos.global.resource.ResourceManager: java.lang.String getMediaPath(int)>
<javax.net.ssl.TrustManagerFactory: void init(javax.net.ssl.ManagerFactoryParameters)>
<java.time.YearMonth: boolean equals(java.lang.Object)>
<java.io.InputStream: int read()>
<java.time.OffsetDateTime: long getLong(java.time.temporal.TemporalField)>
<ohos.app.AbilityContext: ohos.bundle.IBundleManager getBundleManager()>
<ohos.global.icu.text.Replaceable: int length()>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.IntStream ints()>
<ohos.agp.render.PathMeasure: float getLength()>
<java.lang.reflect.Modifier: boolean isFinal(int)>
<java.io.PushbackInputStream: boolean markSupported()>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLInputFactory newFactory(java.lang.String,java.lang.ClassLoader)>
<ohos.media.image.common.ColorSpace: ohos.media.image.common.ColorSpace valueOf(java.lang.String)>
<ohos.agp.render.Path.Direction: void <clinit>()>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: java.nio.FloatBuffer getTexCoords()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query equalTo(java.lang.String,long)>
<ohos.global.icu.text.NumberFormat: int getMaximumFractionDigits()>
<ohos.data.orm.OrmMigration: void <init>(int,int)>
<ohos.wifi.IpInfo: int getNetmask()>
<ohos.agp.utils.Matrix: boolean preservesAxisAlignment()>
<ohos.data.resultset.SharedBlock: boolean allocateRow()>
<ohos.agp.utils.Matrix: void setScaleTranslate(float,float,float,float)>
<ohos.agp.components.SlideDrawer.LayoutConfig: void <init>(int,int)>
<java.util.Arrays: void parallelSort(int[],int,int)>
<ohos.media.camera.device.Camera: void stopLoopingCapture()>
<java.time.MonthDay: int getMonthValue()>
<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>
<ohos.utils.PlainArray: boolean isEmpty()>
<ohos.data.orm.Blob: long position(java.sql.Blob,long)>
<java.util.concurrent.CompletableFuture: boolean isCancelled()>
<java.util.function.Consumer: void accept(java.lang.Object)>
<ohos.agp.transition.TransitionScheduler: void startTransition(ohos.agp.transition.TransitionComponents)>
<java.sql.ResultSet: void updateNull(int)>
<java.io.DataInput: int readInt()>
<ohos.agp.components.AttrHelper: float getFontRatio(ohos.app.Context)>
<java.util.concurrent.atomic.DoubleAdder: long longValue()>
<ohos.utils.PacMap: int getIntValue(java.lang.String)>
<ohos.agp.components.ProgressBar: int getDividerLineThickness()>
<java.util.SortedMap: java.lang.Object firstKey()>
<java.lang.reflect.Executable: int getParameterCount()>
<ohos.global.icu.text.LocaleDisplayNames: java.lang.String keyValueDisplayName(java.lang.String,java.lang.String)>
<ohos.agp.text.SimpleTextLayout: void <init>(java.lang.String,ohos.agp.render.Paint,ohos.agp.utils.Rect,int)>
<ohos.agp.window.service.ComponentPadding: int getUnchangedPaddingTop()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThan(java.lang.String,java.util.Calendar)>
<javax.lang.model.util.SimpleTypeVisitor6: java.lang.Object visitExecutable(javax.lang.model.type.ExecutableType,java.lang.Object)>
<ohos.agp.components.SearchBar: boolean getIconifiedState()>
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDate dateNow(java.time.Clock)>
<ohos.global.icu.util.TimeZone: java.lang.String[] getAvailableIDs(java.lang.String)>
<java.nio.ByteBuffer: java.nio.LongBuffer asLongBuffer()>
<java.util.jar.Pack200.Packer: void pack(java.util.jar.JarFile,java.io.OutputStream)>
<java.time.chrono.Chronology: java.time.chrono.ChronoPeriod period(int,int,int)>
<ohos.utils.zson.ZSONArray: java.lang.Object[] toArray(java.lang.Object[])>
<ohos.media.image.ImagePacker: boolean initializePacking(byte[],int,ohos.media.image.ImagePacker.PackingOptions)>
<ohos.event.commonevent.CommonEventPublishInfo: java.lang.String toString()>
<ohos.javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String)>
<ohos.sysappcomponents.contact.entity.Organization: void setTitle(java.lang.String)>
<java.sql.Statement: int executeUpdate(java.lang.String,java.lang.String[])>
<ohos.agp.components.webengine.ScaleController: boolean isGestureScalable()>
<ohos.agp.render.render3d.math.Quaternion: int hashCode()>
<java.security.cert.CollectionCertStoreParameters: java.util.Collection getCollection()>
<ohos.agp.components.webengine.WebView: java.lang.String getFirstRequestUrl()>
<java.util.concurrent.atomic.AtomicIntegerArray: int get(int)>
<ohos.bundle.FormInfo: boolean isDefaultForm()>
<java.lang.StrictMath: double atan2(double,double)>
<ohos.event.notification.NotificationSortingMap: boolean marshalling(ohos.utils.Parcel)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: ohos.aafwk.ability.AbilitySlice getCurrentAbilitySlice(ohos.aafwk.ability.Ability)>
<java.io.FilterInputStream: void <init>(java.io.InputStream)>
<java.util.logging.XMLFormatter: java.lang.String getHead(java.util.logging.Handler)>
<java.io.PushbackReader: void unread(int)>
<ohos.agp.utils.Matrix: void mapPoints(float[],int,float[],int,int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,java.sql.Timestamp)>
<java.time.zone.ZoneOffsetTransitionRule: java.time.Month getMonth()>
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasQueuedThreads()>
<java.sql.SQLException: java.util.Iterator iterator()>
<javax.sql.RowSetInternal: java.sql.ResultSet getOriginalRow()>
<ohos.agp.components.Picker: void setSelectedTextFont(ohos.agp.text.Font)>
<ohos.agp.render.opengl.GLES30: void glUniform4ui(int,int,int,int,int)>
<javax.net.ssl.X509ExtendedTrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)>
<ohos.agp.utils.Matrix: float getTranslateY()>
<javax.crypto.ExemptionMechanismSpi: byte[] engineGenExemptionBlob()>
<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>
<ohos.rpc.RemoteException: void <init>()>
<ohos.utils.geo.RectFloat: void fuse(ohos.utils.geo.RectFloat)>
<ohos.agp.components.SearchBar: ohos.agp.components.Image getSubmitButton()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notBetween(java.lang.String,java.util.Date,java.util.Date)>
<ohos.aafwk.content.Intent: void removeEntity(java.lang.String)>
<ohos.wifi.p2p.WifiP2pGroup: int getNetId()>
<java.util.List: int hashCode()>
<ohos.agp.components.BaseItemProvider: void notifyDataSetItemRangeRemoved(int,int)>
<ohos.agp.components.Text: int getSelectionRightBubbleHeight()>
<java.sql.DatabaseMetaData: boolean nullPlusNonNullIsNull()>
<ohos.app.Context: java.lang.String getProcessName()>
<java.security.cert.CertStoreException: void <init>(java.lang.String,java.lang.Throwable)>
<java.lang.String: int indexOf(java.lang.String,int)>
<ohos.sensor.agent.CategoryMotionAgent: java.util.List getAllSensors(int)>
<java.time.Clock: java.time.Clock systemUTC()>
<javax.lang.model.type.MirroredTypesException: java.util.List getTypeMirrors()>
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.components.TableLayout: void setRowCount(int)>
<java.lang.reflect.Executable: java.lang.Class[] getExceptionTypes()>
<ohos.global.icu.math.MathContext: boolean getLostDigits()>
<javax.net.SocketFactory: javax.net.SocketFactory getDefault()>
<ohos.agp.components.webengine.WebView: void doFling(int,int)>
<java.sql.Blob: void free()>
<ohos.agp.components.Switch: int getThumbHeight()>
<javax.crypto.BadPaddingException: void <init>()>
<ohos.global.icu.text.UCharacterIterator: void <init>()>
<ohos.agp.text.TextForm: int getTextColor()>
<java.lang.Character.UnicodeScript: java.lang.Character.UnicodeScript forName(java.lang.String)>
<java.io.FileReader: void <init>(java.lang.String)>
<ohos.agp.components.ListContainer.ItemClickedListener: void onItemClicked(ohos.agp.components.ListContainer,ohos.agp.components.Component,int,long)>
<ohos.global.icu.math.MathContext: void <init>(int,int,boolean)>
<ohos.agp.utils.DimensFloat: int getProductToInt()>
<ohos.bundle.InstallerCallback: void <init>()>
<ohos.media.audio.AudioCapturerInfo.AudioInputSource: ohos.media.audio.AudioCapturerInfo.AudioInputSource getEnum(int)>
<ohos.rpc.MessageOption: void setWaitTime(int)>
<ohos.agp.components.Component: boolean isScrollbarFadingOn()>
<ohos.bundle.InstallParam: void <init>(int,int)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: boolean marshalling(ohos.utils.Parcel)>
<java.net.Socket: void shutdownInput()>
<ohos.media.common.Format: int getIntValue(java.lang.String)>
<ohos.aafwk.ability.Ability: void onLeaveForeground()>
<ohos.global.icu.text.DateFormatSymbols: void setZodiacNames(java.lang.String[],int,int)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistEra eraOf(int)>
<ohos.miscservices.pasteboard.PasteData: java.lang.CharSequence getTag()>
<ohos.data.resultset.ResultSet: boolean goToNextRow()>
<java.net.URLStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>
<java.util.concurrent.atomic.AtomicInteger: void set(int)>
<java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
<java.util.HashSet: boolean remove(java.lang.Object)>
<java.util.TreeSet: java.lang.Object first()>
<ohos.agp.animation.AnimatorValue: void <init>()>
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getContextualShaper(java.util.Set)>
<javax.sql.RowSet: void setMaxFieldSize(int)>
<ohos.app.AbilityContext: void unlockMission()>
<ohos.global.icu.lang.UCharacter: boolean isTitleCase(int)>
<javax.tools.Diagnostic: long getPosition()>
<ohos.hiviewdfx.Debug: int getProcessSwappedOutSum()>
<ohos.agp.utils.RectFloat.RotationEnum: ohos.agp.utils.RectFloat.RotationEnum[] values()>
<ohos.sysappcomponents.contact.entity.PostalAddress: void setCountry(java.lang.String)>
<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>
<java.util.concurrent.atomic.AtomicLongArray: long getAndIncrement(int)>
<ohos.multimodalinput.event.SpeechEvent: java.util.Optional createEvent(long,int,java.lang.String)>
<java.time.LocalDateTime: java.time.LocalDateTime of(int,java.time.Month,int,int,int,int,int)>
<ohos.bundle.LauncherShortcutInfo: java.util.List getIntents()>
<ohos.global.i18n.phonenumbers.PhoneNumberAttribution: java.lang.String getAttribute(java.lang.String,java.lang.String,java.util.Locale)>
<java.io.StreamTokenizer: int lineno()>
<java.nio.CharBuffer: java.nio.CharBuffer put(char[],int,int)>
<ohos.global.icu.text.CaseMap.Title: java.lang.Appendable apply(java.util.Locale,ohos.global.icu.text.BreakIterator,java.lang.CharSequence,java.lang.Appendable,ohos.global.icu.text.Edits)>
<java.io.LineNumberInputStream: void <init>(java.io.InputStream)>
<javax.sql.RowSetMetaData: void setColumnDisplaySize(int,int)>
<java.math.BigDecimal: int scale()>
<javax.tools.Diagnostic: java.lang.Object getSource()>
<ohos.biometrics.authentication.BiometricAuthentication: java.security.Signature getSecureObjectSignature()>
<javax.crypto.Mac: void update(byte)>
<ohos.agp.render.render3d.RenderLoop: void release()>
<java.sql.Array: java.sql.ResultSet getResultSet(java.util.Map)>
<ohos.org.xml.sax.XMLReader: java.lang.Object getProperty(java.lang.String)>
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndUpdate(int,java.util.function.UnaryOperator)>
<ohos.agp.components.AttrSet: java.util.Optional getStyle()>
<ohos.agp.render.render3d.resources.AnimationPlayback: void setWeight(float)>
<ohos.agp.animation.AnimatorGroup: void setLoopedListener(ohos.agp.animation.Animator.LoopedListener)>
<ohos.sensor.agent.CategoryOtherAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryOtherDataCallback,ohos.sensor.bean.CategoryOther,long)>
<ohos.aafwk.ability.Ability: java.lang.String[] getFileTypes(ohos.utils.net.Uri,java.lang.String)>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>
<ohos.global.icu.util.ULocale: java.lang.String getVariant(java.lang.String)>
<java.util.concurrent.BlockingDeque: java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit)>
<java.lang.ref.Reference: void clear()>
<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>
<java.time.temporal.TemporalField: boolean isDateBased()>
<ohos.agp.components.AttrSet: int getLength()>
<java.util.Vector: void addElement(java.lang.Object)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>
<java.time.chrono.ThaiBuddhistEra: void <clinit>()>
<ohos.javax.xml.validation.Validator: void reset()>
<ohos.system.OsHelper: void setEnvironmentVar(java.lang.String,java.lang.String,boolean)>
<ohos.rpc.RemoteProxy: void slowPathDump(java.io.FileDescriptor,java.lang.String[])>
<ohos.global.icu.lang.UCharacter: int getCharFromNameAlias(java.lang.String)>
<ohos.bundle.ElementName: boolean equals(java.lang.Object)>
<ohos.utils.geo.RectFloat: boolean isInclude(ohos.utils.geo.Point)>
<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>
<ohos.agp.render.render3d.math.Vector4: void <init>(float,float,float,float)>
<java.security.cert.CertPathValidatorException.BasicReason: java.security.cert.CertPathValidatorException.BasicReason[] values()>
<java.sql.ResultSet: long getLong(int)>
<ohos.net.HttpProxy: java.lang.String getHost()>
<java.nio.channels.SeekableByteChannel: java.nio.channels.SeekableByteChannel truncate(long)>
<javax.sql.RowSet: void setCharacterStream(java.lang.String,java.io.Reader,int)>
<java.util.concurrent.atomic.DoubleAccumulator: double getThenReset()>
<ohos.global.configuration.Configuration: int hashCode()>
<ohos.sysappcomponents.contact.ContactsHelper: java.util.List queryGroups(ohos.sysappcomponents.contact.entity.Holder)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,short)>
<ohos.global.resource.solidxml.Theme: ohos.global.resource.solidxml.Pattern getPatternValue(java.lang.String)>
<ohos.media.common.sessioncore.AVPlaybackState: long getAVPlaybackActions()>
<ohos.rpc.RemoteObject: boolean removeDeathRecipient(ohos.rpc.IRemoteObject.DeathRecipient,int)>
<ohos.utils.PlainArray: void append(int,java.lang.Object)>
<java.lang.reflect.Constructor: int getModifiers()>
<java.security.Permission: void checkGuard(java.lang.Object)>
<java.nio.file.FileSystems: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>
<ohos.agp.render.opengl.GLES31: void glGetMultisamplefv(int,int,float[])>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setElementName(java.lang.String,java.lang.String)>
<ohos.agp.components.ComponentContainer: void addComponent(ohos.agp.components.Component,int,ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.utils.LongPlainArray: java.lang.Object valueAt(int)>
<ohos.agp.components.IndexBar: ohos.agp.render.Paint getSelectedPaint()>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.text.UnicodeSet getTailoredSet()>
<ohos.bluetooth.BluetoothHost: int getBleCapabilities()>
<ohos.net.SocketCertificates: void <init>(int,int,int)>
<ohos.workscheduler.WorkScheduler: ohos.rpc.IRemoteObject onConnect(ohos.aafwk.content.Intent)>
<java.util.Spliterators.AbstractDoubleSpliterator: java.util.Spliterator.OfPrimitive trySplit()>
<ohos.usb.USBRequest: boolean queue(java.nio.ByteBuffer)>
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinTask pollNextLocalTask()>
<ohos.miscservices.download.DownloadSession.DownloadInfo: java.lang.String toString()>
<ohos.eventhandler.InnerEvent: ohos.eventhandler.InnerEvent get(ohos.eventhandler.InnerEvent)>
<java.time.OffsetDateTime: java.time.OffsetDateTime minusNanos(long)>
<ohos.global.icu.text.MessagePattern: boolean hasNumberedArguments()>
<ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder: ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder setSecKeyAuthDuration(int)>
<java.util.concurrent.CountedCompleter: java.util.concurrent.CountedCompleter nextComplete()>
<ohos.media.audio.AudioCapturer: boolean start()>
<ohos.media.recorder.Recorder: boolean start()>
<ohos.agp.utils.Line: void setEmpty()>
<ohos.global.icu.text.UnicodeSetSpanner: java.lang.String deleteFrom(java.lang.CharSequence)>
<ohos.data.search.schema.MusicItem: ohos.data.search.schema.MusicItem setDuration(java.lang.Integer)>
<ohos.global.icu.util.TimeZone: int getOffset(long)>
<javax.lang.model.util.Elements: boolean overrides(javax.lang.model.element.ExecutableElement,javax.lang.model.element.ExecutableElement,javax.lang.model.element.TypeElement)>
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getCrtCoefficient()>
<ohos.media.audio.AudioInterrupt: void setInterruptListener(ohos.media.audio.AudioInterrupt.InterruptListener)>
<ohos.nfc.NfcController.ReaderModeCallbackStub: void onTagDiscovered(ohos.nfc.tag.TagInfo)>
<ohos.javax.xml.validation.Schema: ohos.javax.xml.validation.ValidatorHandler newValidatorHandler()>
<ohos.usb.USBDevice: int getDeviceId()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThanOrEqualTo(java.lang.String,java.lang.String)>
<ohos.media.photokit.common.AVLoggerConnectionClient: void onLoggerConnected()>
<ohos.agp.render.render3d.components.CameraComponent: int getAdditionalFlags()>
<ohos.sysappcomponents.contact.entity.Contact: void setPortrait(ohos.sysappcomponents.contact.entity.Portrait)>
<ohos.media.image.PixelMap: void finalize()>
<ohos.event.notification.NotificationUserInput.Builder: void <init>(java.lang.String)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndAccumulate(java.lang.Object,long,java.util.function.LongBinaryOperator)>
<ohos.data.search.connect.ServiceConnectCallback: void onConnect()>
<java.io.ObjectInputStream: void close()>
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)>
<java.security.cert.X509CRL: java.lang.String getSigAlgOID()>
<java.util.jar.JarFile: void <init>(java.lang.String)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenAcceptBothAsync(java.util.concurrent.CompletionStage,java.util.function.BiConsumer)>
<ohos.utils.LongPlainArray: void <init>()>
<java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.AsynchronousByteChannel)>
<ohos.data.orm.Blob: boolean equals(java.lang.Object)>
<java.time.OffsetDateTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<java.util.Scanner: java.util.Locale locale()>
<javax.net.ssl.HandshakeCompletedEvent: java.lang.String getCipherSuite()>
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>
<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>
<ohos.utils.geo.Rect: void shrink(int,int)>
<ohos.media.sessioncore.AVController.PlayControls: void playNext()>
<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(int,float)>
<java.text.CollationElementIterator: int primaryOrder(int)>
<java.security.interfaces.RSAPrivateKey: java.math.BigInteger getPrivateExponent()>
<ohos.media.image.PixelMap: void <init>(long,long)>
<java.lang.SecurityManager: java.lang.Class currentLoadedClass()>
<java.security.cert.CertStoreException: void <init>()>
<ohos.nfc.oma.Reader: void closeSessions()>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType wrap()>
<ohos.miscservices.wallpaper.WallpaperColorsCollection: ohos.agp.colors.RgbColor getNthRepresentativeColor(int)>
<ohos.agp.render.opengl.GLES20: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<java.util.jar.Manifest: void clear()>
<java.util.zip.CRC32: void update(java.nio.ByteBuffer)>
<java.util.zip.Deflater: int getAdler()>
<java.util.HashMap: void <init>()>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat copy(int,int)>
<ohos.media.image.PixelMap: int getBytesNumberPerRow()>
<javax.net.ssl.SSLEngine: int getPeerPort()>
<ohos.media.common.StorageProperty: java.io.FileDescriptor getRecorderFd()>
<ohos.media.common.VideoProperty: int getRecorderBitRate()>
<ohos.global.i18n.LocaleHelperUtils: java.lang.String replaceCountryName(java.util.Locale,java.util.Locale,java.lang.String)>
<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>
<java.sql.SQLRecoverableException: void <init>(java.lang.Throwable)>
<ohos.bundle.IBundleManager: java.util.List getSystemAvailableCapabilities()>
<java.time.Instant: boolean isBefore(java.time.Instant)>
<java.util.concurrent.BlockingDeque: java.util.Iterator iterator()>
<java.util.TimerTask: void run()>
<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>
<ohos.agp.utils.RectFloat: void translate(float,float)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>
<ohos.hiviewdfx.HiChecker: void addRule(java.util.EnumSet)>
<java.net.URLStreamHandler: void <init>()>
<javax.crypto.ExemptionMechanism: java.lang.String getName()>
<java.lang.Character: int charCount(int)>
<ohos.javax.xml.stream.XMLResolver: java.lang.Object resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getRecurDate()>
<ohos.media.common.Format: void setObjectFormat(java.lang.String,java.lang.Object)>
<javax.net.ssl.SSLSession: java.lang.String getPeerHost()>
<java.util.Random: java.util.stream.LongStream longs(long)>
<ohos.media.image.ImageSource.UpdateMode: void <clinit>()>
<ohos.agp.render.Paint: ohos.agp.utils.Rect getTextBounds(java.lang.String)>
<ohos.global.icu.util.TimeZone: java.lang.String getDisplayName(boolean,int)>
<java.util.concurrent.atomic.LongAdder: void <init>()>
<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>
<ohos.media.audio.SoundEffect.SoundEffectInfo: java.util.UUID getType()>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: ohos.event.notification.NotificationRequest.NotificationPictureContent setExpandedTitle(java.lang.String)>
<java.util.logging.StreamHandler: void publish(java.util.logging.LogRecord)>
<ohos.nfc.NfcController: void unsetReaderMode(ohos.aafwk.ability.Ability)>
<ohos.nfc.tag.NfcVTag: byte getDsfId()>
<ohos.data.distributed.common.KvStoreResultSet: boolean isEnded()>
<ohos.app.Context: void startAbility(ohos.aafwk.content.Intent,int,ohos.aafwk.ability.startsetting.AbilityStartSetting)>
<ohos.data.search.schema.Schema: java.lang.String getSubtitle()>
<ohos.vibrator.agent.VibratorAgent: void <init>()>
<java.util.stream.LongStream: java.util.stream.LongStream limit(long)>
<ohos.sysappcomponents.contact.entity.PostalAddress: void setCustomLabelName(java.lang.String)>
<ohos.agp.render.Shader.TileMode: ohos.agp.render.Shader.TileMode valueOf(java.lang.String)>
<java.net.InterfaceAddress: short getNetworkPrefixLength()>
<ohos.data.orm.OrmMigration: int getBeginVersion()>
<java.time.LocalTime: java.time.LocalTime plus(long,java.time.temporal.TemporalUnit)>
<java.time.format.FormatStyle: java.time.format.FormatStyle valueOf(java.lang.String)>
<java.time.OffsetDateTime: java.time.OffsetDateTime now(java.time.ZoneId)>
<java.util.Scanner: java.util.regex.Pattern delimiter()>
<ohos.agp.components.DependentLayout: void setIgnoreGravity(int)>
<ohos.aafwk.ability.OperationExecuteException: void <init>()>
<ohos.event.notification.NotificationRequest: ohos.agp.components.ComponentProvider getCustomFloatView()>
<ohos.agp.utils.DimensFloat: int getMinToInt()>
<java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.AsynchronousByteChannel)>
<ohos.global.resource.RawFileEntry: ohos.global.resource.Entry[] getEntries()>
<ohos.agp.render.opengl.GLES2Ext: void glGetSamplerParameterIuivEXT(int,int,int[])>
<ohos.global.icu.text.UnicodeSet: int matches(ohos.global.icu.text.Replaceable,int[],int,boolean)>
<java.time.ZoneId: java.time.ZoneId of(java.lang.String,java.util.Map)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,int)>
<java.time.LocalDateTime: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<javax.tools.ForwardingFileObject: java.io.Writer openWriter()>
<ohos.miscservices.download.DownloadSession.DownloadInfo: void <init>()>
<java.lang.Thread: long getId()>
<ohos.media.audio.AudioCapturer: void <init>(ohos.media.audio.AudioCapturerInfo)>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.ToastDialog setComponent(ohos.agp.components.Component)>
<ohos.agp.components.TickTimer.TickListener: void onTickTimerUpdate(ohos.agp.components.TickTimer)>
<java.lang.reflect.TypeVariable: java.lang.String getName()>
<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>
<ohos.global.icu.util.CurrencyAmount: void <init>(double,ohos.global.icu.util.Currency)>
<ohos.aafwk.ability.ProcessErrorInfo: void <init>()>
<ohos.ai.asr.AsrIntent: void setEngineType(ohos.ai.asr.AsrIntent.AsrEngineType)>
<ohos.biometrics.authentication.BiometricAuthentication.AuthType: void <clinit>()>
<ohos.bundle.ApplicationInfo: int getLabelId()>
<ohos.agp.utils.RectFloat: boolean isIntersect(float,float,float,float)>
<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>
<ohos.agp.components.PageSlider.PageChangedListener: void onPageChosen(int)>
<java.time.LocalDate: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<ohos.agp.components.SlideDrawer: int getSlideDistance(ohos.agp.components.SlideDrawer.SlideDirection)>
<java.time.ZoneOffset: int getTotalSeconds()>
<java.util.AbstractMap: void <init>()>
<java.lang.System: java.lang.String mapLibraryName(java.lang.String)>
<ohos.biometrics.authentication.BiometricAuthentication: int cancelAuthenticationAction()>
<java.security.SecurityPermission: void <init>(java.lang.String)>
<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class,boolean)>
<ohos.event.notification.NotificationRequest.NotificationContent: void <init>(ohos.event.notification.NotificationRequest.NotificationLongTextContent)>
<ohos.location.RequestParam: void setDistanceInterval(int)>
<ohos.media.common.sessioncore.AVSessionCallback: void onPrepareToPlayByUri(ohos.utils.net.Uri,ohos.utils.PacMap)>
<java.util.LongSummaryStatistics: long getMax()>
<java.time.temporal.Temporal: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<java.util.Calendar.Builder: java.util.Calendar.Builder setLenient(boolean)>
<ohos.agp.components.PageSliderIndicator.IndicatorSelectionHandler: void <init>()>
<java.sql.Timestamp: void <init>(int,int,int,int,int,int,int)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: void await()>
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getY()>
<java.lang.Character: byte getDirectionality(char)>
<java.nio.channels.ReadPendingException: void <init>()>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withLocale(java.util.Locale)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal setScale(int,int)>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate plus(java.time.temporal.TemporalAmount)>
<ohos.agp.render.render3d.Engine.RenderBackend: ohos.agp.render.render3d.Engine.RenderBackend[] values()>
<java.nio.file.Files: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>
<java.util.AbstractList: boolean equals(java.lang.Object)>
<ohos.global.icu.text.ConstrainedFieldPosition: java.text.Format.Field getField()>
<javax.crypto.spec.OAEPParameterSpec: java.lang.String getDigestAlgorithm()>
<ohos.hiviewdfx.FaultLogger.FaultLogInfo: long getTimestamp()>
<ohos.data.rdb.RdbStore: ohos.data.resultset.ResultSet queryByStep(ohos.data.rdb.AbsRdbPredicates,java.lang.String[])>
<java.lang.ThreadLocal: java.lang.Object get()>
<java.net.InterfaceAddress: java.lang.String toString()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean hasContended()>
<java.util.concurrent.BlockingDeque: void putFirst(java.lang.Object)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setType(java.lang.String)>
<ohos.bundle.BundleInfo: boolean getCompressNativeLibs()>
<ohos.data.rdb.StoreConfig: ohos.data.rdb.StoreConfig.SyncMode getSyncMode()>
<ohos.media.audio.SoundEffect: int getEffectId()>
<ohos.agp.window.service.Window: ohos.agp.utils.Rect getBoundRect()>
<ohos.bundle.FormInfo: java.lang.String getDeepLink()>
<ohos.media.camera.device.FrameResult: boolean isFullResult()>
<ohos.app.AbilityContext: java.lang.String getAppType()>
<java.net.FileNameMap: java.lang.String getContentTypeFor(java.lang.String)>
<java.nio.channels.Channel: boolean isOpen()>
<java.sql.SQLInput: java.lang.String readNString()>
<ohos.sysappcomponents.contact.entity.ImAddress: java.lang.String getLabelName()>
<java.util.Locale: java.lang.String getCountry()>
<java.util.stream.Collectors: java.util.stream.Collector summarizingLong(java.util.function.ToLongFunction)>
<ohos.agp.text.Font: void <clinit>()>
<ohos.agp.colors.ColorConverter: ohos.agp.colors.CmykColor toCmyk(ohos.agp.colors.Color)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setNotificationId(int)>
<ohos.media.audio.AudioManager: int getMinVolume(ohos.media.audio.AudioManager.AudioVolumeType)>
<java.time.Instant: java.time.Instant plus(long,java.time.temporal.TemporalUnit)>
<ohos.global.icu.lang.UCharacter: java.lang.String getPropertyName(int,int)>
<java.lang.StringBuilder: void trimToSize()>
<ohos.agp.render.opengl.GLES1X: void glMultiTexCoord4x(int,int,int,int,int)>
<ohos.global.icu.util.GregorianCalendar: int handleGetLimit(int,int)>
<java.security.cert.X509CertSelector: void setIssuer(java.lang.String)>
<ohos.global.i18n.utils.TextRecognitionUtils: int[] getPhoneNumbers(java.lang.String,java.lang.String)>
<javax.net.ssl.SSLParameters: void setServerNames(java.util.List)>
<ohos.security.seoperator.SEOperatorAbs: int commonExecute(java.lang.String,java.lang.String,java.lang.String)>
<java.time.chrono.JapaneseChronology: void <clinit>()>
<ohos.data.rdb.StoreConfig.StorageMode: int getValue()>
<ohos.aafwk.ability.AbilityPackage: void onEnd()>
<ohos.agp.components.TableLayout: ohos.agp.components.TableLayout.Specification specification(int,int)>
<java.nio.file.FileStore: java.lang.Object getAttribute(java.lang.String)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty moveByY(float)>
<ohos.agp.utils.Rect: int getWidth()>
<ohos.global.icu.lang.UCharacter: int getCharFromExtendedName(java.lang.String)>
<ohos.agp.components.ListContainer: boolean getBoundarySwitch()>
<ohos.global.icu.text.TimeZoneFormat: java.lang.String getGMTZeroFormat()>
<ohos.agp.render.PdfDisplay.Page: void show(ohos.media.image.PixelMap)>
<ohos.bundle.LauncherAbilityInfo: void <init>(ohos.app.Context,ohos.bundle.AbilityInfo,int)>
<ohos.bundle.AbilityInfo: boolean isVisible()>
<java.sql.ResultSet: void updateCharacterStream(int,java.io.Reader)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object peekLast()>
<ohos.global.icu.util.LocaleData.MeasurementSystem: void <clinit>()>
<javax.lang.model.util.ElementScanner7: void <init>(java.lang.Object)>
<ohos.data.distributed.common.Options: boolean isCreateIfMissing()>
<java.util.Collections: void reverse(java.util.List)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThanOrEqualTo(java.lang.String,java.lang.String)>
<java.util.prefs.AbstractPreferences: long getLong(java.lang.String,long)>
<java.nio.CharBuffer: java.nio.CharBuffer append(char)>
<ohos.agp.render.opengl.GLES1X: void glDepthRangef(float,float)>
<ohos.agp.components.TimePicker: void setAmString(java.lang.String)>
<ohos.utils.zson.ZSONArray: boolean addAll(java.util.Collection)>
<ohos.utils.PacMap: boolean getBooleanValue(java.lang.String,boolean)>
<java.util.Currency: java.util.Currency getInstance(java.util.Locale)>
<ohos.global.icu.text.AlphabeticIndex: java.util.Iterator iterator()>
<ohos.bundle.ElementName: void <init>()>
<java.time.Period: java.time.temporal.Temporal addTo(java.time.temporal.Temporal)>
<ohos.agp.render.render3d.Engine.RenderMode: void <clinit>()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates in(java.lang.String,double[])>
<ohos.global.icu.util.GregorianCalendar: int handleGetMonthLength(int,int)>
<ohos.agp.text.RichTextBuilder: void <init>()>
<ohos.event.notification.NotificationSlot: void setLockscreenVisibleness(int)>
<java.text.DecimalFormat: void setGroupingUsed(boolean)>
<ohos.sysappcomponents.contact.entity.ImAddress: void <clinit>()>
<javax.tools.ForwardingJavaFileManager: void <init>(javax.tools.JavaFileManager)>
<java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator()>
<ohos.agp.components.ListContainer: void addComponent(ohos.agp.components.Component,ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.time.LocalTime: java.time.LocalTime parse(java.lang.CharSequence)>
<java.util.Set: java.lang.Object[] toArray()>
<java.util.stream.IntStream: int reduce(int,java.util.function.IntBinaryOperator)>
<java.security.AlgorithmConstraints: boolean permits(java.util.Set,java.lang.String,java.security.AlgorithmParameters)>
<java.io.ObjectInputStream: byte readByte()>
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>
<ohos.aafwk.content.Intent: boolean operationEquals(ohos.aafwk.content.Intent)>
<java.text.FieldPosition: java.lang.String toString()>
<ohos.sensor.agent.CategoryLightAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback)>
<ohos.agp.components.Component: ohos.agp.components.Component.LayoutDirection getLayoutDirection()>
<ohos.media.audio.ToneDescriptor.ToneType: ohos.media.audio.ToneDescriptor.ToneType valueOf(java.lang.String)>
<java.security.spec.PSSParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>
<ohos.account.app.AppAccountAbility: boolean enableAppAccess(java.lang.String,java.lang.String)>
<ohos.net.NetManager: boolean setAppNet(ohos.net.NetHandle)>
<ohos.global.icu.math.BigDecimal: int hashCode()>
<java.io.FilePermission: boolean implies(java.security.Permission)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object peekFirst()>
<java.util.logging.LogRecord: void setSourceMethodName(java.lang.String)>
<ohos.media.image.Image: void finalize()>
<java.time.DayOfWeek: java.time.DayOfWeek[] values()>
<ohos.agp.utils.Matrix: boolean postSkew(float,float,float,float)>
<ohos.global.icu.text.TimeZoneFormat.GMTOffsetPatternType: ohos.global.icu.text.TimeZoneFormat.GMTOffsetPatternType valueOf(java.lang.String)>
<java.util.concurrent.ForkJoinPool: int getRunningThreadCount()>
<ohos.aafwk.ability.AbilitySlice: ohos.agp.window.service.WindowManager.LayoutConfig getLayoutParams()>
<ohos.media.photokit.metadata.AVStorage.Audio.Artists: ohos.utils.net.Uri fetchResource(java.lang.String)>
<java.lang.StrictMath: int min(int,int)>
<java.lang.ProcessBuilder: java.util.Map environment()>
<ohos.agp.render.PixelMapHolder: void resetPixelMap(ohos.media.image.PixelMap)>
<java.net.SocketOptions: void setOption(int,java.lang.Object)>
<ohos.media.sessioncore.AVController.PlayControls: void prepareToPlay()>
<ohos.global.icu.text.PluralFormat: void <init>(ohos.global.icu.util.ULocale,ohos.global.icu.text.PluralRules)>
<java.io.PushbackReader: boolean markSupported()>
<ohos.agp.components.PageFlipper: void setOutgoingAnimation(ohos.agp.animation.AnimatorProperty)>
<ohos.wifi.WifiScanInfo: long getTimestamp()>
<java.util.zip.ZipFile: int size()>
<ohos.ai.tts.TtsClient: void destroy()>
<java.util.jar.Attributes.Name: boolean equals(java.lang.Object)>
<java.util.concurrent.atomic.AtomicStampedReference: boolean compareAndSet(java.lang.Object,java.lang.Object,int,int)>
<javax.lang.model.element.Name: boolean contentEquals(java.lang.CharSequence)>
<ohos.data.rdb.RdbConstraintException: void <init>()>
<ohos.data.rdb.RdbStore: boolean isInTransaction()>
<ohos.bundle.FormInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getWeekdays()>
<ohos.telephony.SimInfoManager: int getSimState(int)>
<ohos.utils.IntArray: java.lang.Integer[] toIntegerArray()>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object peek()>
<java.io.ObjectOutputStream: java.lang.Object replaceObject(java.lang.Object)>
<ohos.global.icu.text.DisplayContext: void <clinit>()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendLocalized(java.time.format.FormatStyle,java.time.format.FormatStyle)>
<ohos.global.config.ConfigType: ohos.global.config.ConfigType valueOf(java.lang.String)>
<javax.lang.model.type.UnknownTypeException: void <init>(javax.lang.model.type.TypeMirror,java.lang.Object)>
<java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>
<java.util.concurrent.LinkedBlockingDeque: void push(java.lang.Object)>
<ohos.event.intentagent.IntentAgentConstant.OperationType: ohos.event.intentagent.IntentAgentConstant.OperationType valueOf(java.lang.String)>
<ohos.agp.components.TabList.Tab: void <init>(ohos.agp.components.TabList,ohos.app.Context,ohos.agp.components.AttrSet)>
<java.time.LocalDate: java.time.LocalDate plus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.utils.Line: double getDistance()>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>
<ohos.data.rdb.ValuesBucket: void putFloat(java.lang.String,java.lang.Float)>
<java.time.Year: java.time.Year minus(long,java.time.temporal.TemporalUnit)>
<java.time.LocalTime: java.time.LocalTime now(java.time.ZoneId)>
<ohos.global.resource.solidxml.Pattern: void <init>()>
<java.io.RandomAccessFile: void writeByte(int)>
<ohos.agp.render.opengl.GLES30: void glDeleteSamplers(int,int[])>
<ohos.global.icu.util.Currency.CurrencyUsage: void <clinit>()>
<ohos.org.xml.sax.SAXParseException: void <init>(java.lang.String,ohos.org.xml.sax.Locator)>
<java.nio.CharBuffer: int compareTo(java.lang.Object)>
<java.security.Identity: java.security.Certificate[] certificates()>
<ohos.agp.components.AbsSlider: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.data.distributed.common.KvStoreResultSet: int getRowIndex()>
<java.lang.AssertionError: void <init>(long)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getIntegerInstance(ohos.global.icu.util.ULocale)>
<ohos.aafwk.ability.Ability.WindowAttributeHelper: ohos.aafwk.ability.Ability.WindowAttributeHelper setLeftPadding(int)>
<ohos.aafwk.ability.ProviderFormInfo: void <clinit>()>
<ohos.agp.render.opengl.GLES31: void glProgramUniform2i(int,int,int,int)>
<ohos.media.camera.params.PropertyKey.Key: int hashCode()>
<ohos.utils.FloatDimension: java.lang.String toString()>
<ohos.data.search.SearchAbility: int setIndexForm(java.lang.String,int,java.util.List,ohos.data.search.schema.IndexSchemaType)>
<ohos.global.icu.util.GregorianCalendar: int handleComputeJulianDay(int)>
<java.util.concurrent.locks.StampedLock: long tryOptimisticRead()>
<java.security.ProtectionDomain: boolean implies(java.security.Permission)>
<ohos.global.icu.util.ULocale: void <clinit>()>
<ohos.utils.zson.ZSONWriter: void startArray()>
<ohos.data.search.schema.PlaceItem: java.lang.Double getLatitude()>
<java.io.Console: void flush()>
<ohos.data.DatabaseFileSecurityLevel: ohos.data.DatabaseFileSecurityLevel valueOf(java.lang.String)>
<ohos.accessibility.ability.AccessibleAbility: void disableAbility()>
<ohos.bundle.HapModuleInfo: java.util.List getReqCapabilities()>
<ohos.global.icu.util.CopticCalendar: void <init>(ohos.global.icu.util.TimeZone)>
<ohos.javax.xml.parsers.SAXParser: ohos.org.xml.sax.XMLReader getXMLReader()>
<java.util.concurrent.atomic.DoubleAdder: void add(double)>
<java.io.StringWriter: java.lang.StringBuffer getBuffer()>
<java.time.OffsetDateTime: java.time.OffsetDateTime plus(long,java.time.temporal.TemporalUnit)>
<ohos.aafwk.abilityjet.activedata.ActiveData: java.lang.Object getData()>
<ohos.utils.LongPlainArray: java.util.Optional remove(long)>
<ohos.media.sessioncore.AVBrowserService: ohos.media.common.sessioncore.AVToken getAVToken()>
<java.util.Collection: java.lang.Object[] toArray()>
<java.nio.CharBuffer: java.lang.Object array()>
<ohos.agp.render.opengl.GLES20: void glFrontFace(int)>
<ohos.global.icu.text.NumberFormat: int hashCode()>
<javax.tools.JavaFileManager: javax.tools.FileObject getFileForOutput(javax.tools.JavaFileManager.Location,java.lang.String,java.lang.String,javax.tools.FileObject)>
<java.util.concurrent.CopyOnWriteArrayList: void <init>(java.util.Collection)>
<java.lang.Thread: void interrupt()>
<java.util.concurrent.ArrayBlockingQueue: void put(java.lang.Object)>
<ohos.agp.utils.Matrix: void getElements(float[])>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThanOrEqualTo(java.lang.String,java.sql.Time)>
<ohos.media.camera.params.Face: void <init>(int,ohos.agp.utils.Rect,float,java.util.List)>
<ohos.agp.window.service.Window: void setLayoutFlags(int,int)>
<ohos.event.notification.NotificationActionButton: java.util.List getMimeTypeOnlyUserInputs()>
<java.time.chrono.ChronoLocalDateTime: java.lang.String toString()>
<javax.net.ssl.SSLSocket: java.lang.String[] getEnabledCipherSuites()>
<java.sql.ResultSet: java.io.InputStream getBinaryStream(java.lang.String)>
<java.time.format.DecimalStyle: java.time.format.DecimalStyle withZeroDigit(char)>
<java.util.Spliterators.AbstractLongSpliterator: java.util.Spliterator.OfPrimitive trySplit()>
<java.util.concurrent.FutureTask: java.lang.Object get()>
<ohos.event.notification.ReminderHelper: void cancelAllReminders()>
<javax.lang.model.util.ElementKindVisitor7: void <init>(java.lang.Object)>
<ohos.media.camera.device.CameraAbility: int[] getSupportedAwbMode()>
<ohos.bluetooth.A2dpSink: java.util.List getDevicesByStates(int[])>
<ohos.global.icu.text.Normalizer2: ohos.global.icu.text.Normalizer2 getNFDInstance()>
<ohos.global.icu.text.UnicodeSet: void <init>(int[])>
<ohos.utils.geo.Rect: boolean getIntersectRect(int,int,int,int)>
<java.util.stream.LongStream: java.util.stream.BaseStream parallel()>
<ohos.media.image.PixelMap: void resetConfig(ohos.media.image.common.Size,ohos.media.image.common.PixelFormat)>
<ohos.aafwk.ability.delegation.IAbilityDelegatorArgs: java.util.Map getTestParameters()>
<java.math.BigDecimal: long longValueExact()>
<ohos.wifi.p2p.WifiP2pCallback: void eventP2pNetwork(ohos.wifi.p2p.WifiP2pNetworkInfo)>
<java.security.KeyStore: java.lang.String getDefaultType()>
<javax.lang.model.type.ExecutableType: java.util.List getParameterTypes()>
<java.time.OffsetTime: boolean isAfter(java.time.OffsetTime)>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: ohos.event.notification.NotificationRequest.NotificationMediaContent setAdditionalText(java.lang.String)>
<ohos.utils.IntArray: int getAt(int)>
<java.security.KeyStore: java.security.KeyStore.Entry getEntry(java.lang.String,java.security.KeyStore.ProtectionParameter)>
<ohos.media.audio.SoundPlayer: void <init>(int)>
<java.sql.CallableStatement: java.sql.NClob getNClob(java.lang.String)>
<java.lang.invoke.MethodHandle: java.lang.String toString()>
<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()>
<java.security.cert.X509CertSelector: java.util.Set getExtendedKeyUsage()>
<java.time.LocalTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<ohos.data.search.connect.ServiceConnectCallback: void onDisconnect()>
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndIncrement(int)>
<ohos.data.rdb.RdbConstraintException: void <init>(java.lang.String)>
<ohos.wifi.WifiDeviceConfig: int getSecurityType()>
<java.lang.Character: int offsetByCodePoints(char[],int,int,int,int)>
<ohos.accessibility.ability.AccessibilityInfo: int getMaximumLength()>
<ohos.telephony.LteSignalInformation: boolean equals(java.lang.Object)>
<ohos.global.icu.text.Bidi: ohos.global.icu.text.Bidi setLine(int,int)>
<java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>
<java.sql.SQLOutput: void writeClob(java.sql.Clob)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.String formatOffsetShortLocalizedGMT(int)>
<ohos.global.icu.util.LocaleData: ohos.global.icu.util.VersionInfo getCLDRVersion()>
<ohos.utils.PlainBooleanArray: java.util.Optional remove(int)>
<java.security.cert.X509CRLSelector: void addIssuer(javax.security.auth.x500.X500Principal)>
<ohos.org.xml.sax.XMLReader: void setContentHandler(ohos.org.xml.sax.ContentHandler)>
<java.nio.file.LinkOption: java.nio.file.LinkOption valueOf(java.lang.String)>
<ohos.agp.utils.RectFloat: float getWidth()>
<ohos.bundle.ShortcutInfo: java.lang.String getLabel()>
<ohos.agp.components.BaseItemProvider: java.lang.Object getItem(int)>
<ohos.agp.components.Attr: ohos.app.Context getContext()>
<java.util.prefs.AbstractPreferences: boolean isUserNode()>
<ohos.aafwk.ability.Ability: void onMemoryLevel(int)>
<javax.crypto.interfaces.PBEKey: byte[] getSalt()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,short)>
<ohos.agp.components.ScrollHelper: int getFlingDistanceY(int)>
<java.sql.ResultSet: void updateBinaryStream(java.lang.String,java.io.InputStream)>
<ohos.aafwk.ability.IDataAbilityObserver: void onChange()>
<java.nio.channels.SocketChannel: java.net.SocketAddress getRemoteAddress()>
<ohos.agp.components.webengine.BrowserAgent: void onLocationApiAccessRequest(java.lang.String,ohos.agp.components.webengine.LocationAccessController.Response)>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)>
<java.util.Locale.LanguageRange: void <init>(java.lang.String,double)>
<ohos.app.AbilityContext: void setDisplayOrientation(ohos.bundle.AbilityInfo.DisplayOrientation)>
<ohos.sensor.agent.CategoryBodyAgent: ohos.sensor.bean.CategoryBody getSingleSensor(int)>
<ohos.sysappcomponents.contact.entity.Contact: ohos.sysappcomponents.contact.entity.NickName getNickName()>
<java.time.OffsetDateTime: java.time.OffsetDateTime withYear(int)>
<javax.lang.model.util.SimpleAnnotationValueVisitor8: void <init>()>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle findConstructor(java.lang.Class,java.lang.invoke.MethodType)>
<java.math.BigDecimal: void <init>(java.math.BigInteger,java.math.MathContext)>
<javax.sql.RowSet: void setNClob(java.lang.String,java.sql.NClob)>
<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>
<java.util.HashSet: void <init>(int,float)>
<ohos.media.audio.SoundPlayer.SoundType: int getTypeValue()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage applyToEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Function,java.util.concurrent.Executor)>
<ohos.net.NetHandle: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.Bidi: int getRunLimit(int)>
<java.lang.Math: double acos(double)>
<java.nio.charset.CoderResult: boolean isUnmappable()>
<ohos.media.photokit.metadata.AVStorage.Audio.Genres: ohos.utils.net.Uri fetchResource(java.lang.String)>
<ohos.agp.render.opengl.ETC1: int etc1PkmGetWidth(java.nio.Buffer)>
<ohos.javax.xml.validation.Validator: void validate(ohos.javax.xml.transform.Source,ohos.javax.xml.transform.Result)>
<java.util.ResourceBundle.Control: void <init>()>
<ohos.app.Context: void compelVerifyUriPermission(ohos.utils.net.Uri,int,int,int,java.lang.String)>
<ohos.agp.components.PageSliderIndicator: ohos.agp.components.PageSlider getPageSlider()>
<java.util.Calendar: void setFirstDayOfWeek(int)>
<ohos.agp.render.opengl.GLES32: void glTexBufferRange(int,int,int,int,int)>
<java.time.chrono.HijrahDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<ohos.sensor.bean.CategoryEnvironment: void <init>(int,java.lang.String,java.lang.String,int,float,float,int,int,long,long)>
<java.util.concurrent.SynchronousQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<ohos.javax.xml.stream.events.StartDocument: boolean standaloneSet()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThanOrEqualTo(java.lang.String,float)>
<ohos.data.distributed.common.KvStore: void putBatch(java.util.List)>
<javax.crypto.spec.RC2ParameterSpec: void <init>(int,byte[])>
<ohos.media.image.common.AlphaType: void <clinit>()>
<ohos.agp.components.ComponentParent: void moveChildToFront(ohos.agp.components.Component)>
<java.io.DataOutputStream: void flush()>
<java.lang.ThreadGroup: void resume()>
<java.lang.String: int lastIndexOf(int,int)>
<ohos.app.AbilityContext: java.lang.String getBundleResourcePath()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendChronologyId()>
<ohos.agp.components.TextField: void setBasement(ohos.agp.components.element.Element)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notBetween(java.lang.String,java.util.Calendar,java.util.Calendar)>
<java.util.concurrent.DelayQueue: void put(java.util.concurrent.Delayed)>
<ohos.agp.components.Component: ohos.agp.components.Component findComponentById(int)>
<java.time.Duration: java.time.Duration minus(long,java.time.temporal.TemporalUnit)>
<java.nio.file.spi.FileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>
<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>
<ohos.bluetooth.ble.BleAdvertiseData: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.data.distributed.common.KvStoreResultSet: ohos.data.distributed.common.Entry getEntry()>
<ohos.javax.xml.stream.events.StartDocument: java.lang.String getCharacterEncodingScheme()>
<java.lang.Double: double min(double,double)>
<ohos.aafwk.ability.DeviceConfigInfo: int getNavigationType()>
<java.net.UnknownHostException: void <init>()>
<ohos.utils.Parcel: char[] readCharArray()>
<ohos.agp.render.opengl.GLES32: void glObjectLabel(int,int,int,java.lang.String)>
<javax.net.ssl.TrustManagerFactorySpi: void <init>()>
<java.util.concurrent.locks.StampedLock: long tryWriteLock(long,java.util.concurrent.TimeUnit)>
<ohos.javax.xml.stream.events.Characters: java.lang.String getData()>
<java.net.DatagramSocket: int getLocalPort()>
<ohos.data.search.schema.Schema: void <init>()>
<ohos.agp.components.Picker: void <init>(ohos.app.Context)>
<java.time.chrono.ChronoPeriod: boolean isZero()>
<ohos.media.extractor.Extractor: int getFrameType()>
<ohos.media.audio.AudioStreamInfo: ohos.media.audio.AudioStreamInfo.StreamType getStreamType()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<ohos.global.icu.text.Transliterator.Position: void <init>(int,int,int,int)>
<ohos.global.icu.util.ULocale: java.lang.String getCountry(java.lang.String)>
<ohos.global.icu.text.MessagePattern: java.lang.Object cloneAsThawed()>
<ohos.agp.render.Paint: void addTextToPath(java.lang.String,float,float,ohos.agp.render.Path)>
<ohos.event.commonevent.CommonEventPublishInfo: void setSubscriberPermissions(java.lang.String[])>
<java.sql.ResultSet: void updateObject(java.lang.String,java.lang.Object,int)>
<ohos.agp.render.render3d.resources.ResourceManager: ohos.agp.render.render3d.resources.ResourceHandle createMaterial(java.lang.String,java.lang.String)>
<ohos.utils.PlainBooleanArray: void append(int,boolean)>
<javax.crypto.ExemptionMechanismSpi: void <init>()>
<java.util.LinkedHashSet: void <init>(int)>
<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>
<ohos.app.AbilityContext: void compelVerifyUriPermission(ohos.utils.net.Uri,int,int,int,java.lang.String)>
<ohos.rpc.IRemoteObject: void dump(java.io.FileDescriptor,java.lang.String[])>
<java.util.Date: boolean after(java.util.Date)>
<ohos.media.audio.AudioStreamInfo.StreamUsage: void <clinit>()>
<ohos.os.ProcessManager: int getPid()>
<ohos.telephony.NrSignalInformation: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.Period: boolean isZero()>
<java.util.function.IntToDoubleFunction: double applyAsDouble(int)>
<ohos.agp.utils.RectFloat: ohos.agp.utils.RectFloat obtainIntersectRect(float,float,float,float)>
<ohos.ai.cv.common.VisionConfiguration: void <init>(ohos.ai.cv.common.VisionConfiguration.Builder)>
<ohos.systemrestore.SystemRestore: boolean rebootAndCleanUserData(ohos.app.Context)>
<ohos.agp.render.opengl.GLES20: void glBufferSubData(int,int,int,java.nio.Buffer)>
<ohos.app.Context: boolean isUpdatingConfigurations()>
<ohos.agp.components.RadioContainer: void cancelMarks()>
<ohos.utils.PlainBooleanArray: java.lang.Object clone()>
<ohos.javax.xml.stream.XMLEventWriter: ohos.javax.xml.namespace.NamespaceContext getNamespaceContext()>
<ohos.utils.Sequenceable.Producer: java.lang.Object createFromParcel(ohos.utils.Parcel)>
<java.util.Spliterator.OfDouble: void forEachRemaining(java.util.function.Consumer)>
<java.util.concurrent.BlockingDeque: int size()>
<ohos.agp.render.opengl.GLES30: boolean glIsVertexArray(int)>
<java.util.Spliterators: java.util.Spliterator.OfDouble emptyDoubleSpliterator()>
<java.util.WeakHashMap: boolean containsKey(java.lang.Object)>
<ohos.agp.render.opengl.GLES20: void glGetActiveAttrib(int,int,int,int[],int[],int[],byte[])>
<ohos.global.icu.text.MessagePattern: ohos.global.icu.text.MessagePattern parseChoiceStyle(java.lang.String)>
<java.security.KeyStoreSpi: void engineDeleteEntry(java.lang.String)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendOptional(java.time.format.DateTimeFormatter)>
<ohos.global.icu.text.StringSearch: void <init>(java.lang.String,java.text.CharacterIterator,ohos.global.icu.util.ULocale)>
<ohos.aafwk.ability.AbilityForm.OnAcquiredCallback: void onAcquired(ohos.aafwk.ability.AbilityForm)>
<ohos.accessibility.ability.AccessibilityInfo: void setEssential(boolean)>
<java.net.JarURLConnection: java.util.jar.Attributes getAttributes()>
<java.util.concurrent.atomic.AtomicLong: long longValue()>
<ohos.accessibility.AccessibilitySystemAbilityClient: boolean sendEvent(ohos.accessibility.AccessibilityEventInfo)>
<ohos.agp.components.TabList: void addTab(ohos.agp.components.TabList.Tab,boolean)>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 max(ohos.agp.render.render3d.math.Vector4,ohos.agp.render.render3d.math.Vector4)>
<java.lang.reflect.Modifier: int fieldModifiers()>
<java.util.stream.IntStream: java.util.stream.IntStream.Builder builder()>
<ohos.data.orm.OrmContext: boolean update(ohos.data.orm.OrmObject)>
<ohos.global.icu.text.MessageFormat: void setLocale(ohos.global.icu.util.ULocale)>
<java.text.AttributedCharacterIterator: int getRunStart(java.text.AttributedCharacterIterator.Attribute)>
<ohos.dcall.DistributedCallManager: ohos.dcall.DistributedCallManager getInstance(ohos.app.Context)>
<ohos.media.common.sessioncore.AVConnectionCallback: void onDisconnected()>
<ohos.agp.components.Component: int getScrollbarThickness()>
<java.sql.SQLOutput: void writeNString(java.lang.String)>
<ohos.usb.USBEndpoint: int getMaxPacketSize()>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder setLanguage(java.lang.String)>
<java.security.PolicySpi: java.security.PermissionCollection engineGetPermissions(java.security.ProtectionDomain)>
<ohos.agp.components.TimePicker: void setMinute(int)>
<ohos.agp.components.Component: void setDraggedListener(int,ohos.agp.components.Component.DraggedListener)>
<java.time.OffsetTime: java.time.OffsetTime withMinute(int)>
<java.util.concurrent.atomic.AtomicInteger: int get()>
<ohos.media.camera.device.CameraConfig.Builder: ohos.media.camera.device.CameraConfig build()>
<java.util.concurrent.AbstractExecutorService: java.util.List invokeAll(java.util.Collection)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,boolean)>
<java.time.OffsetDateTime: java.time.OffsetDateTime plusDays(long)>
<ohos.nfc.NfcController.ReaderModeCallbackStub: boolean onRemoteRequest(int,ohos.rpc.MessageParcel,ohos.rpc.MessageParcel,ohos.rpc.MessageOption)>
<ohos.global.icu.text.SimpleDateFormat: java.lang.String toPattern()>
<ohos.media.tubecore.AVTube: void cmdIncVolume(int)>
<ohos.global.icu.util.ULocale: java.lang.String toString()>
<ohos.agp.render.render3d.resources.GpuResourceHandle: ohos.agp.render.render3d.Engine getEngine()>
<javax.sql.RowSet: void setBoolean(java.lang.String,boolean)>
<java.sql.DatabaseMetaData: boolean nullsAreSortedLow()>
<java.lang.Boolean: void <clinit>()>
<java.sql.ResultSet: void updateBinaryStream(int,java.io.InputStream,int)>
<ohos.miscservices.inputmethod.EditingText: void setSelectionEnd(int)>
<ohos.miscservices.inputmethodability.KeyboardDelegate: void onCursorContextChanged(float,float,float)>
<ohos.agp.components.Component: float[] getCenterZoomFactor()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,java.util.Date)>
<java.nio.file.LinkOption: void <clinit>()>
<ohos.global.i18n.text.DateFormatUtil: java.lang.String format(java.lang.String,java.lang.String,java.lang.String,long,long)>
<java.math.BigDecimal: void <init>(int)>
<ohos.agp.components.DatePicker: void setValueChangedListener(ohos.agp.components.DatePicker.ValueChangedListener)>
<java.nio.channels.spi.AsynchronousChannelProvider: void <init>()>
<ohos.agp.components.TableLayout.LayoutConfig: void <init>(int,int)>
<java.time.chrono.HijrahDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.utils.LightweightSet: void <init>(int,boolean)>
<java.security.KeyStoreSpi: void engineSetEntry(java.lang.String,java.security.KeyStore.Entry,java.security.KeyStore.ProtectionParameter)>
<ohos.media.audio.AudioStreamInfo.AudioStreamFlag: void <clinit>()>
<java.security.cert.X509CRLEntry: byte[] getEncoded()>
<ohos.agp.utils.Matrix44: void <init>(ohos.agp.utils.Matrix44)>
<ohos.media.photokit.metadata.AVStorage: java.lang.String fetchVolumeName(ohos.utils.net.Uri)>
<ohos.agp.render.Arc: boolean getUseCenter()>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.window.dialog.CommonDialog setContentImage(int)>
<javax.crypto.spec.RC5ParameterSpec: void <init>(int,int,int)>
<java.io.FileOutputStream: void <init>(java.io.File)>
<ohos.multimodalinput.event.MultimodalEvent: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.utils.zson.ZSONArray: java.lang.Object set(int,java.lang.Object)>
<java.security.InvalidParameterException: void <init>(java.lang.String)>
<java.nio.file.spi.FileSystemProvider: java.util.List installedProviders()>
<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>
<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult.Status getStatus()>
<ohos.agp.components.ProgressBar: void setProgressColors(int[])>
<java.io.ObjectInputStream: java.lang.Object readUnshared()>
<java.nio.ShortBuffer: java.nio.ShortBuffer put(java.nio.ShortBuffer)>
<ohos.global.icu.text.NumberFormat: boolean equals(java.lang.Object)>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale build()>
<java.util.Spliterators: java.util.Spliterator.OfLong spliterator(long[],int)>
<java.time.OffsetTime: java.time.ZoneOffset getOffset()>
<java.text.DateFormat: java.util.Calendar getCalendar()>
<java.lang.Character: boolean isUpperCase(char)>
<ohos.agp.render.PathEffect.Style: ohos.agp.render.PathEffect.Style[] values()>
<java.lang.String: java.lang.String substring(int,int)>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<ohos.multimodalinput.event.MouseEvent: float getScrollingDelta(int)>
<ohos.agp.components.Component: int getMarginRight()>
<ohos.global.icu.text.RuleBasedCollator: void setUpperCaseFirst(boolean)>
<ohos.javax.xml.stream.XMLStreamReader: void close()>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale acceptLanguage(ohos.global.icu.util.ULocale[],boolean[])>
<java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable,boolean,boolean)>
<java.time.YearMonth: java.lang.String format(java.time.format.DateTimeFormatter)>
<ohos.agp.window.service.DisplayNotch: java.lang.String toString()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates greaterThanOrEqualTo(java.lang.String,float)>
<java.io.StringWriter: java.io.Writer append(char)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThan(java.lang.String,java.sql.Time)>
<java.security.PermissionCollection: java.util.Enumeration elements()>
<ohos.data.DatabaseHelper: void removePreferencesFromCache(java.lang.String)>
<ohos.agp.components.ComponentProvider: int getApplyType()>
<java.time.zone.ZoneOffsetTransitionRule.TimeDefinition: java.time.zone.ZoneOffsetTransitionRule.TimeDefinition valueOf(java.lang.String)>
<ohos.data.distributed.common.KvManager: java.util.List getConnectedDevicesInfo(ohos.data.distributed.device.DeviceFilterStrategy)>
<ohos.miscservices.timeutility.Timer.TimerIntent: void <init>(ohos.aafwk.content.Intent,int)>
<java.io.PrintStream: void close()>
<java.time.chrono.Era: long getLong(java.time.temporal.TemporalField)>
<ohos.agp.render.Paint: float[] getDashPathEffectIntervals()>
<ohos.agp.components.ToggleButton: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.nio.file.spi.FileSystemProvider: void createSymbolicLink(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[])>
<ohos.agp.utils.LayoutAlignment: void <init>()>
<java.time.ZonedDateTime: java.time.ZonedDateTime withHour(int)>
<java.io.DataOutput: void write(byte[],int,int)>
<java.sql.Time: void setTime(long)>
<ohos.sysappcomponents.contact.entity.PhoneNumber: int hashCode()>
<java.util.concurrent.atomic.AtomicReferenceArray: int length()>
<java.lang.Math: float abs(float)>
<java.text.MessageFormat: java.lang.String toPattern()>
<ohos.agp.utils.Matrix44: void <init>(ohos.agp.utils.Matrix44,ohos.agp.utils.Matrix44)>
<ohos.agp.components.ScrollView: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getAttributes(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.aafwk.ability.Ability: int delete(ohos.utils.net.Uri,ohos.data.dataability.DataAbilityPredicates)>
<ohos.aafwk.ability.AbilitySlice.FormCallback: void onFormUninstalled(long)>
<java.util.concurrent.ConcurrentSkipListSet: boolean removeAll(java.util.Collection)>
<ohos.agp.components.Component: float getScaleX()>
<javax.crypto.spec.RC5ParameterSpec: int getWordSize()>
<java.nio.channels.MembershipKey: java.nio.channels.MembershipKey block(java.net.InetAddress)>
<ohos.agp.components.ListContainer: void removeComponentById(int)>
<java.text.RuleBasedCollator: java.lang.Object clone()>
<java.net.Inet6Address: boolean isMulticastAddress()>
<java.util.concurrent.ConcurrentLinkedDeque: boolean remove(java.lang.Object)>
<ohos.data.orm.Clob: java.io.Writer setCharacterStream(long)>
<java.lang.StackTraceElement: java.lang.String getFileName()>
<ohos.media.photokit.metadata.AVStorage.Audio.Playlists: ohos.utils.net.Uri fetchResource(java.lang.String)>
<java.util.Calendar: void roll(int,boolean)>
<java.text.Bidi: java.text.Bidi createLineBidi(int,int)>
<ohos.media.common.AVMetadata: boolean unmarshalling(ohos.utils.Parcel)>
<java.io.OutputStream: void write(int)>
<ohos.event.notification.INotificationSubscriber: void onNotificationRankingUpdate(ohos.event.notification.NotificationSortingMap)>
<java.lang.SuppressWarnings: java.lang.String[] value()>
<java.security.Identity: void setInfo(java.lang.String)>
<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer)>
<java.util.concurrent.atomic.LongAccumulator: java.lang.String toString()>
<ohos.data.resultset.SharedResultSet: ohos.data.resultset.SharedBlock getBlock()>
<ohos.agp.components.DependentLayout: void setIgnoreAlignment(int)>
<java.lang.ArrayStoreException: void <init>(java.lang.String)>
<ohos.aafwk.ability.DataAbilityOperation.Builder: ohos.aafwk.ability.DataAbilityOperation.Builder withExpectedCount(int)>
<java.util.Formatter: void <init>(java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glGetBufferParameteri64v(int,int,long[])>
<java.time.LocalDate: java.time.LocalDate withDayOfMonth(int)>
<ohos.media.player.Player: boolean setSource(ohos.media.common.Source)>
<ohos.global.icu.text.NumberFormat.Field: java.lang.Object readResolve()>
<java.time.LocalDate: boolean isLeapYear()>
<java.util.logging.Logger: java.util.logging.Level getLevel()>
<ohos.aafwk.content.Intent.OperationBuilder: ohos.aafwk.content.Operation build()>
<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>
<ohos.agp.render.Arc: void setArc(float,float,boolean)>
<javax.sql.RowSetMetaData: void setAutoIncrement(int,boolean)>
<ohos.telephony.TelephoneNumberUtils: java.lang.String extractNetworkAddressPortionPlus(java.lang.String)>
<java.util.concurrent.Semaphore: boolean isFair()>
<java.util.zip.DeflaterInputStream: int read(byte[],int,int)>
<ohos.media.image.PixelMap.InitializationOptions: void <init>()>
<java.nio.file.attribute.AclEntry: java.nio.file.attribute.AclEntry.Builder newBuilder()>
<ohos.agp.render.render3d.Engine: java.lang.String getVersion()>
<ohos.agp.components.Image: void setPixelMap(ohos.media.image.PixelMap)>
<ohos.global.resource.Element: int[] getIntArray()>
<java.lang.StringBuffer: void getChars(int,int,char[],int)>
<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>
<ohos.agp.render.ColorMatrix: void postConcat(ohos.agp.render.ColorMatrix)>
<java.io.DataInput: int skipBytes(int)>
<java.sql.CallableStatement: java.sql.Blob getBlob(int)>
<ohos.net.NetHandle: long getNetHandle()>
<ohos.data.rdb.StoreConfig.Builder: void <init>(ohos.data.rdb.StoreConfig)>
<ohos.sensor.listener.ISensorDataCallback: void onAccuracyDataModified(ohos.sensor.bean.SensorBase,int)>
<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>
<ohos.system.TimeValGroup: boolean equals(java.lang.Object)>
<ohos.agp.components.Component: void setDragAcceptAngle(float)>
<ohos.data.search.schema.PlaceItem: java.lang.Double getLongitude()>
<ohos.global.icu.text.DecimalFormat: boolean isParseIntegerOnly()>
<ohos.global.systemres.ResourceTable: void <init>()>
<java.security.spec.ECFieldFp: boolean equals(java.lang.Object)>
<ohos.utils.LightweightSet: void ensureCapacity(int)>
<java.io.ObjectInputStream: java.lang.Object resolveObject(java.lang.Object)>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale getFallback()>
<java.sql.ResultSet: void updateShort(int,short)>
<java.util.stream.BaseStream: java.util.stream.BaseStream onClose(java.lang.Runnable)>
<ohos.javax.xml.stream.XMLEventReader: boolean hasNext()>
<java.util.concurrent.ForkJoinWorkerThread: int getPoolIndex()>
<ohos.agp.components.SlideDrawer.SlideDirection: ohos.agp.components.SlideDrawer.SlideDirection[] values()>
<ohos.bundleactive.BundleActiveStates.State: int queryStateType()>
<java.time.Month: java.time.Month[] values()>
<ohos.aafwk.ability.DataAbilityOperation: java.util.Map getDataAbilityPredicatesBackReferences()>
<java.io.ObjectInput: int read()>
<ohos.data.rdb.Statement: void execute()>
<java.util.DoubleSummaryStatistics: long getCount()>
<ohos.data.resultset.SharedBlock: boolean putString(java.lang.String,int,int)>
<javax.security.cert.X509Certificate: java.security.Principal getSubjectDN()>
<ohos.aafwk.ability.AbilitySlice.FormCallback: void onAcquiredState(ohos.aafwk.content.Intent,ohos.aafwk.ability.FormState)>
<ohos.media.tubecore.AVTubeEx: void setMaxVolume(int)>
<java.net.MulticastSocket: void setTTL(byte)>
<ohos.agp.render.Paint: boolean isMultipleLine()>
<ohos.utils.ObjectAttribute: void set(java.lang.Object,java.lang.Object)>
<ohos.global.resource.solidxml.Pattern: java.util.HashMap getPatternHash(java.lang.String[])>
<javax.sql.RowSet: void setMaxRows(int)>
<java.nio.CharBuffer: java.nio.CharBuffer compact()>
<ohos.agp.components.Rating.RatingChangedListener: void onStopTrackingTouch(ohos.agp.components.Rating)>
<java.net.Socket: void sendUrgentData(int)>
<java.nio.ByteBuffer: byte[] array()>
<ohos.ace.ability.AceInternalAbility: void <init>(java.lang.String,java.lang.String)>
<ohos.data.rdb.ValuesBucket: java.lang.Long getLong(java.lang.String)>
<ohos.ai.cv.text.Text: void setText(ohos.ai.cv.text.Text)>
<java.util.Arrays: void parallelSort(java.lang.Comparable[])>
<java.lang.reflect.Field: long getLong(java.lang.Object)>
<ohos.aafwk.ability.Lifecycle: void removeObserver(ohos.aafwk.ability.ILifecycleObserver)>
<ohos.agp.utils.Line: void setStartPointX(float)>
<ohos.data.rdb.RdbException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.Spliterator: long getExactSizeIfKnown()>
<ohos.bundle.AbilityInfo.AbilityType: void <clinit>()>
<ohos.sysappcomponents.contact.entity.PostalAddress: java.lang.String getNeighborhood()>
<java.time.LocalDateTime: boolean equals(java.lang.Object)>
<ohos.aafwk.ability.Ability: void setLayoutParams(ohos.agp.window.service.WindowManager.LayoutConfig)>
<ohos.app.AbilityContext: ohos.app.dispatcher.TaskDispatcher createParallelTaskDispatcher(java.lang.String,ohos.app.dispatcher.task.TaskPriority)>
<java.sql.DatabaseMetaData: int getMaxTableNameLength()>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitExecutableAsConstructor(javax.lang.model.element.ExecutableElement,java.lang.Object)>
<java.net.URLStreamHandler: int getDefaultPort()>
<ohos.data.distributed.common.UserInfo: void <init>(java.lang.String,ohos.data.distributed.common.UserType)>
<java.lang.ProcessBuilder: java.util.List command()>
<ohos.utils.net.Uri: java.lang.String getDecodedFragment()>
<java.lang.reflect.Field: java.lang.String getName()>
<ohos.agp.text.Layout: int getLineIndexByCharIndex(int)>
<java.util.Base64: java.util.Base64.Encoder getMimeEncoder()>
<java.security.DigestOutputStream: void setMessageDigest(java.security.MessageDigest)>
<java.nio.channels.AsynchronousFileChannel: java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute[])>
<ohos.media.player.Player.DeviceInfo: java.lang.String getDeviceId()>
<java.io.PrintWriter: java.lang.Appendable append(char)>
<ohos.data.search.schema.PlaceItem: ohos.data.search.schema.PlaceItem setLongitude(java.lang.Double)>
<ohos.global.resource.solidxml.Pattern: ohos.global.resource.solidxml.Pattern getCombinedPattern(ohos.global.resource.solidxml.Pattern)>
<ohos.global.icu.math.MathContext: void <init>(int)>
<java.text.ChoiceFormat: java.lang.Object clone()>
<ohos.agp.colors.CmykColor: float getCyan()>
<java.lang.SecurityManager: void checkPermission(java.security.Permission)>
<java.util.List: java.lang.Object[] toArray()>
<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>
<java.io.FileOutputStream: void finalize()>
<java.security.Principal: boolean implies(javax.security.auth.Subject)>
<java.io.OutputStreamWriter: void write(int)>
<ohos.media.image.PropertyFilter: ohos.media.image.common.Filter restore()>
<java.sql.SQLTransientException: void <init>(java.lang.String)>
<java.text.StringCharacterIterator: char current()>
<ohos.data.rdb.RdbUtils.OperationType: void <clinit>()>
<ohos.agp.components.Component.GestureType: ohos.agp.components.Component.GestureType[] values()>
<ohos.sysappcomponents.contact.entity.Name: java.lang.String getMiddleName()>
<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<ohos.global.icu.util.ULocale: java.lang.String setKeywordValue(java.lang.String,java.lang.String,java.lang.String)>
<java.util.concurrent.ThreadPoolExecutor: void finalize()>
<ohos.agp.components.Component: float getTranslationY()>
<java.time.ZoneId: boolean equals(java.lang.Object)>
<java.security.DigestOutputStream: void on(boolean)>
<ohos.agp.components.TimePicker: ohos.agp.components.element.Element[] getDisplayedLinesElements()>
<java.time.chrono.ChronoZonedDateTime: int get(java.time.temporal.TemporalField)>
<java.util.LinkedList: void addFirst(java.lang.Object)>
<ohos.rpc.MessageParcel: java.util.List createRemoteObjectList()>
<java.security.cert.X509CRLSelector: void setIssuerNames(java.util.Collection)>
<java.util.HashSet: void <init>()>
<ohos.aafwk.ability.continuation.DeviceConnectState: ohos.aafwk.ability.continuation.DeviceConnectState getConnectState(int)>
<java.lang.Integer: java.lang.String toHexString(int)>
<ohos.data.search.schema.Schema: java.lang.String getReserved2()>
<ohos.javax.xml.stream.XMLStreamReader: boolean hasNext()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates between(java.lang.String,java.lang.String,java.lang.String)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object getFirst()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>
<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<ohos.agp.render.opengl.GLES1X: void glTexEnvx(int,int,int)>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<java.util.zip.CheckedInputStream: void <init>(java.io.InputStream,java.util.zip.Checksum)>
<ohos.media.tubecore.AVTube: void setLabel(java.lang.Object)>
<java.net.Inet6Address: boolean isMCSiteLocal()>
<java.time.format.SignStyle: java.time.format.SignStyle[] values()>
<ohos.sensor.agent.CategoryBodyAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryBodyDataCallback,ohos.sensor.bean.CategoryBody)>
<ohos.agp.components.PageFlipper: void startFlipping()>
<ohos.app.AbilityContext: boolean stopAbility(ohos.aafwk.content.Intent)>
<ohos.media.audio.AudioStreamInfo.EncodingFormat: ohos.media.audio.AudioStreamInfo.EncodingFormat valueOf(java.lang.String)>
<java.sql.Statement: int getFetchDirection()>
<ohos.utils.IntArray: boolean equals(int[])>
<java.sql.ResultSet: void updateCharacterStream(java.lang.String,java.io.Reader,int)>
<ohos.utils.SequenceUuid: void <init>()>
<ohos.agp.render.Canvas: void rotate(float)>
<ohos.bundle.InstallParam: boolean isKeepData()>
<ohos.agp.components.webengine.PickFilesParams: java.lang.String[] getMimeTypes()>
<ohos.miscservices.pasteboard.SystemPasteboard: boolean hasPasteData()>
<java.lang.Integer: int parseInt(java.lang.String)>
<java.io.ObjectStreamField: java.lang.Class getType()>
<ohos.agp.components.ComponentContainer: void moveChildToFront(ohos.agp.components.Component)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getNumberInstance()>
<java.util.PropertyResourceBundle: void <init>(java.io.InputStream)>
<ohos.usb.USBInterface: int getEndpointCount()>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long decrementAndGet(java.lang.Object)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: int getMonitorsNum()>
<ohos.wifi.WifiDevice: java.util.Optional getIpInfo()>
<ohos.data.distributed.common.KvManager: ohos.data.distributed.common.KvStore getKvStore(ohos.data.distributed.common.Options,java.lang.String)>
<java.time.ZonedDateTime: java.time.ZonedDateTime now()>
<ohos.aafwk.content.Operation: java.lang.String getAction()>
<java.sql.SQLInput: double readDouble()>
<ohos.org.xml.sax.XMLReader: ohos.org.xml.sax.ErrorHandler getErrorHandler()>
<java.lang.ProcessBuilder.Redirect.Type: java.lang.ProcessBuilder.Redirect.Type valueOf(java.lang.String)>
<ohos.media.image.PropertyFilter: void <init>()>
<java.text.DateFormatSymbols: void setAmPmStrings(java.lang.String[])>
<ohos.agp.components.webengine.WebConfig: boolean isWebStoragePermitted()>
<java.util.jar.Manifest: boolean equals(java.lang.Object)>
<ohos.global.i18n.utils.TextRecognitionUtils: int[] getTime(java.lang.String)>
<ohos.telephony.NrSignalInformation: boolean marshalling(ohos.utils.Parcel)>
<ohos.data.resultset.AbsSharedResultSet: void close()>
<java.util.Stack: boolean empty()>
<ohos.bundle.BundleInfo: java.lang.String getCpuAbi()>
<java.lang.StrictMath: int subtractExact(int,int)>
<java.security.AlgorithmParameterGenerator: java.lang.String getAlgorithm()>
<ohos.agp.database.Publisher: void registerSubscriber(java.lang.Object)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform1i(int,int,int)>
<ohos.utils.LightweightSet: boolean removeAll(ohos.utils.LightweightSet)>
<ohos.telephony.TelephoneNumberUtils: boolean isLocalEmergencyPhoneNumber(java.lang.String)>
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[],int,int)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)>
<java.security.PrivilegedActionException: java.lang.Exception getException()>
<ohos.aafwk.content.Intent: java.io.Serializable getSerializableParam(java.lang.String)>
<ohos.agp.render.Path: boolean isConvex()>
<java.util.Collection: boolean retainAll(java.util.Collection)>
<ohos.media.photokit.metadata.AVStorage.Audio.Playlists.Members: ohos.utils.net.Uri fetchResource(java.lang.String,long)>
<java.util.AbstractMap.SimpleEntry: void <init>(java.util.Map.Entry)>
<ohos.agp.render.render3d.resources.MaterialDesc.MaterialAlphaMode: ohos.agp.render.render3d.resources.MaterialDesc.MaterialAlphaMode valueOf(java.lang.String)>
<java.util.stream.IntStream: java.util.stream.IntStream of(int)>
<ohos.event.commonevent.CommonEventSubscribeInfo: void <clinit>()>
<java.net.URLConnection: java.net.FileNameMap getFileNameMap()>
<ohos.utils.zson.ZSONReader: java.lang.Object read(java.lang.Class,boolean)>
<ohos.javax.xml.stream.XMLInputFactory: boolean isPropertySupported(java.lang.String)>
<ohos.agp.components.Text: ohos.agp.components.element.Element getStartElement()>
<ohos.global.icu.text.BreakIterator: java.text.CharacterIterator getText()>
<ohos.global.icu.text.UnicodeSetSpanner: void <init>(ohos.global.icu.text.UnicodeSet)>
<ohos.global.icu.util.Calendar: long floorDivide(long,long)>
<java.lang.Thread: java.lang.Thread.State getState()>
<java.nio.file.FileStore: java.lang.String type()>
<ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder: ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder setSecKeyAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec)>
<ohos.agp.text.TextForm: boolean getSuperscript()>
<ohos.media.sessioncore.AVController: ohos.event.intentagent.IntentAgent getAVSessionAbility()>
<ohos.data.resultset.AbsResultSet: boolean goTo(int)>
<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>
<ohos.sysappcomponents.contact.entity.Name: java.lang.String getFullName()>
<java.net.Authenticator: java.lang.String getRequestingProtocol()>
<ohos.bundle.HapModuleInfo: int getSupportedModes()>
<java.nio.file.spi.FileSystemProvider: void createLink(java.nio.file.Path,java.nio.file.Path)>
<ohos.system.DeviceInfo: java.lang.String getModel()>
<ohos.distributedschedule.interwork.DeviceInfo.DeviceState: void <clinit>()>
<ohos.global.icu.util.JapaneseCalendar: void <clinit>()>
<ohos.eventhandler.Courier: ohos.rpc.IRemoteObject getRemoteObject()>
<ohos.global.icu.text.DecimalFormatSymbols: char getSignificantDigit()>
<java.nio.FloatBuffer: java.nio.FloatBuffer put(java.nio.FloatBuffer)>
<ohos.accessibility.ability.AccessibleOperation: void <init>(int,java.lang.CharSequence)>
<ohos.aafwk.ability.DataAbilityOperation: java.lang.Integer getExpectedCount()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: boolean stopAbility(ohos.aafwk.ability.Ability)>
<ohos.media.common.BufferInfo: void setInfo(int,int,long,int)>
<ohos.aafwk.ability.ProviderFormInfo: void setJsBindingData(ohos.aafwk.ability.FormBindingData)>
<java.util.concurrent.SynchronousQueue: java.lang.Object[] toArray(java.lang.Object[])>
<java.net.Socket: void setKeepAlive(boolean)>
<ohos.global.icu.text.PluralRules: java.util.Set getKeywords()>
<java.io.CharArrayWriter: java.io.Writer append(java.lang.CharSequence)>
<ohos.agp.components.RadioContainer.CheckedStateChangedListener: void onCheckedChanged(ohos.agp.components.RadioContainer,int)>
<ohos.security.keystore.KeyGenAlgorithmParaSpec: java.lang.String[] getSecKeyCryptoAttr(int)>
<ohos.agp.render.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,float[])>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.components.Component getButtonComponent()>
<java.nio.IntBuffer: int[] array()>
<ohos.data.search.model.SearchableEntity: java.lang.String getBundleName()>
<ohos.agp.animation.styledsolutions.GravitationalClick: ohos.agp.animation.AnimatorProperty getActionDownAnimation(ohos.agp.components.Component,int)>
<java.time.LocalDate: java.time.chrono.ChronoLocalDate minus(java.time.temporal.TemporalAmount)>
<java.io.PrintWriter: java.io.PrintWriter printf(java.util.Locale,java.lang.String,java.lang.Object[])>
<java.util.logging.Logger: void finer(java.util.function.Supplier)>
<ohos.sysappcomponents.calendar.CalendarDataHelper: ohos.sysappcomponents.calendar.CalendarCollection query(ohos.data.dataability.DataAbilityPredicates,java.lang.String[])>
<ohos.aafwk.ability.AbilitySlice: void notifyVisibleForms(java.util.List)>
<ohos.miscservices.screenlock.ScreenLockController: ohos.miscservices.screenlock.ScreenLockController getInstance()>
<ohos.global.icu.text.RuleBasedCollator: void setFrenchCollation(boolean)>
<ohos.utils.BasePacMap: void setClassLoader(java.lang.ClassLoader)>
<ohos.rpc.ReliableFileDescriptor: void <init>(java.io.FileDescriptor)>
<ohos.global.icu.util.Calendar: int computeMillisInDay()>
<java.lang.Thread.State: java.lang.Thread.State[] values()>
<ohos.agp.components.ProgressBar: void setDividerLineThickness(int)>
<ohos.global.icu.text.CollationElementIterator: void setText(ohos.global.icu.text.UCharacterIterator)>
<ohos.agp.render.render3d.components.NodeComponent: java.lang.String getName()>
<java.sql.Connection: java.lang.String getCatalog()>
<java.util.Spliterator.OfPrimitive: java.util.Spliterator.OfPrimitive trySplit()>
<javax.crypto.interfaces.DHPrivateKey: java.math.BigInteger getX()>
<ohos.agp.render.opengl.GLES20: void glGenBuffers(int,int[])>
<java.lang.Short: java.lang.Short decode(java.lang.String)>
<ohos.utils.BasePacMap: boolean unmarshalling(ohos.utils.Parcel)>
<java.lang.invoke.MethodHandles.Lookup: java.lang.String toString()>
<java.lang.Character: boolean isLowerCase(char)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasContended()>
<ohos.agp.components.element.AnimatedStateElement: ohos.agp.components.element.Element getCurrentElement()>
<ohos.aafwk.ability.DataAbilityOperation.Builder: ohos.aafwk.ability.DataAbilityOperation.Builder withValueBackReferences(ohos.data.rdb.ValuesBucket)>
<java.io.File: boolean setWritable(boolean)>
<ohos.org.xml.sax.HandlerBase: void startDocument()>
<java.lang.Boolean: int compareTo(java.lang.Boolean)>
<ohos.utils.Parcel: void readDoubleArray(double[])>
<ohos.global.icu.text.TimeZoneFormat: java.util.EnumSet getDefaultParseOptions()>
<ohos.global.icu.util.TimeZone: java.lang.String getDisplayName(java.util.Locale)>
<ohos.global.icu.util.IslamicCalendar.CalculationType: ohos.global.icu.util.IslamicCalendar.CalculationType valueOf(java.lang.String)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet compact()>
<ohos.media.common.AVDescription.Builder: ohos.media.common.AVDescription.Builder setMediaId(java.lang.String)>
<ohos.data.search.schema.EmailItem: java.lang.String getContent()>
<ohos.agp.components.ListContainer: void setBoundary(ohos.agp.components.element.Element)>
<java.io.BufferedWriter: void newLine()>
<java.util.jar.Attributes: boolean equals(java.lang.Object)>
<ohos.net.LocalSocket: void closeInputStream()>
<java.nio.IntBuffer: java.nio.IntBuffer put(int[],int,int)>
<ohos.global.icu.util.Calendar: int floorDivide(int,int)>
<java.net.URLConnection: void setDefaultUseCaches(boolean)>
<ohos.data.async.DataAbilityAsyncHandler: void addInsertJob(ohos.data.async.JobParams,ohos.utils.net.Uri,ohos.data.rdb.ValuesBucket,ohos.data.async.InsertCallback)>
<ohos.agp.render.opengl.GLES30: void <init>()>
<ohos.agp.render.render3d.math.Quaternion: void <init>(float,float,float,float)>
<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>
<java.nio.charset.CharsetEncoder: float averageBytesPerChar()>
<javax.lang.model.element.AnnotationValue: java.lang.String toString()>
<java.time.ZonedDateTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenRunAsync(java.lang.Runnable)>
<ohos.agp.components.webengine.WebConfig: void setViewPortFitScreen(boolean)>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<ohos.agp.render.Canvas: void drawCircle(ohos.agp.utils.Circle,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<java.nio.ShortBuffer: java.nio.ShortBuffer put(short)>
<ohos.utils.RationalNumber: long longValue()>
<java.lang.ProcessBuilder.Redirect: boolean equals(java.lang.Object)>
<ohos.agp.utils.Matrix: void dirtyMatrixTypeCache()>
<ohos.agp.utils.DimensFloat: int hashCode()>
<java.util.TreeMap: java.util.SortedMap headMap(java.lang.Object)>
<ohos.global.icu.text.DecimalFormatSymbols: void setPadEscape(char)>
<java.time.chrono.ChronoLocalDateTime: boolean isEqual(java.time.chrono.ChronoLocalDateTime)>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate dateNow(java.time.Clock)>
<java.nio.file.StandardOpenOption: void <clinit>()>
<java.nio.channels.spi.AbstractInterruptibleChannel: void implCloseChannel()>
<java.util.logging.Logger: java.util.logging.Logger getParent()>
<ohos.app.AbilityContext: void attachBaseContext(ohos.app.Context)>
<java.net.Socket: void <init>(java.net.SocketImpl)>
<ohos.global.icu.util.Calendar: int gregorianPreviousMonthLength(int,int)>
<java.lang.reflect.Field: void setFloat(java.lang.Object,float)>
<ohos.event.notification.NotificationHelper: boolean hasNotificationPolicyAccessPermission()>
<ohos.aafwk.ability.Ability: void keepBackgroundRunning(int,ohos.event.notification.NotificationRequest)>
<java.lang.Class: boolean isAnnotation()>
<java.util.OptionalInt: int getAsInt()>
<ohos.bluetooth.A2dpSource: int getPlayingState(ohos.bluetooth.BluetoothRemoteDevice)>
<java.util.concurrent.locks.ReentrantLock: void lockInterruptibly()>
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object[] toArray()>
<java.nio.ByteBuffer: double getDouble(int)>
<java.sql.Statement: int executeUpdate(java.lang.String,int)>
<java.util.Spliterators.AbstractIntSpliterator: java.util.Spliterator.OfInt trySplit()>
<ohos.utils.PacMap: boolean getBooleanValue(java.lang.String)>
<java.text.DecimalFormat: int getMaximumIntegerDigits()>
<java.util.concurrent.ForkJoinTask: void quietlyComplete()>
<java.lang.SecurityManager: void checkExec(java.lang.String)>
<java.security.cert.PKIXParameters: void setInitialPolicies(java.util.Set)>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty scaleX(float)>
<ohos.agp.colors.CmykColor: void <init>(float,float,float,float)>
<java.text.DecimalFormatSymbols: void setMinusSign(char)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.Era eraOf(int)>
<ohos.telephony.CellularDataInfoManager: ohos.telephony.CellularDataInfoManager getInstance(ohos.app.Context)>
<java.time.OffsetTime: java.time.OffsetTime withSecond(int)>
<java.nio.file.attribute.PosixFileAttributeView: java.nio.file.attribute.PosixFileAttributes readAttributes()>
<java.time.Period: java.time.Period minusMonths(long)>
<java.time.OffsetTime: java.time.OffsetTime withOffsetSameInstant(java.time.ZoneOffset)>
<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>
<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>
<ohos.aafwk.ability.AbilityForm: void sendActions(ohos.agp.components.ComponentProvider)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates groupBy(java.lang.String[])>
<javax.crypto.KeyGenerator: void init(java.security.spec.AlgorithmParameterSpec)>
<java.time.chrono.ChronoLocalDateTime: long toEpochSecond(java.time.ZoneOffset)>
<ohos.agp.render.Path: boolean interpolate(ohos.agp.render.Path,float,ohos.agp.render.Path)>
<ohos.aafwk.ability.DataAbilityOperation: ohos.data.rdb.ValuesBucket getValuesBucketReferences()>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setShootingDate(java.lang.String)>
<java.util.AbstractList: java.lang.Object set(int,java.lang.Object)>
<java.util.concurrent.locks.Lock: void lock()>
<ohos.global.icu.util.RangeValueIterator: void reset()>
<ohos.account.app.IAppAccountSubscriber: void onAccountsChanged(java.util.List)>
<java.text.CollationKey: void <init>(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean removeIf(java.util.function.Predicate)>
<java.time.zone.ZoneOffsetTransition: java.time.zone.ZoneOffsetTransition of(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneOffset)>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitExecutableAsMethod(javax.lang.model.element.ExecutableElement,java.lang.Object)>
<ohos.ai.cv.docrefine.DocCoordinates: ohos.ai.cv.common.CvPoint getBottomLeft()>
<java.util.concurrent.AbstractExecutorService: java.lang.Object invokeAny(java.util.Collection)>
<ohos.global.icu.text.DecimalFormat: void setParseStrict(boolean)>
<ohos.utils.Dimension: int getWidthSize()>
<ohos.agp.components.Component.GestureType: ohos.agp.components.Component.GestureType valueOf(java.lang.String)>
<ohos.miscservices.pasteboard.SystemPasteboard: void clear()>
<ohos.agp.render.opengl.GLES1X: void glNormal3x(int,int,int)>
<ohos.rpc.MessageParcel: void readRemoteObjectArray(ohos.rpc.IRemoteObject[])>
<java.net.SocketImpl: void accept(java.net.SocketImpl)>
<java.util.TreeSet: java.lang.Object higher(java.lang.Object)>
<ohos.aafwk.ability.DeviceConfigInfo: int getKeyBoardType()>
<javax.net.ssl.SSLSocket: void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)>
<java.sql.SQLOutput: void writeCharacterStream(java.io.Reader)>
<ohos.agp.render.Canvas: boolean quickReject(float,float,float,float)>
<ohos.global.i18n.LocaleHelperUtils: void <init>()>
<ohos.global.icu.text.Transliterator.Position: boolean equals(java.lang.Object)>
<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>
<ohos.account.app.AppAccount: java.lang.String getOwner()>
<ohos.agp.database.DataSetPublisher: void notifyChanged()>
<java.nio.ByteBuffer: java.nio.ByteBuffer compact()>
<ohos.agp.components.PageSliderIndicator: void addPageChangedListener(ohos.agp.components.PageSlider.PageChangedListener)>
<ohos.accessibility.ability.AccessibilityInfo: long getChildId(int)>
<java.io.PrintStream: void print(float)>
<ohos.ace.ability.AceAbility: void onNewIntent(ohos.aafwk.content.Intent)>
<ohos.miscservices.download.DownloadConfig.Builder: ohos.miscservices.download.DownloadConfig.Builder setDescription(java.lang.String)>
<java.lang.Enum: java.lang.Object clone()>
<java.lang.AssertionError: void <init>(float)>
<java.util.prefs.PreferenceChangeEvent: java.lang.String getKey()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getServerSessionContext()>
<java.util.concurrent.ExecutorCompletionService: void <init>(java.util.concurrent.Executor,java.util.concurrent.BlockingQueue)>
<java.io.PrintStream: void println(float)>
<java.lang.reflect.Member: int getModifiers()>
<javax.lang.model.util.ElementFilter: java.util.Set methodsIn(java.util.Set)>
<ohos.media.common.sessioncore.AVSessionCallback: void onPlayBySearch(java.lang.String,ohos.utils.PacMap)>
<ohos.app.AbilityContext: java.lang.String getBundleName()>
<ohos.global.icu.text.MessagePattern: ohos.global.icu.text.MessagePattern parseSelectStyle(java.lang.String)>
<ohos.agp.components.ComponentContainer: void addComponent(ohos.agp.components.Component,ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.agp.render.opengl.GLES1X: void glSampleCoverage(float,boolean)>
<ohos.data.orm.OrmContext: boolean delete(ohos.data.orm.OrmObject)>
<ohos.agp.components.Text: void delete(int,boolean)>
<java.time.ZoneOffset: java.time.ZoneOffset ofHoursMinutes(int,int)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setElementName(java.lang.String,java.lang.Class)>
<ohos.agp.components.ComponentTreeObserver.ScrollChangedListener: void onScrolled()>
<ohos.agp.components.TickTimer: void setTickListener(ohos.agp.components.TickTimer.TickListener)>
<java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
<ohos.agp.render.Insets: void <init>(int,int,int,int)>
<ohos.agp.components.SlideDrawer: ohos.agp.components.SlideDrawer.SlideDirection getSlideDirection()>
<ohos.global.resource.solidxml.Theme: ohos.global.resource.solidxml.Theme getCombinedTheme(ohos.global.resource.solidxml.Theme)>
<java.lang.Long: float floatValue()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setShowCreateTime(boolean)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<java.util.GregorianCalendar: void computeTime()>
<ohos.agp.components.ComponentTreeObserver.GlobalLayoutListener: void onGlobalLayoutUpdated()>
<ohos.net.SocketCertificates: int getUid()>
<ohos.sensor.agent.CategoryLightAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryLightDataCallback,ohos.sensor.bean.CategoryLight)>
<javax.lang.model.element.ElementVisitor: java.lang.Object visitType(javax.lang.model.element.TypeElement,java.lang.Object)>
<ohos.aafwk.ability.delegation.AbilityDelegatorRegistry: ohos.aafwk.ability.delegation.IAbilityDelegator getAbilityDelegator()>
<ohos.media.common.sessioncore.AVElement: java.lang.String getMediaId()>
<java.time.OffsetDateTime: boolean isSupported(java.time.temporal.TemporalField)>
<java.time.chrono.ChronoLocalDate: long toEpochDay()>
<java.net.MulticastSocket: void joinGroup(java.net.InetAddress)>
<ohos.event.commonevent.MatchingSkills: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThan(java.lang.String,int)>
<ohos.global.icu.text.DateFormatSymbols: ohos.global.icu.text.DateFormatSymbols getInstance()>
<javax.sql.ConnectionEvent: void <init>(javax.sql.PooledConnection)>
<java.lang.NoSuchMethodException: void <init>()>
<java.sql.DatabaseMetaData: boolean supportsFullOuterJoins()>
<ohos.global.icu.text.Normalizer: int compare(char[],char[],int)>
<java.security.Provider.Service: boolean supportsParameter(java.lang.Object)>
<java.sql.ParameterMetaData: int getParameterCount()>
<java.text.DecimalFormatSymbols: char getGroupingSeparator()>
<ohos.agp.components.ComponentTransition: void <init>()>
<java.security.Identity: int hashCode()>
<java.util.function.LongUnaryOperator: java.util.function.LongUnaryOperator andThen(java.util.function.LongUnaryOperator)>
<ohos.org.xml.sax.ErrorHandler: void warning(ohos.org.xml.sax.SAXParseException)>
<java.nio.ShortBuffer: java.lang.String toString()>
<java.lang.ClassNotFoundException: java.lang.Throwable getException()>
<java.text.DecimalFormat: java.math.RoundingMode getRoundingMode()>
<ohos.data.distributed.common.Value: boolean equals(java.lang.Object)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet removeAllStrings()>
<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>
<java.io.FilterReader: long skip(long)>
<ohos.media.camera.device.FrameConfig.Builder: ohos.agp.utils.Rect getAeRect()>
<ohos.agp.render.Paint: float measureText(java.lang.String)>
<ohos.global.resource.Entry: void <init>()>
<java.lang.Long: long reverseBytes(long)>
<ohos.media.image.Image: long getTimestamp()>
<java.util.concurrent.atomic.AtomicInteger: int getAndSet(int)>
<ohos.miscservices.timeutility.Time: void sleep(long)>
<java.sql.Clob: void truncate(long)>
<ohos.miscservices.timeutility.Time: long getRealActiveTime()>
<java.util.TreeSet: java.util.NavigableSet tailSet(java.lang.Object,boolean)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: boolean marshalling(ohos.utils.Parcel)>
<ohos.powermanager.PowerManager.PowerState: ohos.powermanager.PowerManager.PowerState valueOf(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: java.util.Spliterator spliterator()>
<java.io.PrintStream: void println(boolean)>
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<ohos.sensor.agent.CategoryOrientationAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int,long)>
<ohos.global.icu.text.BreakIterator: java.util.Locale[] getAvailableLocales()>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryEnvironmentDataCallback,ohos.sensor.bean.CategoryEnvironment,long)>
<java.util.function.LongSupplier: long getAsLong()>
<java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()>
<ohos.agp.render.opengl.GLES30: void glUniform4uiv(int,int,int[])>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal divide(ohos.global.icu.math.BigDecimal)>
<ohos.media.tubecore.AVTube: ohos.media.tubecore.AVTube.DeviceType deviceType()>
<ohos.global.icu.text.StringSearch: void <init>(java.lang.String,java.lang.String)>
<ohos.media.camera.device.CameraInfo: java.util.List getPhysicalIdList()>
<ohos.aafwk.ability.AbilityWindowConfiguration: void <init>()>
<ohos.agp.components.ProgressBar: void setDividerLineColor(ohos.agp.utils.Color)>
<ohos.agp.components.element.ElementContainer: int getFadeInEffectPeriod()>
<ohos.ai.cv.common.VisionManager: ohos.ai.cv.sr.IImageSuperResolution getSisr(ohos.app.Context)>
<ohos.global.icu.text.RelativeDateTimeFormatter.AbsoluteUnit: void <clinit>()>
<java.nio.channels.SelectionKey: void <init>()>
<java.text.CollationElementIterator: short tertiaryOrder(int)>
<ohos.agp.animation.Animator: void start()>
<ohos.agp.utils.RectFloat.RotationEnum: ohos.agp.utils.RectFloat.RotationEnum getByInt(int)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>
<ohos.agp.components.TimePicker: void setSelectedTextColor(ohos.agp.utils.Color)>
<ohos.event.notification.NotificationRequest.NotificationNormalContent: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.render.render3d.Engine: void reset()>
<java.security.KeyStoreSpi: void engineLoad(java.security.KeyStore.LoadStoreParameter)>
<java.nio.channels.FileLockInterruptionException: void <init>()>
<java.sql.SQLInput: java.lang.Object readObject()>
<java.nio.file.attribute.FileTime: java.nio.file.attribute.FileTime fromMillis(long)>
<java.net.NetworkInterface: java.util.List getInterfaceAddresses()>
<java.time.OffsetTime: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<java.net.URI: int compareTo(java.lang.Object)>
<ohos.global.icu.text.StringSearch: boolean isCanonical()>
<java.util.concurrent.LinkedTransferQueue: java.lang.Object take()>
<java.net.Socket: void <init>(java.net.InetAddress,int,java.net.InetAddress,int)>
<java.lang.Math: double floor(double)>
<java.math.BigDecimal: java.math.BigInteger unscaledValue()>
<java.util.jar.Attributes: boolean containsValue(java.lang.Object)>
<java.util.LongSummaryStatistics: long getCount()>
<ohos.agp.render.render3d.math.Vector2: float getLength()>
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
<java.util.function.DoubleUnaryOperator: java.util.function.DoubleUnaryOperator compose(java.util.function.DoubleUnaryOperator)>
<ohos.media.image.ImagePacker: boolean initializePacking(byte[],ohos.media.image.ImagePacker.PackingOptions)>
<ohos.sysappcomponents.calendar.entity.Events: java.lang.String getStartTimezone()>
<ohos.media.common.sessioncore.AVSessionCallback: void onPlay()>
<ohos.utils.ParcelException: void <init>(java.lang.String)>
<ohos.distributedschedule.interwork.DeviceInfo.DeviceType: void <clinit>()>
<java.util.prefs.InvalidPreferencesFormatException: void <init>(java.lang.Throwable)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setColor(int)>
<ohos.agp.components.Picker: void setDisplayedData(java.lang.String[])>
<ohos.utils.net.Uri: java.lang.String getEncodedSchemeSpecificPart()>
<ohos.javax.xml.stream.XMLStreamReader: ohos.javax.xml.namespace.NamespaceContext getNamespaceContext()>
<ohos.data.orm.OrmObject: boolean equals(java.lang.Object)>
<ohos.agp.render.ColorMatrix: void <init>(float[])>
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValueReduced(java.time.temporal.TemporalField,int,int,java.time.chrono.ChronoLocalDate)>
<java.util.Collection: boolean removeAll(java.util.Collection)>
<ohos.agp.render.Canvas.PorterDuffMode: ohos.agp.render.Canvas.PorterDuffMode valueOf(java.lang.String)>
<ohos.data.distributed.common.Entry: java.lang.String getKey()>
<java.sql.DatabaseMetaData: boolean supportsGetGeneratedKeys()>
<ohos.data.search.schema.MessageItem: java.lang.String getSenderPhone()>
<ohos.event.notification.NotificationRequest: java.lang.String getSortingKey()>
<ohos.global.icu.text.Collator: java.lang.Object clone()>
<java.time.ZonedDateTime: java.time.ZonedDateTime now(java.time.Clock)>
<java.time.temporal.TemporalField: java.time.temporal.ValueRange rangeRefinedBy(java.time.temporal.TemporalAccessor)>
<ohos.event.notification.NotificationSlotGroup: java.lang.String toString()>
<java.lang.VerifyError: void <init>(java.lang.String)>
<ohos.agp.components.DependentLayout: void setAlignment(int)>
<java.sql.ResultSet: boolean rowUpdated()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenApplyAsync(java.util.function.Function,java.util.concurrent.Executor)>
<ohos.agp.components.PageSliderIndicator: void setSelected(int)>
<ohos.sensor.agent.SensorAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,long,long)>
<java.util.prefs.AbstractPreferences: boolean getBoolean(java.lang.String,boolean)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates between(java.lang.String,int,int)>
<java.util.prefs.AbstractPreferences: boolean nodeExists(java.lang.String)>
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>
<ohos.event.notification.NotificationSubscriber: void onCanceled(ohos.event.notification.NotificationRequest,ohos.event.notification.NotificationSortingMap,int)>
<ohos.global.icu.util.EthiopicCalendar: java.lang.String getType()>
<java.util.concurrent.BlockingDeque: void put(java.lang.Object)>
<ohos.global.icu.text.IDNA.Error: ohos.global.icu.text.IDNA.Error valueOf(java.lang.String)>
<java.net.CookieManager: void <init>(java.net.CookieStore,java.net.CookiePolicy)>
<java.sql.SQLNonTransientConnectionException: void <init>(java.lang.String,java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThan(java.lang.String,int)>
<java.text.ChoiceFormat: java.lang.String toPattern()>
<ohos.event.notification.NotificationRequest.NotificationNormalContent: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.data.search.schema.Schema: java.lang.Object setSubtitle(java.lang.String)>
<ohos.event.commonevent.CommonEventSubscriber: int getCode()>
<java.time.temporal.IsoFields: void <clinit>()>
<ohos.agp.components.Switch: void setThumbSize(int,int)>
<java.util.Comparator: java.util.Comparator nullsLast(java.util.Comparator)>
<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)>
<ohos.agp.render.opengl.GLES32: void glDrawElementsInstancedBaseVertex(int,int,int,int,int,int)>
<ohos.bundle.ElementName: void setAbilityName(java.lang.String)>
<ohos.utils.net.UrlQueryFilter: boolean containParameter(java.lang.String)>
<ohos.global.icu.text.Bidi: byte getParaLevel()>
<ohos.aafwk.ability.Ability: ohos.utils.net.Uri normalizeUri(ohos.utils.net.Uri)>
<java.time.ZonedDateTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.event.notification.ReminderHelper: void addNotificationSlot(ohos.event.notification.NotificationSlot)>
<java.time.chrono.JapaneseEra: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.backgroundtaskmgr.DelaySuspendInfo: int getActualDelayTime()>
<java.util.Queue: java.lang.Object peek()>
<ohos.agp.components.TabList: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.javax.xml.stream.XMLStreamWriter: java.lang.String getPrefix(java.lang.String)>
<java.text.DateFormatSymbols: int hashCode()>
<ohos.agp.render.Region.Op: void <clinit>()>
<java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>
<ohos.aafwk.ability.ProviderFormInfo: ohos.aafwk.ability.FormBindingData getJsBindingData()>
<javax.sql.RowSet: boolean isReadOnly()>
<ohos.agp.components.webengine.WebView: void onStop()>
<ohos.event.notification.IAdvancedNotificationManager: void setNotificationBadgeNum(java.lang.String,int)>
<java.lang.Character: int codePointBefore(char[],int,int)>
<java.sql.DatabaseMetaData: boolean supportsTransactions()>
<ohos.accessibility.ability.AccessibilityInfo: void setCheckable(boolean)>
<ohos.global.i18n.text.MeasureOptions.Usage: ohos.global.i18n.text.MeasureOptions.Usage valueOf(java.lang.String)>
<java.util.PropertyResourceBundle: java.lang.Object handleGetObject(java.lang.String)>
<ohos.global.icu.text.DecimalFormatSymbols: void setMinusSign(char)>
<ohos.telephony.ShortMessageManager: ohos.telephony.ShortMessageManager getInstance(ohos.app.Context)>
<ohos.global.icu.util.Calendar: void setTime(java.util.Date)>
<java.lang.reflect.Field: void setLong(java.lang.Object,long)>
<ohos.agp.components.Picker: java.lang.String[] getDisplayedData()>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.window.dialog.CommonDialog setImageButton(int,int,ohos.agp.window.dialog.IDialog.ClickedListener)>
<ohos.telephony.RadioStateObserver: void onSignalInfoUpdated(java.util.List)>
<java.lang.invoke.MethodHandle: java.lang.Object invokeWithArguments(java.util.List)>
<java.io.RandomAccessFile: int read(byte[],int,int)>
<ohos.agp.components.SlideDrawer.DrawerState: void <clinit>()>
<ohos.nfc.tag.NdefTag: int getNdefMaxSize()>
<java.lang.Runtime: boolean removeShutdownHook(java.lang.Thread)>
<java.time.OffsetTime: java.time.OffsetTime minusHours(long)>
<ohos.agp.text.TextForm: boolean getStrikethrough()>
<ohos.agp.components.Component: void scrollBy(int,int)>
<ohos.media.photokit.metadata.AVStorage: ohos.utils.net.Uri fetchDocumentResource(ohos.app.Context,ohos.utils.net.Uri)>
<ohos.global.icu.text.CollationElementIterator: int getOffset()>
<ohos.bluetooth.ble.GattDescriptor: void <init>(java.util.UUID,int)>
<ohos.workscheduler.WorkInfo: boolean isRequestDeepIdle()>
<java.util.Calendar: int getFirstDayOfWeek()>
<ohos.utils.PlainIntArray: int get(int,int)>
<ohos.bluetooth.ble.BleAdvertiseData: java.util.List getServiceUuids()>
<ohos.media.audio.AudioManager: boolean isMasterMute()>
<ohos.media.image.ImageSource: byte[] getImageThumbnailBytes()>
<ohos.miscservices.pasteboard.PasteData.DataProperty: boolean marshalling(ohos.utils.Parcel)>
<java.util.stream.DoubleStream: java.util.PrimitiveIterator.OfDouble iterator()>
<ohos.agp.render.opengl.GLES1X: void glGetIntegerv(int,int[])>
<ohos.javax.xml.parsers.SAXParser: void parse(java.lang.String,ohos.org.xml.sax.helpers.DefaultHandler)>
<java.lang.Integer: java.lang.String toBinaryString(int)>
<ohos.hiviewdfx.HiTraceId: long getChainId()>
<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>
<ohos.agp.render.opengl.GLES1X: void glBufferSubData(int,int,int,java.nio.Buffer)>
<ohos.media.image.Image: ohos.media.image.Image.Component getComponent(ohos.media.image.common.ImageFormat.ComponentType)>
<java.util.SplittableRandom: double nextDouble()>
<java.util.concurrent.ConcurrentNavigableMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>
<ohos.media.image.common.AlphaType: int getValue()>
<java.sql.CallableStatement: void setBinaryStream(java.lang.String,java.io.InputStream,int)>
<ohos.data.rdb.RdbStore: long count(java.lang.String,java.lang.String,java.lang.String[])>
<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable,java.lang.String)>
<java.security.IdentityScope: int size()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Map.Entry higherEntry(java.lang.Object)>
<java.util.IdentityHashMap: boolean containsValue(java.lang.Object)>
<ohos.agp.render.opengl.GLES30: void glGetProgramBinary(int,int,int[],int[],java.nio.Buffer)>
<javax.crypto.Mac: int getMacLength()>
<java.lang.Integer: long toUnsignedLong(int)>
<java.io.StreamTokenizer: void wordChars(int,int)>
<java.security.Principal: int hashCode()>
<ohos.media.common.AVDescription: boolean marshalling(ohos.utils.Parcel)>
<java.security.cert.PKIXBuilderParameters: int getMaxPathLength()>
<java.net.URL: boolean sameFile(java.net.URL)>
<java.util.List: boolean isEmpty()>
<ohos.nfc.tag.NdefTag: ohos.nfc.tag.NdefMessage readNdefMessage()>
<ohos.global.icu.text.DateFormatSymbols: void setZoneStrings(java.lang.String[][])>
<ohos.agp.text.Layout: void <init>()>
<ohos.event.notification.NotificationUserInput.Builder: ohos.event.notification.NotificationUserInput.Builder setEditType(ohos.event.notification.NotificationConstant.InputEditType)>
<ohos.data.dataability.DataAbilityUtils: ohos.data.orm.OrmPredicates createOrmPredicates(ohos.data.dataability.DataAbilityPredicates,java.lang.Class)>
<ohos.agp.render.opengl.GLES2Ext: void glGetTexParameterIivEXT(int,int,int[])>
<ohos.app.dispatcher.TaskDispatcher: void groupDispatchNotify(ohos.app.dispatcher.Group,java.lang.Runnable)>
<ohos.global.icu.math.BigDecimal: void <init>(int)>
<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setElementName(java.lang.String,java.lang.String,java.lang.Class)>
<ohos.sysappcomponents.calendar.entity.Participants: java.lang.String getParticipantEmail()>
<java.time.Month: int getValue()>
<ohos.data.DatabaseFileType: java.lang.String getValue()>
<ohos.agp.utils.Matrix: void setIdentity()>
<ohos.global.icu.text.UnicodeSetIterator: java.lang.String getString()>
<ohos.agp.render.render3d.Engine: void runInRenderThread(java.lang.Runnable)>
<ohos.agp.components.TickTimer: void stop()>
<ohos.usb.USBDevice: int getDeviceClass()>
<java.net.HttpURLConnection: java.security.Permission getPermission()>
<java.util.Scanner: java.util.Scanner skip(java.lang.String)>
<ohos.agp.render.Paint: void horizontalTilt(float)>
<java.io.DataInputStream: int readUnsignedShort()>
<java.security.Principal: java.lang.String toString()>
<ohos.aafwk.ability.fraction.FractionAbility: void <init>()>
<java.sql.SQLSyntaxErrorException: void <init>(java.lang.String,java.lang.String,int)>
<ohos.agp.components.BaseItemProvider: void notifyDataSetItemRangeChanged(int,int)>
<ohos.utils.geo.DimensFloat: float getSizeX()>
<javax.net.ssl.SSLSession: int getApplicationBufferSize()>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onCopy(ohos.multimodalinput.event.MultimodalEvent)>
<java.util.stream.LongStream: java.util.stream.Stream mapToObj(java.util.function.LongFunction)>
<ohos.agp.components.TickTimer: void setFormat(java.lang.String)>
<java.sql.ResultSet: int getInt(int)>
<ohos.data.resultset.AbsResultSet: int getColumnCount()>
<ohos.media.audio.SoundPlayer.AudioVolumes: void setRearRightVolume(float)>
<java.util.Arrays: void parallelSort(java.lang.Comparable[],int,int)>
<ohos.agp.window.dialog.BaseDialog: void show()>
<java.lang.Float: boolean isInfinite(float)>
<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>
<ohos.agp.components.webengine.WebConfig: boolean isMediaAutoReplay()>
<ohos.aafwk.ability.AbilityLifecycleCallbacks: void onAbilityStart(ohos.aafwk.ability.Ability)>
<ohos.global.icu.text.UnicodeSet: java.lang.Iterable ranges()>
<ohos.rpc.MessageParcel: void writeNoException()>
<ohos.data.search.schema.Schema: java.lang.Object setUrl(java.lang.String)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: void acquireInterruptibly(long)>
<ohos.agp.render.render3d.components.SceneComponent: ohos.agp.render.render3d.math.Vector3 getEnvironmentSpecularColor()>
<java.security.KeyStoreSpi: void engineStore(java.security.KeyStore.LoadStoreParameter)>
<java.io.ObjectInputStream.GetField: void <init>()>
<ohos.bundle.IBundleManager: ohos.bundle.AbilityInfo getModuleMainAbility(java.lang.String,java.lang.String)>
<ohos.data.search.model.Recommendation: void setCount(long)>
<ohos.global.icu.text.UCharacterIterator: int nextCodePoint()>
<ohos.aafwk.content.Intent: java.util.ArrayList getParcelableArrayListParam(java.lang.String)>
<java.security.cert.X509CertSelector: byte[] getNameConstraints()>
<java.util.zip.ZipEntry: long getTime()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setRemovalIntentAgent(ohos.event.intentagent.IntentAgent)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setProgressBar(int,int,boolean)>
<ohos.light.bean.LightBrightness: void <init>(int,int,int)>
<java.util.concurrent.BlockingQueue: boolean offer(java.lang.Object)>
<java.util.concurrent.atomic.AtomicReference: java.lang.Object updateAndGet(java.util.function.UnaryOperator)>
<ohos.agp.render.render3d.resources.MeshDesc: void <init>()>
<ohos.utils.FloatDimension: float getWidthSize()>
<java.nio.ByteBuffer: double getDouble()>
<java.security.cert.PKIXRevocationChecker: void setOcspResponder(java.net.URI)>
<ohos.agp.components.AttrHelper: int convertDimensionToPix(ohos.app.Context,java.lang.String,int)>
<ohos.net.ConnectionProperties: void <init>(ohos.net.ConnectionProperties)>
<java.lang.Double: int compareTo(java.lang.Object)>
<ohos.global.icu.text.Edits: boolean hasChanges()>
<java.text.CharacterIterator: int getBeginIndex()>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate dateYearDay(java.time.chrono.Era,int,int)>
<ohos.agp.render.render3d.resources.MeshDesc: void setBounds(ohos.agp.render.render3d.util.BoundingBox)>
<ohos.batterymanager.BatteryInfo.BatteryChargeState: ohos.batterymanager.BatteryInfo.BatteryChargeState[] values()>
<javax.lang.model.type.ExecutableType: javax.lang.model.type.TypeMirror getReceiverType()>
<ohos.location.Locator: void <init>(ohos.bundle.AbilityInfo)>
<javax.lang.model.element.AnnotationMirror: java.util.Map getElementValues()>
<java.lang.Character: boolean isJavaLetterOrDigit(char)>
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery zoneId()>
<java.io.RandomAccessFile: int skipBytes(int)>
<java.util.Arrays: double[] copyOf(double[],int)>
<java.time.LocalDate: int getDayOfYear()>
<ohos.eventhandler.EventRunner: ohos.eventhandler.EventRunner create(boolean)>
<ohos.aafwk.ability.Ability: void onUnloadForm()>
<java.util.stream.IntStream: java.util.Iterator iterator()>
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
<ohos.global.icu.text.RelativeDateTimeFormatter: java.lang.String format(double,ohos.global.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit)>
<ohos.usb.USBCore: ohos.usb.USBDevicePipe connectDevice(ohos.usb.USBDevice)>
<ohos.sysappcomponents.calendar.entity.Instances: long getInstanceEndDay()>
<ohos.agp.components.webengine.WebView: boolean pageUp(boolean)>
<java.io.PrintStream: void flush()>
<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,byte[],java.nio.file.OpenOption[])>
<java.util.Arrays: void fill(short[],short)>
<ohos.global.icu.text.ListFormatter: java.lang.String format(java.util.Collection)>
<java.util.LinkedList: java.lang.Object pollFirst()>
<ohos.data.file.FileAbility: ohos.global.resource.RawFileDescriptor openRawFile(ohos.utils.net.Uri,java.lang.String)>
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>
<ohos.media.common.sessioncore.AVControllerCallback: void onAVMetadataChanged(ohos.media.common.AVMetadata)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: boolean compareAndSet(java.lang.Object,long,long)>
<ohos.agp.components.ScrollView: void <init>(ohos.app.Context)>
<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getPlusSignString()>
<ohos.global.icu.util.GregorianCalendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<ohos.app.AbilityContext: ohos.bundle.HapModuleInfo getHapModuleInfo()>
<ohos.agp.components.SlideDrawer: void removeComponents(int,int)>
<javax.crypto.SecretKeyFactorySpi: java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey,java.lang.Class)>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitVariableAsResourceVariable(javax.lang.model.element.VariableElement,java.lang.Object)>
<ohos.media.sessioncore.AVSession: void release()>
<java.nio.channels.SocketChannel: long read(java.nio.ByteBuffer[],int,int)>
<ohos.global.icu.text.DecimalFormatSymbols: void setPerMillString(java.lang.String)>
<javax.security.cert.CertificateNotYetValidException: void <init>()>
<java.nio.CharBuffer: char get(int)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate minus(long,java.time.temporal.TemporalUnit)>
<java.sql.SQLTransactionRollbackException: void <init>(java.lang.Throwable)>
<ohos.global.icu.text.DecimalFormatSymbols: void setDigit(char)>
<ohos.usb.USBConfig: ohos.usb.USBInterface getInterface(int)>
<java.util.concurrent.atomic.LongAccumulator: double doubleValue()>
<ohos.account.OsAccountType: void <clinit>()>
<java.util.concurrent.DelayQueue: java.util.Iterator iterator()>
<ohos.agp.render.render3d.resources.ResourceManager: void updateBuffer(ohos.agp.render.render3d.resources.GpuResourceHandle,java.nio.ByteBuffer)>
<ohos.media.common.Format: boolean hasKey(java.lang.String)>
<ohos.agp.components.Picker: int getSelectorItemNum()>
<ohos.agp.components.RoundProgressBar: void setMaxAngle(float)>
<java.io.FileInputStream: java.io.FileDescriptor getFD()>
<java.sql.CallableStatement: long getLong(int)>
<ohos.media.common.AVMetadata: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.MeasureFormat.FormatWidth: void <clinit>()>
<java.net.Proxy.Type: void <clinit>()>
<java.time.YearMonth: java.lang.String toString()>
<java.util.prefs.AbstractPreferences: float getFloat(java.lang.String,float)>
<ohos.global.icu.text.DateIntervalFormat.FormattedDateInterval: java.text.AttributedCharacterIterator toCharacterIterator()>
<ohos.agp.components.element.Element: int getMinWidth()>
<ohos.utils.zson.ZSONArray: java.lang.Object clone()>
<ohos.multimodalinput.device.InputDevice: int[] getAllInputDeviceID()>
<ohos.utils.Parcel: int getReadableBytes()>
<java.util.function.IntPredicate: java.util.function.IntPredicate or(java.util.function.IntPredicate)>
<ohos.agp.render.opengl.GLES32: void glReadnPixels(int,int,int,int,int,int,int,java.nio.Buffer)>
<ohos.vibrator.agent.VibratorAgent: boolean stop(int,java.lang.String)>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinTask submit(java.util.concurrent.Callable)>
<ohos.global.icu.util.Calendar: void <init>(ohos.global.icu.util.TimeZone,java.util.Locale)>
<java.security.MessageDigest: void reset()>
<ohos.org.w3c.dom.TypeInfo: java.lang.String getTypeName()>
<ohos.agp.colors.RgbColor: int getBlue()>
<java.lang.reflect.Array: void setInt(java.lang.Object,int,int)>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: ohos.event.notification.NotificationRequest.NotificationConversationalContent addConversationalMessage(java.lang.String,long,ohos.event.notification.MessageUser)>
<ohos.data.search.schema.PlaceItem: ohos.data.search.schema.PlaceItem setCountry(java.lang.String)>
<java.io.FileReader: void <init>(java.io.FileDescriptor)>
<java.security.spec.PKCS8EncodedKeySpec: byte[] getEncoded()>
<java.io.File: long length()>
<ohos.media.camera.device.CameraConfig.Builder: ohos.media.camera.device.CameraConfig.Builder setFrameStateCallback(ohos.media.camera.device.FrameStateCallback,ohos.eventhandler.EventHandler)>
<ohos.global.resource.solidxml.TypedAttribute: float computeTranslateRatio(ohos.global.configuration.DeviceCapability)>
<ohos.media.common.sessioncore.AVSubscriptionCallback: void <init>()>
<java.lang.reflect.Parameter: boolean isSynthetic()>
<javax.net.ssl.ExtendedSSLSession: java.util.List getRequestedServerNames()>
<java.time.OffsetDateTime: java.time.OffsetDateTime minusYears(long)>
<ohos.agp.utils.RectFloat: void fuse(ohos.agp.utils.RectFloat)>
<ohos.agp.window.service.Window: java.util.Optional getCurrentComponentFocus()>
<ohos.global.icu.text.Edits: ohos.global.icu.text.Edits.Iterator getCoarseChangesIterator()>
<java.sql.SQLSyntaxErrorException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<java.util.zip.ZipFile: void close()>
<javax.net.ssl.SSLParameters: void setAlgorithmConstraints(java.security.AlgorithmConstraints)>
<ohos.agp.render.opengl.GLES20: void glDeleteRenderbuffers(int,int[])>
<ohos.utils.IntArray: java.lang.String toString(java.lang.String)>
<ohos.agp.window.dialog.PopupDialog: void onShowing()>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[],int,int)>
<ohos.agp.render.Paint: float getAlpha()>
<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>
<java.util.concurrent.LinkedBlockingDeque: boolean add(java.lang.Object)>
<java.nio.channels.AsynchronousFileChannel: void lock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>
<java.security.acl.AclEntry: java.lang.String toString()>
<java.util.Base64: java.util.Base64.Decoder getDecoder()>
<ohos.agp.components.TabList: ohos.agp.components.TabList.Tab getTabAt(int)>
<java.util.regex.Matcher: boolean lookingAt()>
<ohos.data.distributed.common.KvManagerConfig: ohos.data.distributed.common.UserInfo getUserInfo()>
<java.lang.invoke.MethodHandles.Lookup: int lookupModes()>
<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>
<javax.lang.model.element.UnknownAnnotationValueException: void <init>(javax.lang.model.element.AnnotationValue,java.lang.Object)>
<ohos.global.icu.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>
<java.security.cert.PKIXRevocationChecker: void setOcspExtensions(java.util.List)>
<java.text.FieldPosition: void <init>(int)>
<ohos.media.camera.device.CameraAbility: java.util.List getSupportedSizes(java.lang.Class)>
<java.lang.StrictMath: float abs(float)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates in(java.lang.String,java.util.Calendar[])>
<ohos.data.search.schema.DocumentItem: ohos.data.search.schema.DocumentItem setAuthor(java.lang.String)>
<ohos.utils.geo.RectFloat: void setPivot(float,float)>
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndSet(int,java.lang.Object)>
<ohos.utils.LruBuffer: int size()>
<ohos.agp.render.render3d.gltf.GltfData: int getDefaultSceneIndex()>
<java.time.ZoneId: java.time.ZoneId of(java.lang.String)>
<java.security.cert.CertificateExpiredException: void <init>()>
<ohos.agp.components.ListContainer.ScrollListener: void onScrollFinished()>
<ohos.agp.render.PdfDisplay.Page: int getWidth()>
<ohos.global.icu.text.DateFormatSymbols: void <init>()>
<ohos.media.image.Image.Component: void release()>
<ohos.agp.render.Region: boolean quickReject(int,int,int,int)>
<java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.nio.IntBuffer: java.nio.IntBuffer wrap(int[],int,int)>
<java.security.cert.X509CertSelector: java.math.BigInteger getSerialNumber()>
<java.time.LocalDate: int getDayOfMonth()>
<java.util.concurrent.Phaser: int awaitAdvanceInterruptibly(int,long,java.util.concurrent.TimeUnit)>
<ohos.agp.render.Paint: void setShader(ohos.agp.render.Shader,ohos.agp.render.Paint.ShaderType)>
<java.math.BigDecimal: java.lang.String toPlainString()>
<ohos.sysappcomponents.contact.entity.Email: int hashCode()>
<java.util.PrimitiveIterator.OfLong: void forEachRemaining(java.util.function.Consumer)>
<java.util.logging.Logger: java.util.ResourceBundle getResourceBundle()>
<java.security.cert.Certificate: java.lang.String getType()>
<java.lang.Math: double cbrt(double)>
<java.security.spec.RSAKeyGenParameterSpec: java.math.BigInteger getPublicExponent()>
<javax.sql.RowSet: java.util.Map getTypeMap()>
<ohos.global.icu.text.BreakIterator: int following(int)>
<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<ohos.accessibility.ability.GestureResultListener: void onCompleted()>
<java.net.CookieHandler: void put(java.net.URI,java.util.Map)>
<ohos.agp.components.Switch: java.lang.String getStateOnText()>
<ohos.event.notification.NotificationUserInput.Builder: ohos.event.notification.NotificationUserInput.Builder addAdditionalData(ohos.utils.PacMap)>
<java.sql.ResultSet: void moveToCurrentRow()>
<ohos.agp.render.render3d.components.WorldMatrixComponent: void setWorldMatrix(ohos.agp.render.render3d.math.Matrix4x4)>
<ohos.media.audio.AudioCapturerInfo: ohos.media.audio.AudioStreamInfo getAudioStreamInfo()>
<java.util.HashMap: void replaceAll(java.util.function.BiFunction)>
<ohos.data.async.RdbStoreAsyncHandler: void addUpdateJob(ohos.data.async.JobParams,ohos.data.rdb.ValuesBucket,ohos.data.rdb.RdbPredicates,ohos.data.async.UpdateCallback)>
<ohos.data.distributed.common.ChangeNotification: java.util.List getUpdateEntries()>
<ohos.agp.colors.UserDefinedColor: int hashCode()>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>
<java.time.chrono.ChronoLocalDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<javax.security.cert.CertificateException: void <init>(java.lang.String)>
<java.util.Hashtable: void <init>()>
<java.util.AbstractSequentialList: java.lang.Object set(int,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: void forEachValue(long,java.util.function.Function,java.util.function.Consumer)>
<ohos.accessibility.ability.AccessibilityInfo: boolean isPopupSupported()>
<ohos.rpc.RemoteProxy: boolean setDataVersion(int)>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: ohos.event.notification.NotificationRequest.NotificationLongTextContent setText(java.lang.String)>
<ohos.eventhandler.InnerEvent: java.lang.String toString()>
<ohos.global.icu.util.VersionInfo: ohos.global.icu.util.VersionInfo getInstance(int,int)>
<ohos.event.notification.IAdvancedNotificationManager: void setNotificationAgent(java.lang.String,java.lang.String)>
<ohos.event.notification.NotificationRequest: ohos.event.intentagent.IntentAgent getMaxScreenIntentAgent()>
<java.lang.invoke.MethodHandles.Lookup: java.lang.invoke.MethodHandle unreflectGetter(java.lang.reflect.Field)>
<javax.crypto.Mac: void update(byte[])>
<ohos.global.icu.text.Normalizer2: int spanQuickCheckYes(java.lang.CharSequence)>
<ohos.agp.components.PageSliderIndicator: void setItemElement(ohos.agp.components.element.Element,ohos.agp.components.element.Element)>
<java.time.format.DecimalStyle: char getZeroDigit()>
<java.util.PriorityQueue: boolean contains(java.lang.Object)>
<java.util.ArrayList: java.util.ListIterator listIterator(int)>
<java.net.URLConnection: void setDoOutput(boolean)>
<java.lang.reflect.Executable: java.lang.String toGenericString()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getExclusiveQueuedThreads()>
<java.security.KeyStoreSpi: int engineSize()>
<ohos.data.resultset.AbsSharedResultSet: void fillBlock(int,ohos.data.resultset.SharedBlock)>
<ohos.agp.render.Insets: void <clinit>()>
<ohos.global.icu.text.DecimalFormat: boolean isParseStrict()>
<java.util.Map: java.lang.Object get(java.lang.Object)>
<javax.crypto.spec.RC2ParameterSpec: int hashCode()>
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String)>
<ohos.distributedhardware.devicemanager.DeviceManager: int createInstance(ohos.distributedhardware.devicemanager.DeviceManager.DeviceManagerCallback)>
<ohos.eventhandler.Courier: void <init>(ohos.rpc.IRemoteObject)>
<ohos.agp.render.layoutboost.LayoutBoostUtils: void <init>()>
<java.net.HttpRetryException: int responseCode()>
<ohos.multimodalinput.standard.MediaEventHandle: boolean onPause(ohos.multimodalinput.event.MultimodalEvent)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenCombineAsync(java.util.concurrent.CompletionStage,java.util.function.BiFunction,java.util.concurrent.Executor)>
<javax.crypto.Mac: java.lang.Object clone()>
<java.util.Spliterators: java.util.Spliterator.OfInt spliteratorUnknownSize(java.util.PrimitiveIterator.OfInt,int)>
<ohos.agp.components.Component: ohos.agp.components.Component.ScaledListener getScaledListener()>
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getX()>
<ohos.net.DataFlowStatistics: void <init>()>
<java.util.ServiceLoader: java.util.ServiceLoader loadInstalled(java.lang.Class)>
<java.time.chrono.IsoChronology: java.time.LocalDate date(int,int,int)>
<java.io.StringReader: void close()>
<ohos.utils.net.UrlQueryFilter: boolean getFirstPriority()>
<ohos.interwork.bundle.ElementNameEx: java.lang.String getAbilityName()>
<java.security.interfaces.RSAKey: java.math.BigInteger getModulus()>
<java.sql.PreparedStatement: java.sql.ResultSetMetaData getMetaData()>
<ohos.agp.graphics.SurfaceOps: void setFixedSize(int,int)>
<ohos.sysappcomponents.contact.entity.Name: void setNameSuffix(java.lang.String)>
<java.io.PrintWriter: void println(long)>
<java.net.URL: java.lang.String getHost()>
<ohos.aafwk.ability.continuation.ExtraParams: void <init>(java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<ohos.javax.xml.validation.Validator: void <init>()>
<ohos.bluetooth.ble.BleCentralManager: java.util.List getDevicesByStates(int[])>
<ohos.media.codec.Codec: boolean registerCodecListener(ohos.media.codec.Codec.ICodecListener)>
<java.text.NumberFormat.Field: void <clinit>()>
<ohos.data.orm.OrmMigration: int getEndVersion()>
<java.io.FileOutputStream: void close()>
<ohos.bluetooth.BluetoothHost: boolean setBtScanMode(int,int)>
<java.io.PushbackInputStream: int available()>
<ohos.global.icu.text.DecimalFormat: int getMinimumFractionDigits()>
<ohos.media.common.sessioncore.AVCallerUserInfo: java.lang.String getCallerPackageName()>
<ohos.utils.net.Uri: java.lang.String encode(java.lang.String)>
<ohos.global.icu.math.BigDecimal: java.lang.String format(int,int)>
<ohos.telephony.TelephoneNumberUtils: java.lang.String convertCalledPartyBCDToStringWithoutTOA(byte[],int,int,int)>
<ohos.agp.components.TimePicker: int getNormalTextSize()>
<java.nio.file.SimpleFileVisitor: void <init>()>
<ohos.data.resultset.ResultSetWrapper: boolean isClosed()>
<ohos.agp.render.render3d.math.Vector4: java.lang.String toString()>
<ohos.media.audio.AudioCapturerInfo: ohos.media.audio.AudioCapturerInfo.AudioInputSource getInputSource()>
<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>
<ohos.bluetooth.A2dpSink: boolean connect(ohos.bluetooth.BluetoothRemoteDevice)>
<ohos.media.audio.AudioRenderer: boolean write(byte[],int,int)>
<ohos.utils.geo.Point: int hashCode()>
<java.util.LinkedHashMap: void <init>(java.util.Map)>
<java.nio.Buffer: int limit()>
<ohos.usb.USBInterface: ohos.usb.USBEndpoint getEndpoint(int)>
<java.lang.SecurityManager: void checkSetFactory()>
<ohos.app.IAbilityManager: boolean isBackgroundRunningRestricted()>
<java.io.FileFilter: boolean accept(java.io.File)>
<ohos.global.icu.util.Currency: ohos.global.icu.util.Currency fromJavaCurrency(java.util.Currency)>
<java.util.ConcurrentModificationException: void <init>(java.lang.String)>
<ohos.global.icu.util.ULocale: java.util.Set getUnicodeLocaleAttributes()>
<ohos.agp.render.render3d.math.Matrix4x4: ohos.agp.render.render3d.math.Vector3 extractScale()>
<java.nio.file.Files: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>
<ohos.agp.components.Text: void setRichText(ohos.agp.text.RichText)>
<ohos.agp.window.service.DisplayNotch: int getPaddingLeft()>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLReporter getXMLReporter()>
<ohos.accessibility.AccessibilityStateEvent: int getEventType()>
<ohos.global.icu.lang.UCharacter: int getPropertyValueEnum(int,java.lang.CharSequence)>
<ohos.media.common.sessioncore.AVSessionCallback: void onPrepareToPlayBySearch(java.lang.String,ohos.utils.PacMap)>
<ohos.global.i18n.text.Transliterator: java.lang.String transliterate(java.lang.String)>
<ohos.utils.geo.RectFloat: void scale(float)>
<ohos.aafwk.ability.continuation.IContinuationDeviceCallback: void onDeviceDisconnectDone(java.lang.String)>
<java.time.OffsetTime: java.time.OffsetTime now(java.time.ZoneId)>
<ohos.global.icu.text.DecimalFormatSymbols: void setGroupingSeparatorString(java.lang.String)>
<ohos.utils.geo.RectFloat: void rounding(ohos.utils.geo.Rect)>
<java.sql.ResultSet: void updateNCharacterStream(java.lang.String,java.io.Reader)>
<ohos.agp.utils.Matrix: boolean postScale(float,float,float,float)>
<ohos.bluetooth.ble.BleScanFilter: byte[] getPeripheralManufacturerData()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture acceptEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Consumer)>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseEra getEra()>
<java.util.concurrent.atomic.AtomicLongArray: void lazySet(int,long)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>
<ohos.agp.render.Canvas: void drawPoint(float,float,ohos.agp.render.Paint)>
<java.nio.charset.CoderResult: boolean isOverflow()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Set entrySet()>
<java.util.IntSummaryStatistics: java.lang.String toString()>
<java.io.ObjectOutputStream.PutField: void write(java.io.ObjectOutput)>
<ohos.sysappcomponents.contact.entity.Event: void setEventDate(java.lang.String)>
<java.util.Formatter: void <init>(java.lang.String)>
<java.util.concurrent.Phaser: java.util.concurrent.Phaser getRoot()>
<ohos.agp.components.AdaptiveBoxLayout: void removeAdaptiveRule(int,int,int)>
<java.util.prefs.AbstractPreferences: void exportSubtree(java.io.OutputStream)>
<ohos.bundle.InstallParam: int getInstallFlag()>
<ohos.global.icu.util.Calendar: void clear(int)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneFormat setGMTZeroFormat(java.lang.String)>
<ohos.global.icu.text.MessagePattern.Part: int getLength()>
<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>
<ohos.utils.PlainLongArray: boolean isEmpty()>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>
<ohos.global.icu.text.LocaleDisplayNames: java.util.List getUiListCompareWholeItems(java.util.Set,java.util.Comparator)>
<ohos.media.codec.Codec: boolean setSource(ohos.media.common.Source,ohos.media.codec.TrackInfo)>
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
<ohos.event.notification.NotificationRequest: int getProgressValue()>
<ohos.net.NetSpecifier.Builder: ohos.net.NetSpecifier.Builder addBearer(int)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getPercentInstance(ohos.global.icu.util.ULocale)>
<ohos.global.icu.text.LocaleDisplayNames: ohos.global.icu.util.ULocale getLocale()>
<ohos.distributedschedule.interwork.DeviceManager: void initDistributedEnvironment(java.lang.String,ohos.distributedschedule.interwork.IInitCallback)>
<ohos.agp.utils.DimensFloat: float[] getValueToFloatArray()>
<ohos.agp.components.DependentLayout.LayoutConfig: int[] getRules()>
<ohos.account.OsAccount: int getLocalId()>
<java.nio.channels.FileLock: long size()>
<javax.tools.ForwardingFileObject: boolean delete()>
<java.lang.StrictMath: double acos(double)>
<ohos.aafwk.ability.IntentAbility: void onStart(ohos.aafwk.content.Intent)>
<ohos.bluetooth.ble.BleScanFilter: void <init>()>
<javax.net.ssl.X509KeyManager: java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[])>
<ohos.miscservices.inputmethod.RichContent: boolean unmarshalling(ohos.utils.Parcel)>
<java.sql.DatabaseMetaData: boolean storesUpperCaseIdentifiers()>
<ohos.agp.render.Insets: boolean hasFileDescriptor()>
<java.security.Signature: void update(byte[])>
<ohos.miscservices.download.DownloadSession: boolean attach(long)>
<java.lang.ThreadGroup: int activeGroupCount()>
<ohos.agp.components.SearchBar: void setMaxWidth(int)>
<ohos.event.commonevent.CommonEventManager: void unsubscribeCommonEvent(ohos.event.commonevent.CommonEventSubscriber)>
<ohos.global.icu.util.Calendar: int weekNumber(int,int,int)>
<ohos.global.icu.text.NumberFormat: java.lang.String format(ohos.global.icu.math.BigDecimal)>
<java.security.KeyStore.TrustedCertificateEntry: java.security.cert.Certificate getTrustedCertificate()>
<java.util.stream.DoubleStream.Builder: void accept(double)>
<ohos.app.Context: java.lang.String getBundleResourcePath()>
<ohos.nfc.tag.MessageRecord: short getTnf()>
<ohos.media.image.ImageException: void <init>(java.lang.String)>
<java.time.LocalDate: java.time.Month getMonth()>
<ohos.media.image.Image.Component: int read(byte[])>
<java.util.zip.Deflater: void setDictionary(byte[],int,int)>
<java.util.Currency: java.lang.String getDisplayName()>
<ohos.agp.render.render3d.SceneNode: ohos.agp.render.render3d.math.Vector3 getScale()>
<java.text.DecimalFormatSymbols: void setCurrencySymbol(java.lang.String)>
<javax.lang.model.util.SimpleTypeVisitor6: java.lang.Object visitTypeVariable(javax.lang.model.type.TypeVariable,java.lang.Object)>
<java.util.concurrent.LinkedBlockingDeque: int drainTo(java.util.Collection)>
<ohos.data.orm.EntityHelper: void bindValue(ohos.data.rdb.Statement,java.lang.Object)>
<ohos.media.audio.AudioCapturerConfig: int getPortId()>
<java.security.Provider: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>
<ohos.event.notification.NotificationUserInput.Builder: ohos.event.notification.NotificationUserInput build()>
<java.lang.StrictMath: double log1p(double)>
<java.util.IllegalFormatCodePointException: void <init>(int)>
<ohos.global.icu.util.HebrewCalendar: int handleGetLimit(int,int)>
<ohos.aafwk.ability.AbilitySlice: java.util.List getFormsByApp(java.lang.String)>
<java.util.PrimitiveIterator.OfInt: void forEachRemaining(java.util.function.IntConsumer)>
<java.io.ObjectOutput: void writeObject(java.lang.Object)>
<ohos.agp.components.DatePicker: void <init>(ohos.app.Context)>
<ohos.bluetooth.HandsFreeAudioGateway: boolean openVoiceRecognition(ohos.bluetooth.BluetoothRemoteDevice)>
<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>
<java.time.LocalDate: java.time.LocalDate ofEpochDay(long)>
<java.time.Year: boolean equals(java.lang.Object)>
<javax.tools.FileObject: java.lang.String getName()>
<ohos.agp.components.DatePicker: boolean isWheelModeEnabled()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean owns(java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject)>
<ohos.media.image.common.ColorSpace: int getValue()>
<ohos.global.icu.text.DecimalFormat: void setMinimumGroupingDigits(int)>
<java.util.jar.Attributes: java.lang.Object clone()>
<java.net.DatagramPacket: void <init>(byte[],int,int,java.net.InetAddress,int)>
<java.security.MessageDigest: void <init>(java.lang.String)>
<ohos.agp.render.render3d.resources.ResourceManager: ohos.agp.render.render3d.resources.ResourceHandle createMesh(java.lang.String,java.lang.String,ohos.agp.render.render3d.util.MeshBuilder)>
<java.util.concurrent.CountedCompleter: int getPendingCount()>
<ohos.ai.cv.text.TextElement: ohos.ai.cv.common.CvPoint[] getCornerPoints()>
<java.lang.System: long currentTimeMillis()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notIn(java.lang.String,float[])>
<ohos.media.audio.AudioWaver: boolean setActivated(boolean)>
<ohos.event.notification.NotificationSlotGroup: java.lang.String getDescription()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notIn(java.lang.String,long[])>
<ohos.agp.components.TimePicker: ohos.agp.utils.Color getOperatedTextColor()>
<ohos.global.icu.text.ScientificNumberFormatter: ohos.global.icu.text.ScientificNumberFormatter getSuperscriptInstance(ohos.global.icu.text.DecimalFormat)>
<java.nio.channels.AsynchronousChannelGroup: java.nio.channels.AsynchronousChannelGroup withFixedThreadPool(int,java.util.concurrent.ThreadFactory)>
<javax.lang.model.util.Types: boolean isAssignable(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>
<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String,java.lang.String)>
<java.util.concurrent.Semaphore: boolean tryAcquire(int,long,java.util.concurrent.TimeUnit)>
<ohos.media.muxer.Muxer: boolean start()>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setIntentAgent(int,ohos.event.intentagent.IntentAgent)>
<java.sql.CallableStatement: java.sql.Time getTime(int,java.util.Calendar)>
<ohos.sensor.agent.CategoryMotionAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryMotionDataCallback,ohos.sensor.bean.CategoryMotion)>
<java.time.chrono.HijrahChronology: java.time.chrono.Era eraOf(int)>
<ohos.data.orm.OrmContext: void registerContextObserver(ohos.data.orm.OrmContext,ohos.data.orm.OrmObjectObserver)>
<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject: void await()>
<javax.sql.DataSource: java.sql.Connection getConnection()>
<ohos.agp.render.opengl.EGL: ohos.agp.render.opengl.EGLSurface eglCreateWindowSurface(ohos.agp.render.opengl.EGLDisplay,ohos.agp.render.opengl.EGLConfig,java.lang.Object,int[])>
<ohos.aafwk.ability.DeviceConfigInfo: int getDeviceGLESVersion()>
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery precision()>
<ohos.agp.window.dialog.ListDialog: void onShow()>
<ohos.global.icu.text.AlphabeticIndex.Bucket: java.lang.String toString()>
<java.sql.PreparedStatement: void setNString(int,java.lang.String)>
<ohos.eventhandler.EventRunner: ohos.eventhandler.EventRunner current()>
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>
<java.time.Instant: java.time.Instant minus(java.time.temporal.TemporalAmount)>
<ohos.agp.utils.Line: void setStartPointY(float)>
<java.util.Scanner: java.lang.String findInLine(java.util.regex.Pattern)>
<ohos.event.notification.NotificationRequest: int getColor()>
<ohos.agp.components.Switch: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.render.Paint: void setCornerPathEffectRadius(float)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream filter(java.util.function.DoublePredicate)>
<java.lang.String: int codePointAt(int)>
<ohos.global.icu.util.CopticCalendar: int handleGetLimit(int,int)>
<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getHandshakeSession()>
<java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>
<java.util.stream.IntStream: java.util.OptionalInt findAny()>
<ohos.miscservices.wallpaper.WallpaperController: boolean isChangePermitted()>
<ohos.global.icu.text.Transliterator: ohos.global.icu.text.Transliterator getInverse()>
<java.util.TreeMap: java.util.Comparator comparator()>
<java.security.Permission: java.lang.String getName()>
<java.net.JarURLConnection: java.util.jar.Attributes getMainAttributes()>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder encodedFragment(java.lang.String)>
<ohos.global.icu.text.SearchIterator: int getMatchStart()>
<java.util.Locale.Builder: java.util.Locale.Builder setVariant(java.lang.String)>
<ohos.agp.components.SearchBar: void setQueryListener(ohos.agp.components.SearchBar.QueryListener)>
<java.security.KeyRep.Type: java.security.KeyRep.Type valueOf(java.lang.String)>
<ohos.global.icu.text.NumberFormat: java.lang.String format(java.math.BigInteger)>
<ohos.utils.net.Uri: java.lang.String getEncodedFragment()>
<java.time.LocalDateTime: java.time.LocalDateTime plus(java.time.temporal.TemporalAmount)>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.Entity generateCone(java.lang.String,ohos.agp.render.render3d.resources.ResourceHandle,float,float,int)>
<ohos.app.AbilityContext: void terminateAbility()>
<java.util.Spliterator.OfLong: java.util.Spliterator.OfPrimitive trySplit()>
<ohos.sysappcomponents.contact.entity.Email: void setCustomLabelName(java.lang.String)>
<ohos.aafwk.abilityjet.activedata.DataObserver: void setLifecycle(ohos.aafwk.ability.Lifecycle)>
<ohos.ai.cv.common.VisionConfiguration.Builder: ohos.ai.cv.common.VisionConfiguration.Builder setProcessMode(int)>
<java.lang.Character: char toLowerCase(char)>
<ohos.agp.components.ScrollView: void setReboundEffectParams(ohos.agp.components.ScrollView.ReboundEffectParams)>
<java.sql.ResultSet: void updateAsciiStream(int,java.io.InputStream)>
<ohos.agp.components.MagicLayout: ohos.agp.components.ComponentContainer.LayoutConfig verifyLayoutConfig(ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.util.Collections: java.util.List nCopies(int,java.lang.Object)>
<ohos.utils.zson.ZSONObject: void clear()>
<ohos.aafwk.ability.DataAbilityHelper: java.io.OutputStream obtainOutputStream(ohos.utils.net.Uri)>
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)>
<ohos.global.icu.text.BreakIterator: void setText(java.lang.String)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentContainer getAllComponents()>
<ohos.agp.utils.Rect: void setPivot(int,int)>
<ohos.javax.xml.stream.XMLStreamException: void <init>(java.lang.String,ohos.javax.xml.stream.Location,java.lang.Throwable)>
<java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>
<ohos.agp.render.render3d.math.Vector2: float getX()>
<ohos.agp.components.webengine.WebView: void post(java.lang.String,byte[])>
<ohos.app.AbilityContext: java.io.File getCodeCacheDir()>
<ohos.telephony.RadioInfoManager: java.lang.String getIsoCountryCodeForNetwork(int)>
<ohos.location.GeoAddress: void setCountryCode(java.lang.String)>
<ohos.utils.BasePacMap: ohos.utils.FloatDimension getFloatDimension(java.lang.String)>
<ohos.aafwk.ability.AbilitySlice.FormCallback: void onAcquired(int,ohos.aafwk.ability.Form)>
<java.time.DayOfWeek: java.time.DayOfWeek valueOf(java.lang.String)>
<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>
<java.sql.Statement: void close()>
<ohos.agp.render.Canvas: void drawLines(float[],int,int,ohos.agp.render.Paint)>
<ohos.aafwk.ability.Ability: void onEventDispatch()>
<java.net.HttpRetryException: java.lang.String getReason()>
<ohos.agp.components.Text: ohos.agp.components.element.Element[] getAroundElementsRelative()>
<ohos.net.NetManager: boolean addDefaultNetStatusCallback(ohos.net.NetStatusCallback)>
<java.net.DatagramSocket: void setReuseAddress(boolean)>
<ohos.agp.components.Text: void setMaxTextLines(int)>
<ohos.agp.text.Layout: int getAscent(int)>
<ohos.global.icu.text.MessagePattern.ArgType: void <clinit>()>
<ohos.agp.components.PageSlider: void removePageChangedListener(ohos.agp.components.PageSlider.PageChangedListener)>
<ohos.agp.render.opengl.GLES30: void glSamplerParameterfv(int,int,float[])>
<ohos.global.icu.text.MessagePattern: ohos.global.icu.text.MessagePattern parsePluralStyle(java.lang.String)>
<java.sql.DatabaseMetaData: boolean supportsSelectForUpdate()>
<ohos.org.xml.sax.HandlerBase: void startElement(java.lang.String,ohos.org.xml.sax.AttributeList)>
<ohos.agp.render.render3d.components.TransformComponent: ohos.agp.render.render3d.math.Vector3 getPosition()>
<java.lang.SecurityException: void <init>(java.lang.String)>
<ohos.aafwk.content.IntentParams: int size()>
<ohos.agp.render.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,float[])>
<ohos.accessibility.ability.AccessibilityInfo: boolean isChecked()>
<java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator(int)>
<java.security.acl.LastOwnerException: void <init>()>
<javax.crypto.CipherOutputStream: void flush()>
<ohos.agp.render.Shader: ohos.agp.utils.Color[] getShaderColors()>
<ohos.media.audio.SoundPlayer.AudioVolumes: float getCentralVolume()>
<java.util.WeakHashMap: java.util.Set entrySet()>
<ohos.bluetooth.ble.GattCharacteristic: int getPermissions()>
<ohos.nfc.tag.NdefTag: java.util.Optional getInstance(ohos.nfc.tag.TagInfo)>
<ohos.multimodalinput.event.SpeechEvent: int getMatchMode()>
<ohos.global.icu.text.DateFormatSymbols: void setWeekdays(java.lang.String[],int,int)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap subMap(java.lang.Object,java.lang.Object)>
<ohos.global.icu.text.MessagePattern: boolean equals(java.lang.Object)>
<ohos.aafwk.content.Intent: double getDoubleParam(java.lang.String,double)>
<ohos.global.icu.util.CopticCalendar: void handleComputeFields(int)>
<java.util.concurrent.DelayQueue: java.lang.Object poll()>
<ohos.wifi.IpInfo: int getPrimaryDns()>
<java.security.cert.X509CRL: java.lang.String getSigAlgName()>
<java.sql.ResultSet: java.lang.Object getObject(int)>
<ohos.global.icu.text.Bidi: boolean isMixed()>
<java.lang.StrictMath: double abs(double)>
<ohos.global.icu.util.ChineseCalendar: void add(int,int)>
<ohos.media.tubecore.AVTube: java.lang.String tubeName()>
<ohos.multimodalinput.event.KeyBoardEvent: boolean isNoncharacterKeyPressed(int,int,int)>
<java.io.InputStream: void <init>()>
<java.io.CharArrayWriter: java.lang.String toString()>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setAfMode(int,ohos.agp.utils.Rect)>
<java.util.concurrent.Semaphore: void release(int)>
<ohos.data.resultset.ResultSetWrapper: long getLong(int)>
<ohos.global.icu.text.LocaleDisplayNames.DialectHandling: void <clinit>()>
<ohos.telephony.SimInfoManager: boolean isSimActive(int)>
<java.util.concurrent.ConcurrentNavigableMap: java.util.concurrent.ConcurrentNavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>
<java.time.LocalTime: int compareTo(java.lang.Object)>
<ohos.utils.Parcel: java.util.Map readMap()>
<java.io.ObjectStreamField: java.lang.String toString()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setShowDeliveryTime(boolean)>
<ohos.event.commonevent.ICommonEventManager: void subscribeCommonEvent(ohos.event.commonevent.ICommonEventSubscriber,ohos.event.commonevent.CommonEventSubscribeInfo)>
<java.security.Policy: java.security.Policy.Parameters getParameters()>
<java.sql.CallableStatement: java.io.Reader getNCharacterStream(int)>
<java.text.ParsePosition: void setIndex(int)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDate plus(java.time.temporal.TemporalAmount)>
<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>
<javax.lang.model.util.SimpleElementVisitor6: java.lang.Object visitVariable(javax.lang.model.element.VariableElement,java.lang.Object)>
<java.lang.invoke.MethodHandle: java.lang.Object invokeWithArguments(java.lang.Object[])>
<ohos.agp.render.render3d.components.SceneComponent.BackgroundType: ohos.agp.render.render3d.components.SceneComponent.BackgroundType[] values()>
<ohos.data.rdb.RawRdbPredicates: void <init>(java.lang.String)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayCountry(java.lang.String,ohos.global.icu.util.ULocale)>
<java.util.Spliterators: java.util.Spliterator.OfDouble spliterator(double[],int)>
<ohos.data.resultset.AbsResultSet: void unregisterObserver(ohos.data.rdb.DataObserver)>
<ohos.global.icu.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<ohos.global.icu.lang.UCharacter: int toCodePoint(char,char)>
<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>
<ohos.agp.window.dialog.PopupDialog: void showOnCertainPosition(int,int,int)>
<ohos.agp.components.AbsSlider: void setFormatter(ohos.agp.components.AbsSlider.Formatter)>
<java.text.StringCharacterIterator: int getBeginIndex()>
<java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<ohos.agp.components.DatePicker: ohos.agp.components.element.Element getDisplayedTopElement()>
<ohos.data.distributed.user.SingleKvStore: java.lang.String getString(java.lang.String)>
<java.lang.Math: int floorDiv(int,int)>
<ohos.data.distributed.common.KvStore: void putString(java.lang.String,java.lang.String)>
<ohos.event.intentagent.IntentAgentInfo: void <init>(int,ohos.event.intentagent.IntentAgentConstant.OperationType,java.util.List,java.util.List,ohos.aafwk.content.IntentParams)>
<java.util.concurrent.LinkedTransferQueue: void transfer(java.lang.Object)>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: ohos.media.common.sessioncore.AVPlaybackState.Builder setActiveQueueElementId(long)>
<java.io.UnsupportedEncodingException: void <init>()>
<ohos.global.icu.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<ohos.rpc.IRemoteObject.DeathRecipient: void onRemoteDied()>
<javax.sql.CommonDataSource: void setLogWriter(java.io.PrintWriter)>
<java.nio.CharBuffer: java.lang.Appendable append(char)>
<ohos.net.ConnectionProperties: java.lang.String getInterfaceName()>
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.security.Provider)>
<ohos.sensor.agent.CategoryMotionAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryMotionDataCallback,ohos.sensor.bean.CategoryMotion,int)>
<ohos.agp.render.render3d.util.MeshBuilder: int getIndexCount()>
<java.util.jar.JarOutputStream: void <init>(java.io.OutputStream)>
<ohos.sensor.data.CategoryBodyData: void <init>(ohos.sensor.bean.CategoryBody,int,long,int,float[])>
<ohos.accessibility.ability.AccessibleAbility: void onAbilityConnected()>
<java.lang.IllegalAccessError: void <init>(java.lang.String)>
<java.util.concurrent.CopyOnWriteArraySet: boolean remove(java.lang.Object)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query and()>
<java.util.prefs.AbstractPreferences: java.lang.String getSpi(java.lang.String)>
<java.util.stream.LongStream: java.util.stream.LongStream concat(java.util.stream.LongStream,java.util.stream.LongStream)>
<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>
<java.util.Comparator: boolean equals(java.lang.Object)>
<java.sql.SQLOutput: void writeAsciiStream(java.io.InputStream)>
<java.time.LocalDateTime: java.time.LocalTime toLocalTime()>
<javax.security.auth.Subject: void <init>(boolean,java.util.Set,java.util.Set,java.util.Set)>
<java.lang.reflect.Array: long getLong(java.lang.Object,int)>
<java.lang.Double: boolean equals(java.lang.Object)>
<ohos.global.icu.util.Calendar: void setSkippedWallTimeOption(int)>
<java.net.URLConnection: void setDefaultRequestProperty(java.lang.String,java.lang.String)>
<ohos.global.icu.util.Calendar: int handleComputeMonthStart(int,int,boolean)>
<javax.crypto.spec.RC5ParameterSpec: int getRounds()>
<ohos.utils.BasePacMap: void putDimension(java.lang.String,ohos.utils.Dimension)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: boolean doAbilitySliceStop(ohos.aafwk.ability.Ability)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query unlike(java.lang.String,java.lang.String)>
<ohos.data.distributed.common.KvStoreResultSet: boolean isStarted()>
<ohos.bundle.AbilityInfo: boolean isDifferentName()>
<java.nio.file.attribute.DosFileAttributes: boolean isHidden()>
<ohos.agp.components.Rating: ohos.agp.components.element.Element getFilledElement()>
<ohos.media.camera.device.FrameResult: int getCaptureTriggerId()>
<java.util.zip.CRC32: void update(byte[])>
<ohos.global.icu.text.CaseMap.Fold: java.lang.Appendable apply(java.lang.CharSequence,java.lang.Appendable,ohos.global.icu.text.Edits)>
<ohos.media.audio.AudioDeviceDescriptor: int getId()>
<ohos.ai.cv.text.TextBlock: void setValue(java.lang.String)>
<java.security.KeyStore.Builder: java.security.KeyStore.Builder newInstance(java.security.KeyStore,java.security.KeyStore.ProtectionParameter)>
<ohos.agp.render.opengl.GLES30: void glUniform3uiv(int,int,int[])>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getSentenceInstance(java.util.Locale)>
<ohos.agp.render.render3d.Engine.Time: long getTotalTimeMicros()>
<ohos.location.RequestParam: void setMaxAccuracy(float)>
<ohos.aafwk.ability.continuation.IContinuationRegisterManager: void unregister(int,ohos.aafwk.ability.continuation.RequestCallback)>
<java.time.LocalDate: int hashCode()>
<ohos.agp.components.Component: ohos.agp.components.ComponentParent getComponentParent()>
<ohos.global.icu.text.RuleBasedCollator: void setCaseFirstDefault()>
<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>
<ohos.media.extractor.Extractor: boolean unspecifyStream(int)>
<java.nio.IntBuffer: java.nio.IntBuffer duplicate()>
<ohos.aafwk.ability.Ability: boolean onHotkeyTriggered(int,ohos.multimodalinput.event.KeyEvent)>
<ohos.aafwk.ability.delegation.TestRunner: void run()>
<ohos.data.resultset.AbsSharedResultSet: void clearBlock()>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.RunnableScheduledFuture decorateTask(java.lang.Runnable,java.util.concurrent.RunnableScheduledFuture)>
<ohos.agp.graphics.Surface: ohos.agp.render.Canvas acquireCanvas()>
<ohos.global.resource.solidxml.TypedAttribute: ohos.global.resource.solidxml.SolidXml getLayoutValue()>
<ohos.media.image.common.Rect: int hashCode()>
<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>
<java.security.Provider: java.lang.String toString()>
<ohos.agp.components.BaseItemProvider: void notifyDataInvalidated()>
<ohos.global.icu.text.RuleBasedCollator: java.lang.Object freeze()>
<ohos.data.distributed.file.DistFiles: boolean move(ohos.data.distributed.file.DistFile,ohos.data.distributed.file.DistFile)>
<ohos.system.TimeValGroup: long toMillis()>
<ohos.global.icu.text.RelativeDateTimeFormatter.Direction: void <clinit>()>
<java.lang.Boolean: java.lang.String toString()>
<java.nio.LongBuffer: boolean equals(java.lang.Object)>
<ohos.data.orm.EntityHelper: java.lang.String getInsertStatement()>
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream,int)>
<ohos.agp.components.IndexBar: void setMaxCount(int)>
<ohos.agp.components.ProgressBar: void addBarObserver(ohos.agp.components.ProgressBar.BarObserver)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>
<ohos.agp.render.opengl.GLES1X: void glBindTexture(int,int)>
<ohos.ai.asr.AsrClient: void startListening(ohos.ai.asr.AsrIntent)>
<ohos.agp.colors.HslColor: float getHue()>
<java.security.KeyStoreSpi: boolean engineIsCertificateEntry(java.lang.String)>
<java.util.concurrent.TimeUnit: void timedWait(java.lang.Object,long)>
<ohos.agp.components.Slider: ohos.agp.components.Component.ClickedListener getDecreaseButtonClickedListener()>
<ohos.agp.window.service.WindowManager: ohos.agp.window.service.Window addComponent(ohos.agp.components.ComponentContainer,ohos.app.Context,int)>
<javax.crypto.KeyAgreementSpi: byte[] engineGenerateSecret()>
<java.nio.file.attribute.DosFileAttributeView: void setArchive(boolean)>
<ohos.agp.render.opengl.GLES31: void glSampleMaski(int,int)>
<ohos.agp.components.Text: int getMaxTextLines()>
<ohos.agp.components.DatePicker: void setMinDate(long)>
<javax.crypto.spec.RC2ParameterSpec: void <init>(int,byte[],int)>
<java.nio.charset.IllegalCharsetNameException: void <init>(java.lang.String)>
<ohos.agp.components.SlideDrawer: boolean toggle()>
<ohos.usb.USBConfig: int getMaxPower()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: boolean isAbilityHasSlice(ohos.aafwk.ability.Ability)>
<java.util.concurrent.atomic.LongAdder: void increment()>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>
<ohos.ai.cv.text.TextLine: ohos.ai.cv.common.CvRect getLineRect()>
<ohos.agp.components.webengine.ResourceResponse: java.util.Map getHeaders()>
<javax.net.ssl.SSLEngine: boolean getEnableSessionCreation()>
<ohos.agp.animation.AnimatorProperty: void reset()>
<ohos.media.audio.AudioRenderer: ohos.media.audio.AudioDeviceDescriptor getCurrentDevice()>
<java.util.IllegalFormatFlagsException: java.lang.String getFlags()>
<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>
<java.lang.reflect.Modifier: boolean isNative(int)>
<ohos.agp.components.ComponentProvider: boolean unmarshalling(ohos.utils.Parcel)>
<java.security.AllPermission: boolean implies(java.security.Permission)>
<ohos.bundle.BundleInfo: java.util.List getModuleDirs()>
<ohos.global.icu.text.CurrencyPluralInfo: void <init>()>
<javax.net.ssl.KeyStoreBuilderParameters: java.util.List getParameters()>
<ohos.agp.components.Text: void append(java.lang.String)>
<ohos.utils.geo.DimensFloat: void <init>(ohos.utils.geo.DimensFloat)>
<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra of(int)>
<ohos.agp.components.Text.TextSizeObserver: void onTextSizeChanged(int,int)>
<java.util.Date: void <init>()>
<javax.lang.model.element.ExecutableElement: boolean isDefault()>
<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>
<ohos.nfc.cardemulation.CardEmulation: boolean registerForegroundPreferred(ohos.aafwk.ability.Ability,ohos.bundle.ElementName)>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getCharacterEncodingScheme()>
<ohos.hiviewdfx.HiTraceId: byte[] toBytes()>
<ohos.utils.geo.Rect.RotationEnum: ohos.utils.geo.Rect.RotationEnum valueOf(java.lang.String)>
<java.util.logging.Logger: void info(java.lang.String)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal multiply(ohos.global.icu.math.BigDecimal,ohos.global.icu.math.MathContext)>
<ohos.media.sessioncore.AVBrowser: void getAVElement(java.lang.String,ohos.media.common.sessioncore.AVElementCallback)>
<ohos.utils.geo.RectFloat: float getWidth()>
<ohos.global.icu.text.ListFormatter: java.lang.String getPatternForNumItems(int)>
<ohos.sysappcomponents.contact.ContactAttributes.Attribute: ohos.sysappcomponents.contact.ContactAttributes.Attribute valueOf(java.lang.String)>
<java.util.concurrent.locks.StampedLock: boolean validate(long)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage whenCompleteAsync(java.util.function.BiConsumer)>
<ohos.accessibility.AccessibilitySystemAbilityClient: boolean isAccessibilityCaptionEnabled()>
<ohos.miscservices.download.DownloadSession: java.lang.String queryMimeType()>
<ohos.sysappcomponents.calendar.entity.Participants: void <init>()>
<java.security.Identity: java.lang.String toString(boolean)>
<ohos.location.Location: long getTimeSinceBoot()>
<ohos.agp.components.Rating: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.agp.render.Path: void addArc(ohos.agp.utils.RectFloat,float,float)>
<ohos.rpc.MessageOption: void <init>()>
<ohos.global.icu.lang.UCharacter: boolean isUAlphabetic(int)>
<ohos.media.audio.AudioManager: boolean connectBluetoothSco()>
<java.security.cert.X509Certificate: void <init>()>
<ohos.global.icu.text.Collator: void <init>()>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream)>
<java.time.zone.ZoneOffsetTransitionRule: java.time.ZoneOffset getOffsetBefore()>
<java.util.Vector: int capacity()>
<ohos.app.Context: void switchToDeviceEncryptedStorageContext()>
<java.util.concurrent.LinkedTransferQueue: java.util.Iterator iterator()>
<ohos.utils.system.SystemCapability.Sensors: void <init>()>
<java.time.YearMonth: long getLong(java.time.temporal.TemporalField)>
<ohos.agp.components.Image: void setClipDirection(int)>
<ohos.agp.animation.timelinecurves.SpringCurve: void <init>(float,float,float,float,float)>
<ohos.media.common.AVDescription: void <clinit>()>
<java.time.zone.ZoneRules: java.time.ZoneOffset getOffset(java.time.Instant)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenComposeAsync(java.util.function.Function)>
<java.io.SerializablePermission: void <init>(java.lang.String)>
<java.util.concurrent.atomic.AtomicLongArray: long get(int)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult implFlush(java.nio.CharBuffer)>
<javax.tools.JavaFileManager: javax.tools.JavaFileObject getJavaFileForInput(javax.tools.JavaFileManager.Location,java.lang.String,javax.tools.JavaFileObject.Kind)>
<ohos.agp.window.dialog.ListDialog: ohos.agp.window.dialog.ListDialog setSingleSelectItems(java.lang.String[],int)>
<java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>
<ohos.agp.components.element.ShapeElement: void <init>()>
<ohos.global.icu.text.RuleBasedCollator: java.lang.Object cloneAsThawed()>
<java.lang.Object: java.lang.Object clone()>
<javax.lang.model.element.TypeElement: javax.lang.model.element.Element getEnclosingElement()>
<java.util.NavigableMap: java.util.NavigableSet descendingKeySet()>
<ohos.dcall.CallStateObserver: void <init>(int)>
<ohos.agp.render.opengl.GLES1X: void glSampleCoveragex(int,boolean)>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction: int getResourceIdOfIcon()>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query notInDouble(java.lang.String,java.util.List)>
<ohos.global.resource.solidxml.Attribute: void <init>()>
<ohos.global.icu.text.DecimalFormat: java.math.MathContext getMathContext()>
<java.time.chrono.ChronoLocalDateTime: java.time.chrono.ChronoZonedDateTime atZone(java.time.ZoneId)>
<java.util.EnumMap: int hashCode()>
<java.lang.StrictMath: double rint(double)>
<javax.tools.SimpleJavaFileObject: java.net.URI toUri()>
<javax.crypto.spec.OAEPParameterSpec: java.lang.String getMGFAlgorithm()>
<ohos.media.tubecore.AVTubeManager: void deleteAVTubeEx(ohos.media.tubecore.AVTubeEx)>
<ohos.event.notification.NotificationActionButton.Builder: ohos.event.notification.NotificationActionButton.Builder addAdditionalData(ohos.utils.PacMap)>
<java.math.BigInteger: java.math.BigInteger shiftRight(int)>
<java.lang.ProcessBuilder.Redirect: java.io.File file()>
<java.time.OffsetTime: java.time.OffsetDateTime atDate(java.time.LocalDate)>
<java.util.ConcurrentModificationException: void <init>(java.lang.Throwable)>
<java.nio.file.spi.FileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>
<ohos.data.preferences.Preferences: void flush()>
<ohos.net.HttpProxy: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.util.VersionInfo: int getMilli()>
<ohos.agp.render.PathEffect: void <init>(float)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: int getWaitQueueLength()>
<ohos.app.AbilityContext: int verifySelfPermission(java.lang.String)>
<ohos.agp.render.render3d.SceneNode: java.util.Optional getParent()>
<ohos.agp.render.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,int[])>
<ohos.event.notification.NotificationSlot: boolean canVibrate()>
<ohos.agp.components.TableLayout: ohos.agp.components.TableLayout.Specification specification(int,int,int)>
<ohos.accessibility.ability.AccessibilityInfo: boolean hasGainedAccessibilitySelected()>
<java.lang.Double: boolean isFinite(double)>
<java.lang.String: boolean startsWith(java.lang.String,int)>
<ohos.data.search.model.SearchableEntity: java.lang.String getPermission()>
<ohos.sensor.agent.CategoryBodyAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,long,long)>
<ohos.agp.colors.Color: ohos.agp.colors.Color assign(ohos.agp.colors.Color)>
<ohos.agp.components.Text: int getTextSize(ohos.agp.components.Text.TextSizeType)>
<java.math.BigInteger: java.math.BigInteger negate()>
<ohos.agp.render.Path: void cubicTo(float,float,float,float,float,float)>
<javax.sql.StatementEventListener: void statementErrorOccurred(javax.sql.StatementEvent)>
<ohos.net.NetHandle: boolean equals(java.lang.Object)>
<java.util.Locale.Category: void <clinit>()>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String getBestPattern(java.lang.String)>
<java.util.concurrent.ConcurrentLinkedDeque: boolean removeFirstOccurrence(java.lang.Object)>
<ohos.media.audio.AudioManager.AudioVolumeType: void <clinit>()>
<ohos.hiviewdfx.ResourceTag: void release()>
<ohos.global.icu.text.Normalizer2: java.lang.Appendable normalize(java.lang.CharSequence,java.lang.Appendable)>
<ohos.global.icu.util.Calendar: ohos.global.icu.text.DateFormat handleGetDateFormat(java.lang.String,ohos.global.icu.util.ULocale)>
<java.nio.FloatBuffer: java.nio.FloatBuffer asReadOnlyBuffer()>
<ohos.agp.animation.Animator.StateChangedListener: void onEnd(ohos.agp.animation.Animator)>
<java.security.SecureRandomSpi: void <init>()>
<java.util.SplittableRandom: java.util.stream.LongStream longs()>
<ohos.agp.render.opengl.GLES1X: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<ohos.data.usage.CachePolicy: void setCacheDeleteXattr(java.io.File)>
<ohos.global.icu.text.DecimalFormatSymbols: void setMonetaryGroupingSeparator(char)>
<java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<ohos.agp.render.render3d.math.Quaternion: float getX()>
<java.util.IdentityHashMap: void putAll(java.util.Map)>
<java.lang.System: java.util.Map getenv()>
<java.util.concurrent.CopyOnWriteArraySet: boolean containsAll(java.util.Collection)>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLOutputFactory newFactory()>
<java.lang.Character: int hashCode()>
<java.io.ObjectInput: int read(byte[],int,int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates like(java.lang.String,java.lang.String)>
<ohos.net.DataFlowStatistics: int getDataFlowTag()>
<ohos.agp.components.CornerMark: void registerCleaner()>
<java.util.concurrent.ConcurrentLinkedDeque: void <init>()>
<ohos.utils.PacMap: void putSequenceableObjectArray(java.lang.String,ohos.utils.Sequenceable[])>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,double)>
<java.util.concurrent.ForkJoinPool: int getQueuedSubmissionCount()>
<java.time.chrono.ChronoZonedDateTime: boolean isSupported(java.time.temporal.TemporalField)>
<ohos.accessibility.AccessibilityEventInfo: void setTextMoveStep(int)>
<ohos.account.app.AppAccountAbility: java.lang.String getAssociatedData(java.lang.String,java.lang.String)>
<ohos.miscservices.inputmethodability.InputMethodAbility: ohos.rpc.IRemoteObject onConnect(ohos.aafwk.content.Intent)>
<java.util.zip.DeflaterOutputStream: void deflate()>
<ohos.aafwk.ability.DataAbilityHelper: int insert(ohos.utils.net.Uri,ohos.data.rdb.ValuesBucket)>
<ohos.biometrics.authentication.BiometricAuthentication: ohos.biometrics.authentication.BiometricAuthentication.AuthenticationTips getAuthenticationTips()>
<java.sql.ParameterMetaData: int getParameterType(int)>
<ohos.rpc.MessageParcel: void closeFileDescriptor(java.io.FileDescriptor)>
<ohos.aafwk.ability.AbilitySlice: java.util.List getFormsInfoByModule(java.lang.String,java.lang.String)>
<ohos.aafwk.ability.fraction.FractionScheduler: ohos.aafwk.ability.fraction.FractionScheduler pushIntoStack(java.lang.String)>
<javax.lang.model.element.ElementVisitor: java.lang.Object visitTypeParameter(javax.lang.model.element.TypeParameterElement,java.lang.Object)>
<java.security.KeyStore: boolean containsAlias(java.lang.String)>
<java.util.concurrent.Phaser: void <init>(java.util.concurrent.Phaser,int)>
<java.sql.SQLTransientConnectionException: void <init>(java.lang.Throwable)>
<ohos.agp.components.webengine.ScaleController: void setScalable(boolean)>
<ohos.app.AbilityContext: boolean terminateAbilityResult(int)>
<ohos.global.icu.util.ULocale: java.lang.String getUnicodeLocaleType(java.lang.String)>
<ohos.media.image.PropertyFilter: ohos.media.image.PropertyFilter restore()>
<ohos.global.configuration.Configuration: ohos.global.configuration.LocaleProfile getLocaleProfile()>
<ohos.bluetooth.ble.BlePeripheralDevice: java.util.Optional getService(java.util.UUID)>
<java.util.concurrent.atomic.AtomicReference: java.lang.Object accumulateAndGet(java.lang.Object,java.util.function.BinaryOperator)>
<ohos.agp.render.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,float[])>
<ohos.agp.render.opengl.GLES31: void glActiveShaderProgram(int,int)>
<ohos.sysappcomponents.contact.entity.Group: int getGroupId()>
<ohos.bundle.ModuleInfo: java.lang.String getModuleName()>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<java.util.Arrays: void parallelSort(double[],int,int)>
<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>
<java.util.stream.IntStream.Builder: java.util.stream.IntStream.Builder add(int)>
<ohos.aafwk.ability.FormBindingData: void <init>()>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryEnvironmentDataCallback,ohos.sensor.bean.CategoryEnvironment,long,long)>
<java.net.URLConnection: int getConnectTimeout()>
<java.lang.NoSuchFieldException: void <init>()>
<ohos.sysappcomponents.calendar.entity.Accounts: void setVisible(boolean)>
<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession getSession()>
<ohos.agp.components.ProgressBar: ohos.agp.utils.Color getDividerLineColor()>
<ohos.bluetooth.BluetoothRemoteDevice: boolean startPair()>
<java.nio.channels.SelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>
<ohos.agp.components.PageSlider: void setSlidingPossible(boolean)>
<ohos.aafwk.ability.IntentAbility: void onProcessIntent(ohos.aafwk.content.Intent)>
<java.nio.channels.SocketChannel: long write(java.nio.ByteBuffer[])>
<ohos.agp.components.ComponentContainer: int getChildIndex(ohos.agp.components.Component)>
<ohos.security.permission.PermissionAvailableScope: void <clinit>()>
<ohos.media.photokit.support.FetchResult: void <init>(ohos.app.Context,ohos.data.resultset.ResultSet,java.lang.String)>
<java.util.function.LongUnaryOperator: long applyAsLong(long)>
<ohos.agp.render.opengl.GLES20: void glColorMask(boolean,boolean,boolean,boolean)>
<ohos.agp.components.DragEvent: float getY()>
<java.util.LinkedList: java.lang.Object pollLast()>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate dateNow()>
<ohos.global.i18n.text.MeasureOptions.FormatStyle: ohos.global.i18n.text.MeasureOptions.FormatStyle valueOf(java.lang.String)>
<ohos.utils.geo.RectFloat: boolean isEmpty()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: long tryAcquireShared(long)>
<java.time.LocalDateTime: java.time.LocalDateTime plusHours(long)>
<ohos.global.icu.text.Transliterator: ohos.global.icu.text.Transliterator createFromRules(java.lang.String,java.lang.String,int)>
<ohos.sensor.agent.CategoryLightAgent: java.util.List getAllSensors(int)>
<javax.crypto.SecretKeyFactorySpi: javax.crypto.SecretKey engineTranslateKey(javax.crypto.SecretKey)>
<ohos.media.codec.CodecDescription: boolean isSoftware()>
<java.sql.Blob: java.io.InputStream getBinaryStream(long,long)>
<java.util.concurrent.Phaser: int arriveAndDeregister()>
<ohos.miscservices.download.IDownloadListener: void onPaused()>
<ohos.global.icu.util.ChineseCalendar: void <init>(java.util.Locale)>
<java.util.zip.ZipFile: void <init>(java.io.File,int,java.nio.charset.Charset)>
<java.time.Month: java.time.Month valueOf(java.lang.String)>
<java.lang.ThreadGroup: int enumerate(java.lang.ThreadGroup[],boolean)>
<java.util.logging.StreamHandler: void close()>
<ohos.workscheduler.WorkScheduler: void onWorkStart(ohos.workscheduler.WorkInfo)>
<ohos.agp.components.SlideDrawer: float getOpenThreshold()>
<java.util.concurrent.locks.ReentrantLock: boolean hasQueuedThread(java.lang.Thread)>
<ohos.bluetooth.ble.BleScanResult: java.util.Map getManufacturerData()>
<ohos.event.notification.NotificationRequest.NotificationNormalContent: ohos.event.notification.NotificationRequest.NotificationNormalContent setTitle(java.lang.String)>
<ohos.aafwk.ability.Form: java.lang.String getOriginalBundleName()>
<java.io.NotActiveException: void <init>()>
<ohos.utils.geo.RectFloat: boolean isIntersect(ohos.utils.geo.RectFloat)>
<ohos.miscservices.pasteboard.PasteData.Record: java.lang.String getMimeType()>
<javax.sql.RowSet: void setFloat(int,float)>
<java.nio.channels.AsynchronousSocketChannel: void connect(java.net.SocketAddress,java.lang.Object,java.nio.channels.CompletionHandler)>
<java.io.ObjectInputStream: void defaultReadObject()>
<java.time.LocalTime: java.time.LocalTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
<java.time.DayOfWeek: long getLong(java.time.temporal.TemporalField)>
<ohos.media.tubecore.AVTubeManager: int tubeNumber()>
<ohos.data.search.schema.NoticeItem: ohos.data.search.schema.NoticeItem setNoticeCategory(java.lang.String)>
<ohos.agp.utils.Rect: int getPivotXCoordinate()>
<java.util.BitSet: java.lang.Object clone()>
<java.util.function.IntConsumer: java.util.function.IntConsumer andThen(java.util.function.IntConsumer)>
<ohos.event.intentagent.IntentAgentConstant.Flags: ohos.event.intentagent.IntentAgentConstant.Flags valueOf(java.lang.String)>
<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates beginWrap()>
<java.security.KeyStore: void load(java.io.InputStream,char[])>
<ohos.media.image.ImagePacker: boolean addImage(ohos.media.image.ImageSource,int)>
<ohos.telephony.SimInfoManager: ohos.telephony.SimInfoManager getInstance(ohos.app.Context)>
<ohos.utils.PlainArray: int locate(int)>
<java.nio.file.FileSystemException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.security.spec.ECFieldF2m: java.math.BigInteger getReductionPolynomial()>
<java.util.concurrent.ConcurrentHashMap.KeySetView: int size()>
<ohos.eventhandler.EventRunner: long getThreadId()>
<java.time.temporal.Temporal: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<javax.sql.RowSet: void setBlob(int,java.sql.Blob)>
<ohos.agp.utils.RectFloat: void translateCenterTo(float,float)>
<javax.sql.RowSet: void setTransactionIsolation(int)>
<java.net.JarURLConnection: java.util.jar.Manifest getManifest()>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.Instant,java.time.ZoneId)>
<ohos.agp.components.PageFlipper: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.eventhandler.EventHandler: void sendEvent(ohos.eventhandler.InnerEvent)>
<java.net.NetworkInterface: boolean isUp()>
<ohos.agp.components.Component: int getMode()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,char)>
<ohos.data.rdb.Statement: void setNull(int)>
<ohos.agp.window.service.Window: boolean isWCGMode()>
<ohos.rpc.MessageParcel: void finalize()>
<ohos.aafwk.ability.AbilitySlice: ohos.aafwk.ability.Lifecycle getLifecycle()>
<java.security.cert.CertStore: java.lang.String getDefaultType()>
<javax.security.cert.X509Certificate: java.security.Principal getIssuerDN()>
<ohos.global.icu.util.EthiopicCalendar: void <init>(ohos.global.icu.util.ULocale)>
<ohos.media.audio.SoundPlayer: boolean stop(int)>
<ohos.agp.utils.Matrix44: void postScale(float)>
<java.nio.CharBuffer: java.nio.CharBuffer slice()>
<java.util.concurrent.atomic.AtomicLong: java.lang.String toString()>
<ohos.global.icu.number.LocalizedNumberFormatter: ohos.global.icu.number.FormattedNumber format(ohos.global.icu.util.Measure)>
<javax.net.ssl.SSLSessionBindingListener: void valueBound(javax.net.ssl.SSLSessionBindingEvent)>
<java.nio.charset.CharsetEncoder: void implOnMalformedInput(java.nio.charset.CodingErrorAction)>
<ohos.agp.components.ComponentContainer: ohos.agp.components.Component getComponentAt(int)>
<ohos.net.NetStatusCallback: void onConnectionPropertiesChanged(ohos.net.NetHandle,ohos.net.ConnectionProperties)>
<ohos.aafwk.content.IntentParams: java.lang.Object getParam(java.lang.String)>
<javax.crypto.CipherOutputStream: void write(byte[])>
<java.security.cert.PKIXRevocationChecker: java.util.List getOcspExtensions()>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitString(java.lang.String,java.lang.Object)>
<ohos.bundleactive.BundleActiveStates.State: int queryAppUsagePriorityGroup()>
<java.time.temporal.ValueRange: boolean isIntValue()>
<ohos.agp.render.render3d.resources.MaterialDesc.MaterialAlphaMode: void <clinit>()>
<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal)>
<ohos.agp.components.Picker: ohos.agp.components.element.Element getSelectedTextBackgroundElement()>
<java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>
<ohos.bundle.ElementName: java.lang.String getBundleName()>
<java.util.GregorianCalendar: void roll(int,int)>
<java.text.DecimalFormatSymbols: char getPercent()>
<java.nio.FloatBuffer: java.nio.ByteOrder order()>
<ohos.agp.render.PdfGenerator.PageInfo.Builder: ohos.agp.render.PdfGenerator.PageInfo create()>
<java.lang.Byte: int toUnsignedInt(byte)>
<java.math.RoundingMode: java.math.RoundingMode valueOf(java.lang.String)>
<ohos.media.audio.Timestamp.Timebase: int getValue()>
<ohos.agp.components.Image: void setPixelMapHolder(ohos.agp.render.PixelMapHolder)>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: java.lang.String toString()>
<ohos.agp.components.ComponentContainer.LayoutConfig: void <init>(ohos.agp.components.ComponentContainer.LayoutConfig)>
<ohos.data.rdb.StoreConfig: boolean isReadOnly()>
<ohos.agp.render.opengl.GLES20: void glBindRenderbuffer(int,int)>
<ohos.global.icu.text.RuleBasedCollator: void setLowerCaseFirst(boolean)>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitNoType(javax.lang.model.type.NoType,java.lang.Object)>
<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>
<ohos.global.icu.text.CaseMap: ohos.global.icu.text.CaseMap.Upper toUpper()>
<ohos.event.notification.NotificationRequest: int getProgressMax()>
<ohos.utils.geo.RectFloat: ohos.utils.geo.DimensFloat getRectSize()>
<ohos.agp.components.webengine.PickFilesParams: boolean isLiveMedia()>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: java.lang.String getTitle()>
<ohos.global.icu.util.TimeZone.SystemTimeZoneType: void <clinit>()>
<ohos.agp.animation.Animator.CurveType: void <init>()>
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>
<java.io.PrintWriter: void print(long)>
<java.lang.Character: int codePointBefore(java.lang.CharSequence,int)>
<ohos.sysappcomponents.calendar.entity.Instances: int getEventId()>
<java.util.prefs.Preferences: java.lang.String[] childrenNames()>
<ohos.ace.ability.AceAbility: boolean onKeyUp(int,ohos.multimodalinput.event.KeyEvent)>
<ohos.utils.net.UrlQueryFilter: java.util.List getParamsListFiltered()>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.Chronology getChronology()>
<java.net.DatagramPacket: void <init>(byte[],int,java.net.SocketAddress)>
<java.util.Arrays: void parallelPrefix(long[],int,int,java.util.function.LongBinaryOperator)>
<ohos.media.player.Player: boolean setVideoSurface(ohos.agp.graphics.Surface)>
<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>
<ohos.global.icu.util.LocaleData: void setNoSubstitute(boolean)>
<ohos.ai.cv.text.TextConfiguration: void <init>(ohos.ai.cv.text.TextConfiguration.Builder)>
<java.time.temporal.ChronoField: boolean isTimeBased()>
<javax.lang.model.element.NestingKind: void <clinit>()>
<ohos.app.Context: java.io.File[] getExternalCacheDirs()>
<java.security.AccessControlException: void <init>(java.lang.String)>
<ohos.wifi.WifiLinkedInfo: ohos.wifi.WifiLinkedInfo.ConnState getConnState()>
<java.util.concurrent.CountedCompleter: java.util.concurrent.CountedCompleter getCompleter()>
<java.util.concurrent.locks.LockSupport: void parkUntil(java.lang.Object,long)>
<ohos.utils.zson.ZSONArray: boolean contains(java.lang.Object)>
<ohos.media.audio.AudioCapturer: boolean stop()>
<java.util.stream.Collectors: java.util.stream.Collector summarizingDouble(java.util.function.ToDoubleFunction)>
<java.lang.invoke.ConstantCallSite: java.lang.invoke.MethodHandle getTarget()>
<java.sql.SQLNonTransientException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<ohos.agp.render.render3d.math.Vector2: float getY()>
<ohos.app.AbilityContext: java.io.File[] getExternalCacheDirs()>
<ohos.sysappcomponents.calendar.entity.Accounts: void setAttendeeTypes(java.lang.String)>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: void <init>()>
<ohos.media.camera.params.ParameterKey.Key: java.lang.String toString()>
<java.util.HashSet: boolean add(java.lang.Object)>
<java.util.concurrent.LinkedTransferQueue: boolean add(java.lang.Object)>
<ohos.agp.components.Component: int getWidth()>
<ohos.agp.components.ListContainer: int getLastVisibleItemPosition()>
<ohos.data.dataability.DataAbilityPredicates: boolean marshalling(ohos.utils.Parcel)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,boolean)>
<ohos.usb.USBRequest: void abort()>
<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>
<java.security.MessageDigest: void update(java.nio.ByteBuffer)>
<ohos.agp.components.TabList: ohos.agp.components.TabList.Tab getSelectedTab()>
<ohos.agp.components.TabList: int getSelectedTabIndicatorHeight()>
<ohos.global.icu.text.DecimalFormat: void applyLocalizedPattern(java.lang.String)>
<ohos.media.common.AudioProperty: int getRecorderNumChannels()>
<java.time.LocalTime: java.time.LocalTime withHour(int)>
<ohos.media.common.AudioProperty: int getRecorderBitRate()>
<java.time.format.ResolverStyle: void <clinit>()>
<ohos.global.icu.text.TimeZoneFormat: java.lang.String format(ohos.global.icu.text.TimeZoneFormat.Style,ohos.global.icu.util.TimeZone,long)>
<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>
<ohos.agp.components.element.AnimatedStateElement: ohos.agp.components.element.Element getStateElement(int)>
<java.nio.file.InvalidPathException: java.lang.String getInput()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setSequenceableArrayListParam(java.lang.String,java.util.ArrayList)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setPadding(int,int,int,int,int)>
<java.sql.SQLClientInfoException: void <init>(java.lang.String,java.util.Map)>
<java.util.regex.PatternSyntaxException: java.lang.String getDescription()>
<java.util.concurrent.ThreadLocalRandom: boolean nextBoolean()>
<ohos.agp.render.Paint: void setColorMatrix(ohos.agp.render.ColorMatrix)>
<ohos.agp.render.opengl.GLES30: void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)>
<ohos.rpc.MessageParcel: java.io.FileDescriptor getFdFromDatagramSocket(java.net.DatagramSocket)>
<ohos.agp.components.Component: int[] getMarginsLeftAndRight()>
<java.util.OptionalInt: int hashCode()>
<ohos.agp.components.Text: void setTruncationMode(ohos.agp.components.Text.TruncationMode)>
<java.nio.channels.NetworkChannel: java.util.Set supportedOptions()>
<ohos.global.icu.text.UnicodeSet.SpanCondition: ohos.global.icu.text.UnicodeSet.SpanCondition valueOf(java.lang.String)>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String getBestPattern(java.lang.String,int)>
<java.security.Security: java.lang.String getProperty(java.lang.String)>
<java.nio.channels.spi.AbstractSelectionKey: void <init>()>
<ohos.aafwk.ability.MemoryInfo: int getArkPrivateDirty()>
<ohos.global.icu.util.Calendar: int getActualMaximum(int)>
<java.text.NumberFormat: java.util.Locale[] getAvailableLocales()>
<ohos.agp.render.render3d.math.Matrix4x4: boolean equals(java.lang.Object)>
<ohos.security.permission.PermissionDef: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.zone.ZoneRules: java.time.zone.ZoneOffsetTransition getTransition(java.time.LocalDateTime)>
<javax.net.ssl.SSLSessionContext: void setSessionTimeout(int)>
<java.net.DatagramSocketImpl: void create()>
<ohos.media.common.AVMetadata.Builder: void <init>(ohos.media.common.AVMetadata)>
<java.util.concurrent.ForkJoinTask: void quietlyInvoke()>
<javax.tools.FileObject: java.io.InputStream openInputStream()>
<java.time.zone.ZoneOffsetTransition: boolean isValidOffset(java.time.ZoneOffset)>
<java.util.logging.Logger: void setLevel(java.util.logging.Level)>
<java.nio.channels.CompletionHandler: void completed(java.lang.Object,java.lang.Object)>
<ohos.media.camera.device.FrameConfig.Builder: int getFlashMode()>
<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>
<java.util.concurrent.ConcurrentSkipListSet: java.lang.Object ceiling(java.lang.Object)>
<ohos.event.notification.NotificationHelper: void setNotificationBadgeNum()>
<ohos.global.icu.util.ULocale: java.util.Locale toLocale()>
<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes.Name)>
<ohos.agp.render.opengl.GLES2Ext: void glPushDebugGroupKHR(int,int,int,java.lang.String)>
<java.lang.Math: double pow(double,double)>
<java.sql.SQLInvalidAuthorizationSpecException: void <init>(java.lang.String)>
<ohos.bundle.IBundleManager: ohos.bundle.BundleInfo getBundleArchiveInfo(java.lang.String,int)>
<java.util.IdentityHashMap: int size()>
<java.util.OptionalLong: java.lang.String toString()>
<javax.crypto.spec.SecretKeySpec: int hashCode()>
<java.io.StreamTokenizer: void resetSyntax()>
<java.util.Hashtable: void putAll(java.util.Map)>
<ohos.agp.components.TabList: void selectTab(ohos.agp.components.TabList.Tab)>
<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>
<java.util.concurrent.ThreadPoolExecutor.DiscardPolicy: void <init>()>
<java.util.concurrent.ConcurrentMap: void replaceAll(java.util.function.BiFunction)>
<ohos.app.Context: java.lang.String getBundleName()>
<ohos.global.resource.solidxml.TypedAttribute.AttrData: int getAttrType()>
<java.net.URI: java.net.URI create(java.lang.String)>
<ohos.ai.cv.text.TextConfiguration: int getTrackingForceOcrFlag()>
<java.time.YearMonth: boolean isLeapYear()>
<ohos.wifi.p2p.WifiP2pController: void stopDeviceDiscovery(ohos.wifi.p2p.WifiP2pCallback)>
<ohos.data.orm.OrmContext: int update(ohos.data.orm.OrmPredicates,ohos.data.rdb.ValuesBucket)>
<ohos.agp.components.AdaptiveBoxLayout.LayoutConfig: void <init>(int,int)>
<ohos.sensor.agent.CategoryMotionAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int)>
<java.sql.ResultSet: java.lang.String getCursorName()>
<ohos.aafwk.ability.AbilitySliceAnimator: void <init>(float,float,float,float)>
<java.security.cert.X509CertSelector: java.security.PublicKey getSubjectPublicKey()>
<ohos.agp.utils.Rect: void translateCenterTo(int,int)>
<java.security.Identity: java.lang.String getName()>
<java.io.PipedReader: void close()>
<java.lang.reflect.InvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>
<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>
<ohos.event.notification.NotificationRequest: boolean isGroupOverview()>
<ohos.agp.render.ThreeDimView: void getMatrix(ohos.agp.utils.Matrix)>
<ohos.biometrics.authentication.BiometricAuthentication: void setSecureObjectMac(javax.crypto.Mac)>
<java.io.BufferedReader: boolean markSupported()>
<java.io.StringWriter: void <init>()>
<ohos.agp.render.opengl.GLES1X: void glDeleteBuffers(int,int[],int)>
<java.io.PrintWriter: java.lang.Appendable append(java.lang.CharSequence,int,int)>
<java.lang.Long: java.lang.Long getLong(java.lang.String,long)>
<java.text.SimpleDateFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<java.security.AlgorithmParameterGenerator: void init(int,java.security.SecureRandom)>
<ohos.aafwk.ability.FormBindingData: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.UCharacterIterator: int getIndex()>
<ohos.dcall.DistributedCallManager: void addObserver(ohos.dcall.CallStateObserver,int)>
<ohos.agp.render.render3d.resources.ResourceManager: java.util.List getAnimations()>
<ohos.sensor.agent.SensorAgent: ohos.sensor.bean.SensorBase getSingleSensor(int)>
<ohos.event.intentagent.IntentAgentConstant.Flags: ohos.event.intentagent.IntentAgentConstant.Flags[] values()>
<ohos.agp.components.Rating: void setIsOperable(boolean)>
<ohos.utils.system.SystemCapability.Communication: void <init>()>
<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>
<java.sql.CallableStatement: void setTime(java.lang.String,java.sql.Time)>
<ohos.agp.utils.Point: void modify(float,float)>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>
<ohos.global.icu.lang.UCharacter: java.lang.String toUpperCase(java.util.Locale,java.lang.String)>
<java.time.YearMonth: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<java.util.SplittableRandom: double nextDouble(double)>
<ohos.global.icu.text.SimpleDateFormat: void set2DigitYearStart(java.util.Date)>
<javax.tools.StandardLocation: void <clinit>()>
<java.util.concurrent.ConcurrentHashMap: void forEachEntry(long,java.util.function.Function,java.util.function.Consumer)>
<java.util.prefs.AbstractPreferences: void removeNodeChangeListener(java.util.prefs.NodeChangeListener)>
<ohos.agp.components.ProgressBar: void <init>(ohos.app.Context)>
<java.nio.FloatBuffer: boolean isDirect()>
<ohos.global.icu.text.CaseMap: ohos.global.icu.text.CaseMap omitUnchangedText()>
<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>
<ohos.utils.PacMap: void putIntegerList(java.lang.String,java.util.ArrayList)>
<ohos.bundle.InstallParam: void setInstallFlag(int)>
<ohos.agp.components.webengine.BrowserAgent: void onTitleUpdated(ohos.agp.components.webengine.WebView,java.lang.String)>
<java.time.chrono.Chronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.temporal.TemporalAccessor)>
<javax.net.ssl.SSLSessionBindingEvent: void <init>(javax.net.ssl.SSLSession,java.lang.String)>
<ohos.agp.render.render3d.components.TransformComponent: ohos.agp.render.render3d.math.Vector3 getScale()>
<java.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setMaxScreenIntentAgent(java.lang.String,java.lang.String)>
<java.util.OptionalLong: boolean equals(java.lang.Object)>
<ohos.media.player.Player: int getVideoHeight()>
<ohos.utils.zson.ZSONArray: int size()>
<java.nio.file.attribute.UserDefinedFileAttributeView: int size(java.lang.String)>
<ohos.agp.components.Component: boolean callOnClick()>
<java.security.KeyStore.Entry.Attribute: java.lang.String getName()>
<java.security.AccessController: java.lang.Object doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction)>
<java.util.ResourceBundle.Control: void <clinit>()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean compareAndSetState(long,long)>
<java.util.logging.Level: java.lang.String getName()>
<java.security.cert.CertificateFactorySpi: java.util.Collection engineGenerateCRLs(java.io.InputStream)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform4ui(int,int,int,int,int,int)>
<java.security.Policy: boolean implies(java.security.ProtectionDomain,java.security.Permission)>
<ohos.agp.render.LinearShader: void <init>(ohos.agp.utils.Point[],float[],ohos.agp.utils.Color[],ohos.agp.render.Shader.TileMode)>
<ohos.agp.window.dialog.CommonDialog: boolean deliverKeyboardCase(ohos.multimodalinput.event.KeyEvent)>
<ohos.utils.zson.ZSONObject: java.lang.String toString()>
<javax.lang.model.type.UnionType: java.util.List getAlternatives()>
<ohos.agp.components.TableLayout: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.util.ArrayDeque: void clear()>
<java.lang.Integer: int hashCode()>
<ohos.sysappcomponents.calendar.CalendarDataHelper: ohos.sysappcomponents.calendar.CalendarDataHelper.InstancesDataHelper getInstanceDataHelper()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThanOrEqualTo(java.lang.String,java.util.Calendar)>
<ohos.agp.utils.Contour: boolean getRect(ohos.agp.utils.Rect)>
<ohos.ai.cv.sr.IImageSuperResolution: int doSuperResolution(ohos.ai.cv.common.VisionImage,ohos.ai.cv.common.ImageResult,ohos.ai.cv.common.VisionCallback)>
<java.sql.CallableStatement: java.sql.Clob getClob(java.lang.String)>
<java.lang.Byte: int compareTo(java.lang.Object)>
<java.sql.DriverPropertyInfo: void <init>(java.lang.String,java.lang.String)>
<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra of(int)>
<java.util.AbstractMap.SimpleImmutableEntry: java.lang.Object setValue(java.lang.Object)>
<java.lang.Short: void <init>(short)>
<java.security.cert.CRLReason: void <clinit>()>
<ohos.agp.render.opengl.GLES30: void glGenSamplers(int,int[])>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<ohos.aafwk.ability.fraction.Fraction: void onForeground(ohos.aafwk.content.Intent)>
<java.net.SocketOption: java.lang.String name()>
<java.security.Permission: java.security.PermissionCollection newPermissionCollection()>
<java.util.stream.Collectors: java.util.stream.Collector groupingByConcurrent(java.util.function.Function,java.util.stream.Collector)>
<ohos.global.icu.text.DateIntervalFormat: ohos.global.icu.util.TimeZone getTimeZone()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenCompose(java.util.function.Function)>
<java.lang.reflect.Executable: int getModifiers()>
<java.util.function.DoubleConsumer: java.util.function.DoubleConsumer andThen(java.util.function.DoubleConsumer)>
<java.text.NumberFormat: java.text.NumberFormat getPercentInstance()>
<ohos.agp.components.TimePicker: void setAmPmOrder(ohos.agp.components.TimePicker.AmPmOrder)>
<ohos.data.rdb.ValuesBucket: int hashCode()>
<ohos.global.icu.text.DecimalFormat: boolean isExponentSignAlwaysShown()>
<ohos.aafwk.ability.AbilitySlice: void onActive()>
<ohos.agp.components.AbsButton: ohos.agp.utils.Color getTextColorOn()>
<ohos.utils.Parcel: void writeSequenceable(ohos.utils.Sequenceable)>
<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()>
<java.sql.Date: void setTime(long)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>
<java.time.YearMonth: java.time.LocalDate atDay(int)>
<ohos.data.DatabaseFileConfig: ohos.data.DatabaseFileSecurityLevel getDatabaseFileSecurityLevel()>
<java.io.DataInput: byte readByte()>
<ohos.global.icu.text.DecimalFormat: int getRoundingMode()>
<java.io.FilterInputStream: int read()>
<java.sql.RowId: boolean equals(java.lang.Object)>
<ohos.global.icu.text.Transliterator: java.lang.String toRules(boolean)>
<java.util.TreeMap: java.util.Collection values()>
<ohos.data.orm.Clob: java.lang.String getSubString(long,int)>
<java.io.PipedWriter: void connect(java.io.PipedReader)>
<java.lang.Character: boolean isJavaIdentifierStart(int)>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedThreads()>
<ohos.global.icu.text.Transliterator: void setFilter(ohos.global.icu.text.UnicodeFilter)>
<ohos.data.rdb.StoreConfig.Builder: ohos.data.rdb.StoreConfig.Builder setDatabaseFileSecurityLevel(ohos.data.DatabaseFileSecurityLevel)>
<ohos.agp.render.opengl.GLES1X: int glGetError()>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: java.lang.String getAdditionalText()>
<ohos.media.common.Format: void putObjectValue(java.lang.String,java.lang.Object)>
<ohos.utils.Stopwatch: void writeLog()>
<ohos.global.icu.text.CollationKey: int compareTo(java.lang.Object)>
<java.util.concurrent.ExecutionException: void <init>(java.lang.String)>
<ohos.agp.components.Component: boolean isBoundaryFadeEffectEnable()>
<ohos.agp.render.Arc: void <init>(float,float,boolean)>
<java.io.ObjectInputStream: long readLong()>
<java.lang.System: java.lang.String clearProperty(java.lang.String)>
<ohos.agp.components.Rating: ohos.agp.components.element.Element getHalfFilledElement()>
<ohos.ai.cv.common.VisionCallback: void onProcessing(float)>
<java.time.OffsetDateTime: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.nio.channels.DatagramChannel: long write(java.nio.ByteBuffer[],int,int)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setSettingsText(java.lang.String)>
<ohos.rpc.ReliableFileDescriptor: ohos.rpc.ReliableFileDescriptor takeChargeOfFileDescriptor(int)>
<ohos.media.tubecore.AVTube: java.lang.Object label()>
<ohos.event.notification.NotificationSlotGroup: java.lang.String getId()>
<javax.lang.model.element.AnnotationMirror: javax.lang.model.type.DeclaredType getAnnotationType()>
<java.util.concurrent.ConcurrentHashMap: boolean contains(java.lang.Object)>
<ohos.global.icu.lang.UCharacter: boolean isLetter(int)>
<ohos.agp.render.opengl.EGL: boolean eglInitialize(ohos.agp.render.opengl.EGLDisplay,int[],int[])>
<ohos.agp.render.opengl.GLES1X: void glClearColor(float,float,float,float)>
<ohos.media.audio.AudioDeviceDescriptor.DeviceFlag: ohos.media.audio.AudioDeviceDescriptor.DeviceFlag[] values()>
<java.io.PrintWriter: void println(boolean)>
<java.sql.ResultSet: java.sql.Clob getClob(java.lang.String)>
<ohos.media.player.Player: void unspecifyStream(int)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoPeriod until(java.time.chrono.ChronoLocalDate)>
<java.util.concurrent.ConcurrentHashMap: java.util.Enumeration elements()>
<ohos.event.notification.NotificationRequest.NotificationContent: int getContentType()>
<java.util.logging.LogRecord: void <init>(java.util.logging.Level,java.lang.String)>
<ohos.accessibility.ability.AccessibilityInfo: boolean isEnabled()>
<ohos.aafwk.ability.Ability: java.lang.String getAbilityName()>
<ohos.data.usage.Volume: java.lang.String getDescription()>
<java.io.EOFException: void <init>(java.lang.String)>
<ohos.data.rdb.ValuesBucket: void clear()>
<java.net.BindException: void <init>(java.lang.String)>
<ohos.event.notification.NotificationHelper: boolean canPublishNotificationAsBundle(java.lang.String)>
<ohos.bundle.AbilityInfo: ohos.bundle.ApplicationInfo getApplicationInfo()>
<java.io.DataOutputStream: void write(int)>
<ohos.media.camera.device.CameraStateCallback: void onCaptureRun(ohos.media.camera.device.Camera)>
<ohos.aafwk.content.IntentParams: void setClassLoader(java.lang.ClassLoader)>
<ohos.agp.components.ListContainer: void setItemSelectedListener(ohos.agp.components.ListContainer.ItemSelectedListener)>
<ohos.hiviewdfx.Debug.HeapInfo: void <init>()>
<ohos.utils.Parcel: java.lang.String[] readStringArray()>
<java.util.concurrent.ConcurrentHashMap.KeySetView: boolean containsAll(java.util.Collection)>
<ohos.global.icu.text.DecimalFormatSymbols: void setMonetaryDecimalSeparatorString(java.lang.String)>
<javax.security.auth.Subject: java.util.Set getPrincipals()>
<ohos.global.icu.text.NumberFormat: boolean isParseIntegerOnly()>
<ohos.media.audio.AudioStreamInfo.AudioStreamFlag: ohos.media.audio.AudioStreamInfo.AudioStreamFlag valueOf(java.lang.String)>
<java.time.zone.ZoneRulesException: void <init>(java.lang.String,java.lang.Throwable)>
<java.io.BufferedInputStream: void close()>
<ohos.media.audio.AudioDeviceDescriptor: void setId(int)>
<ohos.telephony.TdscdmaSignalInformation: int getSignalLevel()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean tryAcquireNanos(int,long)>
<ohos.data.usage.CachePolicy: boolean isCacheCleanXattr(java.io.File)>
<java.sql.CallableStatement: java.sql.Date getDate(java.lang.String,java.util.Calendar)>
<ohos.media.audio.SoundPlayer.AudioVolumes: float getSubwooferVolume()>
<javax.lang.model.util.Types: javax.lang.model.type.NullType getNullType()>
<java.lang.reflect.Method: boolean isSynthetic()>
<java.util.ArrayDeque: java.lang.Object remove()>
<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: ohos.media.common.sessioncore.AVPlaybackState.Builder setAVPlaybackActions(long)>
<java.sql.DatabaseMetaData: boolean supportsBatchUpdates()>
<java.sql.SQLInput: java.sql.Ref readRef()>
<java.sql.ResultSet: void updateBoolean(int,boolean)>
<java.nio.file.WatchKey: java.util.List pollEvents()>
<java.util.Collections: java.util.Enumeration emptyEnumeration()>
<javax.lang.model.util.AbstractElementVisitor6: java.lang.Object visit(javax.lang.model.element.Element,java.lang.Object)>
<java.security.MessageDigest: boolean isEqual(byte[],byte[])>
<java.time.Month: int minLength()>
<ohos.eventhandler.EventRunner: boolean isCurrentRunnerThread()>
<java.util.concurrent.ConcurrentSkipListMap: boolean isEmpty()>
<ohos.agp.components.SearchBar: void setSearchButton(int)>
<ohos.global.icu.text.IDNA.Info: boolean hasErrors()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseCaseSensitive()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notEqualTo(java.lang.String,java.sql.Time)>
<ohos.agp.render.render3d.math.Vector3: java.lang.String toString()>
<ohos.media.photokit.common.PixelMapConfigs: void setPreferredConfig(ohos.media.image.common.PixelFormat)>
<java.io.RandomAccessFile: int readInt()>
<ohos.eventhandler.EventHandler: void dump(ohos.eventhandler.Dumper)>
<ohos.global.icu.text.MessageFormat: java.text.Format[] getFormatsByArgumentIndex()>
<ohos.global.icu.text.RelativeDateTimeFormatter.Style: void <clinit>()>
<java.time.OffsetDateTime: java.lang.String format(java.time.format.DateTimeFormatter)>
<ohos.data.async.DataAbilityAsyncHandler: void <init>(ohos.app.Context)>
<ohos.accessibility.ability.DisplayResizeController: ohos.agp.utils.Rect getDisplayResizeRect()>
<java.text.CharacterIterator: char previous()>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object getLast()>
<ohos.utils.IntArray: java.lang.String toString()>
<ohos.media.photokit.metadata.AVStorage.Audio.Albums: ohos.utils.net.Uri fetchResource(java.lang.String)>
<ohos.agp.components.TimePicker: void setHour(int)>
<java.nio.file.attribute.AclEntry.Builder: java.nio.file.attribute.AclEntry.Builder setType(java.nio.file.attribute.AclEntryType)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.util.Currency getCurrency()>
<java.util.Calendar: void setMinimalDaysInFirstWeek(int)>
<ohos.utils.BasePacMap: java.lang.Object getRemoteObject(java.lang.String,java.lang.Class)>
<java.lang.Thread: void join(long)>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.IntStream ints(long,int,int)>
<ohos.agp.components.ListContainer.ItemLongClickedListener: boolean onItemLongClicked(ohos.agp.components.ListContainer,ohos.agp.components.Component,int,long)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,float)>
<ohos.global.icu.text.MessagePattern.Part: boolean equals(java.lang.Object)>
<ohos.data.distributed.user.SingleKvStore: byte[] getByteArray(java.lang.String)>
<java.io.PushbackReader: void mark(int)>
<java.util.concurrent.ConcurrentNavigableMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>
<ohos.data.usage.DataUsage: boolean isDiskPluggable()>
<ohos.global.icu.text.Bidi: int getReorderingMode()>
<ohos.agp.render.render3d.BuildConfig: void <clinit>()>
<javax.net.ssl.X509ExtendedTrustManager: void <init>()>
<ohos.miscservices.inputmethodability.KeyboardController: boolean toNextInputMethod()>
<ohos.org.xml.sax.HandlerBase: void notationDecl(java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glGetInteger64v(int,long[])>
<ohos.agp.text.Layout: float getCoordinateInSecondDir(int)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: java.util.List getAllAbilitySlice(ohos.aafwk.ability.Ability)>
<java.io.OutputStreamWriter: void close()>
<java.util.concurrent.ScheduledThreadPoolExecutor: void setRemoveOnCancelPolicy(boolean)>
<javax.sql.RowSet: void setClob(int,java.sql.Clob)>
<ohos.media.camera.device.FrameConfig.Builder: int getImageRotation()>
<java.util.stream.Stream: java.util.stream.Stream limit(long)>
<ohos.miscservices.download.DownloadSession: void <init>(ohos.app.Context,ohos.utils.net.Uri)>
<ohos.system.version.SystemVersion: java.lang.String getVersion()>
<ohos.event.notification.MessageUser: void <init>()>
<ohos.data.resultset.AbsResultSet: boolean isAtLastRow()>
<ohos.aafwk.content.IntentParams: void remove(java.lang.String)>
<ohos.media.audio.AudioRendererInfo: ohos.media.audio.AudioRendererInfo.AudioStreamOutputFlag getAudioStreamOutputFlag()>
<ohos.agp.render.opengl.GLES1X: void glViewport(int,int,int,int)>
<ohos.data.distributed.common.SchemaMode: ohos.data.distributed.common.SchemaMode valueOf(java.lang.String)>
<java.util.Spliterators: java.util.Spliterator.OfInt emptyIntSpliterator()>
<java.util.prefs.Preferences: void putFloat(java.lang.String,float)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThanOrEqualTo(java.lang.String,java.util.Date)>
<ohos.global.icu.util.Calendar: boolean isSet(int)>
<java.sql.CallableStatement: void registerOutParameter(java.lang.String,int,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: java.util.Spliterator spliterator()>
<ohos.utils.net.Uri: ohos.utils.net.Uri getUriFromFile(java.io.File)>
<ohos.accessibility.ability.AccessibilityWindow: int getWindowId()>
<ohos.data.orm.OrmContext: java.util.List query(ohos.data.orm.OrmPredicates)>
<ohos.media.camera.params.PropertyKey.Key: java.lang.String toString()>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getPerMillString()>
<ohos.event.notification.MessageUser: ohos.event.notification.MessageUser setMachine(boolean)>
<ohos.global.icu.text.CurrencyPluralInfo: void setLocale(ohos.global.icu.util.ULocale)>
<ohos.sysappcomponents.calendar.entity.Events: int getEventColour()>
<java.lang.Long: long reverse(long)>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: java.lang.String toString()>
<java.util.zip.CRC32: long getValue()>
<ohos.utils.zson.ZSONArray: java.lang.Boolean getBoolean(int)>
<ohos.agp.render.Path: void addPath(ohos.agp.render.Path,ohos.agp.render.Path.AddPathMode)>
<java.lang.Math: int min(int,int)>
<java.sql.CallableStatement: float getFloat(java.lang.String)>
<java.security.cert.X509CRL: int getVersion()>
<ohos.bluetooth.ble.BlePeripheralManagerCallback: void receiveDescriptorReadEvent(ohos.bluetooth.ble.BlePeripheralDevice,int,int,ohos.bluetooth.ble.GattDescriptor)>
<ohos.agp.render.opengl.GLES31: void glDrawArraysIndirect(int,long)>
<ohos.global.icu.lang.UCharacter: java.lang.String toTitleCase(ohos.global.icu.util.ULocale,java.lang.String,ohos.global.icu.text.BreakIterator)>
<java.lang.Runtime: void halt(int)>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: void <init>()>
<java.util.LinkedHashMap: void <init>(int,float)>
<ohos.data.orm.UpgradeComparator: void <init>()>
<java.util.Deque: java.lang.Object remove()>
<ohos.media.camera.device.FrameConfig.Builder: java.util.List getKeys()>
<javax.lang.model.type.TypeKind: boolean isPrimitive()>
<ohos.bundle.ShortcutIntent: java.util.Map getParams()>
<ohos.agp.components.ListContainer: int getOrientation()>
<ohos.global.icu.util.TaiwanCalendar: void <init>()>
<ohos.data.search.model.ChangedIndexContent: void setUpdatedItems(java.util.List)>
<ohos.global.icu.util.GregorianCalendar: int handleComputeMonthStart(int,int,boolean)>
<ohos.aafwk.ability.MemoryInfo: int getNativePrivateDirty()>
<java.sql.ResultSet: void updateCharacterStream(java.lang.String,java.io.Reader,long)>
<java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)>
<java.time.Clock: java.time.Clock system(java.time.ZoneId)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates contains(java.lang.String,java.lang.String)>
<ohos.agp.components.DirectionalLayout: void setOrientation(int)>
<java.lang.SecurityManager: java.lang.Class[] getClassContext()>
<java.lang.StringBuilder: void <init>(int)>
<java.util.Vector: boolean contains(java.lang.Object)>
<ohos.usb.USBDevice: java.lang.String getVersion()>
<java.nio.channels.spi.AbstractSelectableChannel: boolean isBlocking()>
<ohos.ai.cv.common.ImageResult: void <init>()>
<ohos.net.IpPrefix: int getPrefixLength()>
<java.time.chrono.Era: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.agp.window.dialog.BaseDialog: ohos.agp.window.dialog.BaseDialog setSize(int,int)>
<ohos.agp.components.element.FrameAnimationElement: boolean setPreDecodeFrames(int)>
<ohos.org.xml.sax.HandlerBase: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.multimodalinput.standard.MediaEventHandle: boolean onPlay(ohos.multimodalinput.event.MultimodalEvent)>
<java.util.Arrays: void sort(int[])>
<ohos.agp.components.TimePicker: float getSelectedNormalTextMarginRatio()>
<ohos.hiviewdfx.Caution: ohos.hiviewdfx.HiChecker.Rule getTriggerRule()>
<ohos.accessibility.ability.GestureResultListenerInfo: ohos.accessibility.ability.GestureResultListener getGestureResultListener()>
<ohos.data.rdb.RdbOpenCallback: void onCorruption(java.io.File)>
<java.util.concurrent.locks.Lock: boolean tryLock(long,java.util.concurrent.TimeUnit)>
<javax.net.ssl.SSLEngineResult: int bytesProduced()>
<ohos.ai.cv.text.TextLine: void <init>()>
<java.math.MathContext: java.math.RoundingMode getRoundingMode()>
<ohos.bundle.IBundleManager: int executeBackupTask(int,java.lang.String)>
<java.util.jar.Attributes: void putAll(java.util.Map)>
<java.security.KeyFactory: java.security.Key translateKey(java.security.Key)>
<ohos.javax.xml.stream.XMLEventWriter: void flush()>
<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater)>
<javax.crypto.KeyGenerator: java.lang.String getAlgorithm()>
<java.nio.file.WatchService: java.nio.file.WatchKey poll(long,java.util.concurrent.TimeUnit)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayName()>
<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel open(java.net.ProtocolFamily)>
<ohos.ai.tts.TtsParams: int getDeviceType()>
<ohos.global.icu.text.MessagePattern: ohos.global.icu.text.MessagePattern parse(java.lang.String)>
<ohos.global.icu.util.Calendar: int computeGregorianMonthStart(int,int)>
<java.util.regex.Pattern: java.util.stream.Stream splitAsStream(java.lang.CharSequence)>
<java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>
<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndIncrement(java.lang.Object)>
<ohos.agp.utils.Matrix: boolean isIdentity()>
<java.time.Year: int compareTo(java.lang.Object)>
<ohos.aafwk.ability.Ability: void onTriggerFormEvent(int,java.lang.String)>
<java.util.IllegalFormatConversionException: void <init>(char,java.lang.Class)>
<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>
<ohos.agp.render.BlurDrawLooper: void <init>(float,float,float,ohos.agp.utils.Color)>
<java.lang.Long: int numberOfTrailingZeros(long)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenApply(java.util.function.Function)>
<java.io.DataOutput: void write(int)>
<ohos.agp.utils.RectFloat: void reorder()>
<java.util.Vector: java.lang.String toString()>
<java.util.logging.LogRecord: java.lang.String getLoggerName()>
<ohos.data.orm.OrmContext: int delete(ohos.data.orm.OrmPredicates)>
<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future take()>
<java.util.concurrent.LinkedBlockingDeque: boolean offer(java.lang.Object)>
<java.sql.SQLClientInfoException: void <init>()>
<java.util.concurrent.ForkJoinPool: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>
<ohos.media.audio.AudioStreamInfo.ContentType: ohos.media.audio.AudioStreamInfo.ContentType valueOf(java.lang.String)>
<ohos.global.icu.text.ConstrainedFieldPosition: java.lang.Object getFieldValue()>
<java.io.RandomAccessFile: byte readByte()>
<ohos.agp.components.ListContainer: void setTextFilter(java.lang.String)>
<ohos.global.i18n.text.MeasureFormatter: java.lang.String format(ohos.global.i18n.text.MeasureOptions.Unit,double,ohos.global.i18n.text.MeasureOptions.FormatStyle)>
<ohos.agp.components.Image.ScaleMode: ohos.agp.components.Image.ScaleMode valueOf(java.lang.String)>
<java.nio.channels.IllegalChannelGroupException: void <init>()>
<javax.net.ssl.HttpsURLConnection: java.lang.String getCipherSuite()>
<ohos.agp.render.opengl.GLES31: void glBindVertexBuffer(int,int,long,int)>
<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()>
<java.util.concurrent.Phaser: int register()>
<ohos.agp.components.NestedScrollCoordinator: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.bluetooth.ble.BlePeripheralCallback: void descriptorWriteEvent(ohos.bluetooth.ble.GattDescriptor,int)>
<ohos.agp.colors.CmykColor: boolean equals(java.lang.Object)>
<ohos.utils.LruBuffer: void <init>()>
<ohos.agp.render.render3d.components.SceneComponent: void setCamera(ohos.agp.render.render3d.Entity)>
<javax.lang.model.element.ElementKind: boolean isField()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,java.util.Calendar)>
<ohos.agp.components.Picker: float getSelectedNormalTextMarginRatio()>
<ohos.global.icu.lang.UCharacter: boolean isLowerCase(int)>
<ohos.light.bean.LightBrightness: void setRedBrightness(int)>
<java.lang.SecurityManager: void checkAwtEventQueueAccess()>
<java.util.Arrays: void parallelPrefix(long[],java.util.function.LongBinaryOperator)>
<ohos.accessibility.ability.GesturePathPositionDefine: void setPositionY(float)>
<java.sql.Statement: void setFetchDirection(int)>
<java.text.FieldPosition: void setBeginIndex(int)>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object removeFirst()>
<ohos.agp.render.render3d.resources.ResourceManager: java.util.List getResources()>
<ohos.agp.components.PageSlider: void setPageCacheSize(int)>
<ohos.global.icu.text.Transliterator: java.lang.String getID()>
<ohos.ai.cv.text.TextConfiguration: int getIsTracking()>
<ohos.utils.zson.ZSONObject: byte getByteValue(java.lang.String)>
<java.security.cert.X509CRL: byte[] getEncoded()>
<java.time.OffsetDateTime: java.time.OffsetDateTime plusNanos(long)>
<java.util.prefs.Preferences: void flush()>
<ohos.vibrator.bean.VibrationPattern: int getIntensity()>
<java.security.cert.PKIXParameters: void setCertStores(java.util.List)>
<ohos.agp.components.ComponentTreeObserver: void addTreeLayoutChangedListener(ohos.agp.components.ComponentTreeObserver.GlobalLayoutListener)>
<ohos.app.AbilityContext: java.lang.String[] getStringArray(int)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getCatalogs()>
<ohos.os.ProcessManager: boolean isIsolatedProcess()>
<ohos.data.search.schema.MusicItem: java.util.List getMusicSchema()>
<ohos.agp.components.StackLayout.LayoutConfig: void <init>()>
<java.time.temporal.Temporal: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.util.OptionalDouble: double orElseThrow(java.util.function.Supplier)>
<ohos.event.commonevent.CommonEventSubscribeInfo: void <init>(ohos.event.commonevent.MatchingSkills)>
<java.text.StringCharacterIterator: int getEndIndex()>
<java.text.NumberFormat: int getMinimumIntegerDigits()>
<java.nio.file.WatchEvent: java.lang.Object context()>
<ohos.agp.utils.Circle: void set(float,float,float)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<ohos.aafwk.ability.AbilitySlice: void onResult(int,ohos.aafwk.content.Intent)>
<ohos.accessibility.ability.AccessibilityInfo: boolean isEditable()>
<ohos.agp.render.render3d.Task: void onFinish()>
<ohos.javax.xml.validation.ValidatorHandler: ohos.org.xml.sax.ErrorHandler getErrorHandler()>
<java.util.stream.Collectors: java.util.stream.Collector summingLong(java.util.function.ToLongFunction)>
<ohos.media.audio.SoundPlayer.AudioVolumes: float getFrontLeftVolume()>
<ohos.utils.Parcel: boolean rewindWrite(int)>
<java.time.DayOfWeek: void <clinit>()>
<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>
<ohos.agp.components.ScrollView: void addScrollPausePositionX(int)>
<ohos.global.icu.text.MessagePattern: void clearPatternAndSetApostropheMode(ohos.global.icu.text.MessagePattern.ApostropheMode)>
<java.lang.Math: double signum(double)>
<java.security.NoSuchAlgorithmException: void <init>()>
<java.util.ArrayDeque: boolean offer(java.lang.Object)>
<ohos.data.DatabaseHelper: int releaseRdbMemory()>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: boolean marshalling(ohos.utils.Parcel)>
<ohos.data.dataability.DataAbilityPredicates: void setWhereArgs(java.util.List)>
<java.lang.Double: double parseDouble(java.lang.String)>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction.Builder: ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction build()>
<ohos.global.icu.text.CompactDecimalFormat.CompactStyle: ohos.global.icu.text.CompactDecimalFormat.CompactStyle valueOf(java.lang.String)>
<ohos.hiviewdfx.Debug: long getCpuTime()>
<javax.crypto.NullCipher: void <init>()>
<ohos.global.icu.math.BigDecimal: long longValue()>
<ohos.global.icu.text.IDNA.Info: void <init>()>
<ohos.miscservices.download.IDownloadListener: void onFailed(int)>
<ohos.aafwk.ability.fraction.FractionAbility: void onPostStart(ohos.utils.PacMap)>
<ohos.media.sessioncore.AVController: void <init>(ohos.app.Context,ohos.media.common.sessioncore.AVToken)>
<ohos.agp.utils.Matrix44: void setRotateAboutUnit(float,float,float,float)>
<java.nio.Buffer: int remaining()>
<java.nio.file.spi.FileSystemProvider: java.nio.channels.AsynchronousFileChannel newAsynchronousFileChannel(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute[])>
<java.sql.PreparedStatement: void setBinaryStream(int,java.io.InputStream)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>
<ohos.media.sessioncore.AVBrowser: ohos.utils.PacMap getOptions()>
<ohos.sensor.bean.SensorBase: float getUpperRange()>
<ohos.global.icu.text.DateTimePatternGenerator: ohos.global.icu.text.DateTimePatternGenerator getEmptyInstance()>
<ohos.system.OsHelper: void symbolLink(java.lang.String,java.lang.String)>
<ohos.global.icu.util.Calendar: int newerField(int,int)>
<java.text.FieldPosition: int getBeginIndex()>
<ohos.bundleactive.BundleActiveInfos: long queryFgAbilityAccessWholeMs()>
<ohos.agp.components.element.FrameAnimationElement: boolean isOneShot()>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: boolean await(long,java.util.concurrent.TimeUnit)>
<ohos.media.audio.AudioDeviceDescriptor: void setName(java.lang.String)>
<ohos.account.app.AppAccountAbility: boolean subscribeAccountEvent(ohos.account.app.IAppAccountSubscriber,java.util.List)>
<java.security.DomainLoadStoreParameter: java.net.URI getConfiguration()>
<java.lang.Boolean: boolean booleanValue()>
<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>
<java.util.Date: long UTC(int,int,int,int,int,int)>
<ohos.data.resultset.SharedBlock: long getLong(int,int)>
<ohos.net.NetCapabilities: boolean hasBearer(int)>
<java.nio.file.FileSystemException: java.lang.String getMessage()>
<ohos.sysappcomponents.calendar.entity.Events: void setSyncId(java.lang.String)>
<java.util.TreeMap: java.lang.Object lastKey()>
<ohos.agp.animation.Animator.LoopedListener: void onRepeat(ohos.agp.animation.Animator)>
<ohos.aafwk.ability.Ability: void setAbilitySliceAnimator(ohos.aafwk.ability.AbilitySliceAnimator)>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<ohos.global.icu.util.Freezable: boolean isFrozen()>
<ohos.agp.render.Path: void toggleInverseFillType()>
<ohos.agp.render.Texture.ColorType: int value()>
<java.lang.Math: double toDegrees(double)>
<ohos.aafwk.ability.Ability: ohos.aafwk.ability.ProviderFormInfo onCreateForm(ohos.aafwk.content.Intent)>
<java.lang.Long: long remainderUnsigned(long,long)>
<javax.lang.model.util.SimpleTypeVisitor8: void <init>()>
<ohos.utils.PlainArray: java.lang.Object clone()>
<ohos.app.Context: void displayUnlockMissionMessage()>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder decodedPath(java.lang.String)>
<ohos.global.resource.solidxml.Theme: ohos.global.resource.Resource getMediaValue(java.lang.String,ohos.global.resource.ResourceManager)>
<java.util.Set: boolean add(java.lang.Object)>
<java.time.zone.ZoneOffsetTransitionRule.TimeDefinition: java.time.LocalDateTime createDateTime(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneOffset)>
<ohos.global.icu.text.TimeZoneFormat.Style: ohos.global.icu.text.TimeZoneFormat.Style valueOf(java.lang.String)>
<ohos.event.notification.NotificationRequest: java.lang.String getGroupValue()>
<java.time.chrono.IsoEra: java.time.chrono.IsoEra of(int)>
<java.util.LinkedList: java.lang.Object element()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: boolean isSliceStackEmpty(ohos.aafwk.ability.Ability)>
<ohos.bluetooth.BluetoothHost: java.util.Optional getLocalName()>
<ohos.agp.components.Component: int getFocusBorderWidth()>
<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,int,int)>
<ohos.media.common.Format: void putIntValue(java.lang.String,int)>
<java.awt.font.NumericShaper: int hashCode()>
<java.time.Duration: java.time.Duration withSeconds(long)>
<ohos.nfc.tag.MifareUltralightTag: void writeOnePage(int,byte[])>
<ohos.utils.zson.ZSONWriter: void writeNull()>
<java.lang.StrictMath: double toDegrees(double)>
<ohos.agp.components.Rating: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.bluetooth.HandsFreeAudioGateway: ohos.bluetooth.HandsFreeAudioGateway getProfile(ohos.app.Context)>
<ohos.media.common.sessioncore.AVElementCallback: void onError(java.lang.String)>
<ohos.agp.components.SlideDrawer: boolean openSmoothly(ohos.agp.components.SlideDrawer.SlideDirection)>
<java.text.DateFormat.Field: int getCalendarField()>
<java.util.Spliterators.AbstractLongSpliterator: java.util.Spliterator.OfLong trySplit()>
<ohos.bundle.BundleInfo.ReqPermissionDetail: ohos.bundle.BundleInfo.ReqPermissionDetail.UsedScene getUsedScene()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates crossJoin(java.lang.Class)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder encodedAuthority(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glUseProgram(int)>
<ohos.global.icu.text.Bidi: void reorderVisually(byte[],int,java.lang.Object[],int,int)>
<ohos.global.icu.util.IslamicCalendar: void <init>(ohos.global.icu.util.TimeZone,ohos.global.icu.util.ULocale)>
<java.util.UUID: int compareTo(java.lang.Object)>
<java.util.regex.Matcher: int end()>
<java.nio.CharBuffer: java.lang.Appendable append(java.lang.CharSequence,int,int)>
<java.io.StreamTokenizer: void commentChar(int)>
<ohos.media.camera.device.CameraConfig.Builder: ohos.media.camera.device.CameraConfig.Builder addDeferredSurface(ohos.agp.graphics.Surface)>
<java.util.UUID: long timestamp()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: java.util.Optional startAbilitySync(ohos.aafwk.content.Intent,long)>
<ohos.net.http.SslError: java.lang.String getUrl()>
<java.util.zip.ZipError: void <init>(java.lang.String)>
<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.utils.Matrix: void setSinCos(float,float,float,float)>
<ohos.global.icu.text.TimeZoneFormat.TimeType: ohos.global.icu.text.TimeZoneFormat.TimeType valueOf(java.lang.String)>
<ohos.bluetooth.ble.GattDescriptor: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayKeyword(java.lang.String,ohos.global.icu.util.ULocale)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentNavigableMap: java.util.concurrent.ConcurrentNavigableMap descendingMap()>
<ohos.agp.components.Component: void setName(java.lang.String)>
<ohos.security.asset.AssetOperatorAbs: ohos.security.asset.AssetResult assetUpdate(ohos.aafwk.ability.Ability,ohos.aafwk.content.IntentParams)>
<java.io.ObjectInputStream: void readFully(byte[])>
<ohos.telephony.RadioInfoManager: int getCsRadioTech(int)>
<ohos.data.rdb.ValuesBucket: void putInteger(java.lang.String,java.lang.Integer)>
<javax.tools.StandardLocation: javax.tools.StandardLocation valueOf(java.lang.String)>
<java.util.WeakHashMap: java.util.Set keySet()>
<ohos.media.player.Player.MediaTimeInfo: ohos.media.player.Player.MediaTimeInfo createFromParcel(ohos.utils.Parcel)>
<ohos.agp.render.render3d.resources.MaterialDesc: float getReflectance()>
<ohos.agp.render.opengl.GLES30: void glBindRenderbuffer(int,int)>
<ohos.agp.utils.Matrix: boolean rectStaysRect()>
<ohos.agp.render.opengl.GLES32: void glGetSamplerParameterIiv(int,int,int[])>
<ohos.media.image.ImageSource.UpdateMode: int getValue()>
<javax.crypto.spec.RC2ParameterSpec: boolean equals(java.lang.Object)>
<java.nio.channels.FileLock: void <init>(java.nio.channels.FileChannel,long,long,boolean)>
<ohos.accessibility.ability.AccessibleAbility: ohos.rpc.IRemoteObject onConnect(ohos.aafwk.content.Intent)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThanOrEqualTo(java.lang.String,java.util.Calendar)>
<ohos.miscservices.pasteboard.PasteData.DataProperty: boolean isLocalOnly()>
<java.util.Arrays: void parallelSetAll(java.lang.Object[],java.util.function.IntFunction)>
<ohos.media.audio.SoundPlayer: boolean deleteSound(int)>
<ohos.media.sessioncore.AVController: void setAVPlaybackVolume(int,int)>
<ohos.ai.cv.text.TextLine: void setElements(java.util.List)>
<javax.net.ssl.SSLServerSocketFactory: void <init>()>
<ohos.global.icu.text.TimeZoneNames: java.lang.String getDisplayName(java.lang.String,ohos.global.icu.text.TimeZoneNames.NameType,long)>
<java.time.Duration: java.time.Duration withNanos(int)>
<ohos.media.camera.device.CameraAbility: java.lang.Object getPropertyValue(ohos.media.camera.params.PropertyKey.Key)>
<ohos.nfc.tag.NdefMessage: boolean equals(java.lang.Object)>
<java.io.ObjectInputStream.GetField: float get(java.lang.String,float)>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo.Builder requestPersisted(boolean)>
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>
<java.sql.ResultSet: void updateNClob(int,java.io.Reader)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat setSizeX(int)>
<ohos.utils.PacMap: java.util.ArrayList getIntegerList(java.lang.String)>
<java.util.AbstractList: int lastIndexOf(java.lang.Object)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenComposeAsync(java.util.function.Function,java.util.concurrent.Executor)>
<java.util.concurrent.LinkedBlockingDeque: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Comparator comparator()>
<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>
<ohos.aafwk.ability.MemoryInfo: int getOtherPss()>
<ohos.global.icu.util.Calendar: void setRepeatedWallTimeOption(int)>
<ohos.nfc.oma.Reader: boolean isSecureElementPresent()>
<java.time.Duration: java.time.Duration of(long,java.time.temporal.TemporalUnit)>
<ohos.global.icu.math.BigDecimal: void <init>(char[])>
<javax.tools.ForwardingFileObject: java.lang.CharSequence getCharContent(boolean)>
<ohos.agp.components.TableLayout: ohos.agp.components.ComponentContainer.LayoutConfig createLayoutConfig(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate date(java.time.temporal.TemporalAccessor)>
<ohos.global.icu.text.NumberFormat: void setMaximumIntegerDigits(int)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistEra getEra()>
<ohos.agp.colors.Color: void <init>(ohos.agp.colors.ColorSpec)>
<ohos.agp.utils.RectFloat.RotationEnum: int getValue()>
<java.time.chrono.MinguoDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<ohos.agp.render.PdfGenerator: void writeTo(java.io.OutputStream)>
<javax.crypto.CipherSpi: void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>
<ohos.agp.components.webengine.WebView: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.event.notification.IAdvancedNotificationManager: java.util.Set getActiveNotifications(java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glDispatchCompute(int,int,int)>
<ohos.media.codec.CodecDescription: boolean isAudio()>
<java.util.Spliterator.OfInt: void forEachRemaining(java.util.function.IntConsumer)>
<javax.tools.JavaFileObject.Kind: javax.tools.JavaFileObject.Kind[] values()>
<java.security.Permissions: void add(java.security.Permission)>
<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeP()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setStatusBarText(java.lang.String)>
<javax.sql.RowSet: void setBytes(java.lang.String,byte[])>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notBetween(java.lang.String,int,int)>
<ohos.global.icu.text.DecimalFormat: int getSecondaryGroupingSize()>
<java.util.Collections: java.lang.Object min(java.util.Collection,java.util.Comparator)>
<ohos.agp.components.PageSlider: ohos.agp.components.PageSliderProvider getProvider()>
<ohos.ai.tts.TtsClient: boolean setParams(ohos.ai.tts.TtsParams)>
<java.util.List: boolean addAll(int,java.util.Collection)>
<java.security.Signer: void <init>()>
<java.util.NavigableMap: java.util.Map.Entry lowerEntry(java.lang.Object)>
<ohos.agp.components.ComponentContainer.LayoutConfig: void setMarginLeft(int)>
<java.time.chrono.HijrahChronology: java.lang.String getId()>
<ohos.agp.components.Text: void setAroundElements(ohos.agp.components.element.Element,ohos.agp.components.element.Element,ohos.agp.components.element.Element,ohos.agp.components.element.Element)>
<java.nio.channels.FileLock: long position()>
<ohos.event.notification.NotificationRequest: boolean isProgressIndeterminate()>
<javax.net.ssl.SSLServerSocket: boolean getEnableSessionCreation()>
<java.lang.StrictMath: double cbrt(double)>
<java.util.concurrent.CopyOnWriteArraySet: boolean contains(java.lang.Object)>
<ohos.global.icu.lang.UCharacter: boolean isBMP(int)>
<java.net.SocketAddress: void <init>()>
<javax.security.cert.X509Certificate: int getVersion()>
<ohos.agp.components.Component: void setCenterZoomFactor(float,float)>
<ohos.agp.components.PageFlipper: void addComponent(ohos.agp.components.Component)>
<ohos.agp.components.TextField: void setCursorChangedListener(ohos.agp.components.TextField.CursorChangedListener)>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setDistrict(java.lang.String)>
<java.sql.SQLInput: int readInt()>
<ohos.agp.render.Region: void <init>()>
<java.nio.file.Path: java.net.URI toUri()>
<java.util.concurrent.ThreadPoolExecutor: int getLargestPoolSize()>
<ohos.wifi.WifiLinkedInfo: java.lang.String toString()>
<java.io.PushbackReader: int read()>
<ohos.sensor.agent.CategoryBodyAgent: java.util.List getAllSensors()>
<java.sql.Connection: void setCatalog(java.lang.String)>
<java.lang.Character: boolean isWhitespace(char)>
<java.nio.file.Path: boolean equals(java.lang.Object)>
<ohos.net.NetManager: ohos.net.NetCapabilities getNetCapabilities(ohos.net.NetHandle)>
<ohos.media.photokit.support.FetchResult: int getCount()>
<java.io.ObjectInputStream.GetField: char get(java.lang.String,char)>
<ohos.bluetooth.BluetoothHost: boolean isValidBluetoothAddr(java.lang.String)>
<java.util.Map: boolean equals(java.lang.Object)>
<ohos.agp.animation.AnimatorScatter: ohos.agp.animation.AnimatorScatter getInstance(ohos.app.Context)>
<ohos.data.rdb.RdbIoErrException: void <init>(java.lang.String)>
<ohos.utils.PersistablePacMap: double[] getDoubleValueArray(java.lang.String)>
<ohos.bluetooth.BluetoothDeviceClass: java.lang.String toString()>
<ohos.media.audio.AudioRenderer.SpeedPara.Builder: ohos.media.audio.AudioRenderer.SpeedPara.Builder speed(float)>
<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>
<ohos.media.recorder.Recorder.IRecorderListener: void onError(int,int)>
<java.time.zone.ZoneOffsetTransition: boolean isOverlap()>
<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>
<ohos.global.icu.text.DateFormatSymbols: void setMonths(java.lang.String[],int,int)>
<ohos.net.NetSpecifier.Builder: void <init>()>
<ohos.agp.window.dialog.IDialog.KeyboardCallback: boolean clickKey(ohos.agp.window.dialog.IDialog,ohos.multimodalinput.event.KeyEvent)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object pollFirst()>
<ohos.global.icu.text.Collator: int[] getReorderCodes()>
<ohos.agp.window.dialog.IDialog: void remove()>
<ohos.utils.geo.RectFloat: void translateCenterTo(float,float)>
<javax.lang.model.util.SimpleTypeVisitor6: java.lang.Object defaultAction(javax.lang.model.type.TypeMirror,java.lang.Object)>
<ohos.media.photokit.metadata.AVThumbnailUtils: ohos.media.image.PixelMap createVideoThumbnail(java.io.File,ohos.media.image.common.Size)>
<java.lang.IncompatibleClassChangeError: void <init>()>
<java.lang.reflect.Field: void setShort(java.lang.Object,short)>
<java.security.CodeSource: boolean implies(java.security.CodeSource)>
<ohos.miscservices.timeutility.Timer.OneShotTimer: ohos.miscservices.timeutility.Timer.OneShotTimer getTimer(ohos.app.Context,ohos.miscservices.timeutility.Timer.TimerIntent)>
<ohos.sysappcomponents.contact.entity.Holder: java.lang.String getDisplayName()>
<ohos.data.orm.Blob: java.io.InputStream getBinaryStream(long,long)>
<ohos.media.audio.AudioStreamInfo.AudioStreamFlag: int getValue()>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat copy(ohos.agp.utils.DimensFloat)>
<ohos.javax.xml.stream.XMLStreamReader: boolean hasText()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,ohos.utils.Sequenceable[])>
<ohos.agp.components.PageSliderProvider: void destroyPageFromContainer(ohos.agp.components.ComponentContainer,int,java.lang.Object)>
<ohos.agp.render.Paint: ohos.agp.utils.Color[] getGradientShaderColor()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getTimeInstance(ohos.global.icu.util.Calendar,int)>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo.Builder requestBatteryStatus(int)>
<java.util.Hashtable: java.util.Enumeration keys()>
<ohos.agp.colors.ColorSpec: ohos.agp.colors.ColorSpec[] values()>
<ohos.global.icu.text.CaseMap: ohos.global.icu.text.CaseMap.Fold fold()>
<ohos.agp.components.DragInfo: void <init>(ohos.agp.utils.Point,ohos.agp.utils.Point,ohos.agp.utils.Point,double,double,double,double)>
<ohos.agp.render.Canvas: void drawCircle(float,float,float,ohos.agp.render.Paint,ohos.agp.utils.Color)>
<ohos.agp.render.Paint: float getDashPathEffectPhase()>
<ohos.javax.xml.stream.XMLInputFactory: void setEventAllocator(ohos.javax.xml.stream.util.XMLEventAllocator)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query orderByAsc(java.lang.String)>
<ohos.agp.render.render3d.components.CameraComponent: ohos.agp.render.render3d.math.Matrix4x4 getCustomProjection()>
<ohos.media.image.common.ImageFormat.ComponentType: ohos.media.image.common.ImageFormat.ComponentType valueOf(java.lang.String)>
<ohos.media.common.sessioncore.AVSessionCallback: void onPrepareToPlayByMediaId(java.lang.String,ohos.utils.PacMap)>
<ohos.data.search.schema.EmailItem: ohos.data.search.schema.EmailItem setBccEmail(java.lang.String)>
<ohos.aafwk.content.Intent: ohos.utils.Sequenceable[] getParcelableArrayParam(java.lang.String)>
<java.util.zip.Inflater: int getTotalOut()>
<java.sql.CallableStatement: java.sql.Date getDate(java.lang.String)>
<ohos.agp.render.Texture: void <init>(int,int,ohos.agp.render.Texture.ColorType,ohos.agp.render.Texture.AlphaType)>
<ohos.global.icu.util.Measure: void <init>(java.lang.Number,ohos.global.icu.util.MeasureUnit)>
<java.util.stream.IntStream: java.util.stream.IntStream peek(java.util.function.IntConsumer)>
<java.lang.ClassLoader: void resolveClass(java.lang.Class)>
<java.lang.Math: double rint(double)>
<ohos.data.DatabaseHelper: ohos.data.preferences.Preferences getPreferences(java.lang.String)>
<java.time.chrono.ChronoLocalDate: boolean isBefore(java.time.chrono.ChronoLocalDate)>
<java.util.PriorityQueue: void <init>(java.util.Collection)>
<ohos.agp.components.Switch: void setThumbElement(ohos.agp.components.element.Element)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Set keySet()>
<ohos.sysappcomponents.contact.entity.Contact: void addRelation(ohos.sysappcomponents.contact.entity.Relation)>
<ohos.media.camera.device.FrameConfig: java.util.List getKeys()>
<java.util.Dictionary: java.util.Enumeration elements()>
<java.util.concurrent.LinkedTransferQueue: int getWaitingConsumerCount()>
<java.util.concurrent.Semaphore: void acquireUninterruptibly()>
<ohos.utils.LightweightMap: java.lang.Object get(java.lang.Object)>
<java.security.Signature: java.lang.Object getParameter(java.lang.String)>
<java.time.YearMonth: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<ohos.ai.cv.text.TextBlock: ohos.ai.cv.common.BoundingBox getBoundingBox()>
<ohos.global.icu.lang.UCharacter: int offsetByCodePoints(char[],int,int,int,int)>
<ohos.agp.components.ProgressBar: int getMin()>
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.ThreadFactory getThreadFactory()>
<javax.tools.ForwardingFileObject: java.lang.String getName()>
<ohos.bluetooth.BluetoothRemoteDevice: boolean unmarshalling(ohos.utils.Parcel)>
<java.security.KeyStore.Entry: java.util.Set getAttributes()>
<ohos.agp.components.ScrollHelper: float getFriction()>
<java.security.Provider: void putService(java.security.Provider.Service)>
<java.lang.Class: java.lang.Object[] getEnumConstants()>
<ohos.agp.components.SearchBar: void setQueryFocusChangeListener(ohos.agp.components.Component.FocusChangedListener)>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer wrap(double[],int,int)>
<ohos.global.icu.text.UCharacterIterator: int moveCodePointIndex(int)>
<ohos.data.orm.OrmPredicates: void clear()>
<java.text.CollationElementIterator: int next()>
<ohos.utils.zson.ZSONObject: java.util.Set entrySet()>
<java.util.Locale: java.lang.String getLanguage()>
<javax.sql.RowSet: void setBigDecimal(int,java.math.BigDecimal)>
<java.io.PipedReader: void <init>(java.io.PipedWriter,int)>
<java.sql.SQLException: void setNextException(java.sql.SQLException)>
<ohos.aafwk.ability.DataAbilityHelper: ohos.aafwk.ability.DataAbilityHelper creator(ohos.app.Context,ohos.utils.net.Uri)>
<java.util.Properties: java.util.Enumeration propertyNames()>
<ohos.data.usage.StatVfs: void <init>(java.lang.String)>
<ohos.utils.zson.ZSONArray: int lastIndexOf(java.lang.Object)>
<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>
<ohos.agp.colors.RgbColor: ohos.agp.colors.RgbColor fromArgbInt(int)>
<java.io.PrintWriter: void <init>(java.lang.String,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<ohos.agp.components.ToggleButton: void setStateOffText(java.lang.String)>
<java.nio.file.attribute.AclFileAttributeView: java.lang.String name()>
<java.security.Timestamp: java.security.cert.CertPath getSignerCertPath()>
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
<java.util.Scanner: boolean hasNextInt(int)>
<java.security.cert.X509CRL: byte[] getSigAlgParams()>
<ohos.agp.components.TimePicker: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.data.preferences.Preferences: float getFloat(java.lang.String,float)>
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
<java.util.Date: void <init>(int,int,int,int,int)>
<ohos.global.icu.text.SimpleDateFormat: java.lang.String zeroPaddingNumber(long,int,int)>
<ohos.aafwk.ability.FormBindingData: void removeImageData(java.lang.String)>
<ohos.agp.render.Arc: void <init>()>
<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<java.nio.CharBuffer: boolean isDirect()>
<ohos.global.icu.text.DecimalFormatSymbols: char getDecimalSeparator()>
<javax.tools.JavaFileObject: boolean isNameCompatible(java.lang.String,javax.tools.JavaFileObject.Kind)>
<ohos.utils.PlainArray: void <init>(int)>
<ohos.dcall.DistributedCallManager: boolean hasVoiceCapability()>
<java.io.ObjectOutputStream.PutField: void put(java.lang.String,double)>
<ohos.event.notification.IAdvancedNotificationManager: int getBundleImportance(java.lang.String)>
<ohos.global.icu.math.BigDecimal: void <init>(double)>
<ohos.event.commonevent.CommonEventSubscribeInfo: java.lang.String getDeviceId()>
<java.lang.Object: java.lang.Class getClass()>
<java.util.concurrent.locks.Lock: void lockInterruptibly()>
<ohos.global.resource.Entry.Type: void <clinit>()>
<ohos.global.icu.util.Calendar: java.lang.String getDisplayName(ohos.global.icu.util.ULocale)>
<java.io.ObjectInput: void close()>
<ohos.agp.render.render3d.resources.MaterialDesc: void setAmbientOcclusion(ohos.agp.render.render3d.resources.GpuResourceHandle)>
<ohos.telephony.ISendShortMessageCallback: void sendShortMessageResult(int,java.lang.String,boolean)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object searchValues(long,java.util.function.Function)>
<java.lang.ProcessBuilder.Redirect: void <clinit>()>
<ohos.agp.utils.Matrix: boolean preScale(float,float)>
<java.security.Permissions: boolean implies(java.security.Permission)>
<javax.crypto.MacSpi: void engineUpdate(java.nio.ByteBuffer)>
<java.net.UnknownServiceException: void <init>()>
<java.text.RuleBasedCollator: java.lang.String getRules()>
<ohos.utils.Parcel: boolean writeBooleanArray(boolean[])>
<java.util.StringJoiner: java.lang.String toString()>
<java.lang.ReflectiveOperationException: void <init>(java.lang.String,java.lang.Throwable)>
<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily valueOf(java.lang.String)>
<ohos.javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>
<ohos.global.icu.util.ULocale: java.lang.String toLanguageTag()>
<ohos.global.icu.text.DecimalFormat: void setCurrencyPluralInfo(ohos.global.icu.text.CurrencyPluralInfo)>
<java.io.PrintStream: void print(long)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage acceptEither(java.util.concurrent.CompletionStage,java.util.function.Consumer)>
<java.lang.String: int lastIndexOf(java.lang.String)>
<ohos.media.audio.AudioStreamInfo.StreamUsage: ohos.media.audio.AudioStreamInfo.StreamUsage valueOf(java.lang.String)>
<ohos.utils.LruBuffer: int capacity()>
<ohos.bluetooth.ble.BlePeripheralManager: void clearServices()>
<ohos.data.async.RdbStoreAsyncHandler: void addQueryJob(ohos.data.async.JobParams,java.lang.String[],ohos.data.rdb.RdbPredicates,ohos.data.async.QueryCallback)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistChronology getChronology()>
<java.time.chrono.Chronology: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>
<java.util.IdentityHashMap: void <init>(int)>
<java.util.TreeMap: void clear()>
<java.net.SocketTimeoutException: void <init>()>
<java.lang.Byte: java.lang.String toString()>
<javax.security.auth.callback.CallbackHandler: void handle(javax.security.auth.callback.Callback[])>
<ohos.media.player.Player: ohos.media.player.Player.AudioHandler getAudioHandler()>
<java.net.CookieManager: void <init>()>
<java.lang.reflect.Constructor: java.lang.String getName()>
<java.io.DataOutputStream: void writeBytes(java.lang.String)>
<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>
<java.math.BigInteger: java.lang.String toString(int)>
<ohos.media.audio.AudioStreamInfo.StreamType: void <clinit>()>
<java.sql.ResultSet: void moveToInsertRow()>
<java.util.Observable: void notifyObservers()>
<ohos.agp.animation.AnimatorValue: void setDuration(long)>
<ohos.global.icu.text.Bidi: ohos.global.icu.text.BidiClassifier getCustomClassifier()>
<ohos.utils.Parcel: boolean writeByteArray(byte[])>
<ohos.aafwk.ability.LifecycleObserver: void onActive()>
<java.nio.file.Files: java.util.stream.Stream walk(java.nio.file.Path,java.nio.file.FileVisitOption[])>
<java.util.FormatFlagsConversionMismatchException: java.lang.String getFlags()>
<ohos.data.search.model.Recommendation: java.lang.String getValue()>
<ohos.media.player.Player: boolean setVideoScaleType(int)>
<java.time.LocalDateTime: int getMinute()>
<ohos.utils.PlainLongArray: int indexOfValue(long)>
<ohos.agp.render.Path.AddPathMode: int value()>
<ohos.utils.Ashmem: boolean mapReadOnlyAShmem()>
<java.time.chrono.ChronoZonedDateTime: boolean isSupported(java.time.temporal.TemporalUnit)>
<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>
<ohos.media.audio.SoundPlayer: boolean createSound(ohos.media.audio.AudioStreamInfo.StreamType,float)>
<ohos.utils.zson.ZSONReader: boolean readBoolean()>
<ohos.agp.utils.Matrix44: double determinant()>
<ohos.agp.components.SearchBar: void setSearchHint(java.lang.String)>
<ohos.media.common.sessioncore.AVBrowserResult: void sendAVElement(ohos.media.common.sessioncore.AVElement)>
<javax.sql.PooledConnection: void close()>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.util.XMLEventAllocator getEventAllocator()>
<java.util.Map: boolean containsValue(java.lang.Object)>
<java.util.SimpleTimeZone: void setEndRule(int,int,int,int,boolean)>
<java.time.Duration: java.time.Duration plusMinutes(long)>
<java.util.prefs.NodeChangeEvent: java.util.prefs.Preferences getChild()>
<java.io.PipedReader: void <init>()>
<java.io.PrintStream: void println(java.lang.String)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setTapDismissed(boolean)>
<java.lang.Character.UnicodeScript: java.lang.Character.UnicodeScript of(int)>
<ohos.rpc.MessageOption: void <init>(int)>
<java.time.Year: java.time.LocalDate atMonthDay(java.time.MonthDay)>
<ohos.data.resultset.CombinedResultSet: boolean goToRow(int)>
<ohos.agp.render.opengl.GLES32: void glGetnUniformiv(int,int,int,int[])>
<ohos.utils.Parcel: boolean writeSequenceableMap(java.util.Map)>
<java.util.logging.Logger: void exiting(java.lang.String,java.lang.String,java.lang.Object)>
<ohos.ace.ability.AceAbility: boolean onKeyDown(int,ohos.multimodalinput.event.KeyEvent)>
<ohos.utils.PersistablePacMap: void <init>()>
<ohos.agp.window.dialog.BaseDialog: ohos.agp.window.dialog.BaseDialog setDuration(int)>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat setSizeX(float)>
<ohos.global.icu.text.UnicodeSet: java.lang.StringBuffer _generatePattern(java.lang.StringBuffer,boolean,boolean)>
<ohos.bundle.LauncherShortcutInfo: java.lang.String getShortcutId()>
<java.time.YearMonth: java.time.YearMonth minusYears(long)>
<java.util.MissingResourceException: java.lang.String getClassName()>
<ohos.agp.render.Canvas.ClipOp: ohos.agp.render.Canvas.ClipOp[] values()>
<ohos.utils.PlainBooleanArray: int locate(int)>
<ohos.backgroundtaskmgr.BackgroundTaskManager: ohos.backgroundtaskmgr.DelaySuspendInfo requestSuspendDelay(java.lang.String,ohos.backgroundtaskmgr.ExpiredCallback)>
<ohos.global.icu.text.DateFormatSymbols: void setEras(java.lang.String[])>
<ohos.data.distributed.device.DeviceInfo: java.lang.String getName()>
<ohos.miscservices.download.DownloadSession: boolean addListener(ohos.miscservices.download.IDownloadListener)>
<ohos.utils.geo.DimensFloat: float getSizeY()>
<ohos.utils.geo.DimensFloat: float[] getValueToFloatArray()>
<java.io.File: void <init>(java.net.URI)>
<java.sql.DatabaseMetaData: boolean supportsSubqueriesInIns()>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.Future submit(java.lang.Runnable)>
<java.sql.SQLDataException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<ohos.bundle.LauncherShortcutInfo: java.lang.String getLabel()>
<ohos.utils.PlainIntArray: void clear()>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder directory(java.io.File)>
<java.lang.System: java.nio.channels.Channel inheritedChannel()>
<ohos.multimodalinput.event.MultimodalEvent: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.render.render3d.RenderLoop: void cancelAllTasks()>
<java.util.concurrent.ConcurrentHashMap.KeySetView: java.lang.Object[] toArray()>
<ohos.agp.render.opengl.GLES1X: void glLightModelfv(int,float[])>
<ohos.media.camera.device.Camera: int triggerSingleCapture(ohos.media.camera.device.FrameConfig)>
<ohos.utils.BasePacMap: void remove(java.lang.String)>
<ohos.agp.components.LayoutScatter: ohos.agp.components.Component createComponentElement(java.lang.String,ohos.agp.components.AttrSet)>
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLEngine engineCreateSSLEngine()>
<java.lang.Integer: int rotateLeft(int,int)>
<java.util.concurrent.ConcurrentHashMap: void forEachKey(long,java.util.function.Function,java.util.function.Consumer)>
<ohos.media.image.ExifUtils: ohos.utils.Pair getLatLong(ohos.media.image.ImageSource)>
<java.io.InputStream: int available()>
<ohos.global.icu.text.DateFormatSymbols: void setYearNames(java.lang.String[],int,int)>
<ohos.media.audio.AudioManager: void registerAudioCapturerCallback(ohos.media.audio.AudioCapturerCallback)>
<ohos.utils.system.SystemCapability.Notification: void <init>()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>
<ohos.miscservices.inputmethod.EditorAttribute: int getInputOption()>
<java.nio.charset.Charset: java.lang.String toString()>
<ohos.app.Context: void setTransitionAnimation(int,int)>
<java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom)>
<java.util.concurrent.CompletableFuture: boolean completeExceptionally(java.lang.Throwable)>
<ohos.bluetooth.ble.GattDescriptor: byte[] getValue()>
<ohos.event.notification.IAdvancedNotificationManager: void publishNotificationAsBundle(java.lang.String,java.lang.String,ohos.event.notification.NotificationRequest)>
<ohos.security.permission.PermissionGroupDef: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.render.Canvas: void drawPolylineShadow(float[],ohos.agp.utils.Point,ohos.agp.utils.Point,ohos.agp.render.Paint)>
<java.security.KeyFactorySpi: java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)>
<java.util.prefs.Preferences: void putByteArray(java.lang.String,byte[])>
<java.lang.invoke.MethodHandleInfo: java.lang.Class getDeclaringClass()>
<java.sql.DatabaseMetaData: boolean supportsPositionedUpdate()>
<ohos.app.AbilityContext: void switchToCredentialEncryptedStorageContext()>
<ohos.agp.render.render3d.Engine: void renderFrame(ohos.agp.render.render3d.Engine.RenderNodeGraphType)>
<java.util.concurrent.CountedCompleter: void onCompletion(java.util.concurrent.CountedCompleter)>
<java.lang.ref.Reference: boolean enqueue()>
<ohos.media.audio.AudioDeviceDescriptor: boolean equals(java.lang.Object)>
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeQ()>
<java.nio.file.Path: int hashCode()>
<ohos.hiviewdfx.FaultLogger.FaultLogInfo: int getUid()>
<ohos.bundle.OnPermissionChangedCallback: boolean onRemoteRequest(int,ohos.rpc.MessageParcel,ohos.rpc.MessageParcel,ohos.rpc.MessageOption)>
<java.net.HttpRetryException: java.lang.String getLocation()>
<java.time.YearMonth: int hashCode()>
<ohos.aafwk.ability.AbilityPackage: void onConfigurationUpdated(ohos.global.configuration.Configuration)>
<ohos.javax.xml.namespace.QName: java.lang.String getPrefix()>
<ohos.data.rdb.Statement: java.lang.String executeAndGetString()>
<ohos.interwork.eventhandler.InnerEventUtils: int getArg1(ohos.eventhandler.InnerEvent)>
<ohos.nfc.tag.NdefTag: java.lang.String getTagType()>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinTask submit(java.lang.Runnable)>
<javax.tools.ForwardingJavaFileManager: javax.tools.JavaFileObject getJavaFileForOutput(javax.tools.JavaFileManager.Location,java.lang.String,javax.tools.JavaFileObject.Kind,javax.tools.FileObject)>
<ohos.agp.render.opengl.EGLObjectHandle: boolean equals(java.lang.Object)>
<ohos.data.rdb.RdbException: void <init>()>
<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>
<java.util.jar.Pack200: java.util.jar.Pack200.Packer newPacker()>
<ohos.agp.render.opengl.GLES31: void glVertexAttribBinding(int,int)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setCustomBigView(ohos.agp.components.ComponentProvider)>
<ohos.media.audio.AudioManager: boolean setVolume(ohos.media.audio.AudioManager.AudioVolumeType,int,int)>
<ohos.agp.components.ComponentTreeObserver: void addGlobalFocusUpdatedListener(ohos.agp.components.ComponentTreeObserver.GlobalFocusUpdatedListener)>
<ohos.data.search.SearchResult: ohos.data.search.SearchResult[] values()>
<ohos.rpc.MessageParcel: ohos.rpc.MessageParcel obtain(long)>
<ohos.utils.PlainIntArray: int size()>
<java.nio.CharBuffer: boolean hasArray()>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.AlphabeticIndex addLabels(ohos.global.icu.text.UnicodeSet)>
<ohos.agp.components.Component: ohos.agp.components.Component.RotationEventListener getRotationEventListener()>
<java.util.concurrent.BlockingQueue: java.lang.Object take()>
<ohos.media.audio.AudioManager: void setCallState(ohos.media.audio.AudioManager.CallState)>
<ohos.utils.Scope: boolean contains(java.lang.Comparable)>
<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>
<java.util.concurrent.locks.ReentrantLock: java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)>
<java.io.FileWriter: void <init>(java.io.FileDescriptor)>
<ohos.media.codec.Codec: boolean flush()>
<java.security.acl.NotOwnerException: void <init>()>
<ohos.data.resultset.SharedBlock: void finalize()>
<java.time.ZonedDateTime: java.time.ZonedDateTime withNano(int)>
<ohos.agp.render.Path: boolean isFinite()>
<ohos.eventhandler.EventRunner: void dump(ohos.eventhandler.Dumper)>
<ohos.utils.Pair: boolean equals(java.lang.Object)>
<java.lang.Character: int toLowerCase(int)>
<ohos.data.rdb.RawRdbPredicates: void setWhereClause(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: boolean add(java.lang.Object)>
<ohos.event.notification.NotificationSlot: void setName(java.lang.String)>
<ohos.global.icu.text.DecimalFormat: void setRoundingIncrement(java.math.BigDecimal)>
<java.util.Scanner: void <init>(java.nio.file.Path,java.lang.String)>
<ohos.agp.components.SearchBar: void setFoldListener(ohos.agp.components.SearchBar.FoldListener)>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 divide(ohos.agp.render.render3d.math.Vector2,ohos.agp.render.render3d.math.Vector2)>
<ohos.miscservices.pasteboard.SystemPasteboard: void removePasteDataChangedListener(ohos.miscservices.pasteboard.IPasteDataChangedListener)>
<javax.crypto.MacSpi: byte[] engineDoFinal()>
<java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<ohos.agp.components.Text: ohos.agp.components.element.Element getBubbleElement()>
<java.util.concurrent.BrokenBarrierException: void <init>()>
<ohos.bundle.IBundleManager: ohos.bundle.BundleInfo getBundleInfo(java.lang.String,int)>
<java.time.LocalTime: int toSecondOfDay()>
<java.util.Calendar: boolean equals(java.lang.Object)>
<javax.lang.model.util.ElementScanner6: java.lang.Object visitVariable(javax.lang.model.element.VariableElement,java.lang.Object)>
<ohos.media.common.VideoProperty: int getRecorderVideoEncoder()>
<ohos.ai.cv.common.BoundingBox: int getTop()>
<ohos.os.ProcessManager: void setThreadPriority(int,int)>
<java.net.DatagramPacket: void setLength(int)>
<java.nio.file.FileSystem: java.lang.Iterable getRootDirectories()>
<java.util.logging.Level: java.lang.String toString()>
<java.util.concurrent.Semaphore: void acquire()>
<ohos.agp.components.Attr: java.lang.String getStringValue()>
<ohos.media.player.Player.MediaTimedMetaData: void <init>()>
<ohos.org.xml.sax.SAXException: java.lang.String toString()>
<ohos.data.distributed.common.Value: java.lang.String getString()>
<java.text.NumberFormat: void setMaximumIntegerDigits(int)>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object removeLast()>
<java.io.ByteArrayInputStream: void close()>
<ohos.agp.components.TabList: int getTabTextAlignment()>
<ohos.agp.render.render3d.impl.AgpEngineFactory: java.util.Optional createEngine()>
<ohos.bluetooth.ble.BleAdvertiseData.Builder: ohos.bluetooth.ble.BleAdvertiseData.Builder addManufacturerData(int,byte[])>
<java.util.logging.LogRecord: void setMessage(java.lang.String)>
<ohos.media.camera.params.FaceLandmark: ohos.agp.utils.Point getPosition()>
<ohos.global.i18n.utils.LocalesFallback: ohos.global.i18n.utils.LocalesFallback getInstance()>
<ohos.agp.render.opengl.GLES20: void glGetProgramiv(int,int,int[])>
<ohos.sensor.agent.CategoryMotionAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryMotionDataCallback,ohos.sensor.bean.CategoryMotion,long,long)>
<java.util.concurrent.Semaphore: int availablePermits()>
<ohos.global.icu.text.PluralFormat: void <init>(ohos.global.icu.util.ULocale,ohos.global.icu.text.PluralRules.PluralType)>
<ohos.global.icu.text.TimeZoneFormat.Style: ohos.global.icu.text.TimeZoneFormat.Style[] values()>
<java.lang.Float: void <init>(float)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.data.search.model.SearchableEntity: java.lang.String getVersionName()>
<ohos.miscservices.download.DownloadConfig.Builder: ohos.miscservices.download.DownloadConfig.Builder enableMetered(boolean)>
<java.util.Optional: java.util.Optional of(java.lang.Object)>
<ohos.javax.xml.validation.Validator: void setFeature(java.lang.String,boolean)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThan(java.lang.String,java.util.Date)>
<ohos.ai.cv.common.BoundingBox: void setLeft(int)>
<ohos.wifi.p2p.WifiP2pGroup: boolean isGroupOwner()>
<ohos.wifi.p2p.WifiP2pCallback: void eventP2pDevicesList(java.util.List)>
<ohos.agp.components.element.ElementContainer: ohos.agp.components.element.Element getCurrentElement()>
<java.security.cert.CertPathBuilder: java.lang.String getAlgorithm()>
<ohos.agp.colors.HslColor: int hashCode()>
<ohos.global.icu.text.DecimalFormat: void setGroupingUsed(boolean)>
<ohos.media.audio.AudioRenderer: boolean duckVolume()>
<ohos.agp.components.element.StateElement: int getStateCount()>
<java.util.concurrent.atomic.AtomicInteger: int accumulateAndGet(int,java.util.function.IntBinaryOperator)>
<java.util.concurrent.DelayQueue: java.lang.Object[] toArray(java.lang.Object[])>
<java.lang.Short: long toUnsignedLong(short)>
<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>
<java.time.chrono.ChronoLocalDateTime: java.lang.String format(java.time.format.DateTimeFormatter)>
<ohos.agp.render.opengl.GLES30: void glGetIntegerIndexv(int,int,java.nio.IntBuffer)>
<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>
<java.sql.DatabaseMetaData: java.sql.ResultSet getProcedures(java.lang.String,java.lang.String,java.lang.String)>
<java.time.zone.ZoneOffsetTransitionRule.TimeDefinition: void <clinit>()>
<ohos.agp.utils.Color: void <init>(int)>
<ohos.global.icu.text.DateIntervalInfo.PatternInfo: java.lang.String getFirstPart()>
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet remove(int,int)>
<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>
<java.io.FilterInputStream: int read(byte[])>
<java.net.DatagramSocketImpl: void setTTL(byte)>
<ohos.accessibility.ability.SoftKeyBoardController: boolean deleteListener(ohos.accessibility.ability.SoftKeyBoardListener)>
<java.time.chrono.ChronoLocalDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>
<ohos.bundle.ElementName: java.lang.String getDeviceId()>
<java.sql.DatabaseMetaData: boolean othersUpdatesAreVisible(int)>
<ohos.utils.geo.Rect: void translateCenterTo(int,int)>
<java.security.cert.TrustAnchor: void <init>(javax.security.auth.x500.X500Principal,java.security.PublicKey,byte[])>
<ohos.agp.animation.AnimatorProperty: ohos.agp.animation.AnimatorProperty setTarget(ohos.agp.components.Component)>
<ohos.agp.render.opengl.GLES30: void glSamplerParameteriv(int,int,int[])>
<java.lang.Long: int numberOfLeadingZeros(long)>
<ohos.utils.zson.ZSONArray: void <init>(int)>
<ohos.agp.components.Text.TextObserver: void onTextUpdated(java.lang.String,int,int,int)>
<ohos.agp.database.DataSetSubscriber: void <init>()>
<ohos.interwork.utils.PacMapEx: void putAll(java.util.Map)>
<ohos.data.distributed.common.SubscribeType: ohos.data.distributed.common.SubscribeType[] values()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()>
<ohos.global.icu.util.ChineseCalendar: int handleGetMonthLength(int,int)>
<java.util.stream.Collectors: java.util.stream.Collector mapping(java.util.function.Function,java.util.stream.Collector)>
<java.util.SplittableRandom: java.util.stream.IntStream ints(int,int)>
<javax.lang.model.util.AbstractTypeVisitor6: java.lang.Object visit(javax.lang.model.type.TypeMirror,java.lang.Object)>
<java.time.LocalDate: boolean isEqual(java.time.chrono.ChronoLocalDate)>
<java.time.MonthDay: boolean isBefore(java.time.MonthDay)>
<java.nio.channels.Pipe: void <init>()>
<ohos.utils.net.UrlQueryFilter: void addParams(ohos.utils.Pair)>
<ohos.data.resultset.ResultSetWrapper: void registerObserver(ohos.data.rdb.DataObserver)>
<java.util.List: boolean add(java.lang.Object)>
<ohos.sensor.agent.CategoryBodyAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryBodyDataCallback,ohos.sensor.bean.CategoryBody,int)>
<java.lang.ReflectiveOperationException: void <init>()>
<ohos.nfc.tag.NdefMessage: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.zip.CheckedOutputStream: void write(int)>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLSession getSession()>
<java.lang.Float: java.lang.String toHexString(float)>
<ohos.data.rdb.RdbFullException: void <init>(java.lang.String)>
<java.net.InetAddress: boolean isReachable(int)>
<ohos.hiviewdfx.Debug: int getProcessPss(ohos.hiviewdfx.Debug.MemType)>
<java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock: void lock()>
<java.util.Spliterators: java.util.Spliterator.OfLong spliteratorUnknownSize(java.util.PrimitiveIterator.OfLong,int)>
<ohos.agp.render.ThreeDimView: void rotateZ(float)>
<java.util.Random: void <init>(long)>
<java.util.Vector: boolean retainAll(java.util.Collection)>
<ohos.media.tubecore.AVTube.PlayMode: ohos.media.tubecore.AVTube.PlayMode valueOf(java.lang.String)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object[] toArray()>
<ohos.global.icu.text.NumberingSystem: ohos.global.icu.text.NumberingSystem getInstanceByName(java.lang.String)>
<ohos.media.image.common.ScaleMode: ohos.media.image.common.ScaleMode[] values()>
<java.sql.SQLXML: void free()>
<ohos.agp.components.Picker: ohos.agp.text.Font getNormalTextFont()>
<java.util.concurrent.CopyOnWriteArrayList: void sort(java.util.Comparator)>
<ohos.agp.components.SlideDrawer.LayoutConfig: void <init>(ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.lang.NullPointerException: void <init>()>
<java.time.format.ResolverStyle: java.time.format.ResolverStyle valueOf(java.lang.String)>
<ohos.agp.render.render3d.math.Vector4: float getLength()>
<ohos.event.notification.NotificationHelper: int getBundleImportance()>
<java.nio.CharBuffer: java.nio.CharBuffer get(char[])>
<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>
<java.util.logging.LogManager: java.util.logging.LoggingMXBean getLoggingMXBean()>
<ohos.global.resource.RawFileDescriptor: void <init>()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAsync(java.lang.Runnable,java.util.concurrent.Executor)>
<ohos.agp.components.PageFlipper: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)>
<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
<ohos.utils.PlainBooleanArray: void <init>()>
<ohos.media.common.AudioProperty: int getRecorderAudioEncoder()>
<ohos.utils.Parcel: boolean[] readBooleanArray()>
<ohos.agp.components.element.Element: ohos.agp.components.element.Element getCurrentElement()>
<java.lang.StringBuilder: void ensureCapacity(int)>
<ohos.utils.PlainLongArray: void append(int,long)>
<java.util.concurrent.locks.ReentrantLock: boolean hasQueuedThreads()>
<ohos.agp.components.Text: void setLeftBubbleHeight(int)>
<java.time.LocalDate: java.lang.Object query(java.time.temporal.TemporalQuery)>
<ohos.agp.render.opengl.GLES1X: void glDepthRangex(int,int)>
<ohos.data.rdb.RdbUtils.OperationType: ohos.data.rdb.RdbUtils.OperationType[] values()>
<java.time.OffsetTime: java.time.OffsetTime parse(java.lang.CharSequence)>
<ohos.utils.PlainBooleanArray: ohos.utils.PlainBooleanArray clone()>
<javax.crypto.spec.OAEPParameterSpec: void <clinit>()>
<ohos.agp.utils.DimensFloat: int getQuotientCeilInt()>
<ohos.global.icu.util.ULocale: java.lang.String getISO3Country(java.lang.String)>
<javax.sql.RowSet: void setNCharacterStream(int,java.io.Reader)>
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>
<java.nio.channels.AsynchronousFileChannel: java.util.concurrent.Future lock(long,long,boolean)>
<ohos.miscservices.inputmethod.EditorAttribute: void setEnterKeyType(int)>
<ohos.data.orm.OrmConfig: ohos.data.DatabaseFileSecurityLevel getDatabaseFileSecurityLevel()>
<ohos.event.notification.INotificationSubscriber: void onNotificationPosted(ohos.event.notification.NotificationRequest)>
<java.sql.SQLIntegrityConstraintViolationException: void <init>(java.lang.String,java.lang.Throwable)>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate dateNow()>
<java.util.concurrent.ConcurrentHashMap: double reduceToDouble(long,java.util.function.ToDoubleBiFunction,double,java.util.function.DoubleBinaryOperator)>
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery offset()>
<java.math.BigDecimal: int intValue()>
<ohos.global.icu.text.UnicodeSet.ComparisonStyle: ohos.global.icu.text.UnicodeSet.ComparisonStyle[] values()>
<ohos.utils.geo.RectFloat: void setPivotXCoordinate(float)>
<ohos.aafwk.ability.Ability: void onPostStart(ohos.utils.PacMap)>
<ohos.data.distributed.file.DistAgentFile: void <init>(java.lang.String)>
<ohos.event.notification.NotificationSorting: void <init>()>
<ohos.agp.components.ListContainer.ItemVisibilityChangedListener: void onItemAdded(ohos.agp.components.Component,int)>
<ohos.javax.xml.parsers.SAXParserFactory: void setSchema(ohos.javax.xml.validation.Schema)>
<java.net.InetSocketAddress: boolean isUnresolved()>
<java.text.MessageFormat.Field: void <init>(java.lang.String)>
<ohos.agp.render.Canvas: void drawCharSequence(ohos.agp.render.Paint,java.lang.CharSequence,float,float)>
<java.lang.Math: long floorDiv(long,long)>
<ohos.agp.utils.Matrix: void setScaleX(float)>
<ohos.global.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit: ohos.global.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit valueOf(java.lang.String)>
<java.util.concurrent.atomic.AtomicIntegerArray: int updateAndGet(int,java.util.function.IntUnaryOperator)>
<java.math.BigInteger: java.math.BigInteger valueOf(long)>
<java.security.acl.Acl: boolean addEntry(java.security.Principal,java.security.acl.AclEntry)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate now(java.time.ZoneId)>
<java.nio.LongBuffer: int hashCode()>
<java.lang.Integer: int lowestOneBit(int)>
<java.time.chrono.Chronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.Instant,java.time.ZoneId)>
<ohos.ai.cv.text.TextConfiguration.Builder: ohos.ai.cv.text.TextConfiguration.Builder setIsTracking(int)>
<ohos.agp.utils.Matrix44: void set(int,int,float)>
<java.util.FormatFlagsConversionMismatchException: char getConversion()>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class[])>
<ohos.agp.render.opengl.GLES1X: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<ohos.agp.components.Text: void setAroundElementsPadding(int)>
<ohos.event.intentagent.TriggerInfo.Builder: ohos.event.intentagent.TriggerInfo.Builder setIntentParams(ohos.aafwk.content.IntentParams)>
<ohos.media.camera.device.CameraInfo: int getFacingType()>
<ohos.bundle.BundleInfo: int getTargetVersion()>
<java.util.AbstractCollection: java.util.Iterator iterator()>
<java.util.Date: void <init>(java.lang.String)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object takeFirst()>
<ohos.agp.render.opengl.GLES20: void glLinkProgram(int)>
<ohos.agp.render.opengl.GLES32: void glSamplerParameterIiv(int,int,int[])>
<ohos.agp.render.opengl.GLES1X: void glLoadIdentity()>
<ohos.hiviewdfx.Debug: int getIpcReceivedCount()>
<java.nio.file.SimpleFileVisitor: java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)>
<ohos.nfc.tag.MifareClassicTag: byte[] readBlock(int)>
<ohos.data.resultset.SharedBlock: boolean putNull(int,int)>
<ohos.bundleactive.BundleActiveStates.State: void <clinit>()>
<java.util.jar.Attributes.Name: void <init>(java.lang.String)>
<java.sql.DatabaseMetaData: java.lang.String getCatalogTerm()>
<ohos.agp.components.Component: void subscribeVoiceEvents(ohos.agp.components.Component.VoiceEvent)>
<ohos.agp.render.Arc: float getSweepAngle()>
<java.math.BigDecimal: short shortValueExact()>
<ohos.agp.components.Component: java.lang.String getAccessibilityDescription()>
<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>
<ohos.agp.components.SlideDrawer.SlideDirection: void <clinit>()>
<ohos.global.icu.util.Currency: double getRoundingIncrement()>
<ohos.ai.cv.common.CvRect: boolean marshalling(ohos.utils.Parcel)>
<java.util.HashSet: void <init>(java.util.Collection)>
<java.time.format.DateTimeParseException: int getErrorIndex()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<ohos.agp.render.Path: boolean isInterpolatable(ohos.agp.render.Path)>
<ohos.agp.components.element.Element: void setCallback(ohos.agp.components.element.Element.OnChangeListener)>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: boolean marshalling(ohos.utils.Parcel)>
<java.sql.CallableStatement: boolean getBoolean(int)>
<ohos.telephony.TelephoneNumberUtils: java.lang.String formatPhoneNumber(java.lang.String,java.lang.String)>
<java.time.format.DateTimeFormatter: void <clinit>()>
<ohos.nfc.tag.TagInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.util.Calendar: void <clinit>()>
<javax.sql.RowSet: void setSQLXML(int,java.sql.SQLXML)>
<java.nio.channels.ClosedChannelException: void <init>()>
<java.nio.LongBuffer: boolean hasArray()>
<ohos.agp.render.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,int)>
<java.lang.Math: double scalb(double,int)>
<java.security.AlgorithmParametersSpi: java.lang.String engineToString()>
<java.util.Locale.LanguageRange: java.util.List parse(java.lang.String)>
<ohos.agp.render.MaskFilter: void <init>(float[],float,float,float)>
<java.sql.DatabaseMetaData: java.lang.String getDriverVersion()>
<ohos.sysappcomponents.contact.entity.Email: java.lang.String getLabelName()>
<java.nio.charset.Charset: void <init>(java.lang.String,java.lang.String[])>
<ohos.hiviewdfx.HiLog: int fatal(ohos.hiviewdfx.HiLogLabel,java.lang.String,java.lang.Object[])>
<ohos.aafwk.ability.fraction.FractionAbility: void onActive()>
<ohos.agp.components.webengine.WebView: void setFocusChangedListener(ohos.agp.components.Component.FocusChangedListener)>
<ohos.agp.render.opengl.GLES30: void glBeginQuery(int,int)>
<java.util.concurrent.atomic.LongAccumulator: void reset()>
<java.time.OffsetDateTime: int getSecond()>
<ohos.agp.components.DragEvent: ohos.agp.utils.MimeData getClipData()>
<ohos.utils.zson.ZSONArray: java.util.List subList(int,int)>
<ohos.agp.components.DatePicker: ohos.agp.components.element.Element getDisplayedBottomElement()>
<ohos.bundle.ElementName: void <init>(ohos.bundle.ElementName)>
<java.security.cert.PKIXParameters: java.lang.Object clone()>
<java.util.concurrent.atomic.AtomicReference: java.lang.String toString()>
<java.util.logging.Logger: void addHandler(java.util.logging.Handler)>
<ohos.utils.PlainArray: void put(int,java.lang.Object)>
<java.time.LocalDate: java.time.LocalDate plusYears(long)>
<ohos.media.extractor.Extractor: void finalize()>
<java.util.concurrent.CyclicBarrier: void reset()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletableFuture toCompletableFuture()>
<java.lang.ThreadGroup: void <init>(java.lang.String)>
<ohos.utils.zson.ZSONReader: void read(java.lang.Object,boolean)>
<java.util.HashSet: int size()>
<ohos.bundle.InstallParam: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.media.common.sessioncore.AVCallerUserInfo: boolean equals(java.lang.Object)>
<java.util.ServiceConfigurationError: void <init>(java.lang.String,java.lang.Throwable)>
<javax.crypto.EncryptedPrivateKeyInfo: void <init>(java.lang.String,byte[])>
<ohos.ai.cv.text.TextElement: void setValue(java.lang.String)>
<ohos.global.icu.text.AlphabeticIndex: int getBucketCount()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getFunctionColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.components.DirectionalLayout: void setAlignment(int)>
<java.time.LocalTime: java.time.LocalTime truncatedTo(java.time.temporal.TemporalUnit)>
<ohos.global.configuration.LocaleProfile: boolean equals(java.lang.Object)>
<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>
<java.security.acl.Acl: void setName(java.security.Principal,java.lang.String)>
<ohos.ai.cv.text.TextElement: java.lang.String getValue()>
<ohos.global.icu.text.BidiClassifier: void <init>(java.lang.Object)>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLOutputFactory newInstance()>
<ohos.aafwk.ability.Ability: void continueAbility(java.lang.String)>
<java.lang.invoke.ConstantCallSite: java.lang.invoke.MethodHandle dynamicInvoker()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet retain(int,int)>
<java.util.logging.Handler: void flush()>
<ohos.agp.render.render3d.components.CameraComponent: ohos.agp.render.render3d.components.CameraComponent.CameraType getCameraType()>
<ohos.agp.components.ListContainer: void setBoundarySwitch(boolean)>
<ohos.global.icu.text.DecimalFormat: boolean isParseNoExponent()>
<java.net.ServerSocket: void setReuseAddress(boolean)>
<ohos.global.icu.util.CopticCalendar: int handleGetExtendedYear()>
<ohos.media.image.PropertyFilter: ohos.media.image.PropertyFilter setPropertyDouble(java.lang.String,double)>
<ohos.rpc.ReliableFileDescriptor.AutoCloseFileOutputStream: void <init>(ohos.rpc.ReliableFileDescriptor)>
<ohos.telephony.CellularDataStateObserver: void onCellularDataConnectStateUpdated(int,int)>
<java.time.chrono.ChronoZonedDateTime: int hashCode()>
<ohos.thermallistener.ThermalListener: void connectThermalService(ohos.thermallistener.ThermalConnection,java.lang.String)>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitNoTypeAsPackage(javax.lang.model.type.NoType,java.lang.Object)>
<ohos.media.audio.AudioDeviceDescriptor.DeviceRole: ohos.media.audio.AudioDeviceDescriptor.DeviceRole[] values()>
<ohos.global.icu.text.CompactDecimalFormat.CompactStyle: void <clinit>()>
<ohos.utils.system.SystemCapability.Multimedia: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>
<ohos.utils.Parcel: void writeParcelableEx(ohos.interwork.utils.ParcelableEx)>
<java.sql.SQLInput: java.sql.Timestamp readTimestamp()>
<java.lang.ClassLoader: java.util.Enumeration findResources(java.lang.String)>
<ohos.agp.components.ComponentContainer.LayoutConfig: int getMarginRight()>
<ohos.data.rdb.Statement: long executeAndGetLastInsertRowId()>
<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<ohos.net.IpPrefix: boolean unmarshalling(ohos.utils.Parcel)>
<javax.sql.RowSet: void setTime(java.lang.String,java.sql.Time,java.util.Calendar)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Map.Entry pollFirstEntry()>
<java.util.concurrent.CyclicBarrier: boolean isBroken()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates limit(int)>
<javax.lang.model.element.QualifiedNameable: javax.lang.model.element.Name getQualifiedName()>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Object)>
<ohos.accessibility.AccessibilityEventInfo: void <init>()>
<ohos.app.AbilityContext: void restart()>
<java.time.chrono.ChronoLocalDateTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
<java.util.concurrent.Future: boolean isCancelled()>
<java.sql.SQLClientInfoException: void <init>(java.lang.String,java.lang.String,int,java.util.Map)>
<ohos.data.search.model.SearchableEntity: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.String)>
<ohos.utils.BasePacMap: void putPlainArray(java.lang.String,ohos.utils.PlainArray)>
<java.sql.Timestamp: boolean after(java.sql.Timestamp)>
<java.util.Random: double nextGaussian()>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahEra getEra()>
<ohos.data.search.schema.Schema: java.lang.String getReserved1()>
<java.security.spec.PSSParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,int,int)>
<java.nio.DoubleBuffer: int compareTo(java.nio.DoubleBuffer)>
<javax.net.ssl.X509KeyManager: java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])>
<ohos.agp.window.dialog.BaseDialog: void onShow()>
<ohos.eventhandler.EventHandler: void postTask(java.lang.Runnable,long,ohos.eventhandler.EventHandler.Priority)>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer compact()>
<ohos.agp.render.render3d.math.Vector3: void <init>(float,float,float)>
<java.nio.file.attribute.DosFileAttributeView: void setHidden(boolean)>
<ohos.global.icu.text.IDNA.Error: void <clinit>()>
<java.sql.SQLOutput: void writeFloat(float)>
<javax.tools.DocumentationTool.Location: boolean isOutputLocation()>
<ohos.nfc.tag.NdefTag: void <init>(ohos.nfc.tag.TagInfo)>
<ohos.utils.PlainLongArray: void <init>()>
<ohos.javax.xml.stream.events.XMLEvent: boolean isNamespace()>
<ohos.agp.render.Region: ohos.agp.utils.Rect getBounds()>
<ohos.agp.components.Text: void setMaxTextHeight(int)>
<java.time.chrono.ChronoZonedDateTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<ohos.utils.net.Uri: boolean isAbsolute()>
<javax.lang.model.util.Elements: javax.lang.model.element.Name getBinaryName(javax.lang.model.element.TypeElement)>
<ohos.agp.components.RadioContainer: void <init>(ohos.app.Context)>
<ohos.global.icu.util.ULocale: boolean isRightToLeft()>
<ohos.sysappcomponents.calendar.entity.Instances: void setInstanceEndDay(long)>
<java.lang.reflect.Executable: java.lang.reflect.Type[] getGenericExceptionTypes()>
<ohos.global.icu.util.Calendar: int getLimit(int,int)>
<ohos.utils.geo.Rect: java.lang.String toString()>
<ohos.media.tubecore.AVTubeEx: void setTubeName(int)>
<java.nio.charset.CharsetDecoder: java.nio.charset.Charset detectedCharset()>
<ohos.global.icu.text.DateIntervalFormat.FormattedDateInterval: boolean nextPosition(ohos.global.icu.text.ConstrainedFieldPosition)>
<ohos.net.NetManager: ohos.net.NetManager getInstance(ohos.app.Context)>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitShort(short,java.lang.Object)>
<ohos.agp.render.opengl.GLES20: void glStencilOp(int,int,int)>
<java.util.zip.ZipException: void <init>()>
<ohos.ai.cv.text.TextBlock: ohos.ai.cv.common.CvPoint[] getCornerPoints()>
<java.time.chrono.Chronology: int prolepticYear(java.time.chrono.Era,int)>
<ohos.bundle.FormInfo: java.util.List getSupportDimensions()>
<java.util.stream.LongStream.Builder: void accept(long)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDate minus(java.time.temporal.TemporalAmount)>
<ohos.dcall.CallStateObserver: void onCallStateUpdated(int,java.lang.String)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query lessThanOrEqualTo(java.lang.String,int)>
<ohos.agp.components.Component: void setTranslation(float,float)>
<ohos.global.icu.text.IDNA: java.lang.StringBuilder labelToUnicode(java.lang.CharSequence,java.lang.StringBuilder,ohos.global.icu.text.IDNA.Info)>
<ohos.agp.render.opengl.GLES1X: void glClearColorx(int,int,int,int)>
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object[] toArray(java.lang.Object[])>
<ohos.agp.render.render3d.components.SceneComponent: ohos.agp.render.render3d.Entity getCamera()>
<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(int,double)>
<ohos.location.Locator: void <init>(ohos.app.Context)>
<java.net.DatagramSocket: int getSoTimeout()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<java.util.AbstractMap: int hashCode()>
<ohos.global.icu.lang.UCharacter: int codePointAt(java.lang.CharSequence,int)>
<java.text.DateFormatSymbols: void setShortWeekdays(java.lang.String[])>
<ohos.event.notification.NotificationRequest: java.lang.String getCreatorBundleName()>
<javax.crypto.Mac: void update(byte[],int,int)>
<java.lang.Character: boolean isMirrored(int)>
<ohos.distributedschedule.interwork.DeviceInfo.DeviceState: ohos.distributedschedule.interwork.DeviceInfo.DeviceState valueOf(java.lang.String)>
<ohos.global.icu.text.Bidi: int getCustomizedClass(int)>
<java.lang.SecurityManager: void checkWrite(java.io.FileDescriptor)>
<ohos.agp.render.render3d.Engine: void postInRenderThread(java.lang.Runnable)>
<ohos.event.notification.NotificationRequest: java.lang.String getStatusBarText()>
<ohos.global.icu.text.RuleBasedCollator: void setAlternateHandlingDefault()>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle dropArguments(java.lang.invoke.MethodHandle,int,java.lang.Class[])>
<java.security.cert.PKIXCertPathChecker: void check(java.security.cert.Certificate)>
<javax.tools.OptionChecker: int isSupportedOption(java.lang.String)>
<ohos.agp.render.render3d.gltf.GltfData: void release()>
<ohos.sysappcomponents.contact.entity.NickName: void <init>()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,short)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates in(java.lang.String,java.util.Calendar[])>
<java.time.chrono.ChronoZonedDateTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<ohos.agp.components.Component: boolean getWindowVisibleRect(ohos.agp.utils.Rect)>
<ohos.agp.components.MagicLayout: boolean isFoldEnabled()>
<ohos.agp.render.opengl.Utils: boolean lessNotEqual(float,float)>
<ohos.agp.render.opengl.EGL: boolean eglReleaseThread()>
<java.lang.ClassCastException: void <init>(java.lang.String)>
<ohos.media.audio.AudioRendererInfo.Builder: ohos.media.audio.AudioRendererInfo.Builder sessionID(int)>
<ohos.rpc.ReliableFileDescriptor.AutoCloseFileInputStream: void <init>(ohos.rpc.ReliableFileDescriptor)>
<java.util.zip.ZipInputStream: long skip(long)>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.text.CollationElementIterator getCollationElementIterator(ohos.global.icu.text.UCharacterIterator)>
<ohos.utils.zson.ZSONArray: java.lang.Short getShort(int)>
<java.lang.Character: boolean isIdentifierIgnorable(char)>
<java.lang.Double: void <clinit>()>
<ohos.data.resultset.TableResultSet: ohos.data.resultset.TableResultSet.RowBuilder addRowByBuilder()>
<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>
<ohos.utils.Ashmem: int getAShmemSize()>
<ohos.agp.components.ComponentContainer: boolean getAutoLayout()>
<java.security.MessageDigest: int digest(byte[],int,int)>
<javax.lang.model.element.ExecutableElement: java.util.List getTypeParameters()>
<java.io.PushbackInputStream: int read()>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.text.Collator freeze()>
<java.util.concurrent.ForkJoinPool: int getPoolSize()>
<ohos.media.image.ImageSource: ohos.media.image.PixelMap createPixelmap(ohos.media.image.ImageSource.DecodingOptions)>
<javax.lang.model.util.SimpleElementVisitor6: java.lang.Object defaultAction(javax.lang.model.element.Element,java.lang.Object)>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitPrimitiveAsDouble(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<ohos.media.image.PixelMap: byte[] getNinePatchChunk()>
<ohos.agp.components.TimePicker: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.media.image.ImagePacker: ohos.media.image.ImagePacker create()>
<java.time.format.TextStyle: java.time.format.TextStyle valueOf(java.lang.String)>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<javax.sql.RowSet: void setSQLXML(java.lang.String,java.sql.SQLXML)>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate dateEpochDay(long)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.text.TimeZoneFormat cloneAsThawed()>
<java.util.stream.IntStream: java.util.stream.IntStream distinct()>
<ohos.utils.BasePacMap: ohos.utils.PlainArray getPlainArray(java.lang.String)>
<ohos.rpc.RemoteObjectCallbackList: void onRemoteCallbackDied(ohos.rpc.IRemoteBroker,java.lang.Object)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder padNext(int)>
<java.time.chrono.ChronoZonedDateTime: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<javax.net.ssl.SSLServerSocket: java.lang.String[] getEnabledProtocols()>
<ohos.agp.render.render3d.components.MorphComponent: long getMorphTargets()>
<java.util.regex.Matcher: boolean hasTransparentBounds()>
<ohos.utils.PacMap: void putSequenceableObjectList(java.lang.String,java.util.ArrayList)>
<java.util.concurrent.SynchronousQueue: java.lang.Object peek()>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 normalize(float,float)>
<ohos.global.icu.util.CurrencyAmount: ohos.global.icu.util.Currency getCurrency()>
<java.sql.Connection: java.sql.Struct createStruct(java.lang.String,java.lang.Object[])>
<java.sql.PreparedStatement: void setFloat(int,float)>
<ohos.utils.Ashmem: boolean mapReadAndWriteAShmem()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,java.sql.Time)>
<ohos.location.Locator: void requestOnce(ohos.location.RequestParam,ohos.location.LocatorCallback)>
<java.util.concurrent.ConcurrentSkipListMap: int size()>
<java.util.concurrent.ForkJoinPool: void <init>()>
<java.util.concurrent.SynchronousQueue: java.lang.Object take()>
<java.io.Writer: void write(java.lang.String,int,int)>
<ohos.sysappcomponents.contact.entity.Group: void setTitle(java.lang.String)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoChronology getChronology()>
<ohos.global.icu.util.RangeValueIterator.Element: void <init>()>
<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)>
<ohos.media.camera.device.CameraConfig: java.util.List getSurfaces()>
<java.time.chrono.HijrahChronology: int prolepticYear(java.time.chrono.Era,int)>
<ohos.bundle.AbilityInfo.AbilityType: ohos.bundle.AbilityInfo.AbilityType[] values()>
<ohos.hiviewdfx.HiLog: java.lang.String getStackTrace(java.lang.Throwable)>
<ohos.agp.components.webengine.CookieStore: boolean hasCookies()>
<java.io.BufferedWriter: void write(int)>
<java.io.File: java.net.URI toURI()>
<java.lang.Math: double min(double,double)>
<ohos.agp.components.element.ElementScatter: void <init>(ohos.app.Context)>
<ohos.sensor.agent.CategoryOrientationAgent: java.util.List getAllSensors()>
<java.time.MonthDay: java.time.MonthDay withDayOfMonth(int)>
<ohos.agp.components.Component.DraggedListener: void onDragEnd(ohos.agp.components.Component,ohos.agp.components.DragInfo)>
<ohos.miscservices.inputmethodability.InputMethodAbility: void onStop()>
<ohos.utils.ObjectAttribute: java.lang.Object get(java.lang.Object)>
<ohos.telephony.RadioInfoManager: java.lang.String getManufacturerCode(int)>
<java.time.OffsetTime: java.time.OffsetTime minus(long,java.time.temporal.TemporalUnit)>
<java.util.AbstractList: java.util.ListIterator listIterator(int)>
<ohos.agp.render.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,int[],int,int[],int[])>
<java.time.chrono.ChronoLocalDateTime: int compareTo(java.time.chrono.ChronoLocalDateTime)>
<java.util.ListIterator: void remove()>
<ohos.interwork.eventhandler.InnerEventUtils: void setExInfo(ohos.eventhandler.InnerEvent,int,int)>
<java.nio.file.attribute.FileTime: boolean equals(java.lang.Object)>
<ohos.agp.components.TableLayout.LayoutConfig: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.utils.geo.DimensFloat: ohos.utils.geo.DimensFloat copy(float)>
<ohos.agp.window.service.Display: void <init>()>
<ohos.global.icu.text.UnicodeSetSpanner: int countIn(java.lang.CharSequence,ohos.global.icu.text.UnicodeSetSpanner.CountMethod,ohos.global.icu.text.UnicodeSet.SpanCondition)>
<java.util.AbstractList: boolean add(java.lang.Object)>
<ohos.bundle.FormInfo: int getDefaultDimension()>
<ohos.utils.LightweightMap: void ensureCapacity(int)>
<java.io.BufferedReader: int read(char[],int,int)>
<ohos.security.asset.AssetResult: void <init>(int)>
<ohos.data.orm.Clob: java.io.InputStream getAsciiStream()>
<ohos.global.icu.text.DateIntervalInfo: ohos.global.icu.text.DateIntervalInfo freeze()>
<ohos.usb.USBInterface: java.lang.String toString()>
<ohos.data.dataability.DataAbilityPredicates: boolean isRawSelection()>
<ohos.ai.cv.sr.SisrConfiguration: void setScale(float)>
<ohos.agp.components.TimePicker: boolean isWheelModeEnabled()>
<ohos.bundle.BundleInfo.ReqPermissionDetail: void <init>(ohos.bundle.BundleInfo,java.lang.String,java.lang.String)>
<java.time.chrono.IsoChronology: java.time.LocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
<javax.net.ssl.SSLSession: int getPeerPort()>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>
<ohos.agp.components.ComponentProvider: java.lang.String getDefaultBundleName()>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getInstance(ohos.global.icu.util.Calendar,java.util.Locale)>
<ohos.utils.Parcel: void writeTypedSequenceableArray(ohos.utils.Sequenceable[])>
<ohos.app.AbilityContext: void compelVerifyCallerPermission(java.lang.String,java.lang.String)>
<ohos.agp.render.Path: void rLineTo(float,float)>
<ohos.global.icu.text.NumberFormat: void setParseIntegerOnly(boolean)>
<ohos.data.search.schema.ContactItem: java.lang.String getAddress()>
<java.nio.channels.FileLock: void release()>
<java.nio.LongBuffer: java.nio.ByteOrder order()>
<java.time.ZonedDateTime: java.time.ZonedDateTime of(java.time.LocalDate,java.time.LocalTime,java.time.ZoneId)>
<ohos.agp.components.element.StateElement: ohos.agp.components.element.Element getCurrentElement()>
<ohos.miscservices.pasteboard.PasteData: int getRecordCount()>
<ohos.security.keystore.KeyStoreKeySpec: boolean isKeyAccessible(int)>
<ohos.utils.geo.DimensFloat: int getQuotientFloorInt()>
<ohos.media.audio.AudioRenderer: boolean write(java.nio.ByteBuffer,int)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.NavigableSet descendingSet()>
<ohos.app.Context: java.lang.String getAppType()>
<ohos.sysappcomponents.contact.ContactAttributes.Attribute: ohos.sysappcomponents.contact.ContactAttributes.Attribute[] values()>
<java.util.TreeSet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)>
<java.net.URLConnection: java.util.Map getRequestProperties()>
<ohos.global.icu.text.DecimalFormatSymbols: char getMinusSign()>
<java.lang.reflect.ReflectPermission: void <init>(java.lang.String,java.lang.String)>
<ohos.global.icu.text.DateTimePatternGenerator.DisplayWidth: void <clinit>()>
<ohos.data.rdb.RdbStore: boolean restore(java.lang.String)>
<ohos.security.seoperator.SEOperatorAbs: int syncSeInfo(java.lang.String,java.lang.String,java.lang.String)>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.Entity createLightPoint(ohos.agp.render.render3d.math.Vector3,boolean,ohos.agp.render.render3d.math.Vector3,float)>
<java.nio.channels.SeekableByteChannel: int write(java.nio.ByteBuffer)>
<ohos.miscservices.pasteboard.PasteData: boolean replaceRecordAt(int,ohos.miscservices.pasteboard.PasteData.Record)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>
<ohos.sysappcomponents.contact.entity.PostalAddress: boolean equals(java.lang.Object)>
<ohos.dcall.CallStateObserver: void onCfuIndicatorUpdated(boolean)>
<ohos.global.icu.lang.UCharacter: int toUpperCase(int)>
<java.util.function.LongToDoubleFunction: double applyAsDouble(long)>
<ohos.multimodalinput.standard.CommonEventHandle: boolean onPrint(ohos.multimodalinput.event.MultimodalEvent)>
<ohos.media.camera.params.ResultKey.Key: int hashCode()>
<java.time.LocalDateTime: boolean isSupported(java.time.temporal.TemporalUnit)>
<java.util.stream.LongStream: java.util.OptionalDouble average()>
<ohos.agp.render.opengl.EGL: boolean eglChooseConfig(ohos.agp.render.opengl.EGLDisplay,int[],ohos.agp.render.opengl.EGLConfig[],int,int[])>
<ohos.agp.components.element.ShapeElement: ohos.agp.colors.RgbColor getStrokeColor()>
<ohos.agp.render.Canvas: void drawText(ohos.agp.render.Paint,java.lang.String,float,float)>
<ohos.bluetooth.ble.GattService: java.util.Optional getCharacteristic(java.util.UUID)>
<ohos.global.resource.solidxml.Theme: int getIntegerValue(java.lang.String,int)>
<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int)>
<java.sql.ResultSet: boolean getBoolean(java.lang.String)>
<java.security.GeneralSecurityException: void <init>()>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int decrementAndGet(java.lang.Object)>
<java.util.concurrent.LinkedBlockingDeque: boolean remove(java.lang.Object)>
<ohos.media.image.ImagePacker: void finalize()>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>
<java.sql.PreparedStatement: void setBlob(int,java.io.InputStream,long)>
<java.nio.ShortBuffer: java.nio.ShortBuffer wrap(short[])>
<java.security.ProviderException: void <init>()>
<javax.net.ssl.SSLEngineResult.HandshakeStatus: void <clinit>()>
<ohos.agp.components.webengine.WebConfig: void setJavaScriptPermit(boolean)>
<ohos.global.icu.text.RuleBasedCollator: java.lang.String getRules(boolean)>
<ohos.org.xml.sax.DocumentHandler: void processingInstruction(java.lang.String,java.lang.String)>
<ohos.agp.render.Path: void close()>
<java.util.Vector: java.lang.Object remove(int)>
<java.security.IdentityScope: java.util.Enumeration identities()>
<java.sql.Timestamp: java.lang.String toString()>
<ohos.bundle.BackupBundleInfo: void <init>()>
<ohos.global.icu.text.DateIntervalFormat: java.lang.StringBuffer format(ohos.global.icu.util.Calendar,ohos.global.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)>
<java.nio.ByteOrder: java.lang.String toString()>
<java.util.concurrent.SynchronousQueue: java.lang.Object poll()>
<ohos.global.icu.text.DecimalFormatSymbols: java.lang.String getMonetaryGroupingSeparatorString()>
<java.sql.CallableStatement: boolean wasNull()>
<ohos.agp.render.opengl.GLES2Ext: boolean glIsEnablediEXT(int,int)>
<java.security.cert.CertPath.CertPathRep: java.lang.Object readResolve()>
<java.util.Vector: boolean add(java.lang.Object)>
<ohos.agp.components.VelocityDetector: void calculateCurrentVelocity(int)>
<ohos.agp.components.AttrHelper: int fp2px(float,float)>
<java.time.temporal.ValueRange: java.time.temporal.ValueRange of(long,long)>
<ohos.agp.components.ListContainer: void setBoundaryColor(ohos.agp.utils.Color)>
<ohos.agp.render.opengl.GLES1X: void glDisable(int)>
<ohos.utils.LightweightMap: java.lang.Object valueAt(int)>
<java.io.PipedOutputStream: void connect(java.io.PipedInputStream)>
<java.net.URL: boolean equals(java.lang.Object)>
<ohos.aafwk.ability.delegation.IAbilityDelegatorArgs: java.lang.String getTestRunnerClassName()>
<ohos.global.icu.text.DecimalFormat: java.lang.StringBuffer format(ohos.global.icu.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition)>
<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()>
<ohos.ai.cv.text.TextConfiguration.Builder: ohos.ai.cv.text.TextConfiguration.Builder setTrackingForceOcr(int)>
<java.util.Vector: void clear()>
<java.security.Signature: java.security.Provider getProvider()>
<java.util.concurrent.DelayQueue: int drainTo(java.util.Collection,int)>
<java.util.stream.Collector: java.util.function.BiConsumer accumulator()>
<ohos.wifi.p2p.WifiP2pController: ohos.rpc.IRemoteObject init(ohos.eventhandler.EventRunner,ohos.wifi.p2p.WifiP2pCallback)>
<ohos.accessibility.ability.DisplayResizeController: float getCenterX()>
<java.lang.Byte: int hashCode(byte)>
<ohos.bundle.ShortcutIntent: void <init>(java.lang.String,java.lang.String)>
<java.util.ArrayList: int lastIndexOf(java.lang.Object)>
<ohos.media.camera.params.SceneDetectionResult: java.util.Map getScenes()>
<java.util.Set: boolean equals(java.lang.Object)>
<ohos.agp.components.SearchBar: int getMaxWidth()>
<java.util.PriorityQueue: java.lang.Object peek()>
<ohos.agp.render.opengl.GLES30: void glGetSamplerParameteriv(int,int,int[])>
<ohos.media.camera.device.FrameConfig: java.lang.Object getMark()>
<java.nio.channels.AsynchronousSocketChannel: java.nio.channels.AsynchronousSocketChannel shutdownInput()>
<java.io.PipedInputStream: int read()>
<java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThan(java.lang.String,java.util.Calendar)>
<java.util.List: java.lang.Object remove(int)>
<ohos.bundle.HapModuleInfo: void <clinit>()>
<ohos.app.Context: boolean connectAbility(ohos.aafwk.content.Intent,ohos.aafwk.ability.IAbilityConnection)>
<ohos.global.icu.text.NumberFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
<java.time.OffsetTime: java.time.OffsetTime now()>
<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getQualifiedName()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates in(java.lang.String,float[])>
<ohos.utils.Parcel: boolean writeSequenceableList(java.util.List)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet applyPattern(java.lang.String)>
<ohos.utils.geo.RectFloat: void modify(ohos.utils.geo.RectFloat)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendZoneText(java.time.format.TextStyle)>
<ohos.media.audio.AudioManager: void <init>(ohos.app.Context)>
<java.util.SimpleTimeZone: boolean observesDaylightTime()>
<ohos.data.resultset.ResultSet: boolean isEnded()>
<java.sql.DatabaseMetaData: java.lang.String getSchemaTerm()>
<ohos.global.icu.text.BreakIterator: int last()>
<ohos.javax.xml.stream.events.XMLEvent: ohos.javax.xml.stream.Location getLocation()>
<java.nio.Buffer: java.nio.Buffer rewind()>
<java.math.BigDecimal: java.math.BigDecimal max(java.math.BigDecimal)>
<ohos.data.rdb.RdbMisuseException: void <init>()>
<ohos.global.icu.text.SearchIterator: void setIndex(int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notIn(java.lang.String,java.util.Calendar[])>
<ohos.agp.utils.Line: ohos.agp.utils.Point getStartPoint()>
<java.security.cert.X509Certificate: java.util.List getExtendedKeyUsage()>
<java.util.regex.MatchResult: java.lang.String group()>
<ohos.media.sessioncore.AVSession: void setAVMetadata(ohos.media.common.AVMetadata)>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String getSkeleton(java.lang.String)>
<java.util.Formatter: void <init>(java.io.File,java.lang.String)>
<ohos.data.search.schema.ContactItem: java.lang.String getWorkLocation()>
<ohos.data.resultset.CombinedResultSet: int getRowCount()>
<ohos.agp.render.opengl.GLES20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate dateNow(java.time.Clock)>
<java.nio.file.attribute.FileTime: int compareTo(java.nio.file.attribute.FileTime)>
<java.util.logging.Level: java.lang.String getLocalizedName()>
<java.time.LocalDate: java.time.LocalDate minusDays(long)>
<ohos.agp.graphics.SurfaceOps: ohos.agp.graphics.Surface getSurface()>
<ohos.global.icu.text.MessagePattern: java.lang.String autoQuoteApostropheDeep()>
<java.util.stream.Stream: java.util.stream.Stream iterate(java.lang.Object,java.util.function.UnaryOperator)>
<ohos.agp.components.ScrollView: void fluentScrollByX(int)>
<ohos.net.HttpResponseCache: ohos.net.HttpResponseCache getInstalled()>
<java.util.UUID: java.util.UUID nameUUIDFromBytes(byte[])>
<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query greaterThanOrEqualTo(java.lang.String,long)>
<java.time.MonthDay: int compareTo(java.time.MonthDay)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean tryAcquire(int)>
<ohos.global.icu.util.TimeZone: java.lang.String getCanonicalID(java.lang.String,boolean[])>
<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>
<ohos.agp.components.Picker: ohos.agp.utils.Color getSelectedTextColor()>
<java.util.concurrent.ConcurrentNavigableMap: java.util.NavigableSet keySet()>
<ohos.app.AbilityContext: ohos.bundle.ElementName getElementName()>
<java.util.concurrent.ConcurrentSkipListMap: void <init>(java.util.Map)>
<java.time.OffsetDateTime: int getMinute()>
<java.security.spec.PSSParameterSpec: java.lang.String getMGFAlgorithm()>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char[])>
<java.util.prefs.Preferences: void sync()>
<ohos.media.common.sessioncore.AVSessionCallback: boolean onMediaButtonEvent(ohos.aafwk.content.Intent)>
<ohos.workscheduler.WorkInfo: int getRequestNetworkType()>
<ohos.agp.render.PdfDisplay.Page: void close()>
<ohos.agp.components.Component: void setScrollbarFadingDuration(int)>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale acceptLanguage(ohos.global.icu.util.ULocale[],ohos.global.icu.util.ULocale[],boolean[])>
<ohos.sysappcomponents.calendar.entity.Reminders: void setEventId(int)>
<javax.security.auth.callback.UnsupportedCallbackException: void <init>(javax.security.auth.callback.Callback,java.lang.String)>
<ohos.media.common.sessioncore.AVBrowserRoot: ohos.utils.PacMap getOptions()>
<java.time.chrono.ChronoZonedDateTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.security.cert.PKIXParameters: void setTrustAnchors(java.util.Set)>
<ohos.agp.render.render3d.Scene: void destroyEntity(ohos.agp.render.render3d.Entity)>
<ohos.agp.render.PdfDisplay: int getPageCount()>
<ohos.global.icu.text.Normalizer2: boolean hasBoundaryAfter(int)>
<java.security.SignedObject: java.lang.String getAlgorithm()>
<java.lang.String: java.lang.String concat(java.lang.String)>
<ohos.interwork.event.intentagent.IntentAgentEx: void <init>(ohos.event.intentagent.IntentAgent)>
<ohos.media.image.ExifUtils: double getAltitude(ohos.media.image.ImageSource,double)>
<ohos.javax.xml.validation.TypeInfoProvider: boolean isIdAttribute(int)>
<ohos.media.audio.AudioDeviceDescriptor.DeviceFlag: int getValue()>
<java.util.concurrent.PriorityBlockingQueue: void put(java.lang.Object)>
<ohos.global.icu.util.Output: void <init>(java.lang.Object)>
<java.net.StandardProtocolFamily: void <clinit>()>
<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>
<ohos.agp.render.render3d.components.CameraComponent.CameraType: void <clinit>()>
<java.nio.file.PathMatcher: boolean matches(java.nio.file.Path)>
<ohos.utils.zson.ZSONObject: java.lang.Object remove(java.lang.Object)>
<java.io.FilterReader: int read(char[],int,int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThanOrEqualTo(java.lang.String,java.util.Date)>
<ohos.agp.utils.Line: int hashCode()>
<ohos.ai.nlu.NluClient: ohos.ai.nlu.ResponseResult getWordPos(java.lang.String,int,ohos.ai.nlu.OnResultListener)>
<ohos.utils.PlainIntArray: void put(int,int)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendZoneText(java.time.format.TextStyle,java.util.Set)>
<java.util.Base64.Decoder: java.nio.ByteBuffer decode(java.nio.ByteBuffer)>
<ohos.global.icu.text.LocaleDisplayNames.UiListItem: boolean equals(java.lang.Object)>
<java.time.ZonedDateTime: java.time.chrono.ChronoZonedDateTime withLaterOffsetAtOverlap()>
<ohos.aafwk.ability.FormException.FormError: void <clinit>()>
<ohos.global.icu.text.PluralFormat: void <init>(java.lang.String)>
<ohos.global.icu.text.UCharacterIterator: int current()>
<javax.lang.model.element.Element: boolean equals(java.lang.Object)>
<java.lang.reflect.Modifier: int interfaceModifiers()>
<java.time.LocalDateTime: boolean isSupported(java.time.temporal.TemporalField)>
<ohos.media.player.Player: int getVideoWidth()>
<ohos.sensor.agent.CategoryEnvironmentAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryEnvironmentDataCallback,ohos.sensor.bean.CategoryEnvironment)>
<ohos.wifi.WifiLinkedInfo: int getRssi()>
<ohos.aafwk.ability.AbilitySlice: ohos.agp.components.Component findComponentById(int)>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.resources.ResourceHandle generateSphereMesh(java.lang.String,ohos.agp.render.render3d.resources.ResourceHandle,float,int,int)>
<ohos.global.icu.util.ChineseCalendar: void <init>(int,int,int,int)>
<ohos.agp.render.render3d.math.Vector3: boolean equals(java.lang.Object)>
<ohos.global.icu.util.Freezable: java.lang.Object cloneAsThawed()>
<ohos.usb.USBConfig: int getId()>
<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>
<ohos.bundleactive.BundleActiveInfosMgr: void <clinit>()>
<ohos.agp.components.webengine.BrowserAgent: boolean onPickFiles(ohos.agp.components.webengine.WebView,ohos.agp.components.webengine.AsyncCallback,ohos.agp.components.webengine.PickFilesParams)>
<ohos.agp.components.element.ShapeElement.Orientation: void <clinit>()>
<ohos.rpc.ReliableFileDescriptor.AutoCloseFileInputStream: void close()>
<java.nio.channels.SelectionKey: boolean isValid()>
<java.util.stream.Collectors: java.util.stream.Collector toConcurrentMap(java.util.function.Function,java.util.function.Function)>
<ohos.sysappcomponents.contact.entity.Portrait: void <init>()>
<java.util.Timer: int purge()>
<ohos.aafwk.ability.IAbilityConnection: void onAbilityConnectDone(ohos.bundle.ElementName,ohos.rpc.IRemoteObject,int)>
<ohos.miscservices.download.DownloadSession: long start()>
<ohos.global.icu.util.CopticCalendar: void <init>(int,int,int,int,int,int)>
<java.time.Year: java.time.Year parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
<java.util.logging.Handler: java.util.logging.Formatter getFormatter()>
<java.lang.reflect.Array: double getDouble(java.lang.Object,int)>
<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream)>
<ohos.global.icu.math.MathContext: void <init>(int,int,boolean,int)>
<ohos.agp.render.opengl.GLES20: void glDisableVertexAttribArray(int)>
<java.time.ZonedDateTime: int getDayOfYear()>
<ohos.bluetooth.BluetoothHost: int getBleMaxAdvertisingDataLength()>
<java.lang.Short: int toUnsignedInt(short)>
<java.util.concurrent.TimeUnit: long toSeconds(long)>
<ohos.app.Context: void unlockMission()>
<ohos.global.icu.text.NumberingSystem: java.lang.String getDescription()>
<ohos.hiviewdfx.Debug: java.lang.String getMemoryStatistic(java.lang.String)>
<ohos.telephony.NetworkState: int hashCode()>
<java.util.Spliterators: java.util.Spliterator.OfDouble spliterator(java.util.PrimitiveIterator.OfDouble,long,int)>
<ohos.utils.system.SystemCapability.PowerMgr: void <init>()>
<java.util.Comparator: java.util.Comparator thenComparing(java.util.Comparator)>
<java.time.Duration: java.time.Duration minusSeconds(long)>
<java.util.function.DoubleUnaryOperator: java.util.function.DoubleUnaryOperator identity()>
<ohos.agp.window.service.WindowManager: void destroyWindow(ohos.agp.window.service.Window)>
<java.io.ObjectOutputStream.PutField: void put(java.lang.String,long)>
<ohos.accessibility.AccessibilityEventInfo: int getWindowChangeTypes()>
<ohos.data.dataability.DataAbilityPredicates: void <init>(ohos.utils.Parcel)>
<ohos.utils.PacMap: void putAll(ohos.utils.PacMap)>
<java.sql.Time: int getDate()>
<ohos.location.Location: long getTimeStamp()>
<java.nio.channels.DatagramChannel: java.net.DatagramSocket socket()>
<java.nio.channels.GatheringByteChannel: long write(java.nio.ByteBuffer[])>
<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>
<java.sql.DatabaseMetaData: boolean dataDefinitionCausesTransactionCommit()>
<java.util.concurrent.ForkJoinPool: boolean isShutdown()>
<java.security.Certificate: java.lang.String toString(boolean)>
<java.time.zone.ZoneOffsetTransitionRule: boolean isMidnightEndOfDay()>
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>
<java.lang.Character: boolean isUnicodeIdentifierStart(int)>
<ohos.nfc.tag.MifareClassicTag: ohos.nfc.tag.MifareClassicTag getInstance(ohos.nfc.tag.TagInfo)>
<ohos.interwork.bundle.ElementNameEx: void <init>()>
<java.net.ConnectException: void <init>()>
<java.lang.Float: java.lang.Float valueOf(float)>
<ohos.aafwk.ability.DataAbilityOperation: ohos.data.rdb.ValuesBucket getValuesBucket()>
<ohos.agp.components.ListContainer: ohos.agp.utils.Color getShaderColor()>
<ohos.event.notification.NotificationSortingMap: java.util.List getHashCode()>
<java.text.DecimalFormatSymbols: void setCurrency(java.util.Currency)>
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>
<java.security.IdentityScope: java.security.Identity getIdentity(java.lang.String)>
<java.time.Year: boolean isValidMonthDay(java.time.MonthDay)>
<ohos.agp.components.SearchBar: void setCloseButton(ohos.media.image.PixelMap)>
<java.security.cert.Certificate: int hashCode()>
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>
<ohos.agp.components.ListContainer: void onTextUpdated(java.lang.String,int,int,int)>
<ohos.agp.text.TextForm: boolean getUnderline()>
<ohos.global.icu.text.Transliterator.Position: void set(ohos.global.icu.text.Transliterator.Position)>
<ohos.global.icu.text.UnicodeMatcher: void addMatchSetTo(ohos.global.icu.text.UnicodeSet)>
<java.util.OptionalLong: boolean isPresent()>
<java.util.concurrent.atomic.DoubleAdder: void reset()>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.Entity createLightSpot(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Quaternion,boolean,ohos.agp.render.render3d.math.Vector3,float)>
<ohos.location.Locator: boolean isLocationSwitchOn()>
<ohos.bundle.CommonEventInfo: java.lang.String getPermission()>
<java.sql.SQLWarning: void setNextWarning(java.sql.SQLWarning)>
<java.util.TreeSet: java.lang.Object last()>
<ohos.data.distributed.device.DeviceKvStore: boolean getBoolean(java.lang.String,java.lang.String)>
<java.lang.NumberFormatException: void <init>(java.lang.String)>
<ohos.agp.animation.Animator: void setStartListenerInternal(ohos.agp.animation.Animator.StateChangedListener)>
<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>
<ohos.global.icu.text.StringSearch: void <init>(java.lang.String,java.text.CharacterIterator,ohos.global.icu.text.RuleBasedCollator,ohos.global.icu.text.BreakIterator)>
<java.nio.LongBuffer: java.lang.String toString()>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream)>
<ohos.media.audio.AudioRendererInfo: java.lang.String toString()>
<ohos.ace.ability.AceInternalAbility: void setInternalAbilityHandler(ohos.ace.ability.AceInternalAbility.AceInternalAbilityHandler)>
<java.sql.DatabaseMetaData: boolean supportsGroupByUnrelated()>
<ohos.agp.components.TableLayout: void setAlignmentType(int)>
<java.util.concurrent.BrokenBarrierException: void <init>(java.lang.String)>
<java.util.stream.IntStream: long count()>
<java.lang.StringBuffer: java.lang.StringBuffer append(double)>
<java.security.spec.ECPoint: void <clinit>()>
<ohos.utils.geo.DimensFloat: float getQuotient()>
<java.io.ObjectOutputStream: void flush()>
<java.net.Socket: int getPort()>
<java.security.cert.CertPathBuilderException: void <init>()>
<ohos.agp.components.IndexBar: void setIndexPaint(ohos.agp.render.Paint)>
<ohos.sensor.bean.SensorBase: void <init>(int,java.lang.String,java.lang.String,int,float,float,int,int,long,long)>
<java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int)>
<ohos.agp.render.Paint: void set(ohos.agp.render.Paint)>
<ohos.agp.render.Region: boolean op(int,int,int,int,ohos.agp.render.Region.Op)>
<ohos.agp.utils.RectFloat: java.lang.String toString()>
<ohos.utils.BasePacMap: java.util.Set getKeys()>
<java.sql.ResultSet: void updateNClob(java.lang.String,java.io.Reader,long)>
<ohos.agp.components.Component: void setContentPositionX(float)>
<ohos.hiviewdfx.HiLog: int info(ohos.hiviewdfx.HiLogLabel,java.lang.String,java.lang.Object[])>
<java.sql.CallableStatement: boolean getBoolean(java.lang.String)>
<ohos.global.resource.solidxml.TypedAttribute: java.lang.String getMediaValue()>
<java.time.OffsetDateTime: java.time.ZonedDateTime atZoneSimilarLocal(java.time.ZoneId)>
<ohos.ai.cv.text.TextElement: ohos.ai.cv.common.CvRect getElementRect()>
<java.util.concurrent.BlockingDeque: boolean offerFirst(java.lang.Object)>
<java.security.cert.X509CertSelector: byte[] getIssuerAsBytes()>
<java.time.format.DateTimeFormatter: void formatTo(java.time.temporal.TemporalAccessor,java.lang.Appendable)>
<ohos.agp.components.Picker.ElementFormatter: ohos.agp.components.element.Element leftElement(int)>
<ohos.utils.geo.RectFloat: float getPivotYCoordinate()>
<ohos.media.image.ImageSource: ohos.media.image.PixelMap createThumbnailPixelmap(ohos.media.image.ImageSource.DecodingOptions,boolean)>
<java.util.Scanner: boolean hasNextLong()>
<java.util.Vector: void <init>(int,int)>
<java.time.zone.ZoneOffsetTransitionRule: java.time.LocalTime getLocalTime()>
<java.util.IllegalFormatCodePointException: int getCodePoint()>
<ohos.data.preferences.Preferences: ohos.data.preferences.Preferences putStringSet(java.lang.String,java.util.Set)>
<ohos.global.icu.util.TimeZone: java.lang.String[] getAvailableIDs(int)>
<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream peek(java.util.function.DoubleConsumer)>
<java.io.StringWriter: java.lang.Appendable append(char)>
<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>
<java.lang.Math: long abs(long)>
<ohos.agp.components.Component: boolean isSelected()>
<ohos.agp.render.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,int[],int[],int[],byte[])>
<ohos.global.icu.util.Calendar: int fieldDifference(java.util.Date,int)>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion add(ohos.agp.render.render3d.math.Quaternion,ohos.agp.render.render3d.math.Quaternion)>
<ohos.sysappcomponents.calendar.entity.Reminders: void <init>()>
<ohos.agp.render.opengl.GLES1X: void glMultMatrixx(java.nio.IntBuffer)>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String replaceFieldTypes(java.lang.String,java.lang.String)>
<java.util.concurrent.Phaser: void <init>(int)>
<java.util.logging.Level: void <clinit>()>
<java.net.HttpCookie: java.lang.String getPortlist()>
<ohos.app.AbilityContext: void compelVerifyPermission(java.lang.String,int,int,java.lang.String)>
<ohos.utils.Dimension: int getHeightSize()>
<java.util.Collections: java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap)>
<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>
<java.security.cert.CertificateParsingException: void <init>(java.lang.Throwable)>
<ohos.security.seoperator.SEOperatorAbs: java.lang.String[] getLastErrorInfo(java.lang.String)>
<ohos.media.audio.AudioStreamInfo: int getChannelCount(ohos.media.audio.AudioStreamInfo.ChannelMask)>
<java.sql.SQLFeatureNotSupportedException: void <init>(java.lang.String)>
<ohos.bundle.ApplicationInfo: int getIconId()>
<ohos.agp.render.render3d.components.SceneComponent: ohos.agp.render.render3d.resources.GpuResourceHandle getEnvMap()>
<java.nio.charset.CharsetEncoder: void <init>(java.nio.charset.Charset,float,float)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setSampler(ohos.agp.render.render3d.resources.GpuResourceHandle)>
<java.util.logging.Handler: void setFilter(java.util.logging.Filter)>
<ohos.event.notification.NotificationSlotGroup: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.util.IndianCalendar: int handleGetExtendedYear()>
<ohos.aafwk.ability.Ability: java.lang.Object onStoreDataWhenConfigChange()>
<java.io.PipedOutputStream: void write(byte[],int,int)>
<ohos.data.distributed.file.DistFile: ohos.data.distributed.file.DistFile getParentFile()>
<ohos.utils.net.Uri: java.util.Map getDecodedQueryParams()>
<ohos.telephony.WcdmaSignalInformation: boolean marshalling(ohos.utils.Parcel)>
<ohos.telephony.SimInfoManager: boolean isSupportMultiSim()>
<ohos.wifi.WifiScanInfo: java.lang.String getSsid()>
<java.lang.StackOverflowError: void <init>(java.lang.String)>
<ohos.agp.render.opengl.ETC1: int etc1GetEncodedDataSize(int,int)>
<ohos.app.Context: java.io.File getExternalFilesDir(java.lang.String)>
<ohos.sysappcomponents.contact.entity.ImAddress: boolean equals(java.lang.Object)>
<java.nio.file.Files: java.nio.file.Path createLink(java.nio.file.Path,java.nio.file.Path)>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double)>
<ohos.agp.render.opengl.GLES20: void glGetShaderSource(int,int,java.nio.IntBuffer,java.nio.CharBuffer)>
<java.text.Annotation: void <init>(java.lang.Object)>
<ohos.agp.render.render3d.Engine: void resourceCleanup()>
<java.lang.Class: int getModifiers()>
<ohos.agp.components.Component: void setScrollbarStartAngle(float)>
<ohos.agp.render.opengl.GLES32: void glBlendFunci(int,int,int)>
<java.nio.channels.spi.SelectorProvider: void <init>()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent addEntity(java.lang.String)>
<ohos.agp.components.ComponentTreeObserver: void removeScrolledListener(ohos.agp.components.ComponentTreeObserver.ScrollChangedListener)>
<ohos.agp.components.Slider: ohos.agp.components.Component.ClickedListener getIncreaseButtonClickedListener()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,long)>
<ohos.agp.render.Path: void shrinkToFit()>
<ohos.media.audio.AudioRenderer.SpeedPara.Builder: ohos.media.audio.AudioRenderer.SpeedPara build()>
<java.nio.charset.CoderResult: java.lang.String toString()>
<ohos.utils.LightweightMap: int indexOfValue(java.lang.Object)>
<java.util.concurrent.locks.StampedLock: java.lang.String toString()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThan(java.lang.String,java.util.Date)>
<ohos.accessibility.AccessibilityEventInfo: void addContent(java.lang.CharSequence)>
<ohos.agp.components.ScrollView: void doFling(int,int)>
<ohos.sysappcomponents.calendar.entity.Events: void setEventEndTime(long)>
<java.util.concurrent.LinkedTransferQueue: boolean contains(java.lang.Object)>
<ohos.global.icu.lang.UCharacter: boolean isUUppercase(int)>
<java.sql.Connection: java.sql.CallableStatement prepareCall(java.lang.String,int,int)>
<ohos.global.icu.text.NumberingSystem: boolean isValidDigitString(java.lang.String)>
<java.sql.Connection: java.sql.Array createArrayOf(java.lang.String,java.lang.Object[])>
<java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)>
<java.util.Random: java.util.stream.DoubleStream doubles(long,double,double)>
<ohos.data.search.schema.DocumentItem: java.lang.String getDocumentCategory()>
<java.util.logging.XMLFormatter: java.lang.String getTail(java.util.logging.Handler)>
<ohos.agp.components.Slider.ValueChangedListener: void onTouchStart(ohos.agp.components.Slider)>
<java.io.Writer: java.io.Writer append(char)>
<ohos.agp.render.Paint.Style: int value()>
<java.lang.reflect.Constructor: boolean isVarArgs()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture whenCompleteAsync(java.util.function.BiConsumer)>
<ohos.miscservices.inputmethod.EditingCapability: int getMaxLines()>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType generic()>
<java.util.concurrent.ConcurrentLinkedQueue: int size()>
<java.util.Set: java.util.Spliterator spliterator()>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate of(java.time.chrono.JapaneseEra,int,int,int)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setUri(ohos.utils.net.Uri)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal add(ohos.global.icu.math.BigDecimal,ohos.global.icu.math.MathContext)>
<java.time.temporal.ChronoField: java.time.temporal.TemporalUnit getBaseUnit()>
<ohos.org.xml.sax.Locator: java.lang.String getPublicId()>
<ohos.accessibility.AccessibilityEventInfo: java.lang.CharSequence getLastContent()>
<javax.security.cert.CertificateParsingException: void <init>()>
<ohos.javax.xml.validation.Validator: void setResourceResolver(ohos.org.w3c.dom.ls.LSResourceResolver)>
<java.security.SecureRandomSpi: void engineNextBytes(byte[])>
<java.util.concurrent.atomic.DoubleAccumulator: java.lang.String toString()>
<ohos.agp.components.Text: ohos.agp.components.element.Element getSelectionLeftBubbleElement()>
<java.lang.String: int compareTo(java.lang.String)>
<java.util.StringJoiner: void <init>(java.lang.CharSequence)>
<java.lang.Integer: java.lang.String toString(int)>
<ohos.rpc.IPCSkeleton: boolean setCallingIdentity(java.lang.String)>
<ohos.global.icu.util.TimeZone: boolean useDaylightTime()>
<ohos.sensor.agent.CategoryOtherAgent: java.util.List getAllSensors(int)>
<ohos.sysappcomponents.contact.entity.Name: java.lang.String getNameSuffix()>
<ohos.event.notification.NotificationRequest: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.SearchBar: void setIconifiedState(boolean)>
<ohos.agp.render.opengl.GLES30: int glGetUniformBlockIndex(int,java.lang.String)>
<ohos.agp.utils.RectFloat: boolean isInclude(float,float)>
<java.security.cert.CertPathChecker: boolean isForwardCheckingSupported()>
<java.util.concurrent.BlockingDeque: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<ohos.agp.utils.DimensFloat: float getSizeX()>
<ohos.data.search.model.IndexData: java.lang.String getAsString(java.lang.String)>
<java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock: java.util.concurrent.locks.Condition newCondition()>
<java.util.concurrent.atomic.DoubleAdder: double sumThenReset()>
<ohos.biometrics.authentication.BiometricAuthentication.AuthenticationTips: void <init>()>
<ohos.event.notification.MessageUser: ohos.event.notification.MessageUser setUri(java.lang.String)>
<java.time.OffsetDateTime: int compareTo(java.time.OffsetDateTime)>
<java.util.Calendar: int internalGet(int)>
<ohos.data.rdb.StoreConfig: byte[] getEncryptKey()>
<java.util.BitSet: long[] toLongArray()>
<java.io.DataOutputStream: void writeChars(java.lang.String)>
<ohos.vibrator.bean.VibrationPattern: int[] getIntensities()>
<ohos.media.photokit.metadata.AVStorage: ohos.utils.net.Uri appendRequireOriginalResource(ohos.utils.net.Uri)>
<ohos.event.commonevent.CommonEventSubscribeInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.data.search.SearchSession: java.util.List search(java.lang.String,int,int)>
<java.util.jar.Attributes.Name: void <clinit>()>
<javax.lang.model.element.ElementVisitor: java.lang.Object visitUnknown(javax.lang.model.element.Element,java.lang.Object)>
<ohos.media.audio.AudioRenderer: boolean setSpeed(float)>
<ohos.data.search.schema.ContactItem: ohos.data.search.schema.ContactItem setEmail(java.lang.String)>
<ohos.media.audio.AudioManager: int makeSessionId()>
<ohos.os.ProcessManager: void sendSignal(int,int)>
<java.io.ObjectOutputStream: void write(int)>
<java.util.concurrent.ForkJoinTask: void <init>()>
<ohos.media.player.Player: boolean setAudioStreamType(int)>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.window.dialog.CommonDialog setContentText(java.lang.String)>
<ohos.sensor.agent.CategoryMotionAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase)>
<java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<ohos.agp.components.Image: float[] getCornerRadii()>
<ohos.aafwk.ability.Form: java.lang.String getAbilityName()>
<java.sql.CallableStatement: java.sql.Timestamp getTimestamp(int,java.util.Calendar)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 lerp(ohos.agp.render.render3d.math.Vector4,ohos.agp.render.render3d.math.Vector4,float)>
<ohos.data.search.schema.AppItem: java.lang.Long getDownloadCount()>
<ohos.bundle.OnPermissionChangedCallback: ohos.rpc.IRemoteObject asObject()>
<ohos.media.audio.SoundPlayer: int play(int)>
<ohos.global.icu.text.CompactDecimalFormat.CompactStyle: ohos.global.icu.text.CompactDecimalFormat.CompactStyle[] values()>
<java.util.concurrent.ConcurrentLinkedDeque: boolean removeLastOccurrence(java.lang.Object)>
<java.security.SecureRandom: byte[] generateSeed(int)>
<ohos.bundle.ShortcutInfo: void <clinit>()>
<java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<java.time.ZonedDateTime: java.time.ZonedDateTime withEarlierOffsetAtOverlap()>
<ohos.miscservices.inputmethodability.KeyboardDelegate: boolean onKeyUp(ohos.multimodalinput.event.KeyEvent)>
<ohos.aafwk.ability.DataAbilityHelper: ohos.utils.net.Uri normalizeUri(ohos.utils.net.Uri)>
<ohos.agp.render.render3d.gltf.GltfImportData: java.util.List getMeshes()>
<java.security.cert.CollectionCertStoreParameters: void <init>(java.util.Collection)>
<ohos.sensor.agent.CategoryOtherAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int,long)>
<ohos.data.orm.OrmObject: void <init>()>
<ohos.agp.render.render3d.resources.ResourceHandle: ohos.agp.render.render3d.Engine getEngine()>
<ohos.location.RequestParam: boolean marshalling(ohos.utils.Parcel)>
<java.time.format.DateTimeFormatter: java.util.Set getResolverFields()>
<java.util.Date: void setMinutes(int)>
<ohos.agp.render.opengl.GLES2Ext: void glTexParameterIuivEXT(int,int,int[])>
<ohos.data.resultset.ResultSet: boolean goToFirstRow()>
<ohos.agp.render.Paint: float getLineHeightCoefficient()>
<ohos.agp.render.opengl.GLES30: void glReadPixels(int,int,int,int,int,int,int)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat increaseAll(float)>
<java.util.logging.Logger: void finest(java.util.function.Supplier)>
<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>
<ohos.global.icu.text.Transliterator: void transliterate(ohos.global.icu.text.Replaceable,ohos.global.icu.text.Transliterator.Position,int)>
<ohos.aafwk.ability.ViewListener: void <init>()>
<java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<java.sql.Date: java.lang.String toString()>
<ohos.agp.components.NestedScrollView: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.util.Arrays: int binarySearch(float[],float)>
<ohos.media.camera.params.ParametersResult: java.lang.Object getResultValue(ohos.media.camera.params.ResultKey.Key)>
<ohos.utils.geo.Point: boolean equals(java.lang.Object)>
<java.time.chrono.AbstractChronology: int compareTo(java.time.chrono.Chronology)>
<java.util.stream.IntStream: java.util.stream.IntStream filter(java.util.function.IntPredicate)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType erase()>
<java.nio.file.spi.FileSystemProvider: java.nio.file.FileSystem newFileSystem(java.nio.file.Path,java.util.Map)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<java.security.InvalidKeyException: void <init>(java.lang.String)>
<java.io.PrintWriter: void clearError()>
<ohos.aafwk.ability.Ability: ohos.utils.net.Uri onSetCaller()>
<java.security.Provider: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<java.security.spec.RSAKeyGenParameterSpec: int getKeysize()>
<ohos.agp.utils.Circle: void set(ohos.agp.utils.Circle)>
<ohos.agp.render.render3d.math.Matrix4x4: ohos.agp.render.render3d.math.Vector3 transformPoint(ohos.agp.render.render3d.math.Vector3)>
<ohos.app.Context: ohos.global.resource.solidxml.Pattern getPattern()>
<java.time.LocalDateTime: java.time.LocalDateTime now(java.time.Clock)>
<java.lang.StringBuffer: java.lang.StringBuffer append(float)>
<ohos.global.icu.util.GregorianCalendar: int hashCode()>
<ohos.bundle.AbilityInfo: java.lang.String getOriginalClassName()>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: ohos.event.notification.NotificationRequest.NotificationPictureContent setAdditionalText(java.lang.String)>
<ohos.agp.components.element.PixelMapElement: void setFilterPixelMap(boolean)>
<ohos.agp.components.element.FrameAnimationElement: ohos.agp.components.element.Element getFrame(int)>
<java.util.zip.ZipOutputStream: void write(byte[],int,int)>
<java.time.temporal.TemporalQuery: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
<ohos.global.icu.util.VersionInfo: int compareTo(ohos.global.icu.util.VersionInfo)>
<ohos.media.audio.AudioDeviceDescriptor: int hashCode()>
<java.time.LocalDateTime: java.time.LocalDateTime ofEpochSecond(long,int,java.time.ZoneOffset)>
<ohos.global.icu.util.TimeZone: ohos.global.icu.util.TimeZone getTimeZone(java.lang.String,int)>
<java.lang.reflect.Modifier: boolean isVolatile(int)>
<javax.crypto.spec.IvParameterSpec: byte[] getIV()>
<ohos.agp.utils.Circle: void setCenterY(float)>
<ohos.agp.components.Text: int getInputMethodOption()>
<java.io.PrintStream: java.io.PrintStream append(char)>
<ohos.agp.colors.RgbColor: void <init>(int)>
<java.sql.CallableStatement: java.sql.Timestamp getTimestamp(int)>
<ohos.global.icu.text.Bidi: void setReorderingOptions(int)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal movePointLeft(int)>
<ohos.data.rdb.RdbStore: java.lang.String toString()>
<java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<java.util.jar.Attributes: void <init>(java.util.jar.Attributes)>
<java.time.LocalTime: java.time.LocalTime now(java.time.Clock)>
<ohos.global.icu.util.LocaleData: ohos.global.icu.util.LocaleData getInstance()>
<ohos.telephony.CdmaSignalInformation: boolean equals(java.lang.Object)>
<java.util.concurrent.BlockingQueue: int drainTo(java.util.Collection)>
<java.time.ZonedDateTime: java.time.chrono.ChronoLocalDateTime toLocalDateTime()>
<java.lang.Character: char toUpperCase(char)>
<java.time.LocalTime: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<java.util.LinkedList: int lastIndexOf(java.lang.Object)>
<ohos.global.resource.solidxml.TypedAttribute: ohos.global.resource.Resource getMediaResource()>
<java.util.Spliterator.OfLong: boolean tryAdvance(java.util.function.LongConsumer)>
<java.util.Set: boolean removeAll(java.util.Collection)>
<java.util.TreeMap: java.lang.Object lowerKey(java.lang.Object)>
<java.security.PermissionCollection: void setReadOnly()>
<java.time.ZonedDateTime: java.time.ZonedDateTime plusSeconds(long)>
<java.util.Arrays: int hashCode(char[])>
<ohos.agp.components.PageSlider: int getPageMargin()>
<ohos.location.RequestParam: java.lang.String toString()>
<ohos.vibrator.bean.VibrationPattern: int[] getTiming()>
<java.security.SecureRandomSpi: byte[] engineGenerateSeed(int)>
<ohos.utils.net.Uri: java.lang.String getEncodedPath()>
<ohos.agp.render.render3d.math.Vector2: ohos.agp.render.render3d.math.Vector2 subtract(ohos.agp.render.render3d.math.Vector2,float)>
<ohos.agp.text.Font: boolean isItalic()>
<ohos.bundle.ShortcutInfo: boolean isHomeShortcut()>
<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>
<ohos.data.resultset.AbsResultSet: java.lang.String getColumnNameForIndex(int)>
<ohos.systemrestore.SystemRestore: boolean rebootAndCleanCache(ohos.app.Context)>
<java.io.FileInputStream: void <init>(java.io.File)>
<java.lang.reflect.Constructor: boolean isSynthetic()>
<java.util.Map.Entry: java.lang.Object setValue(java.lang.Object)>
<java.util.concurrent.BlockingDeque: boolean removeLastOccurrence(java.lang.Object)>
<ohos.event.notification.NotificationSortingMap: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.i18n.text.MeasureOptions.Unit: java.lang.String getUnitName()>
<ohos.media.camera.device.CameraAbility: boolean isFormatSupported(int)>
<ohos.hiviewdfx.Debug: void emulatorTraceEnable()>
<ohos.sysappcomponents.calendar.entity.Accounts: boolean isSyncEvents()>
<java.util.prefs.AbstractPreferences: java.util.prefs.AbstractPreferences getChild(java.lang.String)>
<ohos.eventhandler.EventHandler: void removeEvent(int)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer)>
<ohos.global.resource.solidxml.TypedAttribute.AttrData: java.lang.String getAttrValue()>
<java.sql.Statement: void setEscapeProcessing(boolean)>
<ohos.agp.render.Path.FillType: void <clinit>()>
<ohos.agp.render.render3d.resources.GpuResourceHandle: boolean isValid(ohos.agp.render.render3d.resources.GpuResourceHandle)>
<ohos.agp.render.opengl.GLES31: void glProgramUniform1uiv(int,int,int,int[])>
<ohos.agp.colors.HslColor: void setHue(float)>
<java.lang.Number: float floatValue()>
<ohos.aafwk.ability.Ability: boolean connectAbility(ohos.aafwk.content.Intent,ohos.aafwk.ability.IAbilityConnection)>
<java.time.chrono.IsoChronology: java.time.LocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<ohos.global.icu.util.IndianCalendar: int handleGetLimit(int,int)>
<ohos.global.icu.text.DateIntervalFormat.FormattedDateInterval: java.lang.Appendable appendTo(java.lang.Appendable)>
<java.io.BufferedReader: void mark(int)>
<javax.security.auth.callback.UnsupportedCallbackException: javax.security.auth.callback.Callback getCallback()>
<ohos.miscservices.download.DownloadConfig.Builder: ohos.miscservices.download.DownloadConfig.Builder addHttpheader(java.lang.String,java.lang.String)>
<ohos.aafwk.ability.AbilitySlice: void disconnectAbility(ohos.aafwk.ability.IAbilityConnection)>
<ohos.eventhandler.EventHandler: void removeTask(java.lang.Runnable)>
<java.io.PrintStream: void <init>(java.io.OutputStream,boolean,java.lang.String)>
<ohos.agp.animation.AnimatorValue: void setLoopedListener(ohos.agp.animation.Animator.LoopedListener)>
<java.sql.DatabaseMetaData: boolean supportsLikeEscapeClause()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion multiply(ohos.agp.render.render3d.math.Quaternion,float)>
<java.lang.Character: boolean isSpace(char)>
<ohos.media.audio.AudioRenderer.PlayMode: ohos.media.audio.AudioRenderer.PlayMode valueOf(java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates between(java.lang.String,java.lang.String,java.lang.String)>
<ohos.global.icu.util.Calendar.WeekData: boolean equals(java.lang.Object)>
<ohos.media.common.Format: void putFloatValue(java.lang.String,float)>
<ohos.event.notification.NotificationActionButton.Builder: ohos.event.notification.NotificationActionButton.Builder setAutoCreatedReplies(boolean)>
<ohos.global.icu.text.DisplayContext: int value()>
<java.util.Calendar: void clear(int)>
<java.sql.DatabaseMetaData: int getMaxColumnsInTable()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: boolean triggerTouchEvent(ohos.aafwk.ability.Ability,ohos.multimodalinput.event.TouchEvent)>
<ohos.data.rdb.RdbStore: boolean backup(java.lang.String,byte[])>
<ohos.agp.animation.AnimatorGroup: void setStateChangedListener(ohos.agp.animation.Animator.StateChangedListener)>
<ohos.agp.components.Component: int getLeft()>
<ohos.agp.render.render3d.gltf.GltfData: java.lang.String getError()>
<ohos.hiviewdfx.HiChecker: java.util.EnumSet getRule()>
<ohos.agp.window.dialog.BaseDialog: void hide()>
<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>
<ohos.media.photokit.support.AlbumListInfo: void <init>(ohos.data.resultset.ResultSet,boolean)>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<javax.net.ssl.X509ExtendedTrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)>
<java.lang.Character: char lowSurrogate(int)>
<ohos.data.search.model.IndexData: void clear()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayVariant(ohos.global.icu.util.ULocale)>
<ohos.hiviewdfx.Debug: int getProcessRssSum()>
<java.util.logging.LogRecord: java.util.logging.Level getLevel()>
<java.nio.channels.SocketChannel: java.net.Socket socket()>
<java.sql.ResultSet: java.io.InputStream getAsciiStream(int)>
<ohos.sensor.agent.CategoryLightAgent: void <init>()>
<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>
<java.util.logging.Logger: void entering(java.lang.String,java.lang.String,java.lang.Object[])>
<ohos.agp.components.webengine.WebView: void onInactive()>
<ohos.event.commonevent.CommonEventSubscriber: void clearAbortCommonEvent()>
<java.net.DatagramSocket: int getSendBufferSize()>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitPrimitiveAsFloat(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<java.nio.IntBuffer: java.nio.IntBuffer get(int[])>
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<java.io.PushbackInputStream: void mark(int)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,float)>
<java.sql.Connection: void clearWarnings()>
<ohos.data.distributed.device.DeviceKvStore: byte[] getByteArray(java.lang.String,java.lang.String)>
<ohos.utils.geo.DimensFloat: java.lang.String toString()>
<java.sql.SQLIntegrityConstraintViolationException: void <init>(java.lang.String)>
<java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)>
<ohos.utils.zson.ZSONArray: java.util.Date getDate(int)>
<ohos.media.audio.AudioManager.AudioRingMode: ohos.media.audio.AudioManager.AudioRingMode[] values()>
<ohos.javax.xml.parsers.SAXParserFactory: void <init>()>
<java.security.SignatureException: void <init>(java.lang.String,java.lang.Throwable)>
<java.sql.ResultSet: boolean rowDeleted()>
<ohos.global.icu.text.DecimalFormat: void setRoundingMode(int)>
<java.time.temporal.TemporalField: boolean isTimeBased()>
<java.util.concurrent.ThreadLocalRandom: java.util.stream.LongStream longs()>
<ohos.sysappcomponents.contact.entity.Contact: java.util.List getPostalAddresses()>
<java.util.ArrayList: void removeRange(int,int)>
<ohos.utils.PacMap: void putBooleanValueArray(java.lang.String,boolean[])>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getInstance()>
<java.nio.channels.AsynchronousSocketChannel: java.util.concurrent.Future connect(java.net.SocketAddress)>
<ohos.media.audio.AudioStreamInfo.Builder: ohos.media.audio.AudioStreamInfo.Builder channelMask(ohos.media.audio.AudioStreamInfo.ChannelMask)>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate date(java.time.chrono.Era,int,int,int)>
<ohos.global.icu.text.Collator: ohos.global.icu.util.ULocale getFunctionalEquivalent(java.lang.String,ohos.global.icu.util.ULocale)>
<ohos.media.image.ImageSource: ohos.media.image.common.ImageInfo getImageInfo()>
<java.security.cert.CertPathValidatorException: java.security.cert.CertPathValidatorException.Reason getReason()>
<java.nio.file.attribute.BasicFileAttributes: java.lang.Object fileKey()>
<java.lang.invoke.MethodHandleInfo: boolean isVarArgs()>
<javax.security.cert.CertificateExpiredException: void <init>(java.lang.String)>
<java.lang.String: int offsetByCodePoints(int,int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates limit(int)>
<ohos.event.commonevent.CommonEventManager: void publishCommonEvent(ohos.event.commonevent.CommonEventData,ohos.event.commonevent.CommonEventPublishInfo,ohos.event.commonevent.CommonEventSubscriber)>
<java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],int)>
<java.time.OffsetTime: java.time.LocalTime toLocalTime()>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate date(int,int,int)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLInputFactory newFactory()>
<java.util.SimpleTimeZone: void setRawOffset(int)>
<ohos.rpc.RemoteObjectCallbackList: void onRemoteCallbackDied(ohos.rpc.IRemoteBroker)>
<java.io.PipedInputStream: void <init>(int)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>
<ohos.agp.utils.Matrix: int index(int,int)>
<ohos.nfc.oma.SEService: java.lang.String getVersion()>
<java.util.Locale: java.util.List filter(java.util.List,java.util.Collection,java.util.Locale.FilteringMode)>
<java.nio.file.ReadOnlyFileSystemException: void <init>()>
<java.util.concurrent.CountDownLatch: void await()>
<java.security.AccessControlContext: void checkPermission(java.security.Permission)>
<ohos.media.player.Player: boolean setPlaybackSpeed(float)>
<java.math.BigDecimal: java.math.BigDecimal negate()>
<java.util.concurrent.LinkedBlockingQueue: void clear()>
<ohos.miscservices.inputmethodability.TextInputClient: boolean reviseText(int,java.lang.String,java.lang.String)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage whenCompleteAsync(java.util.function.BiConsumer)>
<java.util.AbstractSequentialList: java.lang.Object get(int)>
<java.nio.file.attribute.UserDefinedFileAttributeView: java.lang.String name()>
<java.text.ParsePosition: void setErrorIndex(int)>
<ohos.media.audio.AudioRenderer: int getBufferFrameSize()>
<java.lang.Integer: int signum(int)>
<java.sql.ResultSet: java.lang.String getString(int)>
<ohos.data.resultset.AbsSharedResultSet: ohos.data.resultset.SharedBlock getBlock()>
<java.lang.Integer: int numberOfTrailingZeros(int)>
<java.text.DateFormat.Field: void <init>(java.lang.String,int)>
<ohos.utils.zson.ZSONReader: java.lang.Object readNull()>
<ohos.agp.render.Texture.AlphaType: int value()>
<java.util.GregorianCalendar: int getMaximum(int)>
<ohos.global.icu.util.ULocale: int hashCode()>
<ohos.agp.window.service.ComponentPadding: ohos.agp.window.service.DisplayNotch getDisplayNotch()>
<ohos.event.intentagent.TriggerInfo: void <init>(java.lang.String,ohos.aafwk.content.IntentParams,ohos.aafwk.content.Intent,int)>
<ohos.media.codec.Codec: boolean writeBuffer(java.nio.ByteBuffer,ohos.media.common.BufferInfo)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setColorEnabled(boolean)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture toCompletableFuture()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notIn(java.lang.String,java.sql.Time[])>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent: ohos.event.notification.NotificationRequest.NotificationConversationalContent setText(java.lang.String)>
<ohos.global.icu.text.UnicodeSet: boolean contains(java.lang.CharSequence)>
<java.util.Arrays: boolean equals(int[],int[])>
<java.sql.DatabaseMetaData: boolean usesLocalFiles()>
<ohos.utils.geo.RectFloat: ohos.utils.geo.Point getCenter()>
<ohos.utils.geo.Rect: ohos.utils.geo.Rect obtainIntersectRect(ohos.utils.geo.Rect)>
<ohos.bluetooth.ble.BlePeripheralManager: java.util.List getDevicesByStates(int[])>
<java.lang.Short: long longValue()>
<ohos.event.notification.NotificationSlot: void setLevel(int)>
<java.util.TimerTask: long scheduledExecutionTime()>
<ohos.bundle.ModuleInfo: void <init>(java.lang.String,java.lang.String)>
<ohos.media.common.StorageProperty.Builder: void <init>(ohos.media.common.StorageProperty)>
<ohos.event.notification.NotificationSubscriber: void <init>()>
<javax.lang.model.util.ElementKindVisitor6: void <init>(java.lang.Object)>
<java.security.Signature: void update(byte[],int,int)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>
<java.io.RandomAccessFile: int read(byte[])>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notIn(java.lang.String,java.sql.Timestamp[])>
<java.util.concurrent.locks.LockSupport: java.lang.Object getBlocker(java.lang.Thread)>
<java.util.Set: boolean isEmpty()>
<ohos.media.common.AVDescription.Builder: ohos.media.common.AVDescription build()>
<ohos.sensor.agent.CategoryLightAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int,long)>
<ohos.global.resource.solidxml.TypedAttribute: int getIntegerValue()>
<ohos.global.icu.math.MathContext: java.lang.String toString()>
<java.io.File: java.net.URL toURL()>
<java.lang.invoke.MutableCallSite: void setTarget(java.lang.invoke.MethodHandle)>
<ohos.bundle.LauncherService: java.util.Optional getAbilityInfo(ohos.aafwk.content.Intent,int)>
<ohos.data.distributed.common.Options: ohos.data.distributed.common.Options setKvStoreType(ohos.data.distributed.common.KvStoreType)>
<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>
<ohos.workscheduler.WorkInfo: int getRequestBatteryStatus()>
<java.util.ArrayDeque: java.lang.Object pollLast()>
<java.util.Locale: java.lang.String getDisplayScript(java.util.Locale)>
<java.lang.invoke.CallSite: java.lang.invoke.MethodHandle getTarget()>
<ohos.bundle.AbilityInfo: int getMinFormHeight()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,long)>
<ohos.agp.render.opengl.GLES31: int glCreateShaderProgramv(int,java.lang.String[])>
<ohos.telephony.ShortMessage: int getProtocolId()>
<java.net.NoRouteToHostException: void <init>(java.lang.String)>
<java.security.Policy: void setPolicy(java.security.Policy)>
<ohos.global.icu.text.DecimalFormatSymbols: void setPercent(char)>
<java.util.BitSet: int nextClearBit(int)>
<ohos.agp.components.element.ElementContainer: void setEnterFadeDuration(int)>
<ohos.light.bean.LightBrightness: int getGreenBrightness()>
<ohos.agp.render.opengl.GLES1X: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object peek()>
<ohos.media.common.StorageProperty.Builder: ohos.media.common.StorageProperty.Builder setRecorderFd(java.io.FileDescriptor)>
<java.nio.channels.MembershipKey: java.net.InetAddress group()>
<java.net.MulticastSocket: void <init>(int)>
<ohos.aafwk.ability.AbilityForm: void startFullPage()>
<java.security.acl.Group: boolean addMember(java.security.Principal)>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitNoType(javax.lang.model.type.NoType,java.lang.Object)>
<ohos.data.search.schema.NotepadItem: ohos.data.search.schema.NotepadItem setContent(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>
<java.lang.NoClassDefFoundError: void <init>()>
<ohos.multimodalinput.event.StylusEvent: int getAction()>
<ohos.bluetooth.BluetoothDeviceClass.MajorClass: void <init>()>
<ohos.event.commonevent.CommonEventSubscribeInfo: int getPriority()>
<ohos.agp.components.AttrSet: java.util.Optional getAttr(int)>
<ohos.agp.components.Component: void setMarginTop(int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates endsWith(java.lang.String,java.lang.String)>
<ohos.global.icu.text.Collator: java.lang.Object freeze()>
<ohos.agp.window.dialog.CommonDialog: void onDestroy()>
<java.util.regex.Matcher: boolean hasAnchoringBounds()>
<ohos.media.camera.device.FrameConfig: ohos.agp.utils.Rect getAfRect()>
<ohos.agp.components.TableLayoutManager: int getColumnCount()>
<ohos.eventhandler.EventHandler: void sendTimingEvent(ohos.eventhandler.InnerEvent,long)>
<ohos.aafwk.ability.Form: boolean marshalling(ohos.utils.Parcel)>
<ohos.sysappcomponents.contact.entity.Relation: void setCustomLabelName(java.lang.String)>
<ohos.vibrator.bean.VibrationPattern: int getDuration()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: java.lang.String toString()>
<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>
<java.util.stream.Collector: java.util.stream.Collector of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.stream.Collector.Characteristics[])>
<ohos.sensor.agent.CategoryLightAgent: boolean releaseSensorDataCallback(ohos.sensor.listener.ICategoryLightDataCallback)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates between(java.lang.String,java.util.Date,java.util.Date)>
<ohos.media.audio.AudioInterrupt: void setPauseWhenDucked(boolean)>
<javax.net.ssl.SSLEngine: boolean getUseClientMode()>
<javax.net.ssl.SSLParameters: void setUseCipherSuitesOrder(boolean)>
<java.lang.ProcessBuilder.Redirect.Type: java.lang.ProcessBuilder.Redirect.Type[] values()>
<java.util.stream.Collectors: java.util.stream.Collector reducing(java.lang.Object,java.util.function.Function,java.util.function.BinaryOperator)>
<javax.tools.Diagnostic: long getColumnNumber()>
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate now(java.time.ZoneId)>
<java.nio.IntBuffer: java.nio.IntBuffer allocate(int)>
<ohos.agp.render.opengl.GLES1X: void glGenBuffers(int,java.nio.IntBuffer)>
<ohos.agp.render.Canvas: void drawCircle(ohos.agp.utils.Circle,ohos.agp.render.Paint)>
<ohos.agp.components.Text: boolean isAutoFontSize()>
<ohos.data.search.schema.MessageItem: ohos.data.search.schema.MessageItem setRecipientPhone(java.lang.String)>
<java.time.chrono.MinguoDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.concurrent.ConcurrentHashMap: void forEachKey(long,java.util.function.Consumer)>
<ohos.global.icu.util.IndianCalendar: int handleComputeMonthStart(int,int,boolean)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.SortedMap tailMap(java.lang.Object)>
<java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock: void lockInterruptibly()>
<ohos.utils.zson.ZSONObject: java.lang.Object stringToClass(java.lang.String,java.lang.Class)>
<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>
<ohos.agp.utils.TextTool: int findChar(java.lang.CharSequence,char,int,int)>
<ohos.global.icu.text.TimeZoneFormat.ParseOption: ohos.global.icu.text.TimeZoneFormat.ParseOption valueOf(java.lang.String)>
<java.util.AbstractMap.SimpleImmutableEntry: java.lang.String toString()>
<ohos.global.icu.text.DecimalFormat: boolean areSignificantDigitsUsed()>
<ohos.global.icu.text.DecimalFormat: int getMultiplier()>
<java.lang.SecurityManager: void checkConnect(java.lang.String,int)>
<ohos.global.icu.text.Normalizer2: java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence)>
<ohos.agp.render.render3d.Entity: boolean isValid()>
<java.net.Socket: boolean isConnected()>
<java.time.chrono.ChronoZonedDateTime: java.lang.String toString()>
<java.lang.LinkageError: void <init>(java.lang.String)>
<javax.crypto.SecretKeyFactory: void <init>(javax.crypto.SecretKeyFactorySpi,java.security.Provider,java.lang.String)>
<javax.net.ssl.SSLSocket: void startHandshake()>
<ohos.miscservices.pasteboard.PasteData: ohos.utils.net.Uri getPrimaryUri()>
<ohos.sensor.agent.CategoryLightAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryLightDataCallback,ohos.sensor.bean.CategoryLight,int)>
<javax.lang.model.util.Elements: java.util.List getAllAnnotationMirrors(javax.lang.model.element.Element)>
<java.time.chrono.Era: boolean isSupported(java.time.temporal.TemporalField)>
<ohos.agp.render.opengl.GLES31: void glDispatchComputeIndirect(long)>
<java.security.KeyStoreSpi: java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)>
<java.time.temporal.TemporalUnit: long between(java.time.temporal.Temporal,java.time.temporal.Temporal)>
<java.net.CacheRequest: java.io.OutputStream getBody()>
<ohos.data.search.schema.Schema: java.lang.String getDescription()>
<ohos.agp.window.service.Window: void clearWindowFlags(int)>
<java.nio.file.spi.FileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>
<ohos.data.distributed.common.Entry: void <init>()>
<ohos.rpc.MessageParcel: void readRemoteObjectList(java.util.List)>
<ohos.agp.components.TimePicker: int getSelectorItemNum()>
<java.util.Calendar: void setLenient(boolean)>
<javax.crypto.spec.PBEKeySpec: char[] getPassword()>
<java.util.concurrent.locks.Condition: void signal()>
<ohos.data.search.schema.NoticeItem: ohos.data.search.schema.NoticeItem setLocation(java.lang.String)>
<ohos.global.icu.text.Transliterator: java.lang.String getDisplayName(java.lang.String,ohos.global.icu.util.ULocale)>
<javax.lang.model.util.TypeKindVisitor6: java.lang.Object visitPrimitive(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<ohos.utils.geo.RectFloat: ohos.utils.geo.Point getPivot()>
<java.sql.PreparedStatement: void setAsciiStream(int,java.io.InputStream,long)>
<ohos.sysappcomponents.contact.entity.SipAddress: void setCustomLabelName(java.lang.String)>
<ohos.nfc.tag.NfcATag: ohos.nfc.tag.NfcATag getInstance(ohos.nfc.tag.TagInfo)>
<java.nio.file.FileSystems: java.nio.file.FileSystem getFileSystem(java.net.URI)>
<java.nio.channels.DatagramChannel: void <init>(java.nio.channels.spi.SelectorProvider)>
<java.io.LineNumberReader: void <init>(java.io.Reader)>
<ohos.event.notification.MessageUser: ohos.event.notification.MessageUser setKey(java.lang.String)>
<ohos.global.icu.text.MessageFormat: void setFormatByArgumentIndex(int,java.text.Format)>
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>
<java.util.GregorianCalendar: void <init>(java.util.Locale)>
<java.sql.ResultSet: void updateInt(int,int)>
<javax.net.ssl.X509KeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)>
<ohos.global.icu.text.BreakIterator: void setText(java.lang.CharSequence)>
<java.sql.SQLOutput: void writeRowId(java.sql.RowId)>
<java.text.Bidi: void <init>(java.text.AttributedCharacterIterator)>
<java.net.DatagramSocketImpl: void setTimeToLive(int)>
<ohos.media.audio.AudioRenderer.SpeedPara.Builder: void <init>()>
<ohos.media.photokit.metadata.AVStorage.Audio.Artists.Albums: ohos.utils.net.Uri fetchResource(java.lang.String,long)>
<java.security.AlgorithmParametersSpi: void engineInit(byte[])>
<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int,java.security.cert.CertPathValidatorException.Reason)>
<ohos.agp.window.dialog.ToastDialog: void onCreate()>
<java.util.Random: java.util.stream.IntStream ints()>
<ohos.bundleactive.BundleActiveInfosMgr: int queryAppUsagePriorityGroup()>
<java.io.ObjectOutputStream: void writeShort(int)>
<java.time.ZonedDateTime: int getYear()>
<ohos.media.image.PixelMap: long getPixelBytesCapacity()>
<java.lang.StackTraceElement: java.lang.String toString()>
<ohos.global.icu.text.TimeZoneNames: ohos.global.icu.text.TimeZoneNames getInstance(ohos.global.icu.util.ULocale)>
<java.math.BigDecimal: java.math.BigDecimal movePointLeft(int)>
<ohos.media.tubecore.AVTube: void cmdSetVolume(int)>
<ohos.bluetooth.ble.BleScanFilter: void setPeripheralServiceUuid(java.util.UUID,java.util.UUID)>
<java.util.concurrent.LinkedTransferQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<ohos.data.distributed.common.Options: ohos.data.distributed.common.Options setAutoSync(boolean)>
<ohos.event.commonevent.ICommonEventManager: void publishCommonEvent(ohos.event.commonevent.CommonEventData,ohos.event.commonevent.CommonEventPublishInfo,ohos.event.commonevent.ICommonEventSubscriber)>
<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>
<ohos.event.commonevent.CommonEventData: void <init>(ohos.aafwk.content.Intent,int,java.lang.String)>
<ohos.global.icu.text.DateFormat.BooleanAttribute: ohos.global.icu.text.DateFormat.BooleanAttribute valueOf(java.lang.String)>
<ohos.utils.Parcel: void readPacMapEx(ohos.interwork.utils.PacMapEx)>
<ohos.agp.colors.HsvPalette: void <clinit>()>
<ohos.data.search.schema.NoticeItem: java.util.List getNoticeSchema()>
<ohos.location.Location: void setAdditions(ohos.utils.PacMap)>
<java.time.chrono.ChronoPeriod: java.lang.String toString()>
<java.lang.Double: short shortValue()>
<ohos.multimodalinput.event.KeyEvent: long getKeyDownDuration()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getImportedKeys(java.lang.String,java.lang.String,java.lang.String)>
<ohos.data.distributed.common.KvStore: void setSyncRange(java.util.List,java.util.List)>
<ohos.global.icu.text.LocaleDisplayNames: ohos.global.icu.text.LocaleDisplayNames getInstance(ohos.global.icu.util.ULocale)>
<java.util.jar.Attributes: void clear()>
<ohos.net.ConnectionProperties: int getMtu()>
<java.util.prefs.PreferencesFactory: java.util.prefs.Preferences systemRoot()>
<ohos.aafwk.content.Intent: float getFloatParam(java.lang.String,float)>
<ohos.wifi.WifiDevice: boolean isConnected()>
<java.sql.DatabaseMetaData: java.sql.ResultSet getExportedKeys(java.lang.String,java.lang.String,java.lang.String)>
<java.util.function.Function: java.util.function.Function andThen(java.util.function.Function)>
<ohos.event.notification.ReminderRequest: int compareTo(ohos.event.notification.ReminderRequest)>
<ohos.data.rdb.RdbNoMemException: void <init>()>
<ohos.global.icu.text.CompactDecimalFormat: ohos.global.icu.text.CompactDecimalFormat getInstance(java.util.Locale,ohos.global.icu.text.CompactDecimalFormat.CompactStyle)>
<java.net.Inet6Address: boolean isMCNodeLocal()>
<ohos.media.audio.AudioRenderer: boolean unduckVolume()>
<javax.sql.RowSet: java.lang.String getUrl()>
<ohos.aafwk.ability.ViewsStatus: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.zone.ZoneOffsetTransition: int hashCode()>
<java.time.LocalDateTime: void <clinit>()>
<javax.tools.ForwardingJavaFileObject: void <init>(javax.tools.JavaFileObject)>
<java.security.cert.X509CertSelector: void setCertificate(java.security.cert.X509Certificate)>
<ohos.telephony.NetworkState: boolean equals(java.lang.Object)>
<ohos.agp.render.Paint: void clearBlurDrawLooper()>
<java.time.DayOfWeek: java.time.DayOfWeek of(int)>
<ohos.utils.Parcel: boolean appendFrom(ohos.utils.Parcel)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.DisplayContext getContext(ohos.global.icu.text.DisplayContext.Type)>
<ohos.data.distributed.common.Query: ohos.data.distributed.common.Query greaterThanOrEqualTo(java.lang.String,java.lang.String)>
<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getSimpleName()>
<java.sql.CallableStatement: java.sql.Array getArray(java.lang.String)>
<java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>
<java.lang.invoke.CallSite: void setTarget(java.lang.invoke.MethodHandle)>
<ohos.agp.components.Component: boolean isPressed()>
<java.time.chrono.MinguoDate: long toEpochDay()>
<ohos.nfc.tag.NfcATag: short getSak()>
<java.security.KeyManagementException: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>
<java.lang.Integer: boolean equals(java.lang.Object)>
<java.util.ArrayList: void replaceAll(java.util.function.UnaryOperator)>
<ohos.agp.render.Canvas: void restoreToCount(int)>
<java.io.File: boolean equals(java.lang.Object)>
<javax.net.ssl.SSLSocket: void <init>()>
<ohos.aafwk.ability.DataUriUtils: void <init>()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: boolean runOnUIThreadSync(java.lang.Runnable)>
<java.io.PipedReader: int read()>
<ohos.media.audio.AudioCapturer: int getAudioInputSource()>
<java.util.stream.LongStream: java.util.stream.LongStream flatMap(java.util.function.LongFunction)>
<ohos.global.icu.text.PluralFormat: void <init>(ohos.global.icu.util.ULocale)>
<ohos.agp.utils.Matrix.ScaleToFit: void <clinit>()>
<javax.sql.RowSet: void setBlob(int,java.io.InputStream,long)>
<javax.tools.SimpleJavaFileObject: javax.lang.model.element.Modifier getAccessLevel()>
<ohos.global.icu.util.TimeZone: ohos.global.icu.util.TimeZone getFrozenTimeZone(java.lang.String)>
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>
<java.security.cert.PKIXParameters: void setExplicitPolicyRequired(boolean)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: java.util.Optional waitAbilityMonitor(ohos.aafwk.ability.delegation.IAbilityMonitor)>
<ohos.agp.components.element.ElementContainer.ElementState: void <init>(ohos.agp.components.element.ElementContainer)>
<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>
<java.sql.Ref: void setObject(java.lang.Object)>
<ohos.miscservices.timeutility.Time: long getRealTimeNs()>
<ohos.telephony.SimInfoManager: int getDefaultVoiceSlotId()>
<ohos.utils.geo.RectFloat: ohos.utils.geo.RectFloat obtainIntersectRect(float,float,float,float)>
<java.io.ObjectInputStream: java.lang.Class resolveProxyClass(java.lang.String[])>
<ohos.agp.components.IndexBar: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<java.security.acl.AclEntry: void setNegativePermissions()>
<java.util.Timer: void schedule(java.util.TimerTask,long,long)>
<java.util.function.BiFunction: java.util.function.BiFunction andThen(java.util.function.Function)>
<java.nio.channels.AsynchronousFileChannel: java.util.concurrent.Future read(java.nio.ByteBuffer,long)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndAdd(java.lang.Object,long)>
<ohos.global.icu.text.PluralFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: boolean retainAll(java.util.Collection)>
<ohos.agp.components.BaseItemProvider: void setFilter(ohos.agp.components.TextFilter)>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(int,double)>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 getNormalized()>
<ohos.global.icu.text.UnicodeSet: void <init>(java.lang.String,java.text.ParsePosition,ohos.global.icu.text.SymbolTable)>
<ohos.agp.colors.RgbColor: boolean equals(java.lang.Object)>
<java.nio.LongBuffer: int compareTo(java.nio.LongBuffer)>
<ohos.agp.components.Component.KeyEventListener: boolean onKeyEvent(ohos.agp.components.Component,ohos.multimodalinput.event.KeyEvent)>
<ohos.agp.render.render3d.util.MeshBuilder.VertexData: java.nio.FloatBuffer getTangents()>
<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>
<java.io.CharArrayReader: boolean markSupported()>
<ohos.system.OsHelper: java.io.FileDescriptor copyFileDescriptor(java.io.FileDescriptor)>
<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>
<java.util.Collections: java.util.SortedSet emptySortedSet()>
<java.sql.Blob: long position(java.sql.Blob,long)>
<java.util.concurrent.BlockingDeque: boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<java.time.YearMonth: java.time.YearMonth now()>
<ohos.utils.zson.ZSONReader: void startArray()>
<ohos.data.search.schema.PhotoItem: java.lang.String getRoad()>
<java.security.DigestOutputStream: java.lang.String toString()>
<ohos.agp.components.BaseItemProvider: void notifyDataSetItemRemoved(int)>
<ohos.agp.render.opengl.GLES20: void glVertexAttrib3f(int,float,float,float)>
<ohos.utils.RationalNumber: boolean equals(java.lang.Object)>
<ohos.sensor.agent.CategoryBodyAgent: boolean setSensorDataCallback(ohos.sensor.listener.ICategoryBodyDataCallback,ohos.sensor.bean.CategoryBody,long,long)>
<ohos.usb.USBDevicePipe: byte[] getRawDescriptors()>
<java.nio.file.attribute.AclEntry: java.lang.String toString()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThanOrEqualTo(java.lang.String,java.util.Calendar)>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatter toFormatter()>
<ohos.global.icu.text.RuleBasedCollator: boolean getNumericCollation()>
<java.time.chrono.HijrahDate: boolean equals(java.lang.Object)>
<java.util.concurrent.BlockingQueue: void put(java.lang.Object)>
<java.nio.channels.SocketChannel: long read(java.nio.ByteBuffer[])>
<ohos.rpc.RemoteProxy: long getIdentity()>
<ohos.utils.FloatDimension: int hashCode()>
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor()>
<java.util.concurrent.atomic.LongAdder: java.lang.String toString()>
<javax.lang.model.element.Name: boolean equals(java.lang.Object)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream empty()>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat divisionAll(float)>
<java.sql.DriverManager: void setLogStream(java.io.PrintStream)>
<ohos.agp.components.Checkbox: void setTextColor(ohos.agp.utils.Color)>
<javax.net.ssl.SSLContextSpi: void engineInit(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>
<java.security.cert.CertPath: byte[] getEncoded()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setVisibleness(int)>
<ohos.media.camera.device.CameraAbility: int[] getSupportedAeMode()>
<javax.lang.model.util.Types: javax.lang.model.type.WildcardType getWildcardType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>
<ohos.telephony.NetworkState: void <init>()>
<java.util.zip.ZipEntry: int hashCode()>
<java.security.spec.DSAParameterSpec: java.math.BigInteger getG()>
<ohos.agp.components.PageSlider: void <init>(ohos.app.Context)>
<ohos.aafwk.content.Intent.OperationBuilder: ohos.aafwk.content.Intent.OperationBuilder withBundleName(java.lang.String)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void println(java.lang.String)>
<ohos.agp.render.render3d.components.NodeComponent: boolean isExported()>
<ohos.agp.components.TableLayout: int getOrientation()>
<java.net.Socket: int getSoTimeout()>
<java.util.LinkedList: boolean offerLast(java.lang.Object)>
<java.util.function.DoublePredicate: java.util.function.DoublePredicate and(java.util.function.DoublePredicate)>
<ohos.agp.render.opengl.Utils: boolean nearEqual(float,float,float)>
<ohos.media.photokit.metadata.AVStorage: ohos.utils.net.Uri fetchLoggerResource()>
<javax.sql.RowSet: void setString(int,java.lang.String)>
<ohos.accessibility.AccessibilityAbilityInfo: int getCapabilityValues()>
<java.sql.SQLRecoverableException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<ohos.agp.colors.CmykColor: void <init>(float,float,float,float,int)>
<java.util.zip.ZipOutputStream: void setComment(java.lang.String)>
<java.sql.SQLTransientConnectionException: void <init>(java.lang.String)>
<ohos.global.icu.text.SimpleDateFormat: ohos.global.icu.text.TimeZoneFormat getTimeZoneFormat()>
<java.lang.Character: java.lang.String toString(char)>
<ohos.agp.components.Text: void setTextSize(int)>
<ohos.wifi.WifiDeviceConfig: boolean marshalling(ohos.utils.Parcel)>
<ohos.aafwk.ability.AbilitySlice: boolean connectAbility(ohos.aafwk.content.Intent,ohos.aafwk.ability.IAbilityConnection)>
<ohos.app.IAbilityManager: java.util.List queryRunningAbilityMissionInfo(int)>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,int)>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.Object cloneAsThawed()>
<ohos.workscheduler.WorkInfo: boolean unmarshalling(ohos.utils.Parcel)>
<java.net.URI: java.lang.String getScheme()>
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>
<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>
<java.util.Arrays: void fill(long[],int,int,long)>
<ohos.javax.xml.parsers.SAXParser: ohos.javax.xml.validation.Schema getSchema()>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object take()>
<ohos.global.icu.text.BreakIterator: ohos.global.icu.text.BreakIterator getLineInstance(ohos.global.icu.util.ULocale)>
<ohos.agp.components.TableLayout.LayoutConfig: void <init>()>
<java.time.Instant: java.time.Instant plus(java.time.temporal.TemporalAmount)>
<ohos.aafwk.ability.Ability.LayoutParamsHelper: ohos.aafwk.ability.Ability.LayoutParamsHelper setDimAmount(float)>
<ohos.agp.components.PageSlider: boolean isCircularModeEnabled()>
<ohos.agp.render.opengl.GLES2Ext: void <init>()>
<java.security.cert.CertPathValidator: void <init>(java.security.cert.CertPathValidatorSpi,java.security.Provider,java.lang.String)>
<ohos.agp.render.render3d.components.TransformComponent: ohos.agp.render.render3d.math.Quaternion getRotation()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates in(java.lang.String,java.lang.String[])>
<java.util.IdentityHashMap: java.lang.Object clone()>
<java.security.cert.X509CRLSelector: java.lang.String toString()>
<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.io.ObjectOutputStream: void writeStreamHeader()>
<ohos.media.camera.device.FrameConfig.Builder: java.util.List getSurfaces()>
<ohos.agp.render.Canvas: void drawRoundRect(ohos.agp.utils.RectFloat,float,float,ohos.agp.render.Paint)>
<javax.lang.model.util.ElementScanner6: java.lang.Object scan(java.lang.Iterable,java.lang.Object)>
<ohos.utils.PacMap: void <clinit>()>
<ohos.global.icu.util.ULocale: int compareTo(java.lang.Object)>
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator.RequestorType)>
<ohos.media.audio.Timestamp: long getFramePosition()>
<ohos.agp.render.opengl.GLES31: void glValidateProgramPipeline(int)>
<ohos.eventhandler.EventHandler: void processEvent(ohos.eventhandler.InnerEvent)>
<java.util.concurrent.atomic.AtomicLong: double doubleValue()>
<ohos.global.resource.Resource: int read(byte[],int,int)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates lessThanOrEqualTo(java.lang.String,double)>
<ohos.location.GeoAddress: void clearLongitude()>
<java.text.BreakIterator: void setText(java.text.CharacterIterator)>
<java.sql.ResultSet: java.sql.Date getDate(int,java.util.Calendar)>
<java.util.Locale.FilteringMode: java.util.Locale.FilteringMode valueOf(java.lang.String)>
<ohos.media.player.Player: float getPlaybackSpeed()>
<ohos.org.w3c.dom.ls.LSInput: boolean getCertifiedText()>
<ohos.bluetooth.ble.BlePeripheralDevice: ohos.bluetooth.ble.BlePeripheralDevice createInstance(java.lang.String)>
<ohos.utils.zson.ZSONArray: java.lang.String getString(int)>
<ohos.aafwk.ability.AbilityLifecycleCallbacks: void onAbilityActive(ohos.aafwk.ability.Ability)>
<ohos.nfc.NfcController: void unregisterForegroundDispatch(ohos.aafwk.ability.Ability)>
<ohos.global.icu.text.CollationElementIterator: int secondaryOrder(int)>
<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger(java.lang.String)>
<java.lang.invoke.ConstantCallSite: void setTarget(java.lang.invoke.MethodHandle)>
<ohos.utils.Scope: java.lang.Comparable getUpper()>
<java.util.concurrent.ConcurrentNavigableMap: java.util.concurrent.ConcurrentNavigableMap headMap(java.lang.Object,boolean)>
<java.lang.String: int hashCode()>
<ohos.media.audio.SoundPlayer: boolean pause(int)>
<ohos.global.icu.util.Currency: java.lang.String getSymbol(ohos.global.icu.util.ULocale)>
<ohos.workscheduler.WorkInfo: boolean isRequestBattery()>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitByte(byte,java.lang.Object)>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction: void <clinit>()>
<java.util.Deque: java.lang.Object peekLast()>
<java.util.zip.Inflater: int getTotalIn()>
<java.security.CryptoPrimitive: void <clinit>()>
<java.util.function.BinaryOperator: java.util.function.BinaryOperator maxBy(java.util.Comparator)>
<ohos.aafwk.ability.Ability: boolean setSwipeToDismiss(boolean)>
<ohos.sysappcomponents.contact.ContactsCollection: void release()>
<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>
<javax.tools.ForwardingJavaFileManager: java.lang.Iterable list(javax.tools.JavaFileManager.Location,java.lang.String,java.util.Set,boolean)>
<ohos.agp.components.ComponentProvider: void inflateLayout(ohos.app.Context)>
<ohos.agp.render.render3d.math.Vector4: float getZ()>
<java.util.IdentityHashMap: void <init>(java.util.Map)>
<java.awt.font.TextAttribute: void <init>(java.lang.String)>
<ohos.event.intentagent.IntentAgentConstant.Flags: void <clinit>()>
<ohos.utils.Scope: ohos.utils.Scope expand(ohos.utils.Scope)>
<java.util.DoubleSummaryStatistics: double getAverage()>
<java.util.NavigableMap: java.util.Map.Entry pollLastEntry()>
<java.io.InputStreamReader: void <init>(java.io.InputStream)>
<java.io.UncheckedIOException: void <init>(java.io.IOException)>
<java.io.ObjectOutputStream: void writeClassDescriptor(java.io.ObjectStreamClass)>
<ohos.agp.components.ListContainer: ohos.agp.components.Component findComponentById(int)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeProcessingInstruction(java.lang.String,java.lang.String)>
<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThanOrEqualTo(java.lang.String,java.sql.Time)>
<ohos.agp.components.DirectionalLayout.LayoutConfig: void <init>(int,int)>
<java.time.Duration: java.time.Duration minusNanos(long)>
<java.lang.StringBuffer: void <init>(java.lang.CharSequence)>
<java.lang.Thread: void sleep(long,int)>
<ohos.aafwk.ability.ProcessErrorInfo: java.lang.String getProcessName()>
<java.util.concurrent.AbstractExecutorService: void <init>()>
<ohos.agp.render.Paint.Join: ohos.agp.render.Paint.Join[] values()>
<java.net.DatagramPacket: byte[] getData()>
<java.sql.ResultSet: boolean isClosed()>
<java.util.concurrent.ForkJoinTask: java.lang.Object join()>
<ohos.agp.window.service.ComponentPadding: int getUnchangedPaddingLeft()>
<ohos.accessibility.AccessibilityEventInfo: int getCount()>
<ohos.bundle.InstallerCallback: void onFinished(int,java.lang.String)>
<ohos.data.search.schema.Schema: java.lang.String getCategory()>
<ohos.media.audio.SoundPlayer: boolean setVolume(int,float)>
<ohos.agp.components.ComponentContainer.LayoutConfig: int[] getMargins()>
<ohos.media.photokit.support.AlbumList: java.lang.String getCategoryId()>
<ohos.data.orm.OrmContext: void registerEntityObserver(java.lang.String,ohos.data.orm.OrmObjectObserver)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates in(java.lang.String,double[])>
<ohos.data.resultset.AbsResultSet: boolean isClosed()>
<java.lang.ProcessBuilder.Redirect.Type: void <clinit>()>
<ohos.agp.components.Component: boolean getFocusBorderEnable()>
<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>
<java.time.Duration: java.util.List getUnits()>
<java.util.Locale: java.util.List filterTags(java.util.List,java.util.Collection,java.util.Locale.FilteringMode)>
<ohos.utils.geo.Point: int getPointXToInt()>
<java.io.BufferedReader: java.lang.String readLine()>
<javax.lang.model.element.ElementVisitor: java.lang.Object visit(javax.lang.model.element.Element)>
<ohos.agp.animation.Animator: void setLoopedCountInternal(int)>
<ohos.net.NetSpecifier.Builder: ohos.net.NetSpecifier build()>
<java.sql.SQLWarning: void <init>(java.lang.String)>
<ohos.bundle.LauncherAbilityInfo: ohos.bundle.ElementName getElementName()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.String toString()>
<java.lang.reflect.Modifier: int constructorModifiers()>
<java.sql.SQLInvalidAuthorizationSpecException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<ohos.agp.components.PageSliderProvider: java.lang.Object createPageInContainer(ohos.agp.components.ComponentContainer,int)>
<java.sql.ResultSet: java.sql.ResultSetMetaData getMetaData()>
<ohos.utils.zson.ZSONWriter: void <init>(java.io.Writer,boolean)>
<ohos.global.icu.text.MessagePattern.ArgType: ohos.global.icu.text.MessagePattern.ArgType valueOf(java.lang.String)>
<java.util.PriorityQueue: void <init>(java.util.Comparator)>
<java.util.UUID: long node()>
<ohos.global.icu.text.PluralRules.PluralType: ohos.global.icu.text.PluralRules.PluralType[] values()>
<ohos.agp.render.opengl.GLES20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<java.util.Formatter: void <init>(java.util.Locale)>
<ohos.telephony.CellularDataInfoManager: boolean isCellularDataEnabled()>
<java.nio.channels.spi.SelectorProvider: java.nio.channels.Channel inheritedChannel()>
<java.time.chrono.Chronology: java.time.chrono.Chronology of(java.lang.String)>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahChronology getChronology()>
<ohos.accessibility.AccessibilityEventInfo: int getStartIndex()>
<ohos.global.icu.text.DateFormatSymbols: void setMonths(java.lang.String[])>
<java.sql.ResultSet: double getDouble(java.lang.String)>
<ohos.sysappcomponents.contact.entity.Contact: void addGroup(ohos.sysappcomponents.contact.entity.Group)>
<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence,java.text.ParsePosition)>
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>
<java.time.zone.ZoneOffsetTransitionRule: java.time.DayOfWeek getDayOfWeek()>
<javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind valueOf(java.lang.String)>
<java.lang.reflect.Parameter: boolean isNamePresent()>
<java.io.PrintStream: void println(int)>
<java.lang.invoke.MethodHandleInfo: java.lang.String getName()>
<ohos.global.icu.text.MessagePattern: int validateArgumentName(java.lang.String)>
<ohos.location.GeoAddress: java.lang.String getAdministrativeArea()>
<ohos.agp.components.Component: boolean isFocusable()>
<ohos.agp.render.Paint: void setStyle(ohos.agp.render.Paint.Style)>
<ohos.global.icu.text.Bidi: ohos.global.icu.text.BidiRun getParagraphByIndex(int)>
<ohos.data.search.model.SearchableEntity: java.lang.String toString()>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>
<ohos.org.w3c.dom.TypeInfo: boolean isDerivedFrom(java.lang.String,java.lang.String,int)>
<ohos.agp.components.Component: ohos.agp.components.Component findFocus()>
<ohos.media.image.common.ScaleMode: ohos.media.image.common.ScaleMode valueOf(java.lang.String)>
<java.util.GregorianCalendar: java.lang.Object clone()>
<ohos.bundle.ShortcutInfo: void setDisableMessage(java.lang.String)>
<java.lang.reflect.Method: java.lang.Object getDefaultValue()>
<java.security.cert.PKIXParameters: void setPolicyMappingInhibited(boolean)>
<java.util.TreeSet: void <init>(java.util.SortedSet)>
<ohos.agp.utils.Rect: int[] getRectSize()>
<ohos.global.i18n.text.MeasureOptions: void <init>()>
<ohos.app.ElementsCallback: void onMemoryLevel(int)>
<java.lang.invoke.ConstantCallSite: void <init>(java.lang.invoke.MethodHandle)>
<java.time.chrono.ThaiBuddhistDate: int lengthOfMonth()>
<ohos.agp.components.Component.EstimateSpec: void <init>()>
<ohos.ai.asr.AsrIntent.AsrAudioSrcType: ohos.ai.asr.AsrIntent.AsrAudioSrcType valueOf(java.lang.String)>
<java.sql.Connection: void commit()>
<ohos.data.rdb.StoreConfig.StorageMode: ohos.data.rdb.StoreConfig.StorageMode valueOf(java.lang.String)>
<ohos.media.common.AVMetadata: java.lang.CharSequence getText(java.lang.String)>
<ohos.utils.zson.ZSONArray: ohos.utils.zson.ZSONArray getZSONArray(int)>
<ohos.aafwk.ability.ProcessErrorInfo: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler()>
<ohos.agp.render.opengl.GLES30: java.lang.String glGetActiveUniformBlockName(int,int)>
<ohos.agp.components.IndexBar: void setIndexString(java.lang.String[],ohos.agp.render.Paint)>
<java.nio.file.Files: java.util.List readAllLines(java.nio.file.Path)>
<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>
<java.io.ObjectOutputStream: void writeObjectOverride(java.lang.Object)>
<java.lang.Short: short parseShort(java.lang.String,int)>
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType type()>
<ohos.global.icu.text.DecimalFormat: int getMaximumFractionDigits()>
<ohos.utils.zson.ZSONObject: boolean isEmpty()>
<ohos.global.icu.util.Calendar: void validateField(int)>
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>
<ohos.agp.render.opengl.GLES30: void glUniform3ui(int,int,int,int)>
<java.lang.Number: double doubleValue()>
<ohos.data.distributed.user.SingleKvStore: void registerSyncCallback(ohos.data.distributed.common.SyncCallback)>
<ohos.global.icu.text.DecimalFormat: boolean isGroupingUsed()>
<java.lang.invoke.WrongMethodTypeException: void <init>(java.lang.String)>
<ohos.global.icu.text.ConstrainedFieldPosition: void constrainField(java.text.Format.Field)>
<java.time.temporal.ValueRange: int checkValidIntValue(long,java.time.temporal.TemporalField)>
<java.io.File: boolean isHidden()>
<java.util.function.UnaryOperator: java.util.function.UnaryOperator identity()>
<ohos.media.common.sessioncore.AVControllerCallback: void onAVQueueChanged(java.util.List)>
<java.time.LocalDate: java.time.chrono.ChronoLocalDate plus(java.time.temporal.TemporalAmount)>
<java.util.concurrent.ConcurrentHashMap: void <init>(java.util.Map)>
<ohos.aafwk.content.Intent: void <init>(ohos.aafwk.content.Intent)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendLocalizedOffset(java.time.format.TextStyle)>
<java.lang.System: void load(java.lang.String)>
<java.text.DecimalFormatSymbols: void setInternationalCurrencySymbol(java.lang.String)>
<ohos.agp.render.opengl.GLES20: void glUniform3iv(int,int,java.nio.IntBuffer)>
<java.lang.Double: void <init>(java.lang.String)>
<ohos.agp.components.DatePicker: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.ai.cv.text.TextConfiguration.TextShape: ohos.ai.cv.text.TextConfiguration.TextShape valueOf(java.lang.String)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendText(java.time.temporal.TemporalField)>
<java.io.ObjectOutput: void write(byte[],int,int)>
<java.net.URLConnection: java.lang.String getHeaderField(int)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.NavigableSet tailSet(java.lang.Object,boolean)>
<java.io.PipedWriter: void <init>()>
<ohos.bundle.ElementName: boolean unmarshalling(ohos.utils.Parcel)>
<java.io.LineNumberReader: int read(char[],int,int)>
<ohos.global.icu.text.MessagePattern: int hashCode()>
<java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>
<java.lang.StringBuffer: void setCharAt(int,char)>
<javax.lang.model.util.Elements: boolean isDeprecated(javax.lang.model.element.Element)>
<java.util.HashMap: void <init>(int)>
<ohos.event.notification.NotificationSlotGroup: java.util.List getSlots()>
<java.time.format.DecimalStyle: java.time.format.DecimalStyle of(java.util.Locale)>
<ohos.aafwk.ability.DataAbilityOperation: boolean unmarshalling(ohos.utils.Parcel)>
<java.nio.file.attribute.BasicFileAttributes: boolean isSymbolicLink()>
<ohos.data.usage.CachePolicy: void removeCacheCleanXattr(java.io.File)>
<java.lang.String: java.lang.String substring(int)>
<java.time.zone.ZoneRules: boolean isFixedOffset()>
<ohos.agp.components.Image: void setClipGravity(int)>
<ohos.workscheduler.WorkInfo.Builder: ohos.workscheduler.WorkInfo.Builder setPacMaps(ohos.utils.PacMap)>
<ohos.utils.BasePacMap: boolean marshalling(ohos.utils.Parcel)>
<java.util.zip.InflaterOutputStream: void finish()>
<ohos.global.icu.text.CaseMap: ohos.global.icu.text.CaseMap.Title toTitle()>
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate dateNow(java.time.Clock)>
<ohos.agp.render.Path: void setFillType(ohos.agp.render.Path.FillType)>
<ohos.sensor.agent.CategoryOrientationAgent: ohos.sensor.bean.SensorBase getSingleSensor(int)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject: void signal()>
<ohos.data.rdb.RdbStore: ohos.data.resultset.ResultSet querySql(java.lang.String,java.lang.String[])>
<java.lang.invoke.MutableCallSite: java.lang.invoke.MethodHandle getTarget()>
<ohos.global.icu.text.NumberFormat: java.lang.String getPattern(ohos.global.icu.util.ULocale,int)>
<ohos.system.version.SystemVersion: void <init>()>
<ohos.smartcomm.IMultiPathCallback: void onCallback(java.lang.String)>
<ohos.media.common.sessioncore.AVQueueElement: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.usb.USBConfig: boolean isSelfPowered()>
<ohos.agp.text.Layout: float getNumOfFontHeight()>
<ohos.sysappcomponents.calendar.entity.Accounts: void setRemindersType(java.lang.String)>
<java.time.Instant: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.Locale: java.lang.String[] getISOCountries()>
<java.sql.Time: java.lang.String toString()>
<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator.Attribute)>
<java.util.IntSummaryStatistics: long getSum()>
<ohos.agp.animation.timelinecurves.SpringCurve: void <init>(float,float)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenAcceptBoth(java.util.concurrent.CompletionStage,java.util.function.BiConsumer)>
<ohos.global.resource.solidxml.TypedAttribute: java.lang.String getParsedValue()>
<ohos.agp.components.element.VectorElement: boolean isAntiAlias()>
<ohos.agp.render.render3d.TargetBuffer: int getWidth()>
<java.text.DecimalFormatSymbols: char getPerMill()>
<ohos.agp.components.DatePicker: void setMonthFixed(boolean)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putChar(int,char)>
<javax.lang.model.SourceVersion: javax.lang.model.SourceVersion[] values()>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>
<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>
<java.sql.DatabaseMetaData: boolean supportsStoredFunctionsUsingCallSyntax()>
<ohos.usb.USBConfig: void <init>(int,int,java.lang.String,boolean,boolean)>
<java.security.spec.EllipticCurve: int hashCode()>
<java.time.chrono.ChronoLocalDateTime: int compareTo(java.lang.Object)>
<ohos.global.resource.solidxml.Pattern: java.util.HashMap getPatternHash()>
<ohos.data.distributed.common.KvStoreResultSet: boolean goToRow(int)>
<ohos.account.OsAccount: void setLocalName(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationMediaContent: java.lang.String getText()>
<ohos.data.distributed.device.DeviceStatus: void <clinit>()>
<java.util.concurrent.DelayQueue: java.lang.Object peek()>
<ohos.agp.window.service.DisplayManager: java.util.List getAllDisplays(ohos.app.Context)>
<ohos.global.icu.number.LocalizedNumberFormatter: java.text.Format toFormat()>
<javax.lang.model.util.SimpleAnnotationValueVisitor6: java.lang.Object visitEnumConstant(javax.lang.model.element.VariableElement,java.lang.Object)>
<ohos.global.icu.text.SearchIterator: int getMatchLength()>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>
<java.util.Vector: int indexOf(java.lang.Object)>
<ohos.miscservices.inputmethodability.TextInputClient: boolean subscribeEditingText(int,ohos.miscservices.inputmethod.EditingCapability)>
<java.lang.SecurityManager: void checkSystemClipboardAccess()>
<java.io.ObjectInputStream: int readUnsignedByte()>
<java.security.KeyStore: void store(java.security.KeyStore.LoadStoreParameter)>
<java.security.cert.X509Certificate: java.lang.String getSigAlgName()>
<java.security.acl.AclNotFoundException: void <init>()>
<ohos.agp.render.Shader: ohos.agp.render.Shader.TileMode getTileMode()>
<ohos.agp.components.Attr: ohos.agp.components.element.Element getElement()>
<java.lang.Math: double cosh(double)>
<ohos.location.Locator: void startLocating(ohos.location.RequestParam,ohos.location.LocatorCallback)>
<ohos.aafwk.ability.AbilityForm: void setText(int,java.lang.String)>
<java.nio.channels.AsynchronousChannelGroup: boolean isShutdown()>
<java.math.BigDecimal: java.math.BigInteger toBigIntegerExact()>
<javax.net.ssl.SSLServerSocket: void setNeedClientAuth(boolean)>
<ohos.ai.tts.TtsParams: void setSpeed(int)>
<java.util.Queue: boolean add(java.lang.Object)>
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinTask adapt(java.lang.Runnable)>
<java.nio.ByteBuffer: int compareTo(java.lang.Object)>
<java.lang.invoke.MethodType: java.lang.Class parameterType(int)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseCaseInsensitive()>
<java.sql.ResultSet: boolean previous()>
<ohos.agp.render.opengl.GLES30: void glPauseTransformFeedback()>
<ohos.event.notification.IAdvancedNotificationManager: boolean hasNotificationPolicyAccessPermission(java.lang.String)>
<javax.sql.RowSet: void execute()>
<ohos.agp.text.Layout: int getLimitWidth(int)>
<ohos.ai.tts.TtsClient: boolean init(ohos.ai.tts.TtsParams)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,short)>
<ohos.bundle.ICleanCacheCallback: void onCleanCacheFinished(boolean)>
<java.util.Scanner: void <init>(java.nio.channels.ReadableByteChannel,java.lang.String)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates indexedBy(java.lang.String)>
<ohos.agp.components.Component: boolean isVibrationEffectEnabled()>
<ohos.telephony.ShortMessage: java.lang.String getVisibleMessageBody()>
<java.security.cert.CertPathValidator: java.lang.String getAlgorithm()>
<java.util.Locale.LanguageRange: double getWeight()>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder clearExtensions()>
<java.sql.ResultSet: java.io.InputStream getUnicodeStream(int)>
<ohos.media.extractor.Extractor: void <init>()>
<ohos.agp.text.Layout: int getBaseline(int)>
<java.security.spec.ECFieldFp: void <init>(java.math.BigInteger)>
<java.lang.VirtualMachineError: void <init>(java.lang.String)>
<ohos.account.app.AppAccount: boolean unmarshalling(ohos.utils.Parcel)>
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDate plus(java.time.temporal.TemporalAmount)>
<ohos.sysappcomponents.calendar.entity.Events: long getEventStartTime()>
<ohos.data.rdb.RdbStore: void executeSql(java.lang.String,java.lang.Object[])>
<ohos.media.audio.AudioStreamInfo.ContentType: void <clinit>()>
<java.text.Collator: int getStrength()>
<java.util.Spliterator.OfDouble: boolean tryAdvance(java.lang.Object)>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 add(ohos.agp.render.render3d.math.Vector4,float)>
<ohos.global.icu.text.BreakIterator: void setText(java.text.CharacterIterator)>
<java.security.Policy: java.security.Provider getProvider()>
<ohos.media.sessioncore.AVController: boolean dispatchAVKeyEvent(ohos.multimodalinput.event.KeyEvent)>
<java.sql.SQLOutput: void writeRef(java.sql.Ref)>
<ohos.global.icu.util.CopticCalendar: java.lang.String getType()>
<ohos.agp.components.Rating: ohos.agp.components.element.Element getUnfilledElement()>
<ohos.app.GeneralReceiver: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.DatePicker: void setNormalTextFont(ohos.agp.text.Font)>
<ohos.aafwk.ability.delegation.IAbilityDelegator: ohos.aafwk.ability.delegation.IAbilityMonitor addAbilityMonitor(java.lang.String)>
<java.util.IdentityHashMap: java.util.Set keySet()>
<javax.lang.model.element.NestingKind: boolean isNested()>
<java.sql.ResultSet: void updateClob(java.lang.String,java.sql.Clob)>
<ohos.aafwk.ability.ProcessErrorInfo: java.lang.String toString()>
<ohos.global.icu.util.Calendar: ohos.global.icu.util.Calendar getInstance(ohos.global.icu.util.TimeZone)>
<ohos.agp.components.Text: boolean isTextCursorVisible()>
<java.lang.StringBuilder: void setLength(int)>
<java.util.concurrent.ConcurrentMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>
<ohos.media.player.Player.StreamInfo: int getStreamType()>
<java.util.concurrent.BlockingDeque: java.lang.Object poll()>
<java.sql.BatchUpdateException: void <init>()>
<ohos.telephony.CellularDataInfoManager: void removeObserver(ohos.telephony.CellularDataStateObserver)>
<java.lang.Thread: void checkAccess()>
<ohos.sysappcomponents.contact.ContactsHelper: long addContact(ohos.sysappcomponents.contact.entity.Contact)>
<ohos.bundle.ApplicationInfo: java.util.List getModuleInfos()>
<ohos.agp.graphics.SurfaceOps: void removeCallback(ohos.agp.graphics.SurfaceOps.Callback)>
<ohos.global.icu.util.IslamicCalendar: void <init>(int,int,int,int,int,int)>
<ohos.agp.window.dialog.CommonDialog: ohos.agp.window.dialog.CommonDialog setTitleSubText(java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: boolean unmarshalling(ohos.utils.Parcel)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.lang.String toString()>
<javax.lang.model.element.VariableElement: javax.lang.model.element.Element getEnclosingElement()>
<ohos.data.distributed.common.FieldNode: java.lang.String getFieldName()>
<ohos.media.player.Player.IPlayerCallback: void onRewindToComplete()>
<java.sql.Statement: void cancel()>
<java.sql.Struct: java.lang.Object[] getAttributes(java.util.Map)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withDecimalStyle(java.time.format.DecimalStyle)>
<java.lang.reflect.Parameter: int hashCode()>
<java.security.interfaces.RSAMultiPrimePrivateCrtKey: java.math.BigInteger getPublicExponent()>
<java.nio.channels.SeekableByteChannel: java.nio.channels.SeekableByteChannel position(long)>
<ohos.data.resultset.ResultSet.ColumnType: ohos.data.resultset.ResultSet.ColumnType[] values()>
<ohos.global.icu.util.Calendar: int newestStamp(int,int,int)>
<java.util.concurrent.DelayQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<ohos.aafwk.ability.AbilityPackage: void dispatchAbilitySavedState(ohos.utils.PacMap)>
<java.security.KeyStore: java.security.cert.Certificate[] getCertificateChain(java.lang.String)>
<java.sql.ResultSetMetaData: int getColumnCount()>
<ohos.aafwk.ability.FormBindingData: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.utils.Line: java.lang.String toString()>
<ohos.sysappcomponents.calendar.support.TableSupport: ohos.data.rdb.ValuesBucket getValueBucket(ohos.sysappcomponents.calendar.entity.CalendarEntity)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>
<ohos.media.photokit.metadata.AVMetadataHelper: void close()>
<java.io.FilterWriter: void flush()>
<ohos.app.ProcessInfo: void <init>(java.lang.String,int)>
<ohos.multimodalinput.event.KeyBoardEvent: boolean isNoncharacterKeyPressed(int)>
<java.security.Certificate: java.security.Principal getGuarantor()>
<ohos.usb.USBDevice: void setInterfaces(ohos.usb.USBInterface[])>
<ohos.eventhandler.InnerEvent: void <clinit>()>
<ohos.media.image.ImageSource: ohos.media.image.ImageSource createIncrementalSource(ohos.media.image.ImageSource.IncrementalSourceOptions)>
<java.util.concurrent.ConcurrentHashMap.KeySetView: java.lang.String toString()>
<ohos.media.camera.params.PropertyKey.Key: java.lang.String getName()>
<java.util.Spliterator.OfDouble: java.util.Spliterator trySplit()>
<ohos.media.camera.device.CameraAbility: java.util.List getSupportedHighFrameRate(int,ohos.media.image.common.Size)>
<ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder: ohos.security.keystore.KeyGenAlgorithmParaSpec.Builder setSecKeyUsagePurposes(int)>
<ohos.agp.text.Font.Builder: ohos.agp.text.Font.Builder setWeight(int)>
<ohos.utils.geo.Rect: int getPivotYCoordinate()>
<ohos.data.distributed.common.Value: int hashCode()>
<java.net.DatagramSocket: void <init>(int)>
<ohos.wifi.p2p.WifiP2pCallback: void eventP2pDevice(ohos.wifi.p2p.WifiP2pDevice)>
<java.security.cert.CertPath: java.lang.Object writeReplace()>
<ohos.agp.components.DatePicker: boolean isDayFixed()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet set(int,int)>
<ohos.rpc.IPCSkeleton: java.lang.String getLocalDeviceID()>
<ohos.data.distributed.common.KvStoreResultSet: boolean isAtLastRow()>
<java.nio.CharBuffer: int read(java.nio.CharBuffer)>
<ohos.net.LocalSocket: java.io.FileDescriptor getSocketFd()>
<java.time.Period: java.time.chrono.IsoChronology getChronology()>
<ohos.agp.render.opengl.EGLObjectHandle: int hashCode()>
<ohos.agp.animation.timelinecurves.CubicBezierCurve: void <init>(float,float,float,float)>
<ohos.global.icu.text.DateFormatSymbols: void <init>(java.lang.Class,ohos.global.icu.util.ULocale)>
<ohos.agp.components.ComponentContainer: ohos.agp.components.Component findComponentById(int)>
<ohos.location.Location: double getLatitude()>
<ohos.utils.PacMap: java.lang.Object clone()>
<java.lang.reflect.Field: boolean equals(java.lang.Object)>
<ohos.agp.render.opengl.EGLObjectHandle: void <init>(long)>
<java.nio.file.Files: java.nio.file.Path setLastModifiedTime(java.nio.file.Path,java.nio.file.attribute.FileTime)>
<java.text.Collator: int getDecomposition()>
<java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>
<java.time.Period: java.lang.String toString()>
<java.io.FileInputStream: void <init>(java.lang.String)>
<ohos.app.IAbilityManager: java.util.List getProcessesErrorInfo()>
<java.nio.file.WatchKey: boolean isValid()>
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance()>
<ohos.event.notification.NotificationHelper: void publishNotification(ohos.event.notification.NotificationRequest)>
<java.nio.charset.Charset: java.lang.String displayName(java.util.Locale)>
<java.util.Collections: void copy(java.util.List,java.util.List)>
<java.util.logging.Logger: void config(java.util.function.Supplier)>
<java.lang.Double: int compare(double,double)>
<java.lang.invoke.VolatileCallSite: java.lang.invoke.MethodHandle dynamicInvoker()>
<ohos.utils.net.Uri: java.lang.String getDecodedHost()>
<ohos.global.icu.text.DateIntervalFormat.FormattedDateInterval: java.lang.String toString()>
<ohos.telephony.RadioInfoManager: boolean isNrSupported()>
<ohos.media.camera.device.FrameConfig.Builder: ohos.media.camera.device.FrameConfig.Builder setAwbMode(int,ohos.agp.utils.Rect)>
<ohos.global.icu.util.CopticCalendar: void <init>(int,int,int)>
<java.nio.FloatBuffer: float[] array()>
<ohos.wifi.WifiLinkedInfo: int getBand()>
<java.text.DateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>
<ohos.agp.components.Component: void setScrollbarRadius(float)>
<ohos.agp.render.opengl.EGL: ohos.agp.render.opengl.EGLDisplay eglGetCurrentDisplay()>
<ohos.media.audio.AudioCapturer: int read(byte[],int,int,boolean)>
<java.util.Dictionary: java.util.Enumeration keys()>
<ohos.telephony.SimInfoManager: boolean hasOperatorPrivileges(int)>
<java.util.Optional: java.util.Optional empty()>
<ohos.agp.components.ListContainer: int getExtraItemsNumber()>
<ohos.ai.cv.sr.SisrConfiguration: float getScale()>
<ohos.agp.render.opengl.GLES20: void glDeleteShader(int)>
<ohos.sensor.agent.CategoryMotionAgent: ohos.sensor.bean.SensorBase getSingleSensor(int)>
<java.util.Arrays: int hashCode(double[])>
<javax.crypto.CipherSpi: byte[] engineDoFinal(byte[],int,int)>
<java.io.RandomAccessFile: void readFully(byte[])>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture exceptionally(java.util.function.Function)>
<java.util.regex.MatchResult: int groupCount()>
<java.util.logging.Handler: void <init>()>
<java.time.OffsetDateTime: java.time.OffsetDateTime plusHours(long)>
<ohos.miscservices.pasteboard.SystemPasteboard: void setPasteData(ohos.miscservices.pasteboard.PasteData)>
<java.nio.channels.AsynchronousFileChannel: void lock(java.lang.Object,java.nio.channels.CompletionHandler)>
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>
<ohos.agp.window.dialog.CommonDialog: boolean clickKeyDown(ohos.multimodalinput.event.KeyEvent)>
<java.sql.DatabaseMetaData: java.lang.String getTimeDateFunctions()>
<java.util.BitSet: java.util.BitSet valueOf(byte[])>
<javax.tools.ForwardingJavaFileManager: javax.tools.FileObject getFileForOutput(javax.tools.JavaFileManager.Location,java.lang.String,java.lang.String,javax.tools.FileObject)>
<java.time.LocalTime: java.time.LocalTime withSecond(int)>
<ohos.agp.window.dialog.BaseDialog: void <init>(ohos.app.Context,int)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.NavigableSet headSet(java.lang.Object,boolean)>
<java.util.TooManyListenersException: void <init>(java.lang.String)>
<ohos.org.xml.sax.helpers.DefaultHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<java.lang.RuntimeException: void <init>()>
<ohos.agp.components.Component: void setMarginRight(int)>
<ohos.bluetooth.BluetoothRemoteDevice: java.lang.String getDeviceAddr()>
<ohos.hiviewdfx.Debug: java.util.Map getMemoryStatistics()>
<java.nio.channels.SocketChannel: boolean isConnected()>
<ohos.agp.render.opengl.GLES1X: void glMaterialxv(int,int,int[])>
<ohos.media.audio.SoundEffect.SoundEffectInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>
<ohos.global.icu.text.RuleBasedCollator: void setStrength(int)>
<java.lang.StrictMath: float copySign(float,float)>
<ohos.interwork.bundle.ElementNameEx: void setBundleName(java.lang.String)>
<ohos.event.notification.NotificationConstant.InputsSource: void <clinit>()>
<ohos.multimodalinput.event.SpeechEvent: int getScene()>
<ohos.nfc.cardemulation.HostService: byte[] handleRemoteCommand(byte[],ohos.aafwk.content.IntentParams)>
<ohos.hiviewdfx.FaultLogger.FaultLogInfo: int getPid()>
<ohos.global.icu.util.JapaneseCalendar: void <init>(java.util.Locale)>
<ohos.agp.components.BaseItemProvider: ohos.agp.components.TextFilter getFilter()>
<ohos.bundle.IBundleManager: void registerAllPermissionsChanged(ohos.rpc.IRemoteObject)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenCombineAsync(java.util.concurrent.CompletionStage,java.util.function.BiFunction)>
<javax.lang.model.type.ExecutableType: java.util.List getTypeVariables()>
<java.util.Arrays: boolean deepEquals(java.lang.Object[],java.lang.Object[])>
<java.io.DataInput: void readFully(byte[])>
<ohos.security.permission.Permission.OnRequestPermissionsResult: void onCancel(java.lang.String,java.lang.String[])>
<java.util.zip.Inflater: void setInput(byte[],int,int)>
<ohos.data.search.schema.VideoItem: java.lang.Double getRating()>
<ohos.global.icu.text.TimeZoneNames: java.util.Set getAvailableMetaZoneIDs(java.lang.String)>
<ohos.workscheduler.WorkInfo: int getCurrentWorkID()>
<ohos.global.icu.text.RelativeDateTimeFormatter: ohos.global.icu.text.RelativeDateTimeFormatter getInstance(ohos.global.icu.util.ULocale,ohos.global.icu.text.NumberFormat,ohos.global.icu.text.RelativeDateTimeFormatter.Style,ohos.global.icu.text.DisplayContext)>
<java.util.LinkedList: java.lang.Object[] toArray()>
<java.util.Observable: void <init>()>
<java.util.function.IntUnaryOperator: java.util.function.IntUnaryOperator andThen(java.util.function.IntUnaryOperator)>
<ohos.agp.utils.DimensFloat: void <init>(float,float)>
<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<java.nio.file.Files: boolean isWritable(java.nio.file.Path)>
<ohos.agp.components.MagicLayout.LayoutConfig: void <init>(ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.sql.ResultSet: java.sql.Blob getBlob(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationLongTextContent: void <init>(java.lang.String)>
<ohos.media.photokit.support.FetchResult: java.lang.Object getLastObject()>
<java.time.Year: java.lang.String format(java.time.format.DateTimeFormatter)>
<java.util.stream.Stream: java.lang.Object[] toArray()>
<ohos.agp.components.Component: void setScrollbarBackgroundColor(ohos.agp.utils.Color)>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.window.dialog.BaseDialog setDuration(int)>
<ohos.agp.render.render3d.components.SceneComponent: void setBackgroundType(ohos.agp.render.render3d.components.SceneComponent.BackgroundType)>
<java.util.Optional: boolean equals(java.lang.Object)>
<ohos.agp.render.render3d.SceneNode: ohos.agp.render.render3d.Entity getEntity()>
<java.util.concurrent.CompletableFuture: void <init>()>
<java.util.prefs.Preferences: java.lang.String toString()>
<java.util.stream.Collector: java.util.function.Supplier supplier()>
<ohos.agp.components.Component.ScrolledListener: void onContentScrolled(ohos.agp.components.Component,int,int,int,int)>
<ohos.rpc.RemoteProxy: boolean sendRequest(int,ohos.rpc.MessageParcel,ohos.rpc.MessageParcel,ohos.rpc.MessageOption)>
<java.time.Instant: void <clinit>()>
<ohos.agp.components.webengine.WebConfig: void setMediaAutoReplay(boolean)>
<java.util.concurrent.Executors: java.util.concurrent.ThreadFactory privilegedThreadFactory()>
<ohos.utils.ConditionHelper: void resetCondition()>
<java.util.concurrent.ArrayBlockingQueue: java.lang.Object take()>
<java.util.Spliterators: java.util.Spliterator spliterator(java.lang.Object[],int)>
<java.sql.ResultSet: void updateString(int,java.lang.String)>
<ohos.sensor.agent.CategoryLightAgent: ohos.sensor.bean.SensorBase getSingleSensor(int)>
<java.lang.NoSuchFieldError: void <init>()>
<ohos.agp.render.Texture: void <init>(ohos.media.image.PixelMap)>
<java.text.BreakIterator: int current()>
<javax.lang.model.util.ElementFilter: void <clinit>()>
<ohos.global.icu.util.TimeZone: java.lang.String getWindowsID(java.lang.String)>
<ohos.bluetooth.A2dpSink: ohos.bluetooth.A2dpSink getProfile(ohos.app.Context)>
<ohos.event.notification.NotificationSlot: int getLockscreenVisibleness()>
<ohos.javax.xml.stream.events.StartDocument: boolean encodingSet()>
<java.util.Vector: void removeAllElements()>
<ohos.hiviewdfx.Debug: void attachAgent(java.lang.String,java.lang.String,java.lang.ClassLoader)>
<ohos.global.icu.util.IslamicCalendar: ohos.global.icu.util.IslamicCalendar.CalculationType getCalculationType()>
<java.net.HttpURLConnection: boolean usingProxy()>
<ohos.data.search.schema.EmailItem: ohos.data.search.schema.EmailItem setSenderEmail(java.lang.String)>
<java.lang.BootstrapMethodError: void <init>(java.lang.Throwable)>
<java.time.format.DateTimeFormatter: java.text.Format toFormat(java.time.temporal.TemporalQuery)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenComposeAsync(java.util.function.Function,java.util.concurrent.Executor)>
<ohos.global.icu.util.Calendar: int getGregorianMonth()>
<ohos.agp.components.VelocityDetector: float[] getVelocity()>
<java.nio.file.DirectoryIteratorException: void <init>(java.io.IOException)>
<java.sql.Statement: int getMaxRows()>
<ohos.data.search.schema.EmailItem: java.lang.String getSenderEmail()>
<ohos.media.audio.AudioWaver: boolean setFrequencyDataObserver(ohos.media.audio.AudioWaver.FrequencyDataObserver,int)>
<java.util.stream.IntStream: java.util.Spliterator.OfInt spliterator()>
<java.time.Year: boolean isSupported(java.time.temporal.TemporalField)>
<ohos.global.icu.lang.UCharacter: boolean isJavaIdentifierPart(int)>
<java.util.LinkedList: java.lang.Object poll()>
<ohos.agp.components.IndexBar: void setSelectedString(java.lang.String)>
<java.lang.Float: long longValue()>
<ohos.event.notification.NotificationSubscriber: void onUpdate(ohos.event.notification.NotificationSortingMap)>
<java.util.concurrent.atomic.AtomicIntegerArray: int incrementAndGet(int)>
<ohos.global.icu.text.UCharacterIterator: ohos.global.icu.text.UCharacterIterator getInstance(java.lang.StringBuffer)>
<java.time.YearMonth: java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount)>
<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>
<java.time.OffsetDateTime: java.time.OffsetDateTime of(java.time.LocalDate,java.time.LocalTime,java.time.ZoneOffset)>
<ohos.interwork.eventhandler.EventHandlerEx: void <init>(ohos.eventhandler.EventRunner)>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection)>
<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.nio.CharBuffer)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.String getGMTOffsetDigits()>
<ohos.global.icu.text.BidiRun: byte getEmbeddingLevel()>
<ohos.global.icu.text.DateFormat: boolean getBooleanAttribute(ohos.global.icu.text.DateFormat.BooleanAttribute)>
<java.util.Arrays: void parallelSort(double[])>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object clone()>
<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>
<ohos.agp.colors.ColorSpec: ohos.agp.colors.ColorSpec valueOf(java.lang.String)>
<java.lang.SecurityManager: boolean checkTopLevelWindow(java.lang.Object)>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitTypeAsAnnotationType(javax.lang.model.element.TypeElement,java.lang.Object)>
<ohos.javax.xml.stream.XMLOutputFactory: ohos.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoLocalDateTime toLocalDateTime()>
<ohos.data.rdb.RdbNoMemException: void <init>(java.lang.String)>
<java.time.chrono.ChronoLocalDateTime: java.util.Comparator timeLineOrder()>
<ohos.agp.render.render3d.components.RenderMeshComponent: void setMaterial(ohos.agp.render.render3d.resources.ResourceHandle)>
<java.lang.Character: int hashCode(char)>
<ohos.accessibility.AccessibilityEventInfo: void setBundleName(java.lang.CharSequence)>
<java.lang.StringBuffer: void <init>(int)>
<ohos.data.rdb.RdbInterruptException: void <init>()>
<java.time.ZoneId: java.lang.String toString()>
<ohos.global.icu.text.UnicodeFilter: boolean contains(int)>
<java.util.function.LongToIntFunction: int applyAsInt(long)>
<java.sql.ResultSet: void updateTime(java.lang.String,java.sql.Time)>
<java.io.FilterReader: void close()>
<ohos.net.NetHandle: void bindSocket(java.io.FileDescriptor)>
<ohos.sysappcomponents.calendar.entity.Participants: java.lang.String getParticipantName()>
<java.net.CookieStore: boolean remove(java.net.URI,java.net.HttpCookie)>
<ohos.org.xml.sax.SAXNotSupportedException: void <init>()>
<javax.crypto.Cipher: javax.crypto.ExemptionMechanism getExemptionMechanism()>
<java.io.BufferedWriter: void <init>(java.io.Writer)>
<ohos.agp.components.Component: boolean isComponentDisplayed()>
<ohos.media.camera.device.FrameConfig.Builder: float getZoomValue()>
<ohos.global.icu.text.DecimalFormat: void setCurrency(ohos.global.icu.util.Currency)>
<java.net.ContentHandlerFactory: java.net.ContentHandler createContentHandler(java.lang.String)>
<java.util.ListIterator: java.lang.Object previous()>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate dateYearDay(java.time.chrono.Era,int,int)>
<ohos.org.xml.sax.InputSource: void setPublicId(java.lang.String)>
<ohos.agp.components.LayoutScatterException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.media.camera.params.ParameterKey.Key: java.lang.Object cloneValue(java.lang.Object)>
<java.nio.LongBuffer: java.nio.LongBuffer slice()>
<java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingDeque: boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<java.nio.file.Files: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>
<ohos.backgroundtaskmgr.ExpiredCallback: void onExpired()>
<java.lang.ArrayIndexOutOfBoundsException: void <init>()>
<ohos.bundle.ElementName: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<ohos.data.search.schema.Schema: java.lang.Object setReserved1(java.lang.String)>
<ohos.bundle.HapModuleInfo: java.lang.String getBackgroundImg()>
<java.security.KeyStoreSpi: void engineSetKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[])>
<java.sql.Blob: void truncate(long)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle invoker(java.lang.invoke.MethodType)>
<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getX()>
<ohos.app.AbilityContext: java.io.File getFilesDir()>
<ohos.event.notification.INotificationSubscriber: void onNotificationRemoved(ohos.event.notification.NotificationRequest)>
<ohos.aafwk.ability.delegation.AbilityDelegatorRegistry: void registerInstance(ohos.aafwk.ability.delegation.IAbilityDelegator,ohos.aafwk.ability.delegation.IAbilityDelegatorArgs)>
<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>
<javax.net.ssl.SSLEngine: java.lang.String[] getEnabledProtocols()>
<ohos.utils.LruBuffer: void <init>(int)>
<ohos.agp.components.ListContainer: void addComponent(ohos.agp.components.Component,int,int)>
<javax.security.auth.AuthPermission: void <init>(java.lang.String,java.lang.String)>
<javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind[] values()>
<java.nio.channels.SelectableChannel: java.nio.channels.spi.SelectorProvider provider()>
<ohos.data.rdb.RdbStore: long insertOrThrowException(java.lang.String,ohos.data.rdb.ValuesBucket)>
<ohos.net.NetStatusCallback: void onAvailable(ohos.net.NetHandle)>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 multiply(ohos.agp.render.render3d.math.Vector4,float)>
<ohos.agp.render.Paint: void setGradientShaderColor(ohos.agp.utils.Color[])>
<ohos.utils.LongPlainArray: int indexOfValue(java.lang.Object)>
<ohos.global.icu.util.HebrewCalendar: java.lang.String getType()>
<ohos.agp.components.Component: boolean isTouchFocusable()>
<ohos.agp.components.ListContainer: ohos.agp.components.BaseItemProvider getItemProvider()>
<ohos.agp.components.DependentLayout: void setGravity(int)>
<ohos.app.AbilityContext: void setWakeUpScreen(boolean)>
<java.security.cert.X509Certificate: boolean[] getIssuerUniqueID()>
<java.util.concurrent.locks.ReentrantLock: java.lang.String toString()>
<java.net.CacheResponse: java.io.InputStream getBody()>
<java.security.Provider.Service: java.lang.String getType()>
<java.sql.PreparedStatement: void setNull(int,int,java.lang.String)>
<ohos.security.seckeychain.SecKeyChain: boolean isSupported(java.lang.String)>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock readLock()>
<javax.crypto.EncryptedPrivateKeyInfo: void <init>(byte[])>
<ohos.media.camera.device.FrameConfig: int getAeTrigger()>
<ohos.sysappcomponents.contact.entity.Event: void <init>(java.lang.String,java.lang.String)>
<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer,long)>
<ohos.media.camera.device.Camera: int triggerLoopingGroupCapture(java.util.List)>
<java.io.UncheckedIOException: java.lang.Throwable getCause()>
<ohos.ai.cv.common.VisionConfiguration.Builder: ohos.ai.cv.common.VisionConfiguration.Builder setClientVersion(java.lang.String)>
<java.util.prefs.Preferences: void removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener)>
<ohos.global.icu.text.DecimalFormat: void setParseBigDecimal(boolean)>
<ohos.agp.utils.Contour: boolean isEmpty()>
<ohos.global.icu.text.SimpleDateFormat: ohos.global.icu.text.DateFormat.Field patternCharToDateFormatField(char)>
<ohos.telephony.WcdmaSignalInformation: java.lang.String toString()>
<java.lang.StringBuilder: java.lang.StringBuilder reverse()>
<javax.crypto.spec.PBEKeySpec: int getIterationCount()>
<java.util.AbstractCollection: boolean removeAll(java.util.Collection)>
<ohos.agp.graphics.Surface: void syncCanvasDrawCalls()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates indexedBy(java.lang.String)>
<java.util.zip.DeflaterInputStream: void close()>
<java.sql.SQLOutput: void writeString(java.lang.String)>
<java.util.BitSet: java.util.BitSet get(int,int)>
<java.time.YearMonth: int lengthOfMonth()>
<ohos.media.common.AVMetadata: boolean hasKey(java.lang.String)>
<java.net.URLConnection: void setUseCaches(boolean)>
<ohos.agp.components.PageSlider.ReboundEffectParams: float getOverscrollRate()>
<ohos.global.resource.Element: void <init>()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<ohos.global.icu.text.DecimalFormat: void setSignificantDigitsUsed(boolean)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates greaterThanOrEqualTo(java.lang.String,double)>
<ohos.data.search.model.IndexForm: void <init>(java.lang.String)>
<ohos.system.OsHelperErrnoException: void <init>(int,java.lang.String)>
<ohos.agp.components.RecycleItemProvider: void onItemMoved(int,int)>
<java.time.OffsetDateTime: java.time.OffsetDateTime of(java.time.LocalDateTime,java.time.ZoneOffset)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Operation getOperation()>
<ohos.data.distributed.device.DeviceChangeCallback: void onChanged(ohos.data.distributed.device.DeviceInfo,ohos.data.distributed.device.DeviceStatus)>
<java.time.chrono.ChronoLocalDate: java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount)>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Quaternion getNormalized()>
<ohos.utils.geo.RectFloat: boolean isInclude(float,float)>
<ohos.agp.render.Path: void addPath(ohos.agp.render.Path)>
<java.lang.ClassNotFoundException: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glDeleteSync(long)>
<java.nio.channels.Channel: void close()>
<ohos.aafwk.ability.AbilitySlice: java.lang.String toString()>
<ohos.agp.components.Text: ohos.agp.utils.Color getTextColor()>
<ohos.telephony.WcdmaSignalInformation: int getSignalLevel()>
<ohos.utils.geo.DimensFloat: void <init>()>
<java.util.Arrays: void sort(short[],int,int)>
<ohos.sysappcomponents.contact.entity.Name: java.lang.String getGivenNamePhonetic()>
<java.lang.InternalError: void <init>(java.lang.Throwable)>
<ohos.media.common.Source: java.lang.String getUri()>
<java.util.Arrays: int binarySearch(char[],char)>
<java.security.cert.X509CRLEntry: boolean hasExtensions()>
<ohos.agp.components.element.Element: void <clinit>()>
<java.util.concurrent.locks.LockSupport: void parkUntil(long)>
<ohos.agp.components.ListContainer: void setFooterBoundarySwitch(boolean)>
<ohos.javax.xml.stream.XMLInputFactory: ohos.javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String,java.io.InputStream)>
<java.lang.reflect.ReflectPermission: void <init>(java.lang.String)>
<javax.sql.RowSetWriter: boolean writeData(javax.sql.RowSetInternal)>
<java.util.regex.Matcher: int regionEnd()>
<ohos.media.audio.SoundEffect: void <clinit>()>
<java.lang.String: boolean contentEquals(java.lang.StringBuffer)>
<ohos.accessibility.ability.AccessibilityInfo: void setHint(java.lang.String)>
<ohos.agp.render.Paint: int getAdvanceWidths(java.lang.String,float[])>
<java.io.ObjectStreamField: void setOffset(int)>
<ohos.sysappcomponents.calendar.entity.Accounts: java.lang.String getAccDisplayName()>
<ohos.batterymanager.BatteryInfo.BatteryChargeState: void <clinit>()>
<ohos.bundleactive.BundleActiveStates.State: java.lang.String queryBundleName()>
<java.util.concurrent.atomic.AtomicInteger: void <init>()>
<java.net.Inet6Address: boolean isMCGlobal()>
<javax.lang.model.util.ElementScanner7: java.lang.Object visitVariable(javax.lang.model.element.VariableElement,java.lang.Object)>
<ohos.aafwk.ability.AbilitySlice: boolean requestForm(long,ohos.aafwk.content.Intent)>
<ohos.agp.render.opengl.GLES1X: void glFogf(int,float)>
<ohos.utils.geo.Rect: int[] getRectSize()>
<ohos.data.orm.Blob: void <init>(byte[])>
<java.net.HttpCookie: void setMaxAge(long)>
<ohos.agp.components.Component.CanAcceptScrollListener: boolean canAcceptScroll(ohos.agp.components.Component,int,boolean)>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat subtractionAll(int)>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray()>
<ohos.data.rdb.StoreConfig.JournalMode: void <clinit>()>
<java.time.ZonedDateTime: java.time.ZonedDateTime withYear(int)>
<ohos.event.notification.NotificationActionButton.Builder: void <init>(ohos.media.image.PixelMap,java.lang.String,ohos.event.intentagent.IntentAgent)>
<ohos.global.icu.text.NumberFormat: ohos.global.icu.text.NumberFormat getIntegerInstance(java.util.Locale)>
<ohos.agp.components.LayoutScatter: ohos.agp.components.LayoutScatter getInstance(ohos.app.Context)>
<ohos.agp.render.Insets: ohos.agp.render.Insets setValue(int,int,int,int)>
<java.net.DatagramSocket: java.nio.channels.DatagramChannel getChannel()>
<ohos.org.w3c.dom.ls.LSInput: void setCertifiedText(boolean)>
<ohos.agp.render.opengl.Utils: boolean nearEqual(float,float)>
<java.nio.ByteBuffer: java.lang.Object array()>
<ohos.data.distributed.common.FieldNode: boolean setDefault(int)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenApplyAsync(java.util.function.Function)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenCombineAsync(java.util.concurrent.CompletionStage,java.util.function.BiFunction,java.util.concurrent.Executor)>
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate date(java.time.chrono.Era,int,int,int)>
<ohos.global.icu.text.DecimalFormat: java.lang.String getNegativePrefix()>
<java.util.Calendar: java.time.Instant toInstant()>
<ohos.media.player.Player.IPlayerCallback: void onMessage(int,int)>
<java.sql.ResultSet: void updateTimestamp(java.lang.String,java.sql.Timestamp)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence,int,int)>
<java.sql.SQLRecoverableException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>
<ohos.agp.components.Image: int getClipDirection()>
<java.time.Period: java.time.Period multipliedBy(int)>
<ohos.aafwk.ability.MemoryInfo: int getNativePss()>
<ohos.global.icu.util.ULocale: java.lang.String getDisplayNameWithDialect(java.lang.String,java.lang.String)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>
<ohos.aafwk.ability.Ability: boolean onKeyPressAndHold(int,ohos.multimodalinput.event.KeyEvent)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
<ohos.global.icu.lang.UCharacter: int foldCase(int,int)>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>
<ohos.agp.render.render3d.math.Matrix4x4: void set(int,int,float)>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
<ohos.agp.utils.Matrix44: void postConcat(ohos.agp.utils.Matrix44)>
<ohos.agp.components.Text: void insert(java.lang.String)>
<ohos.global.icu.text.TimeZoneNames: java.util.Set getAvailableMetaZoneIDs()>
<java.time.ZonedDateTime: java.time.chrono.ChronoZonedDateTime withZoneSameInstant(java.time.ZoneId)>
<ohos.media.common.sessioncore.AVSessionCallback: void onPause()>
<java.sql.ResultSet: void updateDate(int,java.sql.Date)>
<ohos.global.icu.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
<ohos.global.i18n.LocaleHelperUtils: java.lang.String getLanguageName(java.util.Locale,java.util.Locale,boolean)>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 normalize(float,float,float,float)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>
<java.util.PriorityQueue: java.util.Iterator iterator()>
<ohos.agp.render.opengl.GLES1X: void glAlphaFuncx(int,int)>
<ohos.telephony.CellularDataInfoManager: int getDefaultCellularDataSlotId()>
<java.security.Signature: void update(byte)>
<ohos.data.search.SearchAbility: java.util.List delete(java.lang.String,java.lang.String,java.util.List)>
<ohos.utils.BasePacMap: int[] getIntValueArray(java.lang.String)>
<ohos.agp.database.Publisher: void <init>()>
<java.io.RandomAccessFile: void writeUTF(java.lang.String)>
<java.util.prefs.AbstractPreferences: void removeSpi(java.lang.String)>
<ohos.media.camera.device.FrameResult: ohos.media.camera.params.FaceDetectionResult getFaceDetectionResult()>
<ohos.agp.components.Image: ohos.agp.components.Image.ScaleMode getScaleMode()>
<java.sql.PreparedStatement: void setBytes(int,byte[])>
<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>
<ohos.agp.render.render3d.util.MeshBuilder: void setAabb(int,ohos.agp.render.render3d.util.BoundingBox)>
<ohos.ai.cv.common.CvRect: void set(ohos.ai.cv.common.CvRect)>
<ohos.agp.components.Component.MeasureSpec: int getMeasureSpec(int,int)>
<java.util.Collection: boolean removeIf(java.util.function.Predicate)>
<ohos.aafwk.ability.Ability: void onConfigurationUpdated(ohos.global.configuration.Configuration)>
<ohos.data.rdb.RdbStore: void beginTransaction()>
<ohos.agp.components.TimePicker: void setShaderColor(ohos.agp.utils.Color)>
<ohos.wifi.WifiDeviceConfig: void setPreSharedKey(java.lang.String)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void execute(java.lang.Runnable)>
<ohos.eventhandler.InnerEvent: boolean isPriorityEqual(ohos.eventhandler.EventHandler.Priority)>
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean hasWaiters(java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject)>
<ohos.media.common.sessioncore.AVElementCallback: void <init>()>
<ohos.global.icu.text.MessagePattern: double getNumericValue(ohos.global.icu.text.MessagePattern.Part)>
<ohos.utils.LightweightSet: boolean isEmpty()>
<ohos.agp.render.opengl.GLES20: void glUniform2f(int,float,float)>
<ohos.agp.components.CornerMark: void setWidth(int)>
<ohos.event.notification.NotificationHelper: java.util.Set getActiveNotifications()>
<ohos.security.asset.AssetOperatorAbs: ohos.security.asset.AssetResult assetInsert(ohos.aafwk.ability.Ability,ohos.aafwk.content.IntentParams)>
<ohos.agp.components.Image: ohos.media.image.PixelMap getPixelMap()>
<ohos.agp.render.render3d.util.MeshBuilder.Primitive: void setTangentDataDefined(boolean)>
<java.sql.SQLIntegrityConstraintViolationException: void <init>(java.lang.String,java.lang.String)>
<java.util.concurrent.atomic.DoubleAccumulator: int intValue()>
<javax.crypto.KeyGenerator: void init(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<ohos.agp.render.opengl.GLES1X: void glVertexPointer(int,int,int,int)>
<java.lang.CloneNotSupportedException: void <init>(java.lang.String)>
<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>
<ohos.hiviewdfx.Debug: void connectToDebugger()>
<java.net.HttpCookie: boolean domainMatches(java.lang.String,java.lang.String)>
<java.time.Clock: boolean equals(java.lang.Object)>
<ohos.agp.render.Picture: int getHeight()>
<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>
<java.math.BigInteger: void <init>(int,int,java.util.Random)>
<ohos.net.NetHandle: java.net.InetAddress[] getAllByName(java.lang.String)>
<ohos.media.image.common.ImageFormat: int getComponentNumber(int)>
<java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<ohos.nfc.tag.NdefTag: boolean isNdefWritable()>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates lessThan(java.lang.String,java.lang.String)>
<java.util.Spliterators.AbstractIntSpliterator: java.util.Spliterator.OfPrimitive trySplit()>
<javax.lang.model.element.Element: java.util.Set getModifiers()>
<java.net.SocketOptions: java.lang.Object getOption(int)>
<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>
<ohos.global.icu.text.DecimalFormatSymbols: ohos.global.icu.text.DecimalFormatSymbols forNumberingSystem(ohos.global.icu.util.ULocale,ohos.global.icu.text.NumberingSystem)>
<ohos.agp.components.AbsSlider: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.agp.components.DependentLayout.LayoutConfig: void <init>(ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>
<java.sql.PreparedStatement: void setRowId(int,java.sql.RowId)>
<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>
<ohos.workscheduler.WorkInfo: boolean isRequestStorage()>
<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<java.nio.channels.AsynchronousServerSocketChannel: java.net.SocketAddress getLocalAddress()>
<java.util.Arrays: void parallelPrefix(double[],java.util.function.DoubleBinaryOperator)>
<ohos.event.commonevent.CommonEventSubscriber: void onReceiveEvent(ohos.event.commonevent.CommonEventData)>
<java.time.chrono.ThaiBuddhistChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
<ohos.global.resource.solidxml.Attribute: java.lang.String getName()>
<ohos.media.photokit.metadata.AVStorage.Video.Media: void <clinit>()>
<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>
<java.util.Base64.Decoder: int decode(byte[],byte[])>
<ohos.agp.components.Component: void setContentPosition(float,float)>
<ohos.net.NetSpecifier: boolean marshalling(ohos.utils.Parcel)>
<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>
<javax.net.ssl.SSLServerSocket: boolean getWantClientAuth()>
<ohos.utils.HalfFloat: boolean equals(java.lang.Object)>
<ohos.agp.render.opengl.GLES20: void glStencilMaskSeparate(int,int)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[])>
<ohos.miscservices.timeutility.Time: long getCurrentTime()>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setCreateTime(long)>
<java.time.chrono.AbstractChronology: int hashCode()>
<java.sql.ResultSet: void updateNCharacterStream(int,java.io.Reader,long)>
<java.io.BufferedWriter: void close()>
<ohos.global.icu.util.BuddhistCalendar: java.lang.String getType()>
<ohos.global.icu.text.SelectFormat: java.lang.String toString()>
<javax.net.ssl.SSLEngine: void <init>(java.lang.String,int)>
<ohos.bundleactive.BundleActiveInfosMgr: java.util.Map queryBundleActiveInfos(long,long)>
<ohos.media.player.Player.IPlayerCallback: void onError(int,int)>
<ohos.app.Context: int getThemeId()>
<ohos.global.icu.text.UnicodeSet: boolean containsNone(java.lang.CharSequence)>
<ohos.global.icu.text.TimeZoneFormat: java.lang.String formatOffsetISO8601Basic(int,boolean,boolean,boolean)>
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asSpreader(java.lang.Class,int)>
<java.time.LocalTime: java.time.LocalTime of(int,int,int,int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,float)>
<ohos.agp.animation.Animator: boolean isPaused()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void acquireInterruptibly(int)>
<ohos.agp.render.render3d.components.CameraComponent: float getZfar()>
<ohos.global.config.ConfigType: ohos.global.config.ConfigType[] values()>
<javax.lang.model.util.ElementKindVisitor6: java.lang.Object visitExecutable(javax.lang.model.element.ExecutableElement,java.lang.Object)>
<java.util.concurrent.atomic.AtomicLong: void set(long)>
<java.math.BigInteger: int bitCount()>
<javax.tools.ForwardingJavaFileObject: javax.tools.JavaFileObject.Kind getKind()>
<ohos.utils.net.Uri: boolean isHierarchical()>
<ohos.agp.render.render3d.Scene: ohos.agp.render.render3d.systems.MorphingSystem getMorphingSystem()>
<ohos.agp.render.render3d.resources.AnimationPlayback: boolean isCompleted()>
<java.sql.BatchUpdateException: void <init>(java.lang.String,java.lang.String,int,int[])>
<ohos.agp.render.Canvas: void drawPoint(ohos.agp.utils.Point,ohos.agp.render.Paint)>
<java.time.chrono.JapaneseDate: java.time.chrono.Era getEra()>
<java.lang.Enum: void finalize()>
<ohos.agp.components.Component: ohos.agp.components.CornerMark getCornerMark()>
<ohos.sysappcomponents.calendar.entity.Events: int getAvailableStatus()>
<java.net.InetAddress: byte[] getAddress()>
<java.lang.Package: java.lang.String getImplementationVersion()>
<ohos.global.icu.text.DateTimePatternGenerator: void <init>()>
<java.security.AlgorithmParameterGenerator: void <init>(java.security.AlgorithmParameterGeneratorSpi,java.security.Provider,java.lang.String)>
<ohos.aafwk.ability.AbilitySlice: void continueAbilityReversibly()>
<ohos.agp.components.PageSlider: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<java.util.concurrent.atomic.LongAccumulator: void accumulate(long)>
<ohos.agp.components.TableLayout: void setColumnCount(int)>
<ohos.ai.cv.common.VisionImage: ohos.ai.cv.common.VisionImage fromPixelMap(ohos.media.image.PixelMap)>
<ohos.security.permission.PermissionAvailableScope: ohos.security.permission.PermissionAvailableScope valueOf(java.lang.String)>
<ohos.utils.LightweightMap: void <init>()>
<ohos.sysappcomponents.contact.entity.PostalAddress: java.lang.String getCountry()>
<ohos.agp.render.Paint: ohos.agp.render.Paint.FontMetrics getFontMetrics()>
<ohos.agp.database.DataSetPublisher: void notifyItemRangeInserted(int,int)>
<java.time.OffsetTime: java.time.OffsetTime plus(long,java.time.temporal.TemporalUnit)>
<java.nio.MappedByteBuffer: boolean isLoaded()>
<java.nio.file.attribute.AclEntryPermission: void <clinit>()>
<ohos.eventhandler.EventHandler: void sendTimingEvent(ohos.eventhandler.InnerEvent,long,ohos.eventhandler.EventHandler.Priority)>
<javax.lang.model.element.TypeElement: java.util.List getInterfaces()>
<ohos.agp.utils.RectFloat: boolean isInclude(ohos.agp.utils.RectFloat)>
<ohos.agp.utils.RectFloat: float getHorizontalCenter()>
<ohos.app.AbilityContext: void setColorMode(int)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate minus(long,java.time.temporal.TemporalUnit)>
<javax.sql.RowSetMetaData: void setCatalogName(int,java.lang.String)>
<ohos.utils.Parcel: boolean writeBoolean(boolean)>
<ohos.event.notification.ReminderRequestAlarm: boolean marshalling(ohos.utils.Parcel)>
<java.time.Month: java.time.Month of(int)>
<ohos.media.audio.AudioManager.AudioRingMode: void <clinit>()>
<ohos.agp.render.opengl.GLES1X: void glBufferData(int,int,java.nio.Buffer,int)>
<java.nio.file.FileVisitOption: void <clinit>()>
<ohos.agp.window.service.DisplayAttributes: void <init>()>
<java.util.Random: java.util.stream.DoubleStream doubles(long)>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>
<ohos.agp.render.render3d.Scene: ohos.agp.render.render3d.SceneNode cloneNode(ohos.agp.render.render3d.SceneNode,boolean)>
<java.util.zip.Inflater: boolean needsInput()>
<ohos.agp.components.Component: void setSelected(boolean)>
<java.math.BigDecimal: java.math.BigDecimal pow(int,java.math.MathContext)>
<ohos.utils.zson.ZSONReader: ohos.utils.zson.ZSONType peek()>
<java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>
<ohos.global.icu.text.MessagePattern: int countParts()>
<java.time.chrono.HijrahChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
<java.util.ArrayDeque: void <init>()>
<java.util.Locale.LanguageRange: java.util.List parse(java.lang.String,java.util.Map)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate date(int,int,int)>
<ohos.global.icu.util.TimeZone: void getOffset(long,boolean,int[])>
<ohos.security.asset.AssetOperatorAbs: ohos.security.asset.AssetResult assetDelete(ohos.aafwk.ability.Ability,ohos.aafwk.content.IntentParams)>
<javax.lang.model.util.Types: boolean isSubtype(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>
<ohos.wifi.WifiLinkedInfo: boolean marshalling(ohos.utils.Parcel)>
<java.lang.Character: boolean isLetterOrDigit(char)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>
<java.util.AbstractMap: java.util.Collection values()>
<java.util.Calendar: java.util.Set getAvailableCalendarTypes()>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction: java.lang.CharSequence getAVPlaybackActionName()>
<ohos.agp.render.opengl.EGL: ohos.agp.render.opengl.EGLDisplay eglGetDisplay(long)>
<ohos.agp.components.VelocityDetector: void calculateCurrentVelocity(int,float,float)>
<java.nio.file.Files: java.lang.String probeContentType(java.nio.file.Path)>
<java.net.NetPermission: void <init>(java.lang.String,java.lang.String)>
<ohos.media.audio.AudioStreamInfo.Builder: ohos.media.audio.AudioStreamInfo.Builder encodingFormat(ohos.media.audio.AudioStreamInfo.EncodingFormat)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates greaterThan(java.lang.String,java.util.Calendar)>
<ohos.app.AbilityContext: boolean isUpdatingConfigurations()>
<javax.sql.ConnectionPoolDataSource: javax.sql.PooledConnection getPooledConnection(java.lang.String,java.lang.String)>
<java.net.SocketImpl: java.net.InetAddress getInetAddress()>
<ohos.bundleactive.BundleActiveInfosMgr: java.util.List queryBundleActiveInfosByInterval(int,long,long)>
<java.net.CacheRequest: void abort()>
<ohos.agp.render.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,float[])>
<ohos.utils.geo.RectFloat: void translateTo(float,float)>
<ohos.agp.render.render3d.math.Vector4: float length(float,float,float,float)>
<ohos.distributedschedule.interwork.DeviceInfo.DeviceType: int getVal()>
<java.security.cert.X509CRLSelector: java.util.Collection getIssuerNames()>
<ohos.agp.components.TabList.Tab: ohos.agp.components.TabList.Tab select()>
<ohos.global.icu.util.TaiwanCalendar: void <init>(java.util.Locale)>
<java.time.format.DateTimeFormatter: java.time.temporal.TemporalQuery parsedLeapSecond()>
<java.util.Formatter: void <init>(java.io.OutputStream,java.lang.String,java.util.Locale)>
<ohos.agp.components.ListContainer: boolean getHeaderBoundarySwitch()>
<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<java.util.prefs.Preferences: void putLong(java.lang.String,long)>
<ohos.data.search.model.IndexForm: void setIndexFieldName(java.lang.String)>
<ohos.agp.components.Component: int getMarginLeft()>
<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>
<ohos.media.camera.params.Face: void <init>(int,ohos.agp.utils.Rect,float)>
<ohos.bundle.LauncherService: java.util.Optional getApplicationInfo(java.lang.String,int,int)>
<ohos.global.icu.text.NumberingSystem: boolean isAlgorithmic()>
<ohos.app.Context: java.io.File[] getExternalMediaDirs()>
<ohos.global.icu.text.DecimalFormat: int getPadPosition()>
<java.time.ZonedDateTime: java.time.ZonedDateTime plusMinutes(long)>
<java.io.ObjectInputStream.GetField: long get(java.lang.String,long)>
<ohos.agp.render.opengl.GLES30: void glVertexAttribI4i(int,int,int,int,int)>
<javax.crypto.Cipher: java.security.Provider getProvider()>
<java.net.CookiePolicy: boolean shouldAccept(java.net.URI,java.net.HttpCookie)>
<ohos.agp.render.opengl.GLES20: void glUniform1i(int,int)>
<ohos.data.dataability.DataAbilityPredicates: java.lang.String getWhereClause()>
<java.text.CollationKey: java.lang.String getSourceString()>
<java.util.Spliterators: java.util.PrimitiveIterator.OfDouble iterator(java.util.Spliterator.OfDouble)>
<java.util.Timer: void <init>(boolean)>
<ohos.miscservices.pasteboard.PasteData: ohos.aafwk.content.Intent getPrimaryIntent()>
<java.util.prefs.AbstractPreferences: void sync()>
<ohos.global.icu.text.DateIntervalFormat.FormattedDateInterval: java.lang.CharSequence subSequence(int,int)>
<java.util.Collections: java.util.SortedSet synchronizedSortedSet(java.util.SortedSet)>
<ohos.agp.render.render3d.math.Quaternion: ohos.agp.render.render3d.math.Vector3 rotatePoint(ohos.agp.render.render3d.math.Vector3)>
<ohos.agp.components.TimePicker: void setDisplayedBottomElement(ohos.agp.components.element.Element)>
<java.io.BufferedReader: void <init>(java.io.Reader,int)>
<java.util.stream.BaseStream: void close()>
<ohos.vibrator.agent.VibratorAgent: boolean startOnce(int,java.lang.String)>
<java.io.OutputStream: void write(byte[],int,int)>
<java.lang.Math: double exp(double)>
<ohos.agp.colors.RgbColor: ohos.agp.colors.RgbColor fromRgbaInt(int)>
<java.util.EnumMap: java.util.Set keySet()>
<ohos.app.AbilityContext: boolean connectAbility(ohos.aafwk.content.Intent,ohos.aafwk.ability.IAbilityConnection)>
<ohos.media.tubecore.AVTube: ohos.media.tubecore.AVTube.PlayMode playMode()>
<java.sql.SQLTransientException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<ohos.agp.components.Text: int getTextSize()>
<ohos.bundle.InstallerCallback: ohos.rpc.IRemoteObject asObject()>
<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.CodeSource)>
<ohos.agp.render.opengl.GLES1X: void glEnableClientState(int)>
<ohos.agp.utils.Point: java.lang.String toString()>
<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>
<java.util.function.LongUnaryOperator: java.util.function.LongUnaryOperator identity()>
<java.util.PrimitiveIterator.OfInt: void forEachRemaining(java.util.function.Consumer)>
<java.time.chrono.IsoChronology: java.time.LocalDate dateYearDay(java.time.chrono.Era,int,int)>
<ohos.bluetooth.ble.BleAdvertiseData: boolean marshalling(ohos.utils.Parcel)>
<java.security.cert.PolicyNode: int getDepth()>
<ohos.media.photokit.support.FetchResult: boolean isClosed()>
<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(int,int)>
<java.net.SocketImpl: void connect(java.net.SocketAddress,int)>
<java.nio.charset.CharsetDecoder: void implReset()>
<ohos.data.resultset.ResultSetWrapper: boolean isAtLastRow()>
<ohos.agp.render.MaskFilter.Blur: void <clinit>()>
<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer force()>
<ohos.agp.render.opengl.EGLObjectHandle: long getNativeHandle()>
<java.util.ResourceBundle: java.util.Locale getLocale()>
<ohos.agp.text.Font.Builder: ohos.agp.text.Font.Builder makeItalic(boolean)>
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
<ohos.agp.components.Component.VoiceEvent: void setScene(int)>
<java.lang.System: java.lang.SecurityManager getSecurityManager()>
<java.util.ConcurrentModificationException: void <init>()>
<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>
<java.nio.file.NoSuchFileException: void <init>(java.lang.String)>
<ohos.javax.xml.stream.events.XMLEvent: int getEventType()>
<java.util.Scanner: java.util.Scanner reset()>
<ohos.org.w3c.dom.ls.LSInput: java.lang.String getEncoding()>
<java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)>
<ohos.agp.render.render3d.resources.RenderDataStorePod: void set(java.lang.String,java.nio.ByteBuffer)>
<ohos.event.notification.MessageUser: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.agp.components.SlideDrawer: ohos.agp.components.ComponentContainer.LayoutConfig createLayoutConfig(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.account.app.AppAccountAbility: boolean setAccountExtraInfo(java.lang.String,java.lang.String)>
<ohos.accessibility.AccessibilityAbilityInfo: java.lang.String getDescription()>
<ohos.miscservices.inputmethodability.TextInputClient: boolean unmarkText()>
<ohos.media.audio.AudioDeviceDescriptor: void setRole(ohos.media.audio.AudioDeviceDescriptor.DeviceRole)>
<ohos.agp.graphics.SurfaceOps.Callback: void surfaceDestroyed(ohos.agp.graphics.SurfaceOps)>
<ohos.workscheduler.WorkScheduler: java.util.List obtainAllWorks()>
<ohos.global.icu.text.LocaleDisplayNames: ohos.global.icu.text.LocaleDisplayNames getInstance(ohos.global.icu.util.ULocale,ohos.global.icu.text.DisplayContext[])>
<ohos.event.notification.NotificationRequest: int getBadgeIconStyle()>
<java.time.LocalDate: java.lang.String toString()>
<ohos.agp.render.render3d.resources.MaterialDesc: void setGlossinessFactor(float)>
<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>
<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()>
<java.text.DecimalFormatSymbols: void setInfinity(java.lang.String)>
<ohos.account.AccountAbility: int getAllCreatedOsAccounts()>
<ohos.miscservices.inputmethod.RichContent: java.lang.String[] getMimeTypes()>
<ohos.global.icu.text.DateIntervalFormat: java.lang.Object clone()>
<ohos.org.xml.sax.AttributeList: java.lang.String getValue(int)>
<java.io.FilterWriter: void write(int)>
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery zone()>
<java.sql.DatabaseMetaData: int getMaxCharLiteralLength()>
<java.util.Properties: void load(java.io.Reader)>
<java.util.concurrent.CompletionException: void <init>(java.lang.Throwable)>
<java.security.cert.CertificateFactorySpi: java.util.Collection engineGenerateCertificates(java.io.InputStream)>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder decodedOpaqueSsp(java.lang.String)>
<ohos.vibrator.agent.VibratorAgent: boolean startOnce(java.lang.String)>
<java.security.cert.CertPath: int hashCode()>
<java.sql.CallableStatement: void setCharacterStream(java.lang.String,java.io.Reader,int)>
<ohos.agp.components.Component: boolean onDrag(ohos.agp.components.Component,ohos.agp.components.DragEvent)>
<java.net.InetAddress: java.lang.String getHostName()>
<java.util.concurrent.LinkedBlockingDeque: java.util.Spliterator spliterator()>
<ohos.data.distributed.file.DistFiles: ohos.data.distributed.file.DistAgentFile createAgentFile(java.lang.String,java.lang.String)>
<ohos.agp.components.Text: ohos.agp.components.Text.TruncationMode getTruncationMode()>
<java.time.OffsetDateTime: java.time.OffsetDateTime withOffsetSameLocal(java.time.ZoneOffset)>
<java.util.Scanner: java.lang.String nextLine()>
<java.util.OptionalDouble: void ifPresent(java.util.function.DoubleConsumer)>
<ohos.global.config.ConfigManager: java.lang.String getString(ohos.global.config.ConfigType)>
<java.io.StringWriter: java.lang.Appendable append(java.lang.CharSequence,int,int)>
<ohos.media.audio.AudioStreamInfo: ohos.media.audio.AudioStreamInfo.EncodingFormat getEncodingFormat()>
<ohos.media.codec.TrackInfo: java.util.HashMap getSupportedTracksInfoMap()>
<java.lang.reflect.Type: java.lang.String getTypeName()>
<ohos.media.audio.AudioDeviceDescriptor: void setChannelMasks(int[])>
<java.util.Vector: void <init>(java.util.Collection)>
<java.util.concurrent.locks.StampedLock: long tryReadLock()>
<ohos.utils.LightweightMap: void putAll(java.util.Map)>
<java.net.CookieStore: void add(java.net.URI,java.net.HttpCookie)>
<javax.sql.RowSet: void setDataSourceName(java.lang.String)>
<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>
<ohos.global.resource.ResourceManager: ohos.global.resource.solidxml.Theme getTheme(int)>
<ohos.data.usage.DataUsage: boolean isDiskPluggable(java.io.File)>
<java.sql.ResultSet: void updateByte(int,byte)>
<ohos.agp.components.DirectionalLayout: ohos.agp.components.ComponentContainer.LayoutConfig verifyLayoutConfig(ohos.agp.components.ComponentContainer.LayoutConfig)>
<java.util.List: java.lang.Object set(int,java.lang.Object)>
<ohos.location.Location: void setAccuracy(float)>
<java.lang.ThreadGroup: boolean parentOf(java.lang.ThreadGroup)>
<ohos.agp.components.webengine.WebView: void <init>(ohos.app.Context)>
<java.sql.DatabaseMetaData: boolean supportsCatalogsInIndexDefinitions()>
<java.lang.Number: byte byteValue()>
<ohos.aafwk.ability.DataAbilityOperation: void <init>(ohos.aafwk.ability.DataAbilityOperation,ohos.utils.net.Uri)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage runAfterBoth(java.util.concurrent.CompletionStage,java.lang.Runnable)>
<ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction: java.lang.String getAVPlaybackAction()>
<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet complement(int,int)>
<ohos.data.rdb.RdbReadOnlyException: void <init>()>
<ohos.agp.components.element.ElementContainer: void setExitFadeDuration(int)>
<ohos.bundle.IBundleManager: java.util.List getHomeShortcutInfos()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notBetween(java.lang.String,float,float)>
<java.text.DateFormat: java.lang.Object clone()>
<ohos.agp.components.ComponentProvider: void <init>()>
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
<java.security.cert.CertPath: byte[] getEncoded(java.lang.String)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CodingErrorAction malformedInputAction()>
<java.sql.CallableStatement: java.io.Reader getCharacterStream(int)>
<ohos.utils.PlainArray: ohos.utils.PlainArray clone()>
<java.nio.file.attribute.UserPrincipalNotFoundException: void <init>(java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationMultiLineContent: java.util.List getAllLines()>
<ohos.javax.xml.stream.XMLEventWriter: void setDefaultNamespace(java.lang.String)>
<ohos.global.icu.text.DateFormat: int hashCode()>
<java.nio.channels.SelectionKey: boolean isReadable()>
<java.nio.file.NotLinkException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<ohos.bluetooth.ble.BleAdvertiseCallback: void startResultEvent(int)>
<ohos.media.player.Player.AudioHandler: ohos.media.player.Player.AudioHandler valueOf(java.lang.String)>
<java.time.ZonedDateTime: java.time.ZonedDateTime plus(long,java.time.temporal.TemporalUnit)>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.text.CollationKey getCollationKey(java.lang.String)>
<javax.crypto.spec.GCMParameterSpec: byte[] getIV()>
<ohos.global.icu.text.NumberingSystem: int getRadix()>
<java.util.concurrent.PriorityBlockingQueue: boolean add(java.lang.Object)>
<javax.crypto.KeyAgreement: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<ohos.event.notification.NotificationRequest.NotificationContent: void <init>(ohos.event.notification.NotificationRequest.NotificationConversationalContent)>
<java.util.concurrent.CompletableFuture: java.lang.Object get()>
<ohos.event.notification.MessageUser: java.lang.String toString()>
<ohos.aafwk.ability.Ability: ohos.aafwk.content.Intent getIntent()>
<javax.lang.model.element.ExecutableElement: boolean isVarArgs()>
<ohos.data.rdb.RdbDoneException: void <init>(java.lang.String)>
<ohos.sensor.bean.CategoryBody: void <init>(int,java.lang.String,java.lang.String,int,float,float,int,int,long,long)>
<ohos.utils.geo.RectFloat: float getVerticalCenter()>
<ohos.agp.components.DependentLayout: void <init>(ohos.app.Context)>
<javax.security.auth.Subject: java.util.Set getPrivateCredentials()>
<java.util.Arrays: void parallelPrefix(double[],int,int,java.util.function.DoubleBinaryOperator)>
<ohos.global.icu.lang.UCharacter: boolean isLegal(java.lang.String)>
<ohos.agp.render.opengl.GLES2Ext: void glBlendEquationSeparateiEXT(int,int,int)>
<ohos.media.tubecore.AVTubeManager.TubeObserver: void onTubeDelete(ohos.media.tubecore.AVTubeManager,ohos.media.tubecore.AVTube)>
<ohos.sysappcomponents.calendar.entity.Participants: int getParticipantRoleType()>
<ohos.data.search.SearchAbility: boolean disconnect()>
<ohos.agp.render.opengl.GLES1X: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<ohos.data.search.model.IndexData: java.util.Map getValues()>
<ohos.agp.components.Component: float getPivotX()>
<java.lang.AssertionError: void <init>(char)>
<java.sql.SQLException: void <init>(java.lang.String)>
<java.util.ListResourceBundle: java.util.Enumeration getKeys()>
<ohos.app.AbilityContext: boolean isCredentialEncryptedStorage()>
<ohos.media.photokit.metadata.AVStorage: void <clinit>()>
<ohos.agp.components.Picker: int getNormalTextSize()>
<ohos.aafwk.ability.AbilityLifecycleCallbacks: void onAbilityStop(ohos.aafwk.ability.Ability)>
<ohos.bundle.BundleInfo: java.lang.String getName()>
<ohos.event.commonevent.CommonEventManager: void subscribeCommonEvent(ohos.event.commonevent.CommonEventSubscriber)>
<ohos.aafwk.ability.SystemMemoryInfo: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates indexedBy(java.lang.String)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates equalTo(java.lang.String,java.sql.Time)>
<java.io.RandomAccessFile: void writeChar(int)>
<ohos.global.icu.util.CurrencyAmount: void <init>(java.lang.Number,ohos.global.icu.util.Currency)>
<java.time.chrono.JapaneseChronology: java.lang.String getCalendarType()>
<java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock: void lockInterruptibly()>
<ohos.data.distributed.common.Schema: boolean setIndexes(java.util.List)>
<ohos.media.sessioncore.AVBrowserService: void onStart(ohos.aafwk.content.Intent)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet addAll(java.lang.Iterable)>
<ohos.global.icu.text.Bidi: int getRunLevel(int)>
<java.io.File: java.io.File getParentFile()>
<java.io.Console: java.io.Console printf(java.lang.String,java.lang.Object[])>
<java.nio.file.FileStore: boolean isReadOnly()>
<java.time.chrono.ChronoLocalDateTime: java.time.LocalTime toLocalTime()>
<ohos.ai.cv.text.Text: void <init>()>
<ohos.aafwk.ability.Ability: int batchInsert(ohos.utils.net.Uri,ohos.data.rdb.ValuesBucket[])>
<java.util.ArrayList: boolean addAll(java.util.Collection)>
<java.util.WeakHashMap: void <init>()>
<java.sql.ResultSet: java.lang.String getNString(java.lang.String)>
<java.awt.font.NumericShaper: boolean isContextual()>
<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater,int,boolean)>
<java.sql.ParameterMetaData: int getScale(int)>
<java.nio.file.spi.FileSystemProvider: boolean isHidden(java.nio.file.Path)>
<ohos.agp.components.Component.VoiceEvent: int getScene()>
<ohos.agp.components.Text: void startAutoScrolling()>
<ohos.javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>
<ohos.data.search.schema.EventItem: java.lang.Long getEndDate()>
<ohos.agp.utils.Contour: float getRadius()>
<java.sql.CallableStatement: void setBigDecimal(java.lang.String,java.math.BigDecimal)>
<java.util.concurrent.RunnableFuture: void run()>
<ohos.telephony.CellularDataStateObserver: void <init>(int)>
<ohos.utils.BasePacMap: int hashCode()>
<ohos.javax.xml.parsers.SAXParser: void parse(java.io.File,ohos.org.xml.sax.helpers.DefaultHandler)>
<ohos.agp.components.Image.ScaleMode: ohos.agp.components.Image.ScaleMode getByInt(int)>
<java.security.KeyStore.PasswordProtection: java.security.spec.AlgorithmParameterSpec getProtectionParameters()>
<javax.sql.RowSet: void setTime(java.lang.String,java.sql.Time)>
<ohos.global.icu.text.Collator: ohos.global.icu.text.Collator freeze()>
<java.time.Duration: int getNano()>
<java.util.Optional: boolean isPresent()>
<ohos.biometrics.authentication.BiometricAuthentication.SystemAuthDialogInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent makeRestartAbilityMission(ohos.bundle.ElementName)>
<ohos.ai.cv.common.CvRect: int width()>
<ohos.data.search.model.SearchableEntity: java.lang.String getComponentName()>
<java.net.URLStreamHandler: boolean equals(java.net.URL,java.net.URL)>
<ohos.distributedschedule.interwork.DeviceInfo.DeviceType: ohos.distributedschedule.interwork.DeviceInfo.DeviceType valueOf(java.lang.String)>
<ohos.agp.render.opengl.GLES32: void glPopDebugGroup()>
<ohos.data.orm.OrmConfig.Builder: ohos.data.orm.OrmConfig.Builder setDatabaseFileType(ohos.data.DatabaseFileType)>
<ohos.sysappcomponents.calendar.entity.Events: int getAccId()>
<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.AsynchronousServerSocketChannel open()>
<java.util.prefs.Preferences: boolean isUserNode()>
<javax.lang.model.util.ElementKindVisitor7: void <init>()>
<ohos.media.photokit.metadata.AVStorage.Images.Media: ohos.utils.net.Uri fetchResource(java.lang.String)>
<java.nio.IntBuffer: java.lang.String toString()>
<ohos.media.codec.Codec: boolean release()>
<java.sql.DatabaseMetaData: boolean storesUpperCaseQuotedIdentifiers()>
<java.sql.SQLInput: boolean wasNull()>
<ohos.wifi.IpInfo: int getIpAddress()>
<ohos.aafwk.ability.delegation.IAbilityDelegator: void invokeAbilityOnPostActive(ohos.aafwk.ability.Ability)>
<ohos.global.icu.lang.UCharacter: int foldCase(int,boolean)>
<ohos.javax.xml.stream.XMLStreamReader: boolean hasName()>
<ohos.aafwk.ability.ProcessErrorInfo: void <clinit>()>
<ohos.utils.Scope: ohos.utils.Scope expand(java.lang.Comparable,java.lang.Comparable)>
<java.util.logging.Logger: void finest(java.lang.String)>
<ohos.vibrator.bean.VibrationPattern: void setTiming(int[])>
<ohos.aafwk.abilityjet.databinding.DataBindingUtil: ohos.aafwk.abilityjet.databinding.DataBinding createBinding(int,ohos.app.Context)>
<ohos.net.RouteInfo: void <init>(ohos.net.IpPrefix,java.net.InetAddress,java.lang.String,int)>
<ohos.sysappcomponents.calendar.entity.Instances: void setInstanceEnd(long)>
<ohos.usb.USBCore: boolean hasRight(ohos.usb.USBDevice)>
<java.time.OffsetDateTime: java.time.LocalDateTime toLocalDateTime()>
<java.util.Random: java.util.stream.LongStream longs(long,long)>
<ohos.global.icu.text.Bidi: void setCustomClassifier(ohos.global.icu.text.BidiClassifier)>
<ohos.app.Context: ohos.bundle.ElementName getCallingAbility()>
<java.io.CharArrayWriter: java.io.Writer append(java.lang.CharSequence,int,int)>
<ohos.agp.text.TextForm: int getTextBackgroundColor()>
<ohos.agp.text.TextForm: float getRelativeTextSize()>
<ohos.media.audio.AudioStreamInfo: ohos.media.audio.AudioStreamInfo.ChannelMask getChannelMask()>
<ohos.agp.components.AbsButton: ohos.agp.components.element.Element getButtonElement()>
<java.text.ParsePosition: void <init>(int)>
<java.util.concurrent.ConcurrentLinkedDeque: boolean add(java.lang.Object)>
<ohos.agp.components.Switch: int[] getThumbSize()>
<java.util.stream.DoubleStream: void forEach(java.util.function.DoubleConsumer)>
<ohos.event.notification.ReminderRequest: ohos.event.notification.ReminderRequest setSnoozeContent(java.lang.String)>
<java.io.ObjectOutputStream: void reset()>
<ohos.system.FileStat: java.lang.String toString()>
<java.time.LocalTime: java.time.LocalTime plusHours(long)>
<java.sql.PreparedStatement: void setDouble(int,double)>
<java.util.Arrays: int binarySearch(byte[],int,int,byte)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>
<java.util.concurrent.locks.AbstractOwnableSynchronizer: void <init>()>
<ohos.aafwk.content.Operation: java.lang.String getAbilityName()>
<ohos.global.icu.text.MessagePattern.ArgType: ohos.global.icu.text.MessagePattern.ArgType[] values()>
<java.lang.reflect.Method: boolean isBridge()>
<ohos.miscservices.inputmethodability.TextInputClient: boolean selectText(int,int)>
<ohos.sensor.data.CategoryOrientationData: float[] getDeviceOrientation(float[],float[])>
<ohos.eventhandler.EventHandler: void postTask(java.lang.Runnable)>
<ohos.utils.geo.DimensFloat: int getMedianToInt()>
<java.lang.reflect.Member: boolean isSynthetic()>
<ohos.agp.components.TimePicker: void setOperatedTextColor(ohos.agp.utils.Color)>
<java.util.stream.Stream: java.util.Optional findFirst()>
<ohos.accessibility.ability.AccessibilityInfo: java.lang.String getHint()>
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.agp.components.Component: void setFocusable(int)>
<ohos.bluetooth.ble.BleScanFilter: boolean unmarshalling(ohos.utils.Parcel)>
<java.text.Collator: int compare(java.lang.Object,java.lang.Object)>
<ohos.agp.animation.timelinecurves.CubicBezierCurve: float getCurvedTime(float)>
<java.io.PushbackInputStream: void close()>
<ohos.data.rdb.StoreConfig.StorageMode: void <clinit>()>
<ohos.agp.components.Component: void setFadeEffectBoundaryWidth(int)>
<ohos.agp.components.PageSliderIndicator: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.data.orm.BindUtils: java.util.Calendar getCalendar(long)>
<ohos.agp.components.element.ElementScatter: ohos.agp.components.element.ElementScatter getInstance(ohos.app.Context)>
<ohos.agp.render.Path: boolean isEmpty()>
<ohos.bluetooth.ble.BleAdvertiseSettings: boolean isConnectable()>
<java.security.AccessController: java.security.AccessControlContext getContext()>
<ohos.accessibility.AccessibilitySystemAbilityClient: java.util.List getAbilityList(int,int)>
<ohos.utils.zson.ZSONArray: boolean add(java.lang.Object)>
<ohos.data.distributed.common.Entry: int hashCode()>
<ohos.global.icu.util.Currency: java.util.Currency toJavaCurrency()>
<java.nio.channels.NetworkChannel: java.net.SocketAddress getLocalAddress()>
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndUpdate(java.lang.Object,java.util.function.IntUnaryOperator)>
<java.io.LineNumberInputStream: int read()>
<ohos.aafwk.ability.Ability: void onAbilityResult(int,int,ohos.aafwk.content.Intent)>
<java.security.cert.CertStore: java.security.cert.CertStoreParameters getCertStoreParameters()>
<ohos.security.permission.Permission: void requestPermissionsFromRemote(java.lang.String[],ohos.security.permission.Permission.OnRequestPermissionsResult,java.lang.String,java.lang.String,int)>
<java.lang.Short: void <clinit>()>
<ohos.global.icu.text.TimeZoneFormat.TimeType: ohos.global.icu.text.TimeZoneFormat.TimeType[] values()>
<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>
<ohos.data.resultset.TableResultSet: long getLong(int)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notEqualTo(java.lang.String,boolean)>
<java.sql.Statement: void addBatch(java.lang.String)>
<java.nio.channels.AsynchronousByteChannel: java.util.concurrent.Future write(java.nio.ByteBuffer)>
<ohos.agp.components.SearchBar: ohos.agp.components.Image getSearchIcon()>
<ohos.utils.Parcel: void readFloatArray(float[])>
<ohos.global.icu.text.Normalizer2: ohos.global.icu.text.Normalizer2 getNFKCCasefoldInstance()>
<java.security.AlgorithmParameterGeneratorSpi: void <init>()>
<java.util.ArrayList: void <init>(java.util.Collection)>
<java.util.Scanner: boolean hasNextBigInteger(int)>
<ohos.global.icu.text.Edits: ohos.global.icu.text.Edits.Iterator getFineIterator()>
<ohos.agp.components.ComponentProvider: void resetActions()>
<java.security.UnresolvedPermission: java.lang.String getUnresolvedName()>
<java.net.CookieManager: void put(java.net.URI,java.util.Map)>
<ohos.aafwk.ability.fraction.FractionManager: ohos.aafwk.ability.fraction.FractionScheduler startFractionScheduler()>
<ohos.agp.utils.Rect: void setPivotYCoordinate(int)>
<java.nio.IntBuffer: java.nio.IntBuffer slice()>
<ohos.agp.render.Paint: void setFakeBoldText(boolean)>
<ohos.global.icu.text.DisplayContext: ohos.global.icu.text.DisplayContext valueOf(java.lang.String)>
<ohos.accessibility.ability.AccessibilityInfo: java.util.List getOperations()>
<ohos.ai.cv.text.TextBlock: java.lang.String getValue()>
<ohos.aafwk.ability.DataAbilityHelper: ohos.aafwk.ability.DataAbilityHelper creator(ohos.app.Context,ohos.utils.net.Uri,boolean)>
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndDecrement(java.lang.Object)>
<ohos.agp.render.opengl.GLES31: void glMemoryBarrierByRegion(int)>
<ohos.agp.utils.Matrix44: void setScale(float,float,float)>
<ohos.media.audio.AudioRenderer.State: int getValue()>
<javax.crypto.CipherSpi: java.security.Key engineUnwrap(byte[],java.lang.String,int)>
<java.util.TimeZone: java.lang.Object clone()>
<ohos.agp.components.ProgressBar: java.lang.String getProgressHintText()>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.security.Provider)>
<java.util.logging.Formatter: void <init>()>
<java.lang.Character: boolean isJavaIdentifierPart(int)>
<ohos.media.common.AVMetadata.Builder: ohos.media.common.AVMetadata build()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage thenAcceptAsync(java.util.function.Consumer)>
<ohos.media.common.AVMetadata: java.util.Set getKeysSet()>
<javax.security.auth.x500.X500Principal: void <init>(java.io.InputStream)>
<ohos.agp.components.ProgressBar: void setMinValue(int)>
<ohos.system.version.SystemVersion: int getFeatureVersion()>
<java.time.Period: int getYears()>
<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[],int,int)>
<java.time.OffsetDateTime: java.time.OffsetDateTime withOffsetSameInstant(java.time.ZoneOffset)>
<ohos.agp.render.render3d.resources.MaterialDesc: void setEmissiveFactor(ohos.agp.render.render3d.math.Vector3)>
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>
<java.lang.Character: boolean isValidCodePoint(int)>
<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>
<java.util.Calendar: void complete()>
<ohos.agp.utils.Rect: boolean isInclude(int,int,int,int)>
<ohos.data.rdb.Statement: void close()>
<ohos.rpc.IPCSkeleton: int flushCommands(ohos.rpc.IRemoteObject)>
<java.time.chrono.ThaiBuddhistDate: long getLong(java.time.temporal.TemporalField)>
<ohos.agp.render.opengl.GLES2Ext: void glMinSampleShadingOES(float)>
<java.time.ZonedDateTime: java.time.ZonedDateTime withDayOfMonth(int)>
<java.util.concurrent.Phaser: int getPhase()>
<java.io.InputStream: int read(byte[],int,int)>
<java.util.concurrent.ForkJoinTask: void setRawResult(java.lang.Object)>
<ohos.agp.components.element.FlexElement: void <init>(ohos.media.image.PixelMap)>
<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.NetworkChannel setOption(java.net.SocketOption,java.lang.Object)>
<ohos.ai.cv.common.VisionManager: void destroy()>
<ohos.agp.window.service.Window: void setPixelFormat(int)>
<ohos.agp.text.TextForm: ohos.agp.text.TextForm setLineHeight(float)>
<ohos.global.icu.util.Currency: ohos.global.icu.util.Currency getInstance(java.lang.String)>
<ohos.data.search.schema.EmailItem: ohos.data.search.schema.EmailItem setSenderName(java.lang.String)>
<java.security.spec.PSSParameterSpec: int getTrailerField()>
<java.time.zone.ZoneRules: java.lang.String toString()>
<ohos.net.ConnectionProperties: ohos.net.HttpProxy getHttpProxy()>
<ohos.agp.render.render3d.Engine: void requireRenderThread()>
<ohos.nfc.tag.MifareUltralightTag: ohos.nfc.tag.MifareUltralightTag getInstance(ohos.nfc.tag.TagInfo)>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate dateNow(java.time.ZoneId)>
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object pollFirst()>
<ohos.data.distributed.device.DeviceKvStore: java.util.List getEntries(java.lang.String,ohos.data.distributed.common.Query)>
<javax.lang.model.util.SimpleTypeVisitor7: void <init>()>
<ohos.global.icu.util.Calendar: int getGregorianDayOfYear()>
<java.util.concurrent.BlockingDeque: boolean offer(java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.Map.Entry lowerEntry(java.lang.Object)>
<java.nio.channels.spi.AbstractSelectableChannel: void <init>(java.nio.channels.spi.SelectorProvider)>
<java.time.Duration: java.time.Duration plusNanos(long)>
<ohos.agp.components.webengine.WebView: void setWebAgent(ohos.agp.components.webengine.WebAgent)>
<ohos.agp.render.opengl.GLES31: boolean glIsProgramPipeline(int)>
<ohos.media.image.ImageSource: boolean isReleased()>
<ohos.agp.utils.DimensFloat: float getMax()>
<javax.sql.PooledConnection: void addStatementEventListener(javax.sql.StatementEventListener)>
<java.lang.ClassLoader: void clearAssertionStatus()>
<ohos.agp.components.Image: void <init>(ohos.app.Context)>
<ohos.global.icu.text.DecimalFormatSymbols: char getDigit()>
<java.sql.SQLTransactionRollbackException: void <init>(java.lang.String)>
<ohos.agp.render.render3d.math.Vector3: ohos.agp.render.render3d.math.Vector3 multiply(ohos.agp.render.render3d.math.Vector3,ohos.agp.render.render3d.math.Vector3)>
<ohos.data.search.schema.VideoItem: java.lang.Long getDownloadCount()>
<java.sql.ResultSet: void updateBlob(java.lang.String,java.io.InputStream,long)>
<java.util.TreeSet: void <init>(java.util.Comparator)>
<ohos.vibrator.bean.VibrationPattern: ohos.vibrator.bean.VibrationPattern createSingle(int,int)>
<ohos.data.search.schema.NoticeItem: ohos.data.search.schema.NoticeItem setNoticeDate(java.lang.Long)>
<ohos.agp.render.Paint: boolean isUnderLined()>
<ohos.agp.components.element.ElementContainer: boolean selectElement(int)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle catchException(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)>
<ohos.media.audio.AudioCapturer: int read(float[],int,int,boolean)>
<ohos.global.icu.text.SimpleDateFormat: int matchQuarterString(java.lang.String,int,int,java.lang.String[],ohos.global.icu.util.Calendar)>
<java.lang.ProcessBuilder: java.io.File directory()>
<ohos.media.audio.FrameIntervalObserver: void onFrameInterval()>
<java.sql.ResultSetMetaData: int isNullable(int)>
<ohos.media.tubecore.AVTube: boolean isReady()>
<java.sql.DatabaseMetaData: boolean supportsMinimumSQLGrammar()>
<java.net.DatagramPacket: void <init>(byte[],int,int)>
<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,int)>
<ohos.global.icu.text.LocaleDisplayNames: java.lang.String scriptDisplayName(java.lang.String)>
<java.time.MonthDay: java.lang.String format(java.time.format.DateTimeFormatter)>
<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock(long,long,boolean)>
<ohos.miscservices.inputmethodability.InputMethodAbility: void onBeginInput(ohos.miscservices.inputmethodability.KeyboardController,ohos.miscservices.inputmethodability.TextInputClient)>
<ohos.event.commonevent.CommonEventSubscribeInfo: void setPriority(int)>
<ohos.data.resultset.TableResultSet.RowBuilder: ohos.data.resultset.TableResultSet.RowBuilder setColumnValue(java.lang.Object)>
<java.util.concurrent.locks.StampedLock: void unlock(long)>
<javax.lang.model.element.TypeElement: javax.lang.model.element.NestingKind getNestingKind()>
<java.util.stream.BaseStream: java.util.stream.BaseStream unordered()>
<ohos.agp.components.SearchBar: void setSearchIcon(ohos.media.image.PixelMap)>
<javax.net.ssl.ExtendedSSLSession: void <init>()>
<java.util.concurrent.SynchronousQueue: int drainTo(java.util.Collection,int)>
<java.nio.channels.AsynchronousFileChannel: java.util.concurrent.Future write(java.nio.ByteBuffer,long)>
<java.util.jar.Attributes: java.util.Set keySet()>
<ohos.agp.render.opengl.GLES20: void glUniform1f(int,float)>
<ohos.global.icu.text.Edits: ohos.global.icu.text.Edits mergeAndAppend(ohos.global.icu.text.Edits,ohos.global.icu.text.Edits)>
<java.util.Locale: void setDefault(java.util.Locale)>
<java.util.regex.Pattern: java.lang.String toString()>
<javax.lang.model.element.TypeParameterElement: javax.lang.model.element.Element getGenericElement()>
<ohos.agp.components.webengine.ScaleController: void setScale(int)>
<ohos.event.notification.NotificationSubscribeInfo: void <clinit>()>
<ohos.nfc.oma.Session: void close()>
<ohos.data.async.JobParams.Builder: void <init>()>
<ohos.data.resultset.TableResultSet: void addRow(java.lang.Iterable)>
<ohos.ai.asr.AsrIntent: void setAudioSourceType(ohos.ai.asr.AsrIntent.AsrAudioSrcType)>
<ohos.agp.components.ComponentContainer: void removeComponent(ohos.agp.components.Component)>
<javax.tools.ForwardingFileObject: java.net.URI toUri()>
<ohos.media.audio.AudioCapturer: boolean getAudioTime(ohos.media.audio.Timestamp,ohos.media.audio.Timestamp.Timebase)>
<ohos.rpc.MessageParcel: ohos.rpc.IRemoteObject[] createRemoteObjectArray()>
<java.util.concurrent.CountedCompleter: void helpComplete(int)>
<ohos.agp.components.ComponentProvider: ohos.agp.components.ComponentProvider.Action setTextColor(int,ohos.agp.utils.Color)>
<ohos.javax.xml.stream.XMLStreamWriter: void writeCharacters(char[],int,int)>
<ohos.utils.LightweightSet: boolean addAll(java.util.Collection)>
<java.util.stream.Collectors: java.util.stream.Collector averagingLong(java.util.function.ToLongFunction)>
<ohos.global.icu.text.DecimalFormat: boolean isDecimalPatternMatchRequired()>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.Instant,java.time.ZoneId)>
<ohos.bundle.BundleInfo.ReqPermissionDetail.UsedScene: void <init>(ohos.bundle.BundleInfo.ReqPermissionDetail,java.lang.String,java.lang.String[])>
<java.sql.DatabaseMetaData: boolean supportsAlterTableWithDropColumn()>
<ohos.agp.utils.Matrix44: void <init>()>
<ohos.global.icu.text.DecimalFormat: void <init>(java.lang.String)>
<java.util.Spliterator: void forEachRemaining(java.util.function.Consumer)>
<java.time.OffsetDateTime: int getHour()>
<ohos.aafwk.ability.DataAbilityOperation: boolean isInsertOperation()>
<ohos.utils.zson.ZSONArray: boolean addAll(int,java.util.Collection)>
<java.lang.Double: boolean isNaN()>
<java.time.ZonedDateTime: java.time.ZonedDateTime minusMonths(long)>
<java.time.chrono.HijrahChronology: boolean isLeapYear(long)>
<ohos.agp.utils.Matrix.ScaleToFit: ohos.agp.utils.Matrix.ScaleToFit valueOf(java.lang.String)>
<ohos.utils.RationalNumber: int intValue()>
<javax.sql.StatementEvent: java.sql.PreparedStatement getStatement()>
<ohos.rpc.IRemoteObject: boolean addDeathRecipient(ohos.rpc.IRemoteObject.DeathRecipient,int)>
<ohos.agp.components.webengine.JsMessageResult: void cancel()>
<ohos.agp.render.opengl.GLES1X: void glFrustumx(int,int,int,int,int,int)>
<ohos.agp.render.opengl.GLES1X: void glDrawArrays(int,int,int)>
<ohos.media.camera.device.FrameResult: long getFrameNumber()>
<java.util.Arrays: void fill(int[],int)>
<ohos.miscservices.inputmethodability.TextInputClient: java.lang.String getBackward(int)>
<ohos.data.distributed.user.SingleKvStore: ohos.data.distributed.common.SecurityLevel getSecurityLevel()>
<ohos.agp.render.PixelMapHolder: void <init>(ohos.media.image.PixelMap)>
<javax.crypto.KeyAgreementSpi: java.security.Key engineDoPhase(java.security.Key,boolean)>
<ohos.media.camera.device.CameraConfig.Builder: ohos.media.camera.device.CameraConfig.Builder setRunningMode(int)>
<java.util.Vector: java.lang.Object firstElement()>
<java.sql.ResultSetMetaData: boolean isCurrency(int)>
<ohos.ai.cv.common.CvRect: void set(int,int,int,int)>
<ohos.agp.components.ListContainer: ohos.agp.components.element.Element getBoundary()>
<ohos.data.search.schema.PhotoItem: ohos.data.search.schema.PhotoItem setHoliday(java.lang.String)>
<ohos.agp.render.render3d.components.CameraComponent: float getPerspectiveAspectRatio()>
<ohos.agp.render.render3d.math.Vector2: float length(float,float)>
<ohos.agp.render.Paint: void setColor(ohos.agp.utils.Color)>
<java.util.ResourceBundle: java.lang.String getBaseBundleName()>
<ohos.agp.render.layoutboost.LayoutBoostUtils: ohos.agp.utils.Color getColorValue(java.lang.String)>
<ohos.agp.transition.TransitionZoomingMove: void setDuration(float)>
<ohos.agp.render.Canvas: void drawRect(ohos.agp.utils.Rect,ohos.agp.render.Paint)>
<ohos.utils.zson.ZSONObject: java.lang.Double getDouble(java.lang.String)>
<java.io.ObjectStreamField: int getOffset()>
<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getP()>
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
<ohos.agp.render.opengl.GLES1X: void glLightModelxv(int,int[])>
<ohos.global.icu.text.MeasureFormat: ohos.global.icu.text.MeasureFormat getInstance(java.util.Locale,ohos.global.icu.text.MeasureFormat.FormatWidth)>
<ohos.global.icu.util.TaiwanCalendar: void <init>(int,int,int,int,int,int)>
<ohos.agp.components.TabList: void selectTabAt(int)>
<ohos.global.icu.text.UnicodeSet: int getRangeStart(int)>
<ohos.org.xml.sax.DTDHandler: void notationDecl(java.lang.String,java.lang.String,java.lang.String)>
<java.sql.ResultSet: void updateObject(int,java.lang.Object,int)>
<ohos.bundle.FormInfo: void <clinit>()>
<ohos.global.icu.text.UnicodeSet: boolean isEmpty()>
<ohos.agp.render.render3d.math.Vector4: ohos.agp.render.render3d.math.Vector4 add(ohos.agp.render.render3d.math.Vector4,ohos.agp.render.render3d.math.Vector4)>
<ohos.accessibility.ability.DisplayResizeController: boolean deleteListener(ohos.accessibility.ability.DisplayResizeListener)>
<ohos.media.photokit.metadata.AVMetadataHelper: ohos.media.image.PixelMap fetchImagePrimaryPixelMap()>
<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>
<java.nio.channels.NoConnectionPendingException: void <init>()>
<ohos.global.icu.text.RuleBasedCollator: int getMaxVariable()>
<java.util.concurrent.LinkedTransferQueue: java.util.Spliterator spliterator()>
<java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>
<java.util.ArrayList: boolean contains(java.lang.Object)>
<java.lang.Class: java.lang.reflect.Field[] getFields()>
<ohos.javax.xml.stream.events.Characters: boolean isIgnorableWhiteSpace()>
<ohos.global.icu.text.RuleBasedCollator: ohos.global.icu.text.CollationElementIterator getCollationElementIterator(java.lang.String)>
<ohos.agp.components.StackLayout: void <init>(ohos.app.Context)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates glob(java.lang.String,java.lang.String)>
<ohos.aafwk.ability.Ability: void onMissionDeleted(ohos.aafwk.content.Intent)>
<ohos.agp.components.Image: void setPixelMap(int)>
<ohos.javax.xml.stream.XMLOutputFactory: java.lang.Object getProperty(java.lang.String)>
<java.lang.TypeNotPresentException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.event.notification.NotificationRequest.NotificationPictureContent: java.lang.String getBriefText()>
<java.math.BigDecimal: void <init>(java.lang.String)>
<java.util.Vector: java.util.Enumeration elements()>
<ohos.telephony.LteSignalInformation: java.lang.String toString()>
<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType valueOf(java.lang.String)>
<ohos.utils.Parcel: ohos.utils.Parcel create(long)>
<ohos.utils.zson.ZSONArray: void clear()>
<ohos.agp.components.RoundProgressBar: float getMaxAngle()>
<java.util.TimeZone: void setDefault(java.util.TimeZone)>
<ohos.data.orm.OrmPredicates: void <init>(java.lang.Class)>
<ohos.global.i18n.text.MeasureFormatter: void setFractionPrecision(int)>
<java.net.Inet4Address: boolean equals(java.lang.Object)>
<ohos.sysappcomponents.contact.entity.Name: void setFamilyNamePhonetic(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<java.util.concurrent.TimeUnit: void sleep(long)>
<ohos.global.icu.text.TimeZoneFormat: ohos.global.icu.util.TimeZone parse(java.lang.String)>
<ohos.agp.render.render3d.resources.MaterialDesc: ohos.agp.render.render3d.resources.GpuResourceHandle getNormal()>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,boolean)>
<java.util.zip.DeflaterInputStream: void reset()>
<java.time.LocalDate: java.time.chrono.Chronology getChronology()>
<ohos.utils.net.UrlQueryFilter: ohos.utils.net.UrlQueryFilter.ValueFilter filterNulWithSpace()>
<ohos.agp.components.AbsButton: void <init>(ohos.app.Context,ohos.agp.components.AttrSet,java.lang.String)>
<ohos.bluetooth.ble.BlePeripheralManager: boolean addService(ohos.bluetooth.ble.GattService)>
<ohos.org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>
<ohos.agp.graphics.SurfaceOps: ohos.agp.render.Canvas lockCanvas()>
<ohos.media.photokit.metadata.AVLoggerConnection: void connect()>
<java.lang.Runtime: void loadLibrary(java.lang.String)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates isNotNull(java.lang.String)>
<ohos.sysappcomponents.settings.SystemSettings: boolean setValue(ohos.aafwk.ability.DataAbilityHelper,java.lang.String,java.lang.String)>
<java.nio.channels.AsynchronousSocketChannel: java.util.concurrent.Future write(java.nio.ByteBuffer)>
<ohos.utils.zson.ZSONObject: ohos.utils.zson.ZSONObject classToZSON(java.lang.Object)>
<java.net.ServerSocket: java.nio.channels.ServerSocketChannel getChannel()>
<java.security.Provider: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>
<java.lang.reflect.Modifier: boolean isTransient(int)>
<java.util.concurrent.ConcurrentMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>
<java.security.cert.X509CRLSelector: java.util.Collection getIssuers()>
<java.util.jar.Attributes: int hashCode()>
<java.io.FileOutputStream: void write(byte[])>
<ohos.aafwk.ability.AbilitySliceLifecycleExecutor.LifecycleState: ohos.aafwk.ability.AbilitySliceLifecycleExecutor.LifecycleState[] values()>
<java.io.ObjectInputValidation: void validateObject()>
<ohos.agp.render.render3d.Engine: boolean handleDevGuiTouchEvent(ohos.multimodalinput.event.TouchEvent)>
<javax.lang.model.element.TypeElement: java.util.List getTypeParameters()>
<ohos.agp.render.render3d.components.NodeComponent: boolean isEnabled()>
<ohos.bundle.IBundleManager: boolean updateShortcuts(java.util.List)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle throwException(java.lang.Class,java.lang.Class)>
<ohos.agp.components.TextFilter.FilterResults: void <init>()>
<ohos.aafwk.ability.AbilitySlice: boolean requestForm(long)>
<java.nio.LongBuffer: java.nio.LongBuffer wrap(long[])>
<java.util.TimeZone: int getOffset(long)>
<javax.net.ssl.SSLServerSocket: java.lang.String[] getSupportedCipherSuites()>
<java.util.GregorianCalendar: boolean isWeekDateSupported()>
<java.util.jar.Manifest: void <init>(java.io.InputStream)>
<java.time.Month: int firstDayOfYear(boolean)>
<java.text.DateFormatSymbols: void setEras(java.lang.String[])>
<ohos.ai.cv.common.CvPoint: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.DateTimePatternGenerator: java.lang.String getAppendItemName(int)>
<java.util.Arrays: double[] copyOfRange(double[],int,int)>
<java.util.Spliterators.AbstractDoubleSpliterator: void <init>(long,int)>
<ohos.event.notification.IAdvancedNotificationManager: void setNotificationBadgeNum(java.lang.String)>
<javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(byte[])>
<ohos.agp.render.render3d.ViewHolder: void setSurfaceListener(ohos.agp.render.render3d.ViewHolder.SurfaceListener)>
<ohos.utils.system.SystemCap: java.lang.String value()>
<java.time.Duration: java.time.Duration plus(long,java.time.temporal.TemporalUnit)>
<java.util.NavigableSet: java.lang.Object pollLast()>
<java.util.concurrent.PriorityBlockingQueue: int remainingCapacity()>
<java.lang.Double: float floatValue()>
<ohos.data.distributed.common.UserInfo: void setUserType(ohos.data.distributed.common.UserType)>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>
<java.util.SplittableRandom: void <init>(long)>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setGroupValue(java.lang.String)>
<java.security.KeyPair: java.security.PrivateKey getPrivate()>
<ohos.global.icu.text.Collator: java.lang.String getDisplayName(java.util.Locale)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>
<java.util.concurrent.ForkJoinPool: java.lang.Object invoke(java.util.concurrent.ForkJoinTask)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates equalTo(java.lang.String,int)>
<ohos.accessibility.ability.GestureResultListenerInfo: void <init>(ohos.accessibility.ability.GestureResultListener)>
<java.util.concurrent.CopyOnWriteArraySet: int size()>
<ohos.agp.animation.AnimatorGroup: void setDelay(long)>
<ohos.media.extractor.Extractor: boolean rewindTo(long,int)>
<ohos.agp.components.Image: int getClipAlignment()>
<ohos.agp.render.render3d.components.CameraComponent: void setOrthoWidth(float)>
<ohos.agp.colors.HslColor: float getSaturation()>
<ohos.agp.render.Paint: void setLetterSpacing(float)>
<java.nio.file.NotLinkException: void <init>(java.lang.String)>
<ohos.agp.render.opengl.GLES30: void glUniform2uiv(int,int,int[])>
<ohos.agp.utils.Color: void <init>()>
<java.io.ObjectInputStream: void registerValidation(java.io.ObjectInputValidation,int)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage acceptEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Consumer,java.util.concurrent.Executor)>
<ohos.bundle.FormInfo: java.lang.String getOriginalBundleName()>
<ohos.utils.BasePacMap: short getShortValue(java.lang.String,short)>
<java.util.function.DoubleToIntFunction: int applyAsInt(double)>
<ohos.agp.components.AbsButton: void setTextColorOff(ohos.agp.utils.Color)>
<ohos.agp.utils.Matrix44: boolean isScaleTranslate()>
<ohos.media.codec.Codec: void finalize()>
<java.util.concurrent.Semaphore: void release()>
<ohos.global.icu.text.CaseMap.Upper: java.lang.String apply(java.util.Locale,java.lang.CharSequence)>
<ohos.aafwk.ability.SystemMemoryInfo: long getTotalSysMem()>
<ohos.bundle.FormInfo: boolean marshalling(ohos.utils.Parcel)>
<ohos.agp.components.CornerMark: ohos.agp.utils.Color getTextColor()>
<java.security.KeyStore.PasswordProtection: char[] getPassword()>
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>
<ohos.telephony.SignalInformation: int hashCode()>
<ohos.media.photokit.MediaLibrary: ohos.media.photokit.support.FetchResult getSearchAlbums(java.lang.String[])>
<ohos.utils.IntArray: void deleteFirstValue(int)>
<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
<ohos.media.common.sessioncore.AVSessionCallback: void onPlayNext()>
<java.time.chrono.IsoEra: int getValue()>
<ohos.agp.render.Region: java.lang.String toString()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: void <clinit>()>
<ohos.utils.LruBuffer: int getPutCount()>
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoLocalDate minus(java.time.temporal.TemporalAmount)>
<ohos.agp.components.TableLayoutManager: void <init>()>
<java.lang.reflect.Method: int hashCode()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>
<ohos.global.icu.lang.UScript: int getScript(int)>
<java.net.HttpURLConnection: void disconnect()>
<ohos.workscheduler.WorkInfo: boolean isRequestNetwork()>
<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>
<ohos.utils.system.SystemCapability.Location: void <init>()>
<java.lang.StrictMath: double nextDown(double)>
<java.util.Map: java.util.Set entrySet()>
<ohos.dcall.DistributedCallManager: boolean dial(java.lang.String,boolean)>
<ohos.agp.components.Text: int getMaxTextWidth()>
<ohos.agp.render.render3d.RenderLoop: boolean cancelTask(ohos.agp.render.render3d.Task)>
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)>
<java.time.OffsetDateTime: java.time.OffsetDateTime truncatedTo(java.time.temporal.TemporalUnit)>
<java.util.Collections: void sort(java.util.List)>
<ohos.agp.utils.Rect: void fetchParcel(ohos.utils.Parcel)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates equalTo(java.lang.String,java.sql.Time)>
<ohos.agp.render.render3d.util.SceneUtil: ohos.agp.render.render3d.util.BoundingBox getBoundsUsingWorldMatrix(ohos.agp.render.render3d.Entity,boolean)>
<ohos.agp.window.dialog.IDialog: void show()>
<ohos.aafwk.content.Intent: ohos.aafwk.content.Intent setParam(java.lang.String,short[])>
<ohos.event.notification.ReminderRequestCalendar: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.app.AbilityContext: java.io.File[] getExternalFilesDirs(java.lang.String)>
<ohos.sysappcomponents.contact.entity.Contact: void addEvent(ohos.sysappcomponents.contact.entity.Event)>
<ohos.sysappcomponents.calendar.entity.Instances: void setInstanceStartDay(long)>
<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>
<ohos.aafwk.ability.Ability.WindowAttributeHelper: ohos.aafwk.ability.Ability.WindowAttributeHelper setTopPadding(int)>
<ohos.sysappcomponents.contact.entity.Portrait: void setUri(ohos.utils.net.Uri)>
<ohos.utils.zson.ZSONArray: java.lang.Float getFloat(int)>
<ohos.media.image.PixelMap: int readPixel(ohos.media.image.common.Position)>
<ohos.global.icu.lang.UCharacter: int codePointCount(char[],int,int)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>
<ohos.media.player.Player: int getDuration()>
<ohos.hiviewdfx.Debug: int getCountofLoadClasses()>
<java.sql.DatabaseMetaData: boolean supportsSubqueriesInComparisons()>
<java.time.LocalDate: java.time.Period until(java.time.chrono.ChronoLocalDate)>
<java.util.concurrent.locks.Condition: long awaitNanos(long)>
<javax.lang.model.util.TypeKindVisitor7: void <init>()>
<java.util.Collections: java.lang.Object max(java.util.Collection)>
<ohos.wifi.WifiDevice: boolean addUntrustedConfig(ohos.wifi.WifiDeviceConfig)>
<java.lang.StrictMath: int toIntExact(long)>
<ohos.media.audio.AudioRenderer: boolean setPlaybackSpeed(ohos.media.audio.AudioRenderer.SpeedPara)>
<ohos.location.Location: void <init>(ohos.location.Location)>
<java.nio.file.FileSystem: java.lang.Iterable getFileStores()>
<java.security.cert.X509Certificate: boolean[] getSubjectUniqueID()>
<javax.security.cert.CertificateException: void <init>()>
<java.security.AlgorithmParameters: void <init>(java.security.AlgorithmParametersSpi,java.security.Provider,java.lang.String)>
<java.lang.Long: java.lang.Long getLong(java.lang.String)>
<java.sql.Clob: long length()>
<ohos.aafwk.ability.Form: void <init>()>
<java.util.Locale: java.lang.String toLanguageTag()>
<ohos.miscservices.download.DownloadSession: boolean pause()>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates notEqualTo(java.lang.String,java.sql.Timestamp)>
<java.io.File: java.lang.String[] list()>
<ohos.agp.render.render3d.Engine.RenderNodeGraphType: void <clinit>()>
<java.sql.Connection: boolean isValid(int)>
<ohos.multimodalinput.standard.MultimodalEventHandle: int unregisterStandardizedEventHandle(ohos.aafwk.ability.Ability,ohos.multimodalinput.standard.StandardizedEventHandle)>
<ohos.global.icu.util.Measure: int hashCode()>
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>
<ohos.ai.cv.text.Text: void setPageLanguage(int)>
<java.net.SecureCacheResponse: java.security.Principal getLocalPrincipal()>
<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,int,int)>
<ohos.agp.colors.Color: void <init>(ohos.agp.colors.Color)>
<ohos.javax.xml.stream.XMLStreamWriter: void close()>
<javax.net.ssl.SSLSocket: void setWantClientAuth(boolean)>
<ohos.global.icu.math.BigDecimal: ohos.global.icu.math.BigDecimal pow(ohos.global.icu.math.BigDecimal,ohos.global.icu.math.MathContext)>
<ohos.agp.render.Paint: boolean getFilterBitmap()>
<ohos.workscheduler.WorkScheduler: boolean startWork(ohos.workscheduler.WorkInfo,boolean)>
<java.lang.Thread: void suspend()>
<java.security.DigestException: void <init>(java.lang.Throwable)>
<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator)>
<ohos.agp.window.service.DisplayManager: java.util.Optional getDefaultDisplay(ohos.app.Context)>
<ohos.app.AbilityContext: java.io.File getDataDir()>
<ohos.aafwk.ability.OnClickListener: void onClick(int,ohos.aafwk.ability.AbilityForm,ohos.aafwk.ability.ViewsStatus)>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder addUnicodeLocaleAttribute(java.lang.String)>
<ohos.multimodalinput.standard.MultimodalEventHandle: int registerStandardizedEventHandle(ohos.aafwk.ability.Ability,ohos.multimodalinput.standard.StandardizedEventHandle)>
<java.io.File: java.nio.file.Path toPath()>
<java.lang.Short: short reverseBytes(short)>
<java.util.zip.ZipException: void <init>(java.lang.String)>
<ohos.event.commonevent.CommonEventSubscriber: void setCode(int)>
<ohos.agp.components.SearchBar: ohos.agp.utils.Color getSearchTextColor()>
<ohos.global.icu.text.Bidi: int[] invertMap(int[])>
<ohos.agp.render.opengl.GLES31: void glDrawElementsIndirect(int,int,long)>
<java.security.Security: java.lang.String getAlgorithmProperty(java.lang.String,java.lang.String)>
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key,java.lang.String)>
<java.text.MessageFormat: void setFormatByArgumentIndex(int,java.text.Format)>
<javax.sql.RowSet: void setObject(java.lang.String,java.lang.Object,int,int)>
<ohos.media.audio.AudioStreamInfo.ChannelMask: ohos.media.audio.AudioStreamInfo.ChannelMask valueOf(java.lang.String)>
<java.time.Year: java.time.Year plus(long,java.time.temporal.TemporalUnit)>
<java.nio.LongBuffer: java.nio.LongBuffer allocate(int)>
<ohos.agp.animation.timelinecurves.SpringCurve: float getCurvedTime(float)>
<ohos.global.icu.util.ULocale.Builder: ohos.global.icu.util.ULocale.Builder setRegion(java.lang.String)>
<ohos.global.icu.text.MessageFormat: void setFormatsByArgumentIndex(java.text.Format[])>
<ohos.agp.utils.DimensFloat: ohos.agp.utils.DimensFloat increase(float,float)>
<javax.tools.JavaFileObject.Kind: javax.tools.JavaFileObject.Kind valueOf(java.lang.String)>
<ohos.global.icu.text.RelativeDateTimeFormatter.FormattedRelativeDateTime: java.text.AttributedCharacterIterator toCharacterIterator()>
<ohos.media.photokit.MediaLibrary: ohos.media.photokit.support.FetchResult getPrivateAlbums()>
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key,java.security.Provider)>
<java.lang.Math: double sqrt(double)>
<ohos.global.icu.util.HebrewCalendar: void validateField(int)>
<ohos.javax.xml.validation.Validator: void validate(ohos.javax.xml.transform.Source)>
<java.text.DateFormat.Field: java.lang.Object readResolve()>
<java.util.concurrent.ConcurrentNavigableMap: java.util.NavigableMap descendingMap()>
<java.time.LocalTime: int getNano()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder append(java.time.format.DateTimeFormatter)>
<ohos.global.icu.text.DateFormatSymbols: void <init>(java.util.ResourceBundle,ohos.global.icu.util.ULocale)>
<java.util.Collections: java.util.List emptyList()>
<java.util.zip.Checksum: void update(byte[],int,int)>
<ohos.agp.render.opengl.GLES1X: void glTexCoordPointer(int,int,int,int)>
<java.sql.ResultSet: int getFetchSize()>
<java.nio.file.SecureDirectoryStream: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.lang.Class)>
<javax.lang.model.type.TypeVisitor: java.lang.Object visitPrimitive(javax.lang.model.type.PrimitiveType,java.lang.Object)>
<ohos.agp.components.ListContainer: void setItemProvider(ohos.agp.components.BaseItemProvider)>
<ohos.eventhandler.InnerEvent: boolean unmarshalling(ohos.utils.Parcel)>
<java.text.StringCharacterIterator: char next()>
<java.util.Queue: java.lang.Object remove()>
<ohos.global.icu.text.MessageFormat: java.util.Map parseToMap(java.lang.String)>
<ohos.agp.components.Component: ohos.agp.utils.DimensFloat getScale()>
<java.lang.StringBuffer: int codePointBefore(int)>
<ohos.powermanager.PowerManager.RunningLockType: void <clinit>()>
<java.util.Arrays: void parallelPrefix(int[],java.util.function.IntBinaryOperator)>
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object remove()>
<ohos.global.icu.text.SimpleDateFormat: int matchString(java.lang.String,int,int,java.lang.String[],ohos.global.icu.util.Calendar)>
<ohos.agp.components.ComponentContainer: void removeComponentById(int)>
<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>
<java.util.UUID: int variant()>
<ohos.global.icu.text.AlphabeticIndex: ohos.global.icu.text.AlphabeticIndex setMaxLabelCount(int)>
<ohos.agp.components.Component: ohos.agp.components.element.Element getBackgroundElement()>
<ohos.ai.engine.pluginservice.ILoadPluginCallback: void onProgress(int)>
<ohos.app.AbilityContext: ohos.app.Context createBundleContext(java.lang.String,int)>
<ohos.bundle.InstallParam: void <init>()>
<ohos.agp.components.ListContainer: int getVisibleIndexCount()>
<ohos.media.audio.AudioRendererInfo.AudioStreamOutputFlag: ohos.media.audio.AudioRendererInfo.AudioStreamOutputFlag valueOf(java.lang.String)>
<java.time.LocalDateTime: java.time.chrono.ChronoLocalDateTime plus(long,java.time.temporal.TemporalUnit)>
<ohos.global.icu.text.DateIntervalFormat: java.lang.StringBuffer format(ohos.global.icu.util.DateInterval,java.lang.StringBuffer,java.text.FieldPosition)>
<java.sql.CallableStatement: java.math.BigDecimal getBigDecimal(java.lang.String)>
<ohos.global.icu.lang.UCharacter: int getCombiningClass(int)>
<javax.lang.model.util.SimpleElementVisitor8: void <init>()>
<ohos.agp.text.Layout: float getLineStart(int)>
<java.nio.charset.Charset: java.util.SortedMap availableCharsets()>
<ohos.data.orm.OrmContext: boolean backup(java.lang.String,byte[])>
<ohos.agp.render.PdfGenerator: ohos.agp.render.PdfGenerator.PdfPage beginDrawing(ohos.agp.render.PdfGenerator.PageInfo)>
<ohos.data.search.schema.NoticeItem: ohos.data.search.schema.NoticeItem setImportance(java.lang.String)>
<java.util.Collection: java.util.Iterator iterator()>
<ohos.global.icu.text.DateIntervalInfo: java.lang.Object freeze()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates beginWrap()>
<java.lang.ReflectiveOperationException: void <init>(java.lang.Throwable)>
<ohos.agp.components.ComponentTreeObserver: void addWindowFocusUpdatedListener(ohos.agp.components.ComponentTreeObserver.WindowFocusUpdatedListener)>
<java.security.KeyStore: java.util.Enumeration aliases()>
<ohos.global.icu.util.BuddhistCalendar: void <init>(java.util.Locale)>
<java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType genericMethodType(int)>
<java.nio.channels.SelectableChannel: boolean isBlocking()>
<ohos.sensor.agent.SensorAgent: boolean setSensorDataCallback(ohos.sensor.listener.ISensorDataCallback,ohos.sensor.bean.SensorBase,int,long)>
<ohos.global.icu.text.DateTimePatternGenerator: ohos.global.icu.text.DateTimePatternGenerator getInstance(java.util.Locale)>
<java.util.Collection: void clear()>
<java.nio.charset.CharsetEncoder: void implReset()>
<java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<javax.crypto.MacSpi: void engineReset()>
<java.util.Arrays: void parallelSort(long[],int,int)>
<ohos.global.icu.util.ULocale: java.lang.String toUnicodeLocaleKey(java.lang.String)>
<ohos.bundle.IBundleManager: java.util.List getFormsByModule(java.lang.String,java.lang.String)>
<ohos.event.notification.NotificationRequest.NotificationNormalContent: ohos.event.notification.NotificationRequest.NotificationNormalContent setAdditionalText(java.lang.String)>
<java.util.concurrent.SynchronousQueue: boolean isEmpty()>
<java.util.concurrent.LinkedBlockingDeque: void <init>(java.util.Collection)>
<java.lang.reflect.Field: boolean isEnumConstant()>
<ohos.agp.components.Component: float getScrollbarSweepAngle()>
<java.sql.DatabaseMetaData: boolean othersInsertsAreVisible(int)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>
<java.io.StringWriter: void close()>
<java.sql.ResultSet: void updateAsciiStream(java.lang.String,java.io.InputStream)>
<ohos.agp.components.Attr: long getLongValue()>
<java.net.URLStreamHandler: int hashCode(java.net.URL)>
<ohos.agp.render.render3d.resources.ResourceHandle: boolean isValid(ohos.agp.render.render3d.resources.ResourceHandle)>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenCombine(java.util.concurrent.CompletionStage,java.util.function.BiFunction)>
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<ohos.global.icu.text.UCharacterIterator: void setToLimit()>
<ohos.media.camera.device.CameraConfig.Builder: java.util.List getSurfaces()>
<ohos.security.permission.PermissionDef: void <init>()>
<java.time.chrono.ChronoPeriod: boolean isNegative()>
<ohos.global.i18n.text.Transliterator: ohos.global.i18n.text.Transliterator getInstance(java.lang.String)>
<java.time.LocalTime: void <clinit>()>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitFloat(float,java.lang.Object)>
<java.text.ChoiceFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>
<java.math.BigDecimal: void <init>(char[])>
<ohos.aafwk.content.Intent: boolean hasParameter(java.lang.String)>
<ohos.miscservices.pasteboard.PasteData: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.aafwk.ability.Ability.LayoutParamsHelper: ohos.aafwk.ability.Ability.LayoutParamsHelper setHeight(int)>
<java.util.concurrent.PriorityBlockingQueue: void clear()>
<ohos.utils.Parcel: ohos.utils.PlainArray readPlainArray(java.lang.Class)>
<ohos.accessibility.ability.AccessibilityInfo: void setFocusable(boolean)>
<ohos.bundle.IBundleManager: java.util.List getAllForms()>
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinTask submit(java.lang.Runnable,java.lang.Object)>
<ohos.agp.components.Component: ohos.agp.components.element.Element getForegroundElement()>
<ohos.miscservices.pasteboard.SystemPasteboard: ohos.miscservices.pasteboard.PasteData getPasteData()>
<ohos.agp.colors.HsvColor: float getValue()>
<ohos.media.tubecore.AVTubeManager: void addTubeObserver(ohos.media.tubecore.AVTubeManager.TubeObserver,int,int)>
<ohos.utils.PacMap: boolean hasKey(java.lang.String)>
<ohos.event.notification.NotificationHelper: boolean isAllowedNotify()>
<java.util.logging.Handler: boolean isLoggable(java.util.logging.LogRecord)>
<ohos.utils.PlainIntArray: java.util.Optional removeAt(int)>
<java.security.spec.ECFieldF2m: void <init>(int,java.math.BigInteger)>
<ohos.interwork.bundle.ElementNameEx: ohos.bundle.ElementName getElementName()>
<ohos.agp.utils.Rect: boolean getIntersectRect(ohos.agp.utils.Rect)>
<ohos.data.distributed.common.KvStore: void putDouble(java.lang.String,double)>
<ohos.telephony.CdmaSignalInformation: boolean marshalling(ohos.utils.Parcel)>
<java.sql.ResultSet: int getType()>
<javax.lang.model.util.ElementScanner6: void <init>(java.lang.Object)>
<ohos.media.recorder.Recorder: boolean setVideoProperty(ohos.media.common.VideoProperty)>
<java.util.AbstractMap.SimpleEntry: java.lang.Object setValue(java.lang.Object)>
<ohos.agp.components.TabList: int getIndicatorType()>
<java.nio.file.attribute.UserDefinedFileAttributeView: int write(java.lang.String,java.nio.ByteBuffer)>
<java.util.function.ToIntFunction: int applyAsInt(java.lang.Object)>
<java.nio.channels.ServerSocketChannel: java.net.SocketAddress getLocalAddress()>
<ohos.bundleactive.BundleActiveStates.State: java.lang.String queryNameOfClass()>
<ohos.utils.net.Uri.Builder: ohos.utils.net.Uri.Builder appendDecodedQueryParam(java.lang.String,java.lang.String)>
<ohos.agp.window.service.ComponentPadding: ohos.agp.window.service.ComponentPadding useSystemComponentPadding()>
<java.sql.ResultSet: void updateNClob(java.lang.String,java.io.Reader)>
<java.text.Bidi: void reorderVisually(byte[],int,java.lang.Object[],int,int)>
<ohos.aafwk.ability.Lifecycle: void addObserver(ohos.aafwk.ability.ILifecycleObserver)>
<ohos.agp.render.render3d.components.NodeComponent: void setName(java.lang.String)>
<ohos.data.resultset.AbsSharedResultSet: int getInt(int)>
<ohos.event.notification.NotificationUserInput: boolean isPermitFreeFormInput()>
<ohos.global.icu.util.VersionInfo: ohos.global.icu.util.VersionInfo getInstance(java.lang.String)>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedWriterThreads()>
<ohos.media.audio.AudioDeviceDescriptor: boolean isOutputDevice()>
<javax.net.ssl.SSLParameters: void setSNIMatchers(java.util.Collection)>
<javax.net.ssl.SSLSocket: void <init>(java.net.InetAddress,int)>
<ohos.data.resultset.ResultSetWrapper: int getRowCount()>
<ohos.security.permission.NeedsPermission: java.lang.String[] all()>
<ohos.agp.components.Component: float getDragAcceptAngle()>
<java.util.prefs.Preferences: void exportNode(java.io.OutputStream)>
<ohos.agp.render.opengl.GLES31: void glGetBooleaniv(int,int,boolean[])>
<ohos.agp.components.Component: ohos.agp.utils.DimensFloat getTranslation()>
<ohos.data.distributed.common.Value: ohos.data.distributed.common.Value get(double)>
<ohos.agp.components.TimePicker: ohos.agp.components.element.Element getDisplayedBottomElement()>
<ohos.aafwk.content.Intent: java.lang.String getType()>
<java.time.temporal.ChronoField: java.time.temporal.ValueRange range()>
<javax.net.ssl.TrustManagerFactorySpi: void engineInit(javax.net.ssl.ManagerFactoryParameters)>
<ohos.agp.components.Picker: int getMinValue()>
<java.util.stream.IntStream: java.util.Spliterator spliterator()>
<java.util.concurrent.ArrayBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>
<ohos.event.notification.NotificationRequest: ohos.event.notification.NotificationRequest setPublicNotification(ohos.event.notification.NotificationRequest)>
<java.math.BigDecimal: float floatValue()>
<java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>
<ohos.agp.components.Component: boolean isFocused()>
<ohos.global.resource.solidxml.TypedAttribute.AttrData: void setAttrType(int)>
<ohos.global.icu.text.AlphabeticIndex: void <init>(ohos.global.icu.text.RuleBasedCollator)>
<java.util.concurrent.atomic.LongAccumulator: long longValue()>
<ohos.agp.components.ListContainer: void <init>(ohos.app.Context,ohos.agp.components.AttrSet)>
<ohos.media.audio.AudioCapturer: ohos.media.audio.AudioStreamInfo.EncodingFormat getEncodingFormat()>
<ohos.data.DatabaseHelper: boolean deletePreferences(java.lang.String)>
<ohos.global.icu.text.DateFormat: ohos.global.icu.text.DateFormat getInstanceForSkeleton(java.lang.String)>
<ohos.media.audio.AudioStreamInfo.ChannelMask: int getValue()>
<ohos.global.icu.text.SimpleDateFormat: int hashCode()>
<ohos.utils.LongPlainArray: java.lang.Object removeAt(int)>
<ohos.agp.render.opengl.GLES30: void glMemoryBarrier(int)>
<ohos.app.AbilityContext: void lockMission()>
<ohos.global.icu.text.Edits.Iterator: int destinationIndex()>
<java.io.FilterReader: void reset()>
<java.security.Signature: java.lang.String toString()>
<ohos.telephony.RadioInfoManager: java.lang.String getOperatorName(int)>
<ohos.agp.components.PageFlipper: ohos.agp.animation.AnimatorProperty getIncomingAnimation()>
<javax.net.ssl.KeyManagerFactory: void <init>(javax.net.ssl.KeyManagerFactorySpi,java.security.Provider,java.lang.String)>
<java.time.LocalDateTime: java.time.LocalDateTime withNano(int)>
<ohos.global.icu.util.ULocale: int compareTo(ohos.global.icu.util.ULocale)>
<ohos.agp.window.dialog.ToastDialog: ohos.agp.components.Component getComponent()>
<ohos.agp.components.Text: void addTextObserver(ohos.agp.components.Text.TextObserver)>
<ohos.data.IllegalPredicateException: void <init>()>
<java.util.Scanner: boolean hasNextFloat()>
<java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>
<java.sql.ResultSetMetaData: boolean isReadOnly(int)>
<ohos.data.distributed.common.FieldNode: boolean setDefault(long)>
<ohos.agp.render.Path.FillType: ohos.agp.render.Path.FillType[] values()>
<java.lang.Math: double log(double)>
<java.sql.CallableStatement: int getInt(int)>
<ark.system.ClassLoaderHelper: java.lang.String toString(java.lang.ClassLoader)>
<java.util.logging.FileHandler: void <init>()>
<ohos.event.notification.NotificationRequest.NotificationConversationalContent.ConversationalMessage: java.lang.String getMimeType()>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate now()>
<ohos.multimodalinput.standard.TelephoneEventHandle: boolean onTelephoneControl(ohos.multimodalinput.event.MultimodalEvent)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>
<ohos.agp.components.Component.LongClickedListener: void onLongClicked(ohos.agp.components.Component)>
<ohos.data.orm.OrmPredicates: ohos.data.orm.OrmPredicates orderByAsc(java.lang.String)>
<ohos.telephony.GsmSignalInformation: java.lang.String toString()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>
<ohos.data.dataability.DataAbilityPredicates: ohos.data.dataability.DataAbilityPredicates notBetween(java.lang.String,double,double)>
<java.util.Date: java.lang.String toString()>
<ohos.utils.geo.RectFloat: void fuse(float,float,float,float)>
<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.concurrent.locks.ReentrantReadWriteLock: boolean isWriteLocked()>
<ohos.event.notification.NotificationHelper: void addNotificationSlotGroup(ohos.event.notification.NotificationSlotGroup)>
<java.io.Console: java.lang.String readLine()>
<java.time.chrono.HijrahDate: long getLong(java.time.temporal.TemporalField)>
<ohos.data.distributed.common.KvStoreResultSet: boolean goToNextRow()>
<ohos.media.audio.SoundPlayer.SoundPlayerParameters: void setVolumes(ohos.media.audio.SoundPlayer.AudioVolumes)>
<ohos.aafwk.ability.Ability: void setMainRoute(java.lang.String)>
<ohos.agp.components.DirectionalLayout: void <init>(ohos.app.Context)>
<ohos.aafwk.ability.DeviceConfigInfo: boolean unmarshalling(ohos.utils.Parcel)>
<java.security.KeyStoreSpi: boolean engineEntryInstanceOf(java.lang.String,java.lang.Class)>
<ohos.agp.window.service.ComponentPadding: boolean hasSystemComponentPadding()>
<ohos.media.common.VideoProperty.Builder: ohos.media.common.VideoProperty.Builder setRecorderHeight(int)>
<java.nio.channels.spi.AbstractSelectableChannel: java.lang.Object blockingLock()>
<javax.sql.RowSet: void setNull(int,int)>
<java.security.KeyStore.Builder: void <init>()>
<ohos.agp.render.render3d.components.TransformComponent: void setRotation(ohos.agp.render.render3d.math.Quaternion)>
<ohos.global.icu.text.ConstrainedFieldPosition: boolean matchesField(java.text.Format.Field,java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>
<ohos.global.resource.solidxml.Pattern: void set(ohos.global.resource.solidxml.Pattern)>
<ohos.media.image.common.Size: int hashCode()>
<java.time.chrono.ChronoZonedDateTime: boolean isBefore(java.time.chrono.ChronoZonedDateTime)>
<ohos.agp.components.TimePicker: void setDisplayedLinesElements(ohos.agp.components.element.Element,ohos.agp.components.element.Element)>
<java.lang.Math: double ceil(double)>
<ohos.accessibility.AccessibilityEventInfo: java.lang.CharSequence getClassName()>
<ohos.bundle.ApplicationInfo: boolean unmarshalling(ohos.utils.Parcel)>
<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getLowerBound()>
<ohos.global.icu.text.DecimalFormat: java.lang.String getNegativeSuffix()>
<ohos.agp.components.Component: boolean isScrollBarOn(int)>
<ohos.agp.components.Component: int getFadeEffectBoundaryWidth()>
<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>
<java.math.MathContext: void <init>(java.lang.String)>
<java.sql.ResultSet: void updateRef(java.lang.String,java.sql.Ref)>
<ohos.net.SocketCertificates: int getGid()>
<java.util.ResourceBundle.Control: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)>
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoEra eraOf(int)>
<ohos.utils.Parcel: int getWritableBytes()>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAsync(java.lang.Runnable)>
<ohos.agp.render.render3d.util.MeshBuilder: int getVertexCount()>
<ohos.agp.utils.Matrix: void <init>()>
<java.sql.ResultSet: void updateFloat(int,float)>
<ohos.data.distributed.common.KvStoreResultSet: boolean isAtFirstRow()>
<ohos.global.resource.solidxml.Attribute: java.lang.String getStringValue()>
<ohos.global.icu.text.Normalizer2: boolean hasBoundaryBefore(int)>
<ohos.agp.components.Picker: void setDisplayedLinesElements(ohos.agp.components.element.Element,ohos.agp.components.element.Element)>
<java.security.cert.CertPathValidatorException: int getIndex()>
<java.nio.channels.FileChannel: java.nio.channels.SeekableByteChannel position(long)>
<ohos.data.rdb.RdbPermException: void <init>()>
<java.sql.DatabaseMetaData: boolean supportsNamedParameters()>
<javax.net.ssl.CertPathTrustManagerParameters: java.security.cert.CertPathParameters getParameters()>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates between(java.lang.String,long,long)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String,java.util.Locale)>
<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>
<ohos.javax.xml.stream.XMLEventReader: ohos.javax.xml.stream.events.XMLEvent nextEvent()>
<ohos.global.icu.text.DecimalFormatSymbols: void setZeroDigit(char)>
<ohos.agp.components.PageSliderIndicator: int getItemOffset()>
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[])>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
<java.math.MathContext: void <clinit>()>
<java.lang.Error: void <init>(java.lang.Throwable)>
<ohos.app.Context: void setTheme(int)>
<ohos.interwork.eventhandler.InnerEventUtils: int getArg2(ohos.eventhandler.InnerEvent)>
<java.time.LocalDate: long getLong(java.time.temporal.TemporalField)>
<ohos.agp.render.Path: void conicTo(ohos.agp.utils.Point,ohos.agp.utils.Point,float)>
<ohos.security.seoperator.SEOperatorAbs: void <init>()>
<java.math.BigInteger: java.math.BigInteger not()>
<java.sql.Clob: java.io.Reader getCharacterStream()>
<ohos.bluetooth.ble.BlePeripheralCallback: void mtuUpdateEvent(int,int)>
<java.security.cert.CertificateFactory: void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String)>
<ohos.agp.components.CornerMark: void setText(java.lang.String)>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale forLanguageTag(java.lang.String)>
<java.util.concurrent.DelayQueue: int size()>
<ohos.media.sessioncore.AVSession: void <init>(ohos.app.Context,java.lang.String,ohos.utils.PacMap)>
<ohos.utils.zson.ZSONReader: float readFloat()>
<java.net.MulticastSocket: boolean getLoopbackMode()>
<ohos.bundle.BundleInfo: java.lang.String getJointUserId()>
<java.util.List: java.util.Spliterator spliterator()>
<ohos.agp.render.opengl.GLES1X: void glFogxv(int,java.nio.IntBuffer)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates lessThanOrEqualTo(java.lang.String,long)>
<ohos.data.search.schema.AppItem: java.util.List getAppSchema()>
<ohos.miscservices.inputmethodability.KeyboardController: boolean setKeyboardContainer(ohos.agp.components.ComponentContainer)>
<java.util.stream.Collectors: java.util.stream.Collector collectingAndThen(java.util.stream.Collector,java.util.function.Function)>
<java.nio.channels.FileLock: boolean overlaps(long,long)>
<javax.lang.model.element.AnnotationValueVisitor: java.lang.Object visitDouble(double,java.lang.Object)>
<java.lang.Math: int decrementExact(int)>
<java.util.OptionalDouble: java.util.OptionalDouble of(double)>
<ohos.aafwk.ability.AbilitySlice: boolean onKeyPressAndHold(int,ohos.multimodalinput.event.KeyEvent)>
<ohos.media.common.sessioncore.AVElement: boolean unmarshalling(ohos.utils.Parcel)>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet closeOver(int)>
<ohos.agp.render.opengl.GLES32: void glDrawRangeElementsBaseVertex(int,int,int,int,int,java.nio.Buffer,int)>
<ohos.data.orm.OrmContext: void unregisterStoreObserver(java.lang.String,ohos.data.orm.OrmObjectObserver)>
<javax.lang.model.element.ExecutableElement: java.util.List getThrownTypes()>
<java.security.spec.EncodedKeySpec: byte[] getEncoded()>
<java.lang.SecurityManager: void checkRead(java.lang.String)>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
<ohos.location.LocatorCallback: void onErrorReport(int)>
<ohos.accessibility.ability.AccessibilityInfo: boolean isGivingHint()>
<ohos.wifi.WifiDeviceConfig: void setRestricted(boolean)>
<java.util.Scanner: short nextShort()>
<ohos.agp.components.TableLayout: ohos.agp.components.TableLayout.Specification specification(int,int,int,float)>
<ohos.javax.xml.parsers.SAXParser: void parse(ohos.org.xml.sax.InputSource,ohos.org.xml.sax.helpers.DefaultHandler)>
<java.io.ObjectStreamField: java.lang.String getTypeString()>
<java.time.Year: java.time.Year minusYears(long)>
<java.time.chrono.ChronoZonedDateTime: java.time.ZoneId getZone()>
<ohos.miscservices.inputmethod.RichContent: boolean marshalling(ohos.utils.Parcel)>
<ohos.global.icu.util.ULocale: ohos.global.icu.util.ULocale addLikelySubtags(ohos.global.icu.util.ULocale)>
<ohos.agp.window.service.IApplyComponentPaddingListener: void notifyPaddingChange(ohos.agp.window.service.ComponentPadding)>
<ohos.global.resource.solidxml.TypedAttribute: float getFloatValue()>
<java.util.Stack: void <init>()>
<java.sql.SQLSyntaxErrorException: void <init>()>
<ohos.agp.components.Component: void onAttributeConfigChanged(ohos.global.configuration.Configuration)>
<java.lang.Throwable: java.lang.String toString()>
<java.security.cert.CRLException: void <init>()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.security.Provider)>
<ohos.data.rdb.RdbPredicates: ohos.data.rdb.RdbPredicates notIn(java.lang.String,float[])>
<ohos.agp.window.service.Window: void setPadding(int,int,int,int)>
<ohos.aafwk.ability.fraction.FractionAbility: void onStop()>
<java.sql.SQLOutput: void writeByte(byte)>
<ohos.data.rdb.RdbStore: java.util.List listAttached()>
<ohos.aafwk.ability.MemoryInfo: int getOtherPrivateDirty()>
<java.util.ListResourceBundle: java.util.Set handleKeySet()>
<ohos.data.dataability.DataAbilityPredicates: void clear()>
<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<ohos.data.search.schema.DocumentItem: java.lang.Integer getSize()>
<java.util.Calendar.Builder: java.util.Calendar.Builder setWeekDate(int,int,int)>
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate dateNow()>
<ohos.agp.render.Region: boolean isRect()>
<ohos.media.audio.SoundEffect: ohos.media.audio.SoundEffect.SoundEffectInfo[] acquireEffects()>
<ohos.bundle.IBundleManager: void registerPermissionsChanged(int[],ohos.rpc.IRemoteObject)>
<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>
<ohos.media.common.sessioncore.AVPlaybackState.Builder: ohos.media.common.sessioncore.AVPlaybackState.Builder addAVPlaybackCustomAction(ohos.media.common.sessioncore.AVPlaybackState.AVPlaybackCustomAction)>
<java.security.AlgorithmParameters: byte[] getEncoded(java.lang.String)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>
<java.security.BasicPermission: void <init>(java.lang.String,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,long)>
<java.util.prefs.Preferences: void exportSubtree(java.io.OutputStream)>
<ohos.aafwk.ability.AbilitySlice.FormCallback: void onFormUninstalled(int)>
<ohos.app.ProcessInfo: java.lang.String getProcessName()>
<ohos.data.rdb.DataObservable: void <init>()>
<ohos.rpc.MessageParcel: ohos.rpc.IRemoteObject readRemoteObject()>
<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage handleAsync(java.util.function.BiFunction,java.util.concurrent.Executor)>
<ohos.global.icu.text.DecimalFormatSymbols: char getMonetaryGroupingSeparator()>
<ohos.agp.components.AbsButton: void setTextColorOn(ohos.agp.utils.Color)>
<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)>
<java.lang.Byte: byte byteValue()>
<ohos.agp.render.ColorMatrix: float[] getMatrix()>
<ohos.workscheduler.WorkInfo: ohos.utils.PacMap getPacMaps()>
<ohos.agp.window.service.Window: void setLayoutAlignment(int)>
<ohos.agp.render.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,int[])>
<java.time.LocalDate: int getYear()>
<java.sql.Statement: void setPoolable(boolean)>
<ohos.agp.components.Component: void notifyAccessibility(int)>
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate dateNow(java.time.ZoneId)>
<ohos.data.usage.StatVfs: void reStatVfs(java.lang.String)>
<ohos.media.photokit.metadata.AVMetadataHelper: ohos.media.image.PixelMap fetchVideoPixelMapByIndex(int,ohos.media.photokit.common.PixelMapConfigs)>
<ohos.agp.render.RegionIterator: boolean next(ohos.agp.utils.Rect)>
<java.nio.channels.NotYetConnectedException: void <init>()>
<ohos.media.audio.FramePositionObserver: void onFramePosition()>
<java.lang.Enum: int ordinal()>
<java.time.ZonedDateTime: java.time.ZonedDateTime of(int,int,int,int,int,int,int,java.time.ZoneId)>
<java.time.chrono.ChronoPeriod: java.time.chrono.ChronoPeriod multipliedBy(int)>
<ohos.bluetooth.BluetoothHost: int getBtScanMode()>
<java.time.Year: java.time.Year of(int)>
<java.util.Arrays: char[] copyOf(char[],int)>
<ohos.aafwk.ability.continuation.ContinuationDeviceInfo: void setDeviceId(java.lang.String)>
<java.time.Instant: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
<java.util.concurrent.ConcurrentSkipListSet: java.util.NavigableSet headSet(java.lang.Object)>
<java.util.Set: boolean containsAll(java.util.Collection)>
<java.time.LocalDateTime: java.time.Month getMonth()>
<java.text.FieldPosition: java.text.Format.Field getFieldAttribute()>
<ohos.global.icu.text.UnicodeSet: ohos.global.icu.text.UnicodeSet addAll(java.lang.CharSequence[])>
<java.net.MulticastSocket: void setNetworkInterface(java.net.NetworkInterface)>
<java.util.DoubleSummaryStatistics: void <init>()>
<java.util.concurrent.BlockingQueue: int drainTo(java.util.Collection,int)>
<ohos.agp.components.ListContainer: void setHeaderBoundarySwitch(boolean)>
<ohos.event.notification.NotificationUserInput: void addInputsToIntent(java.util.List,ohos.aafwk.content.Intent,ohos.utils.PacMap)>
<ohos.sysappcomponents.contact.entity.Name: void setFullName(java.lang.String)>
<java.nio.channels.spi.AbstractSelector: java.util.Set cancelledKeys()>
<java.security.Provider: java.lang.String getInfo()>
<ohos.nfc.tag.MifareClassicTag: int getMifareType()>
<ohos.aafwk.ability.DataAbilityHelper: ohos.global.resource.RawFileDescriptor openRawFile(ohos.utils.net.Uri,java.lang.String)>
<java.nio.channels.ServerSocketChannel: void <init>(java.nio.channels.spi.SelectorProvider)>
<ohos.net.NetCapabilities: java.lang.String toString()>
<java.time.LocalDateTime: java.time.LocalDateTime withDayOfMonth(int)>
<ohos.data.search.model.Recommendation: java.lang.String toString()>
<ohos.agp.components.ListContainer.ReboundEffectParams: void setRemainVisiblePercent(int)>
<java.time.chrono.ChronoLocalDateTime: java.time.chrono.ChronoLocalDateTime minus(long,java.time.temporal.TemporalUnit)>
<java.net.ServerSocket: java.net.SocketAddress getLocalSocketAddress()>
<ohos.javax.xml.stream.Location: int getColumnNumber()>
<java.net.SocketImpl: void sendUrgentData(int)>
<ohos.data.resultset.ResultSet: ohos.utils.PacMap getExtensions()>
<ohos.account.app.AppAccountAbility: void <init>(ohos.app.Context)>
