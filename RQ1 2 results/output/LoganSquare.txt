Compatible and target 55
next file is Haps/LoganSquare/classes.dex
Soot started on Thu Dec 09 16:41:24 CST 2021
Using 'ohos-framework/ohos-5/framework.jar' as android.jar
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: javax.annotation.processing.AbstractProcessor is a phantom class!
Warning: javax.lang.model.util.Elements is a phantom class!
Warning: javax.annotation.processing.Filer is a phantom class!
Warning: javax.lang.model.util.Types is a phantom class!
Warning: javax.lang.model.SourceVersion is a phantom class!
Warning: javax.annotation.processing.ProcessingEnvironment is a phantom class!
Warning: javax.annotation.processing.RoundEnvironment is a phantom class!
Warning: javax.lang.model.element.Element is a phantom class!
Warning: javax.lang.model.type.TypeMirror is a phantom class!
Warning: javax.lang.model.element.Modifier is a phantom class!
Warning: javax.lang.model.element.TypeElement is a phantom class!
Warning: javax.lang.model.type.ArrayType is a phantom class!
Warning: javax.lang.model.element.AnnotationMirror is a phantom class!
Warning: javax.lang.model.element.ExecutableElement is a phantom class!
Warning: javax.lang.model.type.DeclaredType is a phantom class!
Warning: javax.lang.model.element.VariableElement is a phantom class!
Warning: javax.lang.model.element.TypeParameterElement is a phantom class!
Warning: javax.lang.model.type.TypeVariable is a phantom class!
Warning: javax.lang.model.util.SimpleElementVisitor8 is a phantom class!
Warning: javax.lang.model.element.PackageElement is a phantom class!
Warning: javax.lang.model.util.SimpleAnnotationValueVisitor8 is a phantom class!
Warning: javax.tools.JavaFileObject is a phantom class!
Warning: javax.tools.SimpleJavaFileObject is a phantom class!
Warning: javax.tools.JavaFileObject$Kind is a phantom class!
Warning: javax.lang.model.util.SimpleTypeVisitor8 is a phantom class!
Warning: javax.lang.model.type.ErrorType is a phantom class!
Warning: javax.lang.model.type.NoType is a phantom class!
Warning: javax.lang.model.type.PrimitiveType is a phantom class!
Warning: javax.lang.model.type.WildcardType is a phantom class!
Warning: javax.annotation.processing.Messager is a phantom class!
Warning: javax.lang.model.element.AnnotationValue is a phantom class!
Warning: javax.lang.model.element.AnnotationValueVisitor is a phantom class!
Warning: javax.lang.model.element.ElementKind is a phantom class!
Warning: javax.lang.model.element.ElementVisitor is a phantom class!
Warning: javax.lang.model.element.Name is a phantom class!
Warning: javax.lang.model.type.ExecutableType is a phantom class!
Warning: javax.lang.model.type.MirroredTypeException is a phantom class!
Warning: javax.lang.model.type.TypeKind is a phantom class!
Warning: javax.lang.model.type.TypeVisitor is a phantom class!
Warning: javax.lang.model.util.ElementFilter is a phantom class!
Warning: javax.tools.Diagnostic$Kind is a phantom class!
Transforming Transforming org.apache.commons.lang3.time.FastDatePrinter$TextField... 
com.squareup.javapoet.NameAllocator... 
Transforming com.fasterxml.jackson.core.util.SimpleTokenReadContext... 
Transforming com.bluelinelabs.logansquare.processor.JsonFieldHolder... 
Transforming org.apache.commons.lang3.reflect.TypeLiteral... 
Transforming Transforming org.apache.commons.lang3.StringUtils... 
org.apache.commons.lang3.time.FastDatePrinter$Rule... 
Transforming com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate... 
Transforming org.apache.commons.lang3.CharEncoding... 
Transforming com.fasterxml.jackson.core.json.JsonFactoryBuilder... 
Transforming org.apache.commons.lang3.builder.HashCodeBuilder... 
Transforming org.apache.commons.lang3.time.StopWatch$State$1... 
Transforming org.apache.commons.lang3.text.FormattableUtils... 
Transforming com.fasterxml.jackson.core.async.ByteArrayFeeder... 
Transforming org.apache.commons.lang3.time.StopWatch$State$4... 
Transforming com.bluelinelabs.logansquare.typeconverters.DefaultCalendarConverter... 
Transforming org.apache.commons.lang3.time.StopWatch$State$3... 
Transforming org.apache.commons.lang3.time.StopWatch$State$2... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule... 
Transforming org.apache.commons.lang3.text.ExtendedMessageFormat... 
Transforming com.bluelinelabs.logansquare.processor.type.field.TypeConverterFieldType... 
Transforming org.apache.commons.lang3.JavaVersion... 
Transforming org.apache.commons.lang3.time.StopWatch... 
Transforming com.fasterxml.jackson.core.util.BufferRecyclers... 
Transforming com.bluelinelabs.logansquare.processor.type.field.NumberFieldType... 
Transforming com.fasterxml.jackson.core.util.Instantiatable... 
Transforming com.bluelinelabs.logansquare.MainAbility$1... 
Transforming com.bluelinelabs.logansquare.MainAbility$2... 
Transforming com.squareup.javapoet.TypeSpec$1... 
Transforming com.squareup.javapoet.LineWrapper$1... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.SetCollectionType... 
Transforming com.fasterxml.jackson.core.json.UTF8DataInputJsonParser... 
Transforming com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter... 
Transforming com.squareup.javapoet.AnnotationSpec$Builder... 
Transforming com.bluelinelabs.logansquare.processor.JsonObjectHolder$JsonObjectHolderBuilder... 
Transforming com.fasterxml.jackson.core.JsonTokenId... 
Transforming com.bluelinelabs.logansquare.processor.type.field.UnknownFieldType... 
Transforming org.apache.commons.lang3.BooleanUtils... 
Transforming com.bluelinelabs.logansquare.processor.type.field.BooleanFieldType... 
Transforming org.apache.commons.lang3.builder.StandardToStringStyle... 
Transforming Transforming com.squareup.javapoet.-$$Lambda$AnnotationSpec$Builder$-f-pUV2Dc756TeChhTDY1DarzR0... 
Transforming org.apache.commons.lang3.text.StrMatcher$StringMatcher... 
Transforming org.apache.commons.lang3.mutable.MutableByte... 
Transforming org.apache.commons.lang3.builder.EqualsBuilder... 
Transforming ohos.data.orm.annotation.Database... 
Transforming com.fasterxml.jackson.core.FormatFeature... 
Transforming com.fasterxml.jackson.core.TreeNode... 
Transforming com.bluelinelabs.logansquare.processor.processor.Processor... 
Transforming com.bluelinelabs.logansquare.internal.objectmappers.StringMapper... 
Transforming com.squareup.javapoet.ParameterizedTypeName... 
Transforming com.bluelinelabs.logansquare.JsonMapper... 
Transforming org.apache.commons.lang3.time.DateUtils... 
Transforming org.apache.commons.lang3.Validate... 
Transforming org.apache.commons.lang3.time.DurationFormatUtils... 
Transforming com.fasterxml.jackson.core.base.ParserMinimalBase... 
com.bluelinelabs.logansquare.ParameterizedType$1... 
Transforming com.squareup.javapoet.AnnotationSpec... 
Transforming org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler... 
Transforming org.apache.commons.lang3.time.StopWatch$State... 
Transforming com.bluelinelabs.logansquare.ParameterizedType$ConcreteParameterizedType... 
Transforming com.fasterxml.jackson.core.util.JsonParserSequence... 
Transforming org.apache.commons.lang3.mutable.MutableInt... 
Transforming com.fasterxml.jackson.core.SerializableString... 
Transforming com.fasterxml.jackson.core.Versioned... 
Transforming com.squareup.javapoet.ClassName... 
Transforming com.fasterxml.jackson.core.async.ByteBufferFeeder... 
Transforming org.apache.commons.lang3.tuple.MutablePair... 
Transforming com.fasterxml.jackson.core.ObjectReadContext... 
Transforming com.fasterxml.jackson.core.util.RequestPayload... 
Transforming com.squareup.javapoet.-$$Lambda$CodeBlock$P01QW5OmsvEs0vM1DXTujNlxndo... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField... 
Transforming org.apache.commons.lang3.text.StrLookup$MapStrLookup... 
Transforming com.bluelinelabs.logansquare.LoganSquare... 
Transforming org.apache.commons.lang3.mutable.MutableObject... 
Transforming org.apache.commons.lang3.concurrent.CallableBackgroundInitializer... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule... 
Transforming com.squareup.javapoet.-$$Lambda$E-gEikyzMjxB_pc_89Vg4PhZvxE... 
Transforming ohos.data.orm.annotation.Entity... 
Transforming com.squareup.javapoet.ParameterSpec... 
Transforming com.squareup.javapoet.TypeName$2... 
Transforming com.fasterxml.jackson.core.filter.JsonPointerBasedFilter... 
Transforming com.bluelinelabs.logansquare.Constants... 
Transforming org.apache.commons.lang3.Conversion... 
Transforming com.squareup.javapoet.TypeName$1... 
Transforming org.apache.commons.lang3.concurrent.ConstantInitializer... 
Transforming com.fasterxml.jackson.core.Base64Variant... 
Transforming com.squareup.javapoet.-$$Lambda$CodeWriter$gWdYplTpdUOwUYDENYoXH38lKsA... 
Transforming org.apache.commons.lang3.CharRange$CharacterIterator... 
Transforming com.bluelinelabs.logansquare.processor.processor.OnJsonParseCompleteProcessor... 
Transforming org.apache.commons.lang3.LocaleUtils$SyncAvoid... 
Transforming org.apache.commons.lang3.text.StrBuilder... 
Transforming com.fasterxml.jackson.core.io.MergedStream... 
Transforming com.bluelinelabs.logansquare.processor.type.Type... 
Transforming org.apache.commons.lang3.time.FastDateParser$4... 
Transforming org.apache.commons.lang3.time.FastDateParser$3... 
Transforming org.apache.commons.lang3.time.FastDateParser$2... 
Transforming org.apache.commons.lang3.time.FastDateParser$1... 
Transforming org.apache.commons.lang3.time.StopWatch$1... 
Transforming com.squareup.javapoet.FieldSpec... 
Transforming com.bluelinelabs.logansquare.internal.objectmappers.LongMapper... 
Transforming org.apache.commons.lang3.builder.ToStringStyle... 
Transforming com.bluelinelabs.logansquare.typeconverters.StringBasedTypeConverter... 
Transforming org.apache.commons.lang3.text.StrMatcher$NoMatcher... 
Transforming org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy... 
Transforming org.apache.commons.lang3.ArrayUtils... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$StringLiteral... 
Transforming com.bluelinelabs.logansquare.typeconverters.DefaultDateFormatter... 
Transforming org.apache.commons.lang3.CharUtils... 
Transforming org.apache.commons.lang3.text.StrMatcher... 
Transforming com.fasterxml.jackson.core.util.InternCache... 
Transforming org.apache.commons.lang3.mutable.MutableDouble... 
Transforming ohos.data.orm.annotation.ForeignKey... 
Transforming com.bluelinelabs.logansquare.processor.type.field.DynamicFieldType... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField... 
Transforming com.bluelinelabs.logansquare.processor.type.Type$ClassNameObjectMapper... 
Transforming com.bluelinelabs.logansquare.typeconverters.FloatBasedTypeConverter... 
Transforming org.apache.commons.lang3.Range... 
Transforming com.squareup.javapoet.-$$Lambda$41wj67R9eYOUlhE05A43dLwOQSw... 
Transforming org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1... 
Transforming com.bluelinelabs.logansquare.processor.JsonFieldHolder$1... 
Transforming com.fasterxml.jackson.core.Base64Variants... 
Transforming com.squareup.javapoet.CodeWriter$1... 
Transforming com.fasterxml.jackson.core.io.IOContext... 
Transforming org.apache.commons.lang3.text.translate.LookupTranslator... 
Transforming com.fasterxml.jackson.core.PrettyPrinter... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField... 
Transforming com.fasterxml.jackson.core.base.GeneratorBase... 
Transforming org.apache.commons.lang3.time.FormatCache... 
Transforming com.bluelinelabs.logansquare.typeconverters.CalendarTypeConverter... 
Transforming org.apache.commons.lang3.concurrent.TimedSemaphore$1... 
Transforming com.bluelinelabs.logansquare.model.Name... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey... 
Transforming org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream... 
Transforming com.bluelinelabs.logansquare.processor.type.field.IntegerFieldType... 
Transforming com.fasterxml.jackson.core.util.JacksonFeature... 
Transforming com.fasterxml.jackson.core.base.DecorableTSFactory$DecorableTSFBuilder... 
Transforming org.apache.commons.lang3.concurrent.BackgroundInitializer... 
Transforming org.apache.commons.lang3.mutable.MutableLong... 
Transforming com.bluelinelabs.logansquare.typeconverters.TypeConverter... 
Transforming org.apache.commons.lang3.text.translate.AggregateTranslator... 
Transforming com.fasterxml.jackson.core.util.Separators... 
Transforming com.fasterxml.jackson.core.json.JsonWriteContext... 
Transforming org.apache.commons.lang3.time.FastDateParser$TextStrategy... 
Transforming com.fasterxml.jackson.core.io.UTF8Writer... 
Transforming com.fasterxml.jackson.core.Version... 
Transforming com.fasterxml.jackson.core.util.Named... 
Transforming com.bluelinelabs.logansquare.processor.type.field.FloatFieldType... 
Transforming org.apache.commons.lang3.ClassUtils$2... 
Transforming org.apache.commons.lang3.text.translate.NumericEntityEscaper... 
Transforming com.fasterxml.jackson.core.io.InputDecorator... 
Transforming org.apache.commons.lang3.AnnotationUtils... 
Transforming org.apache.commons.lang3.ClassUtils$1... 
Transforming org.apache.commons.lang3.mutable.Mutable... 
Transforming com.squareup.javapoet.TypeName... 
Transforming com.fasterxml.jackson.core.base.TextualTSFactory... 
Transforming com.fasterxml.jackson.core.base.ParserBase... 
Transforming org.apache.commons.lang3.math.Fraction... 
Transforming com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour... 
Transforming com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor... 
Transforming com.fasterxml.jackson.core.base.BinaryTSFactory... 
Transforming com.fasterxml.jackson.core.JsonGenerator... 
Transforming com.bluelinelabs.logansquare.processor.type.field.FieldType... 
Transforming com.fasterxml.jackson.core.TokenStreamContext... 
Transforming com.bluelinelabs.logansquare.annotation.JsonIgnore$IgnorePolicy... 
Transforming com.bluelinelabs.logansquare.BuildConfig... 
Transforming com.fasterxml.jackson.core.JsonEncoding... 
Transforming org.apache.commons.lang3.EnumUtils... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField... 
Transforming com.fasterxml.jackson.core.JsonGenerationException... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField... 
Transforming org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler... 
Transforming org.apache.commons.lang3.text.StrBuilder$StrBuilderReader... 
Transforming com.squareup.javapoet.CodeBlock... 
Transforming com.squareup.javapoet.JavaFile$Builder... 
Transforming org.apache.commons.lang3.reflect.TypeUtils... 
Transforming org.apache.commons.lang3.text.FormatFactory... 
Transforming org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter... 
Transforming com.fasterxml.jackson.core.TreeCodec... 
Transforming org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy... 
Transforming com.bluelinelabs.logansquare.NoSuchTypeConverterException... 
Transforming com.squareup.javapoet.MethodSpec... 
Transforming com.fasterxml.jackson.core.json.UTF8JsonGenerator... 
Transforming com.bluelinelabs.logansquare.processor.processor.MethodProcessor... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.SingleParameterCollectionType... 
Transforming com.fasterxml.jackson.core.type.WritableTypeId... 
Transforming com.bluelinelabs.logansquare.annotation.OnPreJsonSerialize... 
Transforming org.apache.commons.lang3.exception.ContextedRuntimeException... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField... 
Transforming com.fasterxml.jackson.core.filter.TokenFilter$Inclusion... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.MapCollectionType... 
Transforming com.fasterxml.jackson.core.JsonGenerator$1... 
Transforming com.fasterxml.jackson.core.JsonParser$NumberType... 
Transforming com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter... 
Transforming com.squareup.javapoet.-$$Lambda$CodeBlock$yrx4IxlWAt3ulmUIi9muAR-X7hU... 
Transforming com.fasterxml.jackson.core.json.WriterBasedJsonGenerator... 
Transforming com.fasterxml.jackson.core.TokenStreamFactory$Feature... 
Transforming com.bluelinelabs.logansquare.widget.WindowUtil... 
Transforming com.bluelinelabs.logansquare.slice.MainAbilitySlice... 
Transforming com.fasterxml.jackson.core.io.NumberOutput... 
Transforming org.apache.commons.lang3.math.IEEE754rUtils... 
Transforming com.bluelinelabs.logansquare.processor.JsonAnnotationProcessor... 
Transforming com.fasterxml.jackson.core.type.TypeReference... 
Transforming com.fasterxml.jackson.core.JsonParseException... 
Transforming com.fasterxml.jackson.core.sym.FieldNameMatcher... 
Transforming org.apache.commons.lang3.concurrent.BasicThreadFactory... 
Transforming com.fasterxml.jackson.core.sym.SimpleNameMatcher... 
Transforming com.squareup.javapoet.TypeSpec$Kind... 
Transforming com.squareup.javapoet.JavaFile... 
Transforming com.bluelinelabs.logansquare.processor.JsonObjectHolder$1... 
Transforming org.apache.commons.lang3.AnnotationUtils$1... 
Transforming com.squareup.javapoet.CodeBlock$CodeBlockJoiner... 
Transforming com.bluelinelabs.logansquare.internal.objectmappers.BooleanMapper... 
Transforming com.bluelinelabs.logansquare.typeconverters.IntBasedTypeConverter... 
Transforming org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl... 
Transforming org.apache.commons.lang3.RandomStringUtils... 
Transforming com.fasterxml.jackson.core.io.OutputDecorator... 
Transforming com.bluelinelabs.logansquare.typeconverters.DateTypeConverter$1... 
Transforming org.apache.commons.lang3.NotImplementedException... 
Transforming com.bluelinelabs.logansquare.model.Image... 
Transforming com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor... 
Transforming org.apache.commons.lang3.CharSetUtils... 
Transforming com.squareup.javapoet.LineWrapper$FlushType... 
Transforming com.squareup.javapoet.CodeWriter... 
Transforming org.apache.commons.lang3.CharSequenceUtils... 
Transforming com.fasterxml.jackson.core.tree.ArrayTreeNode... 
Transforming org.apache.commons.lang3.LocaleUtils... 
Transforming com.fasterxml.jackson.core.JsonPointer... 
Transforming com.fasterxml.jackson.core.io.SerializedString... 
Transforming com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter... 
Transforming com.bluelinelabs.logansquare.model.User$$JsonObjectMapper... 
Transforming org.apache.commons.lang3.text.StrMatcher$TrimMatcher... 
Transforming org.apache.commons.lang3.ObjectUtils... 
Transforming org.apache.commons.lang3.text.StrLookup... 
Transforming org.apache.commons.lang3.mutable.MutableShort... 
Transforming org.apache.commons.lang3.exception.ExceptionContext... 
Transforming org.apache.commons.lang3.concurrent.ConcurrentRuntimeException... 
Transforming com.squareup.javapoet.-$$Lambda$CodeWriter$YtHhASXo0ycWnF1BeoTJEY1c0No... 
Transforming ohos.data.orm.annotation.Index... 
Transforming com.bluelinelabs.logansquare.ResourceTable... 
Transforming org.apache.commons.lang3.event.EventListenerSupport... 
Transforming com.fasterxml.jackson.core.ObjectReadContext$Base... 
Transforming com.bluelinelabs.logansquare.typeconverters.EnumValueTypeConverter... 
Transforming org.apache.commons.lang3.concurrent.AtomicSafeInitializer... 
Transforming org.apache.commons.lang3.text.StrMatcher$CharSetMatcher... 
Transforming org.apache.commons.lang3.concurrent.ConcurrentUtils... 
Transforming com.bluelinelabs.logansquare.processor.TypeUtils... 
Transforming com.fasterxml.jackson.core.filter.TokenFilterContext... 
Transforming com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer... 
Transforming org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer... 
Transforming com.bluelinelabs.logansquare.annotation.JsonObject$FieldNamingPolicy... 
Transforming org.apache.commons.lang3.exception.DefaultExceptionContext... 
Transforming com.fasterxml.jackson.core.json.JsonGeneratorBase... 
Transforming com.fasterxml.jackson.core.json.JsonReadFeature... 
Transforming org.apache.commons.lang3.tuple.Pair... 
Transforming org.apache.commons.lang3.builder.IDKey... 
Transforming com.bluelinelabs.logansquare.internal.objectmappers.IntegerMapper... 
Transforming Transforming org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField... 
com.bluelinelabs.logansquare.processor.ObjectMapperInjector... 
Transforming com.bluelinelabs.logansquare.processor.type.field.ByteFieldType... 
Transforming com.fasterxml.jackson.core.JacksonException... 
Transforming Transforming org.apache.commons.lang3.text.translate.OctalUnescaper... 
Transforming com.bluelinelabs.logansquare.model.Response$$JsonObjectMapper... 
Transforming com.fasterxml.jackson.core.io.JsonStringEncoder... 
Transforming com.fasterxml.jackson.core.util.JsonParserDelegate... 
Transforming org.apache.commons.lang3.concurrent.TimedSemaphore... 
Transforming com.bluelinelabs.logansquare.MainAbility... 
Transforming com.fasterxml.jackson.core.util.ThreadLocalBufferManager$ThreadLocalBufferManagerHolder... 
Transforming com.fasterxml.jackson.core.StreamWriteFeature... 
Transforming com.squareup.javapoet.ParameterSpec$Builder... 
Transforming com.fasterxml.jackson.core.StreamReadFeature... 
Transforming org.apache.commons.lang3.concurrent.LazyInitializer... 
Transforming org.apache.commons.lang3.text.translate.UnicodeUnescaper... 
Transforming com.bluelinelabs.logansquare.processor.type.field.JsonFieldType... 
Transforming com.fasterxml.jackson.core.async.NonBlockingInputFeeder... 
Transforming com.squareup.javapoet.AnnotationSpec$1... 
Transforming org.apache.commons.lang3.exception.ExceptionUtils... 
Transforming com.fasterxml.jackson.core.JsonLocation... 
Transforming com.fasterxml.jackson.core.json.ReaderBasedJsonParser... 
Transforming com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper... 
Transforming org.apache.commons.lang3.text.StrMatcher$CharMatcher... 
Transforming org.apache.commons.lang3.time.FastDateParser$NumberStrategy... 
Transforming org.apache.commons.lang3.SerializationUtils... 
Transforming org.apache.commons.lang3.BitField... 
Transforming com.fasterxml.jackson.core.json.JsonReadContext... 
Transforming com.squareup.javapoet.Util... 
Transforming com.bluelinelabs.logansquare.typeconverters.LongBasedTypeConverter... 
Transforming com.fasterxml.jackson.core.json.JsonParserBase... 
Transforming com.bluelinelabs.logansquare.typeconverters.DoubleBasedTypeConverter... 
Transforming com.bluelinelabs.logansquare.typeconverters.DateTypeConverter... 
Transforming com.fasterxml.jackson.core.util.DefaultPrettyPrinter... 
Transforming com.fasterxml.jackson.core.util.BufferRecycler... 
org.apache.commons.lang3.tuple.Triple... 
Transforming org.apache.commons.lang3.reflect.InheritanceUtils... 
Transforming org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl... 
Transforming com.bluelinelabs.logansquare.processor.type.field.StringFieldType... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.ListCollectionType... 
Transforming org.apache.commons.lang3.tuple.ImmutableTriple... 
Transforming org.apache.commons.lang3.SystemUtils... 
Transforming Transforming org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults... 
Transforming org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle... 
Transforming org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION... 
Transforming org.apache.commons.lang3.reflect.TypeUtils$1... 
Transforming com.fasterxml.jackson.core.util.ByteArrayBuilder... 
com.squareup.javapoet.TypeSpec... 
Transforming Transforming com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo... 
com.bluelinelabs.logansquare.processor.type.collection.ArrayCollectionType... 
Transforming org.apache.commons.lang3.exception.CloneFailedException... 
Transforming org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle... 
Transforming org.apache.commons.lang3.reflect.ConstructorUtils... 
Transforming org.apache.commons.lang3.time.FastDateParser... 
Transforming com.bluelinelabs.logansquare.data.ListAdapter... 
Transforming com.squareup.javapoet.ArrayTypeName... 
Transforming org.apache.commons.lang3.CharRange... 
Transforming com.bluelinelabs.logansquare.typeconverters.DefaultDateConverter... 
Transforming org.apache.commons.lang3.concurrent.ConcurrentUtils$ConstantFuture... 
Transforming com.squareup.javapoet.-$$Lambda$5PjCM7eyD3wzKvobeq60HES21jc... 
Transforming org.apache.commons.lang3.reflect.MemberUtils... 
Transforming com.bluelinelabs.logansquare.internal.objectmappers.MapMapper... 
Transforming org.apache.commons.lang3.text.StrSubstitutor... 
Transforming com.squareup.javapoet.FieldSpec$Builder... 
Transforming org.apache.commons.lang3.time.StopWatch$SplitState... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.TreeMapCollectionType... 
Transforming com.fasterxml.jackson.core.tree.ObjectTreeNode... 
Transforming Transforming com.fasterxml.jackson.core.util.DefaultIndenter... 
com.squareup.javapoet.CodeBlock$Builder... 
Transforming ohos.data.orm.annotation.Column... 
Transforming com.fasterxml.jackson.core.util.JsonGeneratorDelegate... 
Transforming org.apache.commons.lang3.mutable.MutableBoolean... 
Transforming org.apache.commons.lang3.ClassUtils$1$1... 
Transforming org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle... 
Transforming com.fasterxml.jackson.core.base.DecorableTSFactory... 
Transforming org.apache.commons.lang3.ObjectUtils$Null... 
Transforming org.apache.commons.lang3.mutable.MutableFloat... 
Transforming com.fasterxml.jackson.core.io.CharacterEscapes... 
Transforming org.apache.commons.lang3.reflect.MethodUtils... 
Transforming com.squareup.javapoet.WildcardTypeName... 
Transforming com.squareup.javapoet.CodeBlock$1... 
Transforming com.fasterxml.jackson.core.type.ResolvedType... 
Transforming com.fasterxml.jackson.core.sym.HashedMatcherBase... 
Transforming com.bluelinelabs.logansquare.internal.objectmappers.DoubleMapper... 
Transforming com.bluelinelabs.logansquare.annotation.JsonObject... 
Transforming org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle... 
Transforming Transforming com.squareup.javapoet.TypeVariableName... 
com.bluelinelabs.logansquare.NoSuchMapperException... 
Transforming org.apache.commons.lang3.time.FastDateParser$Strategy... 
Transforming com.fasterxml.jackson.core.JsonParser... 
Transforming com.fasterxml.jackson.core.JsonProcessingException... 
Transforming com.fasterxml.jackson.core.io.UTF32Reader... 
Transforming com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket... 
Transforming org.apache.commons.lang3.time.FastDateFormat... 
Transforming com.bluelinelabs.logansquare.model.Image$$JsonObjectMapper... 
Transforming org.apache.commons.lang3.StringEscapeUtils$CsvEscaper... 
Transforming org.apache.commons.lang3.time.DateUtils$DateIterator... 
Transforming com.bluelinelabs.logansquare.internal.objectmappers.ObjectMapper... 
Transforming com.fasterxml.jackson.core.util.JacksonFeatureSet... 
Transforming com.fasterxml.jackson.core.TokenStreamFactory... 
Transforming org.apache.commons.lang3.ClassUtils$2$1... 
Transforming org.apache.commons.lang3.concurrent.BasicThreadFactory$1... 
Transforming org.apache.commons.lang3.concurrent.ConcurrentInitializer... 
Transforming org.apache.commons.lang3.time.DateFormatUtils... 
Transforming com.fasterxml.jackson.core.filter.TokenFilter... 
Transforming org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$NumberRule... 
Transforming org.apache.commons.lang3.tuple.MutableTriple... 
Transforming com.fasterxml.jackson.core.io.CharTypes... 
Transforming org.apache.commons.lang3.concurrent.BackgroundInitializer$InitializationTask... 
Transforming org.apache.commons.lang3.ClassUtils$Interfaces... 
Transforming com.squareup.javapoet.AnnotationSpec$Visitor... 
Transforming com.fasterxml.jackson.core.io.CharTypes$AltEscapes... 
Transforming org.apache.commons.lang3.text.translate.UnicodeEscaper... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.ArrayListCollectionType... 
Transforming org.apache.commons.lang3.time.FormatCache$MultipartKey... 
Transforming com.fasterxml.jackson.core.exc.InputCoercionException... 
Transforming org.apache.commons.lang3.ClassUtils... 
Transforming org.apache.commons.lang3.concurrent.ConcurrentException... 
Transforming org.apache.commons.lang3.time.FastDatePrinter... 
Transforming ohos.data.orm.annotation.PrimaryKey... 
Transforming com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo... 
Transforming org.apache.commons.lang3.event.EventUtils... 
Transforming org.apache.commons.lang3.StringEscapeUtils... 
Transforming com.bluelinelabs.logansquare.typeconverters.BooleanBasedTypeConverter... 
Transforming com.fasterxml.jackson.core.StreamReadCapability... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.LinkedHashMapCollectionType... 
Transforming org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl... 
Transforming com.squareup.javapoet.TypeSpec$Builder... 
Transforming org.apache.commons.lang3.time.FastDateFormat$1... 
Transforming com.bluelinelabs.logansquare.internal.objectmappers.ListMapper... 
Transforming com.fasterxml.jackson.core.util.VersionUtil... 
Transforming com.fasterxml.jackson.core.json.async.NonBlockingJsonParser... 
Transforming com.squareup.javapoet.-$$Lambda$CodeBlock$4OiVWL2H4Cp8bJ8bFtXxJ2xGSoo... 
Transforming org.apache.commons.lang3.time.DurationFormatUtils$Token... 
Transforming com.bluelinelabs.logansquare.model.Response... 
Transforming Transforming org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.QueueCollectionType... 
Transforming org.apache.commons.lang3.text.CompositeFormat... 
Transforming com.squareup.javapoet.ClassName$1... 
Transforming com.fasterxml.jackson.core.type.WritableTypeId$Inclusion... 
Transforming com.fasterxml.jackson.core.io.JsonEOFException... 
Transforming com.bluelinelabs.logansquare.processor.TextUtils... 
Transforming com.squareup.javapoet.LineWrapper$RecordingAppendable... 
Transforming org.apache.commons.lang3.text.translate.CodePointTranslator... 
Transforming com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase... 
Transforming com.fasterxml.jackson.core.util.JsonpCharacterEscapes... 
Transforming org.apache.commons.lang3.reflect.FieldUtils... 
Transforming com.squareup.javapoet.LineWrapper... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField... 
Transforming com.bluelinelabs.logansquare.annotation.JsonIgnore... 
Transforming com.squareup.javapoet.MethodSpec$1... 
Transforming com.fasterxml.jackson.core.util.ThreadLocalBufferManager... 
Transforming org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral... 
Transforming org.apache.commons.lang3.builder.ReflectionToStringBuilder... 
Transforming com.bluelinelabs.logansquare.annotation.JsonObject$FieldDetectionPolicy... 
Transforming org.apache.commons.lang3.text.translate.CharSequenceTranslator... 
Transforming com.bluelinelabs.logansquare.annotation.OnJsonParseComplete... 
Transforming com.fasterxml.jackson.core.util.TextBuffer... 
Transforming org.apache.commons.lang3.text.translate.NumericEntityUnescaper... 
Transforming com.fasterxml.jackson.core.StreamWriteCapability... 
Transforming org.apache.commons.lang3.SerializationException... 
Transforming com.fasterxml.jackson.core.util.Named$StringAsNamed... 
Transforming org.apache.commons.lang3.reflect.Typed... 
Transforming com.bluelinelabs.logansquare.internal.objectmappers.FloatMapper... 
Transforming com.squareup.javapoet.FieldSpec$1... 
Transforming org.apache.commons.lang3.concurrent.AtomicInitializer... 
Transforming com.squareup.javapoet.ParameterSpec$1... 
Transforming com.fasterxml.jackson.core.ObjectWriteContext... 
Transforming com.fasterxml.jackson.core.util.MinimalPrettyPrinter... 
Transforming com.fasterxml.jackson.core.json.JsonFactory... 
Transforming org.apache.commons.lang3.CharSet... 
com.fasterxml.jackson.core.io.NumberInput... 
Transforming org.apache.commons.lang3.time.DateParser... 
Transforming org.apache.commons.lang3.Range$ComparableComparator... 
Transforming com.squareup.javapoet.-$$Lambda$Yfwu0Pitx-XFlUNATTDq4fAuceM... 
Transforming com.bluelinelabs.logansquare.LoganSquareApp... 
Transforming com.bluelinelabs.logansquare.model.Name$$JsonObjectMapper... 
Transforming com.bluelinelabs.logansquare.processor.processor.OnPreSerializeProcessor... 
Transforming com.fasterxml.jackson.core.json.DupDetector... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.CollectionType... 
Transforming com.fasterxml.jackson.core.util.Snapshottable... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.LinkedListCollectionType... 
Transforming com.fasterxml.jackson.core.TokenStreamFactory$TSFBuilder... 
Transforming com.squareup.javapoet.CodeWriter$Multiset... 
Transforming org.apache.commons.lang3.CharRange$1... 
Transforming com.fasterxml.jackson.core.ObjectWriteContext$Base... 
Transforming com.bluelinelabs.logansquare.processor.JsonObjectHolder... 
Transforming com.bluelinelabs.logansquare.model.Friend$$JsonObjectMapper... 
Transforming com.bluelinelabs.logansquare.processor.type.field.ParameterizedTypeField... 
Transforming org.apache.commons.lang3.builder.ToStringBuilder... 
Transforming org.apache.commons.lang3.time.DatePrinter... 
Transforming com.fasterxml.jackson.core.filter.FilteringParserDelegate... 
Transforming com.fasterxml.jackson.core.json.PackageVersion... 
Transforming org.apache.commons.lang3.text.StrTokenizer... 
Transforming com.fasterxml.jackson.core.util.SimpleTokenWriteContext... 
Transforming org.apache.commons.lang3.exception.ContextedException... 
Transforming com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer... 
Transforming org.apache.commons.lang3.text.WordUtils... 
Transforming org.apache.commons.lang3.text.translate.JavaUnicodeEscaper... 
Transforming org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder... 
Transforming com.bluelinelabs.logansquare.model.Friend... 
Transforming com.bluelinelabs.logansquare.model.User... 
Transforming com.bluelinelabs.logansquare.typeconverters.CalendarTypeConverter$1... 
Transforming org.apache.commons.lang3.concurrent.MultiBackgroundInitializer... 
Transforming com.squareup.javapoet.MethodSpec$Builder... 
Transforming com.fasterxml.jackson.core.io.DataOutputAsStream... 
Transforming com.fasterxml.jackson.core.io.SegmentedStringWriter... 
Transforming com.fasterxml.jackson.core.JsonToken... 
Transforming org.apache.commons.lang3.text.translate.EntityArrays... 
Transforming com.bluelinelabs.logansquare.processor.type.field.LongFieldType... 
Transforming com.fasterxml.jackson.core.exc.StreamReadException... 
Transforming com.fasterxml.jackson.core.sym.BinaryNameMatcher... 
Transforming com.bluelinelabs.logansquare.ParameterizedType... 
Transforming org.apache.commons.lang3.builder.CompareToBuilder... 
Transforming com.bluelinelabs.logansquare.util.SimpleArrayMap... 
Transforming org.apache.commons.lang3.tuple.ImmutablePair... 
Transforming com.bluelinelabs.logansquare.processor.type.collection.HashMapCollectionType... 
Transforming org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle... 
Transforming Transforming com.bluelinelabs.logansquare.annotation.JsonField... 
Transforming com.fasterxml.jackson.core.json.UTF8StreamJsonParser... 
Transforming org.apache.commons.lang3.builder.Builder... 
Transforming org.apache.commons.lang3.math.NumberUtils... 
Transforming com.squareup.javapoet.JavaFile$2... 
Transforming com.squareup.javapoet.JavaFile$1... 
Transforming com.fasterxml.jackson.core.json.JsonWriteFeature... 
Transforming com.bluelinelabs.logansquare.internal.objectmappers.ObjectMapper$1... 
Transforming com.bluelinelabs.logansquare.processor.type.field.DoubleFieldType... 
com.fasterxml.jackson.core.FormatSchema... 
Soot finished on Thu Dec 09 16:41:31 CST 2021
Soot has run for 0 min. 7 sec.
next file is Haps/LoganSquare/entry_debug_signed_entry.apk
Soot started on Thu Dec 09 16:41:31 CST 2021
Using 'ohos-framework/ohos-5/framework.jar' as android.jar
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: android.os.Bundle is a phantom class!
Warning: ohos.abilityshell.HarmonyApplication is a phantom class!
Warning: ohos.abilityshell.AbilityShellActivity is a phantom class!
Transforming com.bluelinelabs.logansquare.MainAbilityShellActivity... 
Transforming com.bluelinelabs.logansquare.R... 
Transforming com.bluelinelabs.logansquare.R$string... 
Transforming com.bluelinelabs.logansquare.ShellLoganSquare... 
Transforming com.bluelinelabs.logansquare.R$drawable... 
Soot finished on Thu Dec 09 16:41:31 CST 2021
Soot has run for 0 min. 0 sec.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 5
Declared Target Sdk version is: 5
Declared Max Sdk version is:  at the moment there is no such one
Collected 1 OhOs APIs in the primary DEX file
Collected 882 OhOs APIs in the secondary DEX files
SDK Check:false
Found 0 Android APIs (for forward compatibility) that are accessed with protection (SDK Check)
Found 0 Android APIs (for forward compatibility) that are accessed problematically 
Found 0 Android APIs (for backward compatibility) that are accessed with protection (SDK Check)
Found 58 Android APIs (for backward compatibility) that are accessed problematically 

==>Problematic_Backward<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.OnJsonParseCompleteProcessor: void processOnCompleteMethodAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: void processJsonFieldAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean isJsonFieldFieldAnnotationValid(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.processor.OnPreSerializeProcessor: void processOnPreJsonSerializeMethodAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements)>]
<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.OnJsonParseCompleteProcessor: void processOnCompleteMethodAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements)>
<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: void processJsonFieldAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean isJsonFieldFieldAnnotationValid(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>
<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.OnPreSerializeProcessor: void processOnPreJsonSerializeMethodAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements)>

==>Problematic_Backward<javax.lang.model.type.WildcardType: javax.lang.model.type.TypeMirror getExtendsBound()>:[6,7]
[<com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.WildcardType,java.util.Map)>]
<javax.lang.model.type.WildcardType: javax.lang.model.type.TypeMirror getExtendsBound()>:[6,7]--><com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.WildcardType,java.util.Map)>

==>Problematic_Backward<javax.lang.model.element.TypeElement: java.util.List getInterfaces()>:[6,7]
[<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>]
<javax.lang.model.element.TypeElement: java.util.List getInterfaces()>:[6,7]--><com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>
<javax.lang.model.element.TypeElement: java.util.List getInterfaces()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.type.ArrayType: javax.lang.model.type.TypeMirror getComponentType()>:[6,7]
[<com.bluelinelabs.logansquare.processor.type.Type: com.bluelinelabs.logansquare.processor.type.Type typeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.squareup.javapoet.ArrayTypeName: com.squareup.javapoet.ArrayTypeName get(javax.lang.model.type.ArrayType,java.util.Map)>]
<javax.lang.model.type.ArrayType: javax.lang.model.type.TypeMirror getComponentType()>:[6,7]--><com.bluelinelabs.logansquare.processor.type.Type: com.bluelinelabs.logansquare.processor.type.Type typeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.type.ArrayType: javax.lang.model.type.TypeMirror getComponentType()>:[6,7]--><com.squareup.javapoet.ArrayTypeName: com.squareup.javapoet.ArrayTypeName get(javax.lang.model.type.ArrayType,java.util.Map)>

==>Problematic_Backward<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.OnJsonParseCompleteProcessor: void processOnCompleteMethodAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec get(javax.lang.model.element.AnnotationMirror)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>, <com.bluelinelabs.logansquare.processor.processor.OnPreSerializeProcessor: void processOnPreJsonSerializeMethodAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements)>]
<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.OnJsonParseCompleteProcessor: void processOnCompleteMethodAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements)>
<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec get(javax.lang.model.element.AnnotationMirror)>
<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>
<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.OnPreSerializeProcessor: void processOnPreJsonSerializeMethodAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements)>

==>Problematic_Backward<javax.tools.SimpleJavaFileObject: void <init>(java.net.URI,javax.tools.JavaFileObject.Kind)>:[6,7]
[<com.squareup.javapoet.JavaFile$2: void <init>(com.squareup.javapoet.JavaFile,java.net.URI,javax.tools.JavaFileObject$Kind)>]
<javax.tools.SimpleJavaFileObject: void <init>(java.net.URI,javax.tools.JavaFileObject.Kind)>:[6,7]--><com.squareup.javapoet.JavaFile$2: void <init>(com.squareup.javapoet.JavaFile,java.net.URI,javax.tools.JavaFileObject$Kind)>

==>Problematic_Backward<javax.lang.model.element.ExecutableElement: java.util.List getTypeParameters()>:[6,7]
[<com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>]
<javax.lang.model.element.ExecutableElement: java.util.List getTypeParameters()>:[6,7]--><com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>

==>Problematic_Backward<javax.lang.model.element.TypeElement: java.util.List getTypeParameters()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>]
<javax.lang.model.element.TypeElement: java.util.List getTypeParameters()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror erasure(javax.lang.model.type.TypeMirror)>:[6,7]
[<com.bluelinelabs.logansquare.processor.type.Type: com.bluelinelabs.logansquare.processor.type.Type typeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>]
<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror erasure(javax.lang.model.type.TypeMirror)>:[6,7]--><com.bluelinelabs.logansquare.processor.type.Type: com.bluelinelabs.logansquare.processor.type.Type typeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror erasure(javax.lang.model.type.TypeMirror)>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean isJsonFieldFieldAnnotationValid(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>, <com.bluelinelabs.logansquare.processor.TypeUtils: java.lang.String getSimpleClassName(javax.lang.model.element.TypeElement,java.lang.String)>]
<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean isJsonFieldFieldAnnotationValid(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>
<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>:[6,7]--><com.bluelinelabs.logansquare.processor.TypeUtils: java.lang.String getSimpleClassName(javax.lang.model.element.TypeElement,java.lang.String)>

==>Problematic_Backward<javax.lang.model.element.AnnotationMirror: java.util.Map getElementValues()>:[6,7]
[<com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec get(javax.lang.model.element.AnnotationMirror)>]
<javax.lang.model.element.AnnotationMirror: java.util.Map getElementValues()>:[6,7]--><com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec get(javax.lang.model.element.AnnotationMirror)>

==>Problematic_Backward<javax.lang.model.element.TypeElement: javax.lang.model.element.Element getEnclosingElement()>:[6,7]
[<com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(javax.lang.model.element.TypeElement)>]
<javax.lang.model.element.TypeElement: javax.lang.model.element.Element getEnclosingElement()>:[6,7]--><com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(javax.lang.model.element.TypeElement)>

==>Problematic_Backward<javax.lang.model.element.Element: java.util.List getAnnotationMirrors()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>]
<javax.lang.model.element.Element: java.util.List getAnnotationMirrors()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>

==>Problematic_Backward<javax.lang.model.element.AnnotationValue: java.lang.Object accept(javax.lang.model.element.AnnotationValueVisitor,java.lang.Object)>:[6,7]
[<com.squareup.javapoet.AnnotationSpec$Visitor: com.squareup.javapoet.AnnotationSpec$Builder visitArray(java.util.List,java.lang.String)>, <com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec get(javax.lang.model.element.AnnotationMirror)>]
<javax.lang.model.element.AnnotationValue: java.lang.Object accept(javax.lang.model.element.AnnotationValueVisitor,java.lang.Object)>:[6,7]--><com.squareup.javapoet.AnnotationSpec$Visitor: com.squareup.javapoet.AnnotationSpec$Builder visitArray(java.util.List,java.lang.String)>
<javax.lang.model.element.AnnotationValue: java.lang.Object accept(javax.lang.model.element.AnnotationValueVisitor,java.lang.Object)>:[6,7]--><com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec get(javax.lang.model.element.AnnotationMirror)>

==>Problematic_Backward<javax.lang.model.element.TypeParameterElement: java.util.List getBounds()>:[6,7]
[<com.squareup.javapoet.TypeVariableName: com.squareup.javapoet.TypeVariableName get(javax.lang.model.element.TypeParameterElement)>, <com.squareup.javapoet.TypeVariableName: com.squareup.javapoet.TypeVariableName get(javax.lang.model.type.TypeVariable,java.util.Map)>]
<javax.lang.model.element.TypeParameterElement: java.util.List getBounds()>:[6,7]--><com.squareup.javapoet.TypeVariableName: com.squareup.javapoet.TypeVariableName get(javax.lang.model.element.TypeParameterElement)>
<javax.lang.model.element.TypeParameterElement: java.util.List getBounds()>:[6,7]--><com.squareup.javapoet.TypeVariableName: com.squareup.javapoet.TypeVariableName get(javax.lang.model.type.TypeVariable,java.util.Map)>

==>Problematic_Backward<javax.lang.model.type.TypeVariable: javax.lang.model.element.Element asElement()>:[6,7]
[<com.squareup.javapoet.TypeVariableName: com.squareup.javapoet.TypeVariableName get(javax.lang.model.type.TypeVariable)>, <com.squareup.javapoet.TypeVariableName: com.squareup.javapoet.TypeVariableName get(javax.lang.model.type.TypeVariable,java.util.Map)>]
<javax.lang.model.type.TypeVariable: javax.lang.model.element.Element asElement()>:[6,7]--><com.squareup.javapoet.TypeVariableName: com.squareup.javapoet.TypeVariableName get(javax.lang.model.type.TypeVariable)>
<javax.lang.model.type.TypeVariable: javax.lang.model.element.Element asElement()>:[6,7]--><com.squareup.javapoet.TypeVariableName: com.squareup.javapoet.TypeVariableName get(javax.lang.model.type.TypeVariable,java.util.Map)>

==>Problematic_Backward<javax.lang.model.type.DeclaredType: javax.lang.model.type.TypeMirror getEnclosingType()>:[6,7]
[<com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>]
<javax.lang.model.type.DeclaredType: javax.lang.model.type.TypeMirror getEnclosingType()>:[6,7]--><com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>

==>Problematic_Backward<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getSimpleName()>:[6,7]
[<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>, <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(javax.lang.model.element.TypeElement)>]
<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>
<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(javax.lang.model.element.TypeElement)>

==>Problematic_Backward<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>:[6,7]
[<com.bluelinelabs.logansquare.processor.type.field.FieldType: com.bluelinelabs.logansquare.processor.type.field.FieldType fieldTypeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>]
<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>:[6,7]--><com.bluelinelabs.logansquare.processor.type.field.FieldType: com.bluelinelabs.logansquare.processor.type.field.FieldType fieldTypeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>:[6,7]--><com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>

==>Problematic_Backward<javax.lang.model.element.ExecutableElement: java.util.List getThrownTypes()>:[6,7]
[<com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>]
<javax.lang.model.element.ExecutableElement: java.util.List getThrownTypes()>:[6,7]--><com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>

==>Problematic_Backward<javax.lang.model.type.WildcardType: javax.lang.model.type.TypeMirror getSuperBound()>:[6,7]
[<com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.WildcardType,java.util.Map)>]
<javax.lang.model.type.WildcardType: javax.lang.model.type.TypeMirror getSuperBound()>:[6,7]--><com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.WildcardType,java.util.Map)>

==>Problematic_Backward<javax.lang.model.type.MirroredTypeException: javax.lang.model.type.TypeMirror getTypeMirror()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: void processJsonFieldAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>]
<javax.lang.model.type.MirroredTypeException: javax.lang.model.type.TypeMirror getTypeMirror()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: void processJsonFieldAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.util.SimpleAnnotationValueVisitor8: void <init>(java.lang.Object)>:[6,7]
[<com.squareup.javapoet.AnnotationSpec$Visitor: void <init>(com.squareup.javapoet.AnnotationSpec$Builder)>]
<javax.lang.model.util.SimpleAnnotationValueVisitor8: void <init>(java.lang.Object)>:[6,7]--><com.squareup.javapoet.AnnotationSpec$Visitor: void <init>(com.squareup.javapoet.AnnotationSpec$Builder)>

==>Problematic_Backward<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>:[6,7]
[<com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror,java.util.Map)>, <com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>]
<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>:[6,7]--><com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror,java.util.Map)>
<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>:[6,7]--><com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>

==>Problematic_Backward<javax.lang.model.type.ExecutableType: java.util.List getThrownTypes()>:[6,7]
[<com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement,javax.lang.model.type.DeclaredType,javax.lang.model.util.Types)>]
<javax.lang.model.type.ExecutableType: java.util.List getThrownTypes()>:[6,7]--><com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement,javax.lang.model.type.DeclaredType,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.SourceVersion: boolean isIdentifier(java.lang.CharSequence)>:[6,7]
[<com.squareup.javapoet.ParameterSpec: boolean isValidParameterName(java.lang.String)>, <com.squareup.javapoet.CodeWriter: java.lang.String extractMemberName(java.lang.String)>]
<javax.lang.model.SourceVersion: boolean isIdentifier(java.lang.CharSequence)>:[6,7]--><com.squareup.javapoet.ParameterSpec: boolean isValidParameterName(java.lang.String)>
<javax.lang.model.SourceVersion: boolean isIdentifier(java.lang.CharSequence)>:[6,7]--><com.squareup.javapoet.CodeWriter: java.lang.String extractMemberName(java.lang.String)>

==>Problematic_Backward<javax.lang.model.util.Types: javax.lang.model.element.Element asElement(javax.lang.model.type.TypeMirror)>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>]
<javax.lang.model.util.Types: javax.lang.model.element.Element asElement(javax.lang.model.type.TypeMirror)>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.element.Element: java.util.Set getModifiers()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean isJsonFieldFieldAnnotationValid(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateAccessors(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>, <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>, <com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateFields(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>, <com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>]
<javax.lang.model.element.Element: java.util.Set getModifiers()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.element.Element: java.util.Set getModifiers()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean isJsonFieldFieldAnnotationValid(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.Element: java.util.Set getModifiers()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.element.Element: java.util.Set getModifiers()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateAccessors(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>
<javax.lang.model.element.Element: java.util.Set getModifiers()>:[6,7]--><com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>
<javax.lang.model.element.Element: java.util.Set getModifiers()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateFields(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>
<javax.lang.model.element.Element: java.util.Set getModifiers()>:[6,7]--><com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>

==>Problematic_Backward<javax.lang.model.type.TypeMirror: java.lang.String toString()>:[6,7]
[<com.bluelinelabs.logansquare.processor.type.field.FieldType: com.bluelinelabs.logansquare.processor.type.field.FieldType fieldTypeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.type.Type: com.bluelinelabs.logansquare.processor.type.Type typeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.type.collection.CollectionType: com.bluelinelabs.logansquare.processor.type.collection.CollectionType collectionTypeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>]
<javax.lang.model.type.TypeMirror: java.lang.String toString()>:[6,7]--><com.bluelinelabs.logansquare.processor.type.field.FieldType: com.bluelinelabs.logansquare.processor.type.field.FieldType fieldTypeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.type.TypeMirror: java.lang.String toString()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.type.TypeMirror: java.lang.String toString()>:[6,7]--><com.bluelinelabs.logansquare.processor.type.Type: com.bluelinelabs.logansquare.processor.type.Type typeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.type.TypeMirror: java.lang.String toString()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.type.TypeMirror: java.lang.String toString()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.type.TypeMirror: java.lang.String toString()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.type.TypeMirror: java.lang.String toString()>:[6,7]--><com.bluelinelabs.logansquare.processor.type.collection.CollectionType: com.bluelinelabs.logansquare.processor.type.collection.CollectionType collectionTypeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>:[6,7]
[<com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>]
<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>:[6,7]--><com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>

==>Problematic_Backward<javax.lang.model.element.Element: java.lang.Object accept(javax.lang.model.element.ElementVisitor,java.lang.Object)>:[6,7]
[<com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(javax.lang.model.element.TypeElement)>]
<javax.lang.model.element.Element: java.lang.Object accept(javax.lang.model.element.ElementVisitor,java.lang.Object)>:[6,7]--><com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(javax.lang.model.element.TypeElement)>

==>Problematic_Backward<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateAccessors(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>, <com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateFields(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>]
<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateAccessors(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>
<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateFields(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>

==>Problematic_Backward<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>:[6,7]
[<com.bluelinelabs.logansquare.processor.TypeUtils: java.util.List getParameterizedTypes(javax.lang.model.type.TypeMirror)>, <com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>]
<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>:[6,7]--><com.bluelinelabs.logansquare.processor.TypeUtils: java.util.List getParameterizedTypes(javax.lang.model.type.TypeMirror)>
<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>:[6,7]--><com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>

==>Problematic_Backward<javax.lang.model.SourceVersion: javax.lang.model.SourceVersion latestSupported()>:[6,7]
[<com.bluelinelabs.logansquare.processor.JsonAnnotationProcessor: javax.lang.model.SourceVersion getSupportedSourceVersion()>]
<javax.lang.model.SourceVersion: javax.lang.model.SourceVersion latestSupported()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonAnnotationProcessor: javax.lang.model.SourceVersion getSupportedSourceVersion()>

==>Problematic_Backward<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>:[6,7]
[<com.squareup.javapoet.AnnotationSpec$Visitor: com.squareup.javapoet.AnnotationSpec$Builder visitEnumConstant(javax.lang.model.element.VariableElement,java.lang.String)>, <com.squareup.javapoet.ParameterSpec: com.squareup.javapoet.ParameterSpec get(javax.lang.model.element.VariableElement)>]
<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.squareup.javapoet.AnnotationSpec$Visitor: com.squareup.javapoet.AnnotationSpec$Builder visitEnumConstant(javax.lang.model.element.VariableElement,java.lang.String)>
<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.squareup.javapoet.ParameterSpec: com.squareup.javapoet.ParameterSpec get(javax.lang.model.element.VariableElement)>

==>Problematic_Backward<javax.lang.model.type.ExecutableType: java.util.List getParameterTypes()>:[6,7]
[<com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement,javax.lang.model.type.DeclaredType,javax.lang.model.util.Types)>]
<javax.lang.model.type.ExecutableType: java.util.List getParameterTypes()>:[6,7]--><com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement,javax.lang.model.type.DeclaredType,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.SourceVersion: boolean isName(java.lang.CharSequence)>:[6,7]
[<com.squareup.javapoet.FieldSpec: com.squareup.javapoet.FieldSpec$Builder builder(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>, <com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMemberForValue(java.lang.String,java.lang.Object)>, <com.squareup.javapoet.TypeSpec$Builder: void <init>(com.squareup.javapoet.TypeSpec$Kind,java.lang.String,com.squareup.javapoet.CodeBlock)>, <com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder setName(java.lang.String)>, <com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec build()>, <com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec build()>, <com.squareup.javapoet.ParameterSpec: boolean isValidParameterName(java.lang.String)>]
<javax.lang.model.SourceVersion: boolean isName(java.lang.CharSequence)>:[6,7]--><com.squareup.javapoet.FieldSpec: com.squareup.javapoet.FieldSpec$Builder builder(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>
<javax.lang.model.SourceVersion: boolean isName(java.lang.CharSequence)>:[6,7]--><com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMemberForValue(java.lang.String,java.lang.Object)>
<javax.lang.model.SourceVersion: boolean isName(java.lang.CharSequence)>:[6,7]--><com.squareup.javapoet.TypeSpec$Builder: void <init>(com.squareup.javapoet.TypeSpec$Kind,java.lang.String,com.squareup.javapoet.CodeBlock)>
<javax.lang.model.SourceVersion: boolean isName(java.lang.CharSequence)>:[6,7]--><com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder setName(java.lang.String)>
<javax.lang.model.SourceVersion: boolean isName(java.lang.CharSequence)>:[6,7]--><com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec build()>
<javax.lang.model.SourceVersion: boolean isName(java.lang.CharSequence)>:[6,7]--><com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec build()>
<javax.lang.model.SourceVersion: boolean isName(java.lang.CharSequence)>:[6,7]--><com.squareup.javapoet.ParameterSpec: boolean isValidParameterName(java.lang.String)>

==>Problematic_Backward<javax.lang.model.util.Elements: javax.lang.model.element.PackageElement getPackageOf(javax.lang.model.element.Element)>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.TypeUtils: java.lang.String getInjectedFQCN(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)>]
<javax.lang.model.util.Elements: javax.lang.model.element.PackageElement getPackageOf(javax.lang.model.element.Element)>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.util.Elements: javax.lang.model.element.PackageElement getPackageOf(javax.lang.model.element.Element)>:[6,7]--><com.bluelinelabs.logansquare.processor.TypeUtils: java.lang.String getInjectedFQCN(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)>

==>Problematic_Backward<javax.lang.model.util.ElementFilter: java.util.List methodsIn(java.lang.Iterable)>:[6,7]
[<com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>]
<javax.lang.model.util.ElementFilter: java.util.List methodsIn(java.lang.Iterable)>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.util.ElementFilter: java.util.List methodsIn(java.lang.Iterable)>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>

==>Problematic_Backward<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>:[6,7]
[<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>]
<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>:[6,7]--><com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>
<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>

==>Problematic_Backward<javax.lang.model.type.ExecutableType: javax.lang.model.type.TypeMirror getReturnType()>:[6,7]
[<com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement,javax.lang.model.type.DeclaredType,javax.lang.model.util.Types)>]
<javax.lang.model.type.ExecutableType: javax.lang.model.type.TypeMirror getReturnType()>:[6,7]--><com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement,javax.lang.model.type.DeclaredType,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.element.Element: java.util.List getEnclosedElements()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateAccessors(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>, <com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateFields(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>]
<javax.lang.model.element.Element: java.util.List getEnclosedElements()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateAccessors(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>
<javax.lang.model.element.Element: java.util.List getEnclosedElements()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void addAllNonPrivateFields(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>

==>Problematic_Backward<javax.lang.model.element.AnnotationMirror: javax.lang.model.type.DeclaredType getAnnotationType()>:[6,7]
[<com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec get(javax.lang.model.element.AnnotationMirror)>, <com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>]
<javax.lang.model.element.AnnotationMirror: javax.lang.model.type.DeclaredType getAnnotationType()>:[6,7]--><com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec get(javax.lang.model.element.AnnotationMirror)>
<javax.lang.model.element.AnnotationMirror: javax.lang.model.type.DeclaredType getAnnotationType()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>

==>Problematic_Backward<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror getSuperclass()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>]
<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror getSuperclass()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror getSuperclass()>:[6,7]--><com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>
<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror getSuperclass()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.SourceVersion: boolean isKeyword(java.lang.CharSequence)>:[6,7]
[<com.squareup.javapoet.NameAllocator: java.lang.String newName(java.lang.String,java.lang.Object)>]
<javax.lang.model.SourceVersion: boolean isKeyword(java.lang.CharSequence)>:[6,7]--><com.squareup.javapoet.NameAllocator: java.lang.String newName(java.lang.String,java.lang.Object)>

==>Problematic_Backward<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: void processJsonFieldAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>]
<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: void processJsonFieldAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind[] values()>:[6,7]
[<com.squareup.javapoet.TypeName$2: void <clinit>()>]
<javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind[] values()>:[6,7]--><com.squareup.javapoet.TypeName$2: void <clinit>()>

==>Problematic_Backward<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: void processJsonFieldAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String fill(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,java.lang.String[],javax.lang.model.type.TypeMirror,com.bluelinelabs.logansquare.processor.JsonObjectHolder,boolean,boolean)>, <com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void createOrUpdateFieldHolder(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>]
<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: void processJsonFieldAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>
<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String fill(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,java.lang.String[],javax.lang.model.type.TypeMirror,com.bluelinelabs.logansquare.processor.JsonObjectHolder,boolean,boolean)>
<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void createOrUpdateFieldHolder(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,com.bluelinelabs.logansquare.processor.JsonObjectHolder)>

==>Problematic_Backward<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>:[6,7]
[<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.TypeName argToType(java.lang.Object)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String fill(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,java.lang.String[],javax.lang.model.type.TypeMirror,com.bluelinelabs.logansquare.processor.JsonObjectHolder,boolean,boolean)>]
<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>:[6,7]--><com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.TypeName argToType(java.lang.Object)>
<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String fill(javax.lang.model.element.Element,javax.lang.model.util.Elements,javax.lang.model.util.Types,java.lang.String[],javax.lang.model.type.TypeMirror,com.bluelinelabs.logansquare.processor.JsonObjectHolder,boolean,boolean)>

==>Problematic_Backward<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getQualifiedName()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.TypeUtils: java.lang.String getInjectedFQCN(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)>, <com.squareup.javapoet.ClassName$1: com.squareup.javapoet.ClassName visitPackage(javax.lang.model.element.PackageElement,java.lang.Void)>]
<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getQualifiedName()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor: void processJsonObjectAnnotation(javax.lang.model.element.Element,java.util.Map,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getQualifiedName()>:[6,7]--><com.bluelinelabs.logansquare.processor.TypeUtils: java.lang.String getInjectedFQCN(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)>
<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getQualifiedName()>:[6,7]--><com.squareup.javapoet.ClassName$1: com.squareup.javapoet.ClassName visitPackage(javax.lang.model.element.PackageElement,java.lang.Void)>

==>Problematic_Backward<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror asMemberOf(javax.lang.model.type.DeclaredType,javax.lang.model.element.Element)>:[6,7]
[<com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement,javax.lang.model.type.DeclaredType,javax.lang.model.util.Types)>]
<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror asMemberOf(javax.lang.model.type.DeclaredType,javax.lang.model.element.Element)>:[6,7]--><com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement,javax.lang.model.type.DeclaredType,javax.lang.model.util.Types)>

==>Problematic_Backward<javax.lang.model.element.ExecutableElement: boolean isVarArgs()>:[6,7]
[<com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>]
<javax.lang.model.element.ExecutableElement: boolean isVarArgs()>:[6,7]--><com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder overriding(javax.lang.model.element.ExecutableElement)>

==>Problematic_Backward<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>:[6,7]
[<com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.squareup.javapoet.ParameterSpec: java.util.List parametersOf(javax.lang.model.element.ExecutableElement)>, <com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>]
<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.JsonFieldProcessor: boolean ensureTypeConverterClassValid(javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>:[6,7]--><com.squareup.javapoet.ParameterSpec: java.util.List parametersOf(javax.lang.model.element.ExecutableElement)>
<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>
<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>

==>Problematic_Backward<javax.lang.model.util.ElementFilter: java.util.List typesIn(java.lang.Iterable)>:[6,7]
[<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>]
<javax.lang.model.util.ElementFilter: java.util.List typesIn(java.lang.Iterable)>:[6,7]--><com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>

==>Problematic_Backward<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>:[6,7]
[<com.bluelinelabs.logansquare.processor.type.field.FieldType: com.bluelinelabs.logansquare.processor.type.field.FieldType fieldTypeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>, <com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>, <com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec get(javax.lang.model.element.AnnotationMirror)>, <com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>, <com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addSuperinterface(javax.lang.model.type.TypeMirror,boolean)>, <com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder superclass(javax.lang.model.type.TypeMirror,boolean)>, <com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>]
<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>:[6,7]--><com.bluelinelabs.logansquare.processor.type.field.FieldType: com.bluelinelabs.logansquare.processor.type.field.FieldType fieldTypeFor(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Elements,javax.lang.model.util.Types)>
<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>:[6,7]--><com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder avoidClashesWithNestedClasses(javax.lang.model.element.TypeElement)>
<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>:[6,7]--><com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec get(javax.lang.model.element.AnnotationMirror)>
<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>:[6,7]--><com.bluelinelabs.logansquare.processor.processor.MethodProcessor: boolean isCallbackMethodAnnotationValid(javax.lang.model.element.Element,java.lang.String)>
<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>:[6,7]--><com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addSuperinterface(javax.lang.model.type.TypeMirror,boolean)>
<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>:[6,7]--><com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder superclass(javax.lang.model.type.TypeMirror,boolean)>
<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>:[6,7]--><com.squareup.javapoet.TypeName$1: com.squareup.javapoet.TypeName visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>

==>Problematic_Backward<javax.lang.model.util.SimpleElementVisitor8: void <init>()>:[6,7]
[<com.squareup.javapoet.ClassName$1: void <init>(java.lang.String,javax.lang.model.element.TypeElement)>]
<javax.lang.model.util.SimpleElementVisitor8: void <init>()>:[6,7]--><com.squareup.javapoet.ClassName$1: void <init>(java.lang.String,javax.lang.model.element.TypeElement)>

==>Problematic_Backward<javax.lang.model.util.Elements: java.util.List getAllMembers(javax.lang.model.element.TypeElement)>:[6,7]
[<com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>, <com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>]
<javax.lang.model.util.Elements: java.util.List getAllMembers(javax.lang.model.element.TypeElement)>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getGetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>
<javax.lang.model.util.Elements: java.util.List getAllMembers(javax.lang.model.element.TypeElement)>:[6,7]--><com.bluelinelabs.logansquare.processor.JsonFieldHolder: java.lang.String getSetter(javax.lang.model.element.Element,javax.lang.model.util.Elements)>

==>Problematic_Backward<javax.lang.model.util.SimpleTypeVisitor8: void <init>()>:[6,7]
[<com.squareup.javapoet.TypeName$1: void <init>(java.util.Map)>]
<javax.lang.model.util.SimpleTypeVisitor8: void <init>()>:[6,7]--><com.squareup.javapoet.TypeName$1: void <init>(java.util.Map)>
